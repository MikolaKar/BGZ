// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
    Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_АктСверки") Тогда
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
																"ПФ_MXL_АктСверки",
																"ПФ_MXL_АктСверкив",
																ПечатьАктаСверки(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),
																,
																"Отчет.мАктСверки.ПФ_MXL_АктСверки");
	КонецЕсли;
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой накладной,
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьАктаСверки(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб				= Истина;
	ТабличныйДокумент.ТолькоПросмотр			= Истина;
	ТабличныйДокумент.РазмерКолонтитулаСверху	= 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу	= 0;
	ТабличныйДокумент.ОриентацияСтраницы		= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ИмяПараметровПечати		= "ПАРАМЕТРЫ_ПЕЧАТИ_АктСверкиВзаиморасчетов";
	ТабличныйДокумент.КлючПараметровПечати = "АктСверкиВзаиморасчетов";
	
	Макет = УправлениеПечатью.ПолучитьМакет("Отчет.мАктСверки.ПФ_MXL_АктСверки");
    
    ТзДанные = ПараметрыПечати.Данные;
    НомерАкта = ПараметрыПечати.НомерАкта;
    ДатаАкта = ПараметрыПечати.ДатаАкта;
    ДатаНачала = ПараметрыПечати.ДатаНачала;
    ДатаОкончания = ПараметрыПечати.ДатаОкончания;
    Корреспондент = ПараметрыПечати.Корреспондент;
    ДоговорКонтрагента = ПараметрыПечати.ДоговорКонтрагента;
    ОстатокНаНачало = ПараметрыПечати.ОстатокНаНачало;
    ОстатокНаКонец = ПараметрыПечати.ОстатокНаКонец;
	ПредставительОрганизации = ПараметрыПечати.ПредставительОрганизации;
 	ПредставительКонтрагента = ПараметрыПечати.ПредставительКонтрагента;
  	РазбитьПоДоговорам = ПараметрыПечати.РазбитьПоДоговорам;
   
    // Получаем области:
    ОбластьЗаголовок    = Макет.ПолучитьОбласть("Заголовок");
    ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
    ОбластьНачОстатки   = Макет.ПолучитьОбласть("НачОстатки");
    ОбластьДоговор      = Макет.ПолучитьОбласть("Договор");
    ОбластьДоговорИтоги = Макет.ПолучитьОбласть("ДоговорИтоги");
    ОбластьОбороты      = Макет.ПолучитьОбласть("Обороты");
    ОбластьОборотыИтог  = Макет.ПолучитьОбласть("ОборотыИтог");
    ОбластьКонОстатки   = Макет.ПолучитьОбласть("КонОстатки");
    ОбластьПодвал       = Макет.ПолучитьОбласть("Подвал");
    
    ПредставлениеОрганизации = Константы.НашаОрганизация.Получить().ПолноеНаименование;
    ПредставлениеКонтрагента = Корреспондент.ПолноеНаименование;
    
    ОбластьЗаголовок.Параметры.НомерАкта     = ?(ЗначениеЗаполнено(НомерАкта), "№ "+НомерАкта, "");
    ОбластьЗаголовок.Параметры.НазваниеОрганизации     = ПредставлениеОрганизации;
    ОбластьЗаголовок.Параметры.НаименованиеКонтрагента = ПредставлениеКонтрагента;
    ДатаНачалаОтчета = ДатаНачала;
    
    ОписаниеПериода = ?(ЗначениеЗаполнено(ДатаНачалаОтчета),"за период: " + ПредставлениеПериода(НачалоДня( ДатаНачалаОтчета), КонецДня(ДатаОкончания), "ФП = Истина"),"");
    
    ТекстЗаголовка = "взаимных расчетов " + ОписаниеПериода  + Символы.ПС
    + "между " + ПредставлениеОрганизации + Символы.ПС + "и " + ПредставлениеКонтрагента;
    Если ЗначениеЗаполнено(ДоговорКонтрагента) И НЕ ДоговорКонтрагента.ЭтоГруппа Тогда
        ТекстЗаголовка = ТекстЗаголовка + Символы.ПС + "по договору № "+ДоговорКонтрагента.РегистрационныйНомер+" от "+Формат(ДоговорКонтрагента.ДатаРегистрации, "ДФ=dd.MM.yyyy");
    КонецЕсли;
    
    ОбластьЗаголовок.Параметры.ТекстЗаголовка = ТекстЗаголовка;
    
    Если ЗначениеЗаполнено(ПредставительОрганизации) Тогда
        ПредставительОрганизацииДолжность = РаботаСПользователями.ПолучитьДолжность(ПредставительОрганизации);
        ФИОПредставителя = ПредставительОрганизации.ПредставлениеВДокументах;
    Иначе
        ПредставительОрганизацииДолжность = "________________";
        ФИОПредставителя = "________________";
    КонецЕсли; 
    
    Если ЗначениеЗаполнено(ПредставительКонтрагента) Тогда
        ПредставительКонтрагентаДолжность = ПредставительКонтрагента.Должность;
        ФИОПредставителяКонтрагента = ПредставительОрганизации.Наименование;
    Иначе
        ПредставительКонтрагентаДолжность = "________________";
        ФИОПредставителяКонтрагента = "________________";
    КонецЕсли; 

    СтрЗаголовокТаблица = "Мы, нижеподписавшиеся, " + ПредставительОрганизацииДолжность + " " + ПредставлениеОрганизации
    + " " + ФИОПредставителя + ", с одной стороны, "
    + "и " + ПредставительКонтрагентаДолжность	+ " " + ПредставлениеКонтрагента + " " + ФИОПредставителяКонтрагента + ", с другой стороны, "
    + "составили настоящий акт сверки в том, что состояние взаимных расчетов по данным учета следующее:";
    
    ОбластьЗаголовок.Параметры.СтрЗаголовокТаблица = СтрЗаголовокТаблица;
    //	ОбластьЗаголовок.Параметры.ВалютаДокумента = Шапка.ВалютаДокумента;
    
    ТабличныйДокумент.Вывести(ОбластьЗаголовок);
    ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
    
    ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокДт = ?(ОстатокНаНачало < 0, -ОстатокНаНачало, 0);
    ОбластьНачОстатки.Параметры.СуммаНачальныйОстатокКт = ?(ОстатокНаНачало > 0, ОстатокНаНачало, 0);
    ТабличныйДокумент.Вывести(ОбластьНачОстатки);
        
    Если РазбитьПоДоговорам Тогда
        ТзДог = ТзДанные.Выгрузить();
        ТзДог.Свернуть("Договор", "Дебет, Кредит");
        
        ТекДог = "";
        ПервыйДоговор = Истина;
        
        Для каждого Стр Из ТзДог Цикл
            ТекДог = Стр.Договор;
            
            //Выводим заголовок с договором
            ОбластьДоговор.Параметры.Договор = "Дог. № "+ТекДог.РегистрационныйНомер+" от "+Формат(ТекДог.ДатаРегистрации, "ДФ=dd.MM.yyyy");
            ОбластьДоговор.Параметры.Регистратор = ТекДог;
            ТабличныйДокумент.Вывести(ОбластьДоговор);
            
            БылВыводДок = Ложь;
            
            // Цикл по документам
            Для каждого СтрДок Из ТзДанные Цикл
                
                // устранение лишних циклов
                Если СтрДок.Договор <> ТекДог Тогда
                    Если Не БылВыводДок Тогда
                        // еще не дошли до документов по ТекДог
                    	Продолжить;                    
                    Иначе
                        // прошли все документы по ТекДог
                        Прервать;
                    КонецЕсли; 
                КонецЕсли; 
                
                ОбластьОбороты.Параметры.ДатаДокумента = СтрДок.Дата;
                ОбластьОбороты.Параметры.РегистраторПредставление = СтрДок.Представление;
                ОбластьОбороты.Параметры.Регистратор = СтрДок.Документ;
                ОбластьОбороты.Параметры.СуммаОборотДт = СтрДок.Дебет;
                ОбластьОбороты.Параметры.СуммаОборотКт = СтрДок.Кредит;
                ТабличныйДокумент.Вывести(ОбластьОбороты);
                
                БылВыводДок = Истина;
           КонецЦикла; 
            
            //Выводим итоги по каждому договору
            ОбластьДоговорИтоги.Параметры.СуммаДогДт = Стр.Дебет;
            ОбластьДоговорИтоги.Параметры.СуммаДогКт = Стр.Кредит;
            ТабличныйДокумент.Вывести(ОбластьДоговорИтоги);
        КонецЦикла; 
        
    Иначе
        
        // Цикл по документам
        Для каждого СтрДок Из ТзДанные Цикл
            ОбластьОбороты.Параметры.ДатаДокумента = СтрДок.Дата;
            ОбластьОбороты.Параметры.РегистраторПредставление = СтрДок.Представление;
            ОбластьОбороты.Параметры.Регистратор = СтрДок.Документ;
            ОбластьОбороты.Параметры.СуммаОборотДт = СтрДок.Дебет;
            ОбластьОбороты.Параметры.СуммаОборотКт = СтрДок.Кредит;
            ТабличныйДокумент.Вывести(ОбластьОбороты);
        КонецЦикла; 
    КонецЕсли; 
    
    ОбластьОборотыИтог.Параметры.СуммаОборотДт      = ТзДанные.Итог("Дебет");
    ОбластьОборотыИтог.Параметры.СуммаОборотКт      = ТзДанные.Итог("Кредит");
    ТабличныйДокумент.Вывести(ОбластьОборотыИтог);
    
    
    ОстатокНаКонец = ОстатокНаНачало - ТзДанные.Итог("Дебет") +  ТзДанные.Итог("Кредит");
    ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокДт = ?(ОстатокНаКонец < 0, -ОстатокНаКонец, 0);
    ОбластьКонОстатки.Параметры.СуммаКонечныйОстатокКт = ?(ОстатокНаКонец > 0, ОстатокНаКонец, 0);
    
    ТабличныйДокумент.Вывести(ОбластьКонОстатки);
    
    РезультатыСверки = "на " + Формат(ДатаОкончания, "ДФ=dd.MM.yyyy") + " задолженность ";
    
    Если ОстатокНаКонец < 0 Тогда
        РезультатыСверки = РезультатыСверки + "в пользу " + ПредставлениеОрганизации + " " 
        +мРаботаСДоговорами.СуммаЧисломИПрописью(-ОстатокНаКонец, Константы.ОсновнаяВалюта.Получить());
        
    ИначеЕсли ОстатокНаКонец > 0 Тогда
        РезультатыСверки = РезультатыСверки + "в пользу " + ПредставлениеКонтрагента + " " 
        + мРаботаСДоговорами.СуммаЧисломИПрописью(ОстатокНаКонец, Константы.ОсновнаяВалюта.Получить());
        
    Иначе
        РезультатыСверки = РезультатыСверки + "отсутствует.";
    КонецЕсли;
    
    ОбластьПодвал.Параметры.РезультатыСверки = РезультатыСверки;
    
    ОбластьПодвал.Параметры.НазваниеОрганизации     = ПредставлениеОрганизации;
    ОбластьПодвал.Параметры.НаименованиеКонтрагента = ПредставлениеКонтрагента;
    
    ОбластьПодвал.Параметры.Должность  = ПредставительОрганизацииДолжность;
    ОбластьПодвал.Параметры.ДолжностьК = ПредставительКонтрагентаДолжность;
    
    ОбластьПодвал.Параметры.ФИОПредставителя  = "("+ФИОПредставителя+")";
    ОбластьПодвал.Параметры.ФИОПредставителяК = "("+ФИОПредставителяКонтрагента+")";
    
    ТабличныйДокумент.Вывести(ОбластьПодвал);
    
    ОбъектыПечати.Добавить(ТабличныйДокумент, "АктСверки");
    
       //// В табличном документе зададим имя области, в которую был 
       // // выведен объект. Нужно для возможности печати покомплектно.
       // УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
       // 	НомерСтрокиНачало, ОбъектыПечати, Шапка.АктСверки);
    
    Возврат ТабличныйДокумент;
    
КонецФункции

