
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Организация = РаботаСОрганизациями.ПолучитьОрганизациюПоУмолчанию();
		Объект.Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли; 
	
	Если Параметры.Свойство("Задача") Тогда
		_ТекущаяЗадача = Параметры.Задача;
		Объект.Решение = _ТекущаяЗадача.Предметы[0].Предмет;
	КонецЕсли; 
	Объект.ДатаРешения = ТекущаяДата();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(Объект.Решение) Тогда
		ИмяФайлаНаДиске = ПолучитьИмяВременногоФайла("pdf");
		
		АдресСкана = ПолучитьСканРешения(Объект.Решение);
		
		Если ЗначениеЗаполнено(АдресСкана) Тогда
			ПолучитьФайл(АдресСкана, ИмяФайлаНаДиске, Ложь);
			
			ЗапуститьПриложение(ИмяФайлаНаДиске,,,);
		//Иначе
		//	Сообщить("Нет прикрепленного скана изображения!");	
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы



#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ИмяТаблицы

&НаКлиенте
Процедура СрокиДоговорПриИзменении(Элемент)
	ТекДанные = Элементы.Сроки.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекДанные.Договор) Тогда
		СписокЭтапов = СрокиДоговорПриИзмененииНаСервере(ТекДанные.Договор);
		
		Если СписокЭтапов.Количество() = 1 Тогда
			ТекДанные.ЭтапДоговора = СписокЭтапов.Получить(0).Значение;
		ИначеЕсли СписокЭтапов.Количество() > 1 Тогда
			ВыбЭл = СписокЭтапов.ВыбратьЭлемент(,);
			Если ВыбЭл <> Неопределено Тогда
				ТекДанные.ЭтапДоговора = ВыбЭл.Значение; 		
			КонецЕсли; 
		Иначе
			Сообщить("Этапов нет!");
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура СрокиЭтапДоговораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТекДанные = Элементы.Сроки.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекДанные.Договор) Тогда
		ДанныеВыбора = СрокиДоговорПриИзмененииНаСервере(ТекДанные.Договор);
		
		Если ДанныеВыбора.Количество() = 1 Тогда
			ТекДанные.ЭтапДоговора = ДанныеВыбора.Получить(0).Значение;
		КонецЕсли; 
	КонецЕсли; 
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура СрокиЭтапДоговораПриИзменении(Элемент)
	ТекДанные = Элементы.Сроки.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекДанные.ЭтапДоговора) Тогда
		Если ЕстьЗапретИзмененияПлановогоСрока(ТекДанные.ЭтапДоговора) Тогда
			Сообщить("Запрещено изменять плановый срок в этапе: "+ТекДанные.ЭтапДоговора);
			Сообщить("Снимите запрет в этапе!");
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	ПараметрыЗаписи = Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение); 
	Записать(ПараметрыЗаписи);
	Закрыть(Истина);
КонецПроцедуры



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция СрокиДоговорПриИзмененииНаСервере(Договор)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	мЭтапыДоговоров.Ссылка КАК ЭтапДоговора
		|ПОМЕСТИТЬ Этапы
		|ИЗ
		|	Справочник.мЭтапыДоговоров КАК мЭтапыДоговоров
		|ГДЕ
		|	мЭтапыДоговоров.Владелец = &Договор
		|	И НЕ мЭтапыДоговоров.ПометкаУдаления
		|	И мЭтапыДоговоров.ДатаИсключенИзДоговора = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(мДатыДоговоровСрезПоследних.Период) КАК Период,
		|	мДатыДоговоровСрезПоследних.ЭтапДоговора,
		|	мДатыДоговоровСрезПоследних.ВидДатыДоговора
		|ПОМЕСТИТЬ МаксСроки
		|ИЗ
		|	РегистрСведений.мДатыДоговоров.СрезПоследних(
		|			,
		|			ВидДатыДоговора = &ВидДатыДоговора
		|				И ЭтапДоговора В
		|					(ВЫБРАТЬ
		|						Этапы.ЭтапДоговора
		|					ИЗ
		|						Этапы КАК Этапы)) КАК мДатыДоговоровСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	мДатыДоговоровСрезПоследних.ЭтапДоговора,
		|	мДатыДоговоровСрезПоследних.ВидДатыДоговора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	мДатыДоговоровСрезПоследних.ЭтапДоговора,
		|	мДатыДоговоровСрезПоследних.Дата КАК ПлановыйСрок
		|ПОМЕСТИТЬ Сроки
		|ИЗ
		|	РегистрСведений.мДатыДоговоров.СрезПоследних(
		|			,
		|			ВидДатыДоговора = &ВидДатыДоговора
		|				И ЭтапДоговора В
		|					(ВЫБРАТЬ
		|						Этапы.ЭтапДоговора
		|					ИЗ
		|						Этапы КАК Этапы)) КАК мДатыДоговоровСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксСроки КАК МаксСроки
		|		ПО мДатыДоговоровСрезПоследних.ЭтапДоговора = МаксСроки.ЭтапДоговора
		|			И мДатыДоговоровСрезПоследних.Период = МаксСроки.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВнутренниеДокументы.ДатаРегистрации КАК ДатаДела,
		|	ВнутренниеДокументы.ЭтапДоговора
		|ПОМЕСТИТЬ Дела
		|ИЗ
		|	Справочник.ВнутренниеДокументы КАК ВнутренниеДокументы
		|ГДЕ
		|	ВнутренниеДокументы.ВидДокумента = &ВидДокумента
		|	И ВнутренниеДокументы.ЭтапДоговора В
		|			(ВЫБРАТЬ
		|				Этапы.ЭтапДоговора
		|			ИЗ
		|				Этапы КАК Этапы)
		|	И НЕ ВнутренниеДокументы.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Этапы.ЭтапДоговора,
		|	Сроки.ПлановыйСрок,
		|	Дела.ДатаДела,
		|	Этапы.ЭтапДоговора.ДатаПредоставленияРешения КАК ДатаПредоставленияРешения
		|ИЗ
		|	Этапы КАК Этапы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Сроки КАК Сроки
		|		ПО Этапы.ЭтапДоговора = Сроки.ЭтапДоговора
		|		ЛЕВОЕ СОЕДИНЕНИЕ Дела КАК Дела
		|		ПО Этапы.ЭтапДоговора = Дела.ЭтапДоговора";
	
	Запрос.УстановитьПараметр("ВидДатыДоговора", Справочники.мВидыДатДоговоров.ПлановыйСрок);
	Запрос.УстановитьПараметр("ВидДокумента", Справочники.ВидыВнутреннихДокументов.Дело);
	Запрос.УстановитьПараметр("Договор", Договор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	СписокЭтапов = Новый СписокЗначений;
	
	Пока Выборка.Следующий() Цикл
		Представление = ""+Выборка.ЭтапДоговора;
		Представление = Представление + ?(ЗначениеЗаполнено(Выборка.ДатаПредоставленияРешения), " Решение: "+Формат(Выборка.ДатаПредоставленияРешения, "ДЛФ=D"), "");
		Представление = Представление + ?(ЗначениеЗаполнено(Выборка.ПлановыйСрок), " Плановый: "+Формат(Выборка.ПлановыйСрок, "ДЛФ=D"), "");
		Представление = Представление + ?(ЗначениеЗаполнено(Выборка.ДатаДела), " Дата дела: "+Формат(Выборка.ДатаДела, "ДЛФ=D"), "");
		
		СписокЭтапов.Добавить(Выборка.ЭтапДоговора, Представление);
		//СписокЭтапов.Добавить(Выборка.ЭтапДоговора,""+Выборка.ЭтапДоговора+" Плановый: "+Формат(Выборка.ПлановыйСрок, "ДЛФ=D")+" Дата дела: "+Формат(Выборка.ДатаДела, "ДЛФ=D"));
	КонецЦикла;
	
	Возврат СписокЭтапов;

КонецФункции

&НаСервереБезКонтекста
Функция ЕстьЗапретИзмененияПлановогоСрока(ЭтапДоговора)
	Возврат ЭтапДоговора.ЗапретИзмененияПлановогоСрока;	
КонецФункции

&НаСервере
Функция ПолучитьСканРешения(Решение)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(Файлы.ТекущаяВерсияТом.ПолныйПутьWindows КАК СТРОКА(1000)) КАК ТекущаяВерсияТом,
		|	Файлы.ТекущаяВерсияПутьКФайлу,
		|	Файлы.Ссылка КАК Файл
		|ИЗ
		|	Справочник.Файлы КАК Файлы
		|ГДЕ
		|	Файлы.ВладелецФайла = &ВладелецФайла
		|	И НЕ Файлы.ПометкаУдаления
		|	И Файлы.ТекущаяВерсияРасширение = ""pdf""";
	
	Запрос.УстановитьПараметр("ВладелецФайла", Решение);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Скан = Новый Структура("ТекущаяВерсияТом, ТекущаяВерсияПутьКФайлу, Файл"); 
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Скан, Выборка);
	КонецЕсли;
	
	ПутьКФайлуНаДиске = Строка(Скан.ТекущаяВерсияТом) + Скан.ТекущаяВерсияПутьКФайлу;
	
	Если Не ЗначениеЗаполнено(ПутьКФайлуНаДиске) Тогда
		// Скана нет	
		Возврат Неопределено;
	КонецЕсли; 
	
	ИскФайл = Новый ДвоичныеДанные(ПутьКФайлуНаДиске);
	ИД = Новый УникальныйИдентификатор;
	Адрес = ПоместитьВоВременноеХранилище(ИскФайл, ИД);
	
	Возврат Адрес;
	
КонецФункции





 


#КонецОбласти 