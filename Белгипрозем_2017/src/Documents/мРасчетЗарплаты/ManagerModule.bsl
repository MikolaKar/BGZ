// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
  // Расчет премии
  КомандаПечати = КомандыПечати.Добавить();
  КомандаПечати.МенеджерПечати = "Документ.мРасчетЗарплаты";
  КомандаПечати.Идентификатор = "ПФ_MXL_Расчет";
  КомандаПечати.Представление = НСтр("ru = 'Печать расчета'");
  КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
  //КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
  // Ведомость
  КомандаПечати = КомандыПечати.Добавить();
  КомандаПечати.МенеджерПечати = "Документ.мРасчетЗарплаты";
  КомандаПечати.Идентификатор = "ПФ_MXL_Ведомость";
  КомандаПечати.Представление = НСтр("ru = 'Печать ведомости'");
  КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
  // Устанавливаем признак доступности печати покомплектно.
  ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
  
  // Проверяем, нужно ли для макета СчетЗаказ формировать табличный документ.
  Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Расчет") Тогда
    // Формируем табличный документ и добавляем его в коллекцию печатных форм.
    УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
      "ПФ_MXL_Расчет", "Расчет", ПечатьРасчета(МассивОбъектов, ОбъектыПечати));
  КонецЕсли;
  
  Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Ведомость") Тогда
    // Формируем табличный документ и добавляем его в коллекцию печатных форм.
    УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
      "ПФ_MXL_Ведомость", "Ведомость", ПечатьВедомости(МассивОбъектов, ОбъектыПечати));
  КонецЕсли;
  
КонецПроцедуры

Функция ПечатьРасчета(МассивОбъектов, ОбъектыПечати)
	
	// Создаем табличный документ и устанавливаем имя параметров печати
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_Расчет";
	// Запомним номер строки с которой начали выводить текущий документ
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
	Макет = ПолучитьМакет("ПФ_MXL_Расчет");

    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   мРасчетЗарплаты.Ссылка,
        |   мРасчетЗарплаты.Дата,
        |   мРасчетЗарплаты.Подразделение,
        |   мРасчетЗарплаты.Подписал1,
        |   мРасчетЗарплаты.Подписал2,
        |   мРасчетЗарплаты.Подписал3,
        |   мРасчетЗарплаты.Подписал4,
        |   мРасчетЗарплаты.Примечание,
        |   мРасчетЗарплаты.Сотрудники.(
        |       Пользователь КАК Пользователь,
        |       Пользователь.ПредставлениеВДокументах КАК Сотрудник,
        |       ОкладПлановый,
        |       ЧасовПоФакту,
        |       ОкладЗаФОВ,
        |       Начислено,
        |       ОкладПоФакту,
        |       Премия,
        |       ПремияЗаРуководство,
        |       Итого,
        |       ПроцентПовышенияПонижения,
        |       СуммаПовышенияПонижения,
        |       ПремияИтоговая,
        |       Должность,
        |       ТабельныйНомер,
        |       Подразделение КАК Подразделение
        |   ),
        |   мРасчетЗарплаты.Подписал1.ПредставлениеВДокументах КАК ПредставлениеВДокументах1,
        |   мРасчетЗарплаты.Подписал2.ПредставлениеВДокументах КАК ПредставлениеВДокументах2,
        |   мРасчетЗарплаты.Подписал3.ПредставлениеВДокументах КАК ПредставлениеВДокументах3,
        |   мРасчетЗарплаты.Подписал4.ПредставлениеВДокументах КАК ПредставлениеВДокументах4
        |ИЗ
        |   Документ.мРасчетЗарплаты КАК мРасчетЗарплаты
        |ГДЕ
        |   мРасчетЗарплаты.Ссылка В(&МассивОбъектов)
        |
        |УПОРЯДОЧИТЬ ПО
        |   Пользователь
        |АВТОУПОРЯДОЧИВАНИЕ";

    Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);

    РезультатЗапроса = Запрос.Выполнить();

    Выборка = РезультатЗапроса.Выбрать();
    
    НазваниеПредприятия = Константы.НашаОрганизация.Получить().Наименование;

	ПервыйДокумент = Истина;
    Пока Выборка.Следующий() Цикл
        
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
        
        // Шапка
        ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
        ОбластьШапка.Параметры.НазваниеПредприятия = НазваниеПредприятия;
        //ОбластьШапка.Параметры.НазваниеПредприятия = Константы.НаименованиеПредприятия.Получить();
        РуководительПредприятия = Константы.РуководительПредприятия.Получить();
        
        ОбластьШапка.Параметры.ДолжностьДиректора = РаботаСПользователями.ПолучитьДолжность(РуководительПредприятия);
        ОбластьШапка.Параметры.Руководитель = РуководительПредприятия.ПредставлениеВДокументах;
        
        ОбластьШапка.Параметры.ТекстШапки = "" + Выборка.Подразделение + " за " + Формат(Выборка.Дата, "ДФ=""ММММ гггг'г.'""");														        
        ТабличныйДокумент.Вывести(ОбластьШапка);
        
        // Подвал
        ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
        ОбластьПодвал.Параметры.Примечание = Выборка.Примечание;
        ОбластьПодвал.Параметры.Должность1 = РаботаСПользователями.ПолучитьДолжность(Выборка.Подписал1);
        ОбластьПодвал.Параметры.Должность2 = РаботаСПользователями.ПолучитьДолжность(Выборка.Подписал2);
        ОбластьПодвал.Параметры.Должность3 = РаботаСПользователями.ПолучитьДолжность(Выборка.Подписал3);
        ОбластьПодвал.Параметры.Должность4 = РаботаСПользователями.ПолучитьДолжность(Выборка.Подписал4);
        ОбластьПодвал.Параметры.Подписал1 = Выборка.ПредставлениеВДокументах1;
        ОбластьПодвал.Параметры.Подписал2 = Выборка.ПредставлениеВДокументах2;
        ОбластьПодвал.Параметры.Подписал3 = Выборка.ПредставлениеВДокументах3;
        ОбластьПодвал.Параметры.Подписал4 = Выборка.ПредставлениеВДокументах4;
        
        
        // Строки
        НомерПП = 0;
        ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
        ВыборкаДетальныеЗаписи = Выборка.Сотрудники.Выбрать();
        Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
            
            ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, ВыборкаДетальныеЗаписи);
            
            НомерПП = НомерПП+1;
            ОбластьСтрока.Параметры.НомерПП = НомерПП;
            ОбластьСтрока.Параметры.ТабельныйНомер = СокрЛП(ВыборкаДетальныеЗаписи.ТабельныйНомер);
            
            ТабличныйДокумент.Вывести(ОбластьСтрока);
        КонецЦикла;
        
        // Итого
        ОбластьИтого = Макет.ПолучитьОбласть("Итого");
        ТабСотрудники = Выборка.Сотрудники.Выгрузить();
        ОбластьИтого.Параметры.ОкладПлановый    = ТабСотрудники.Итог("ОкладПлановый"); 
        ОбластьИтого.Параметры.ЧасовПоФакту     = ТабСотрудники.Итог("ЧасовПоФакту"); 
        ОбластьИтого.Параметры.ОкладЗаФОВ       = ТабСотрудники.Итог("ОкладЗаФОВ"); 
        ОбластьИтого.Параметры.Начислено        = ТабСотрудники.Итог("Начислено"); 
        ОбластьИтого.Параметры.ОкладПоФакту     = ТабСотрудники.Итог("ОкладПоФакту"); 
        ОбластьИтого.Параметры.Премия           = ТабСотрудники.Итог("Премия"); 
        ОбластьИтого.Параметры.ПремияЗаРуководство = ТабСотрудники.Итог("ПремияЗаРуководство"); 
        ОбластьИтого.Параметры.Итого            = ТабСотрудники.Итог("Итого"); 
        ОбластьИтого.Параметры.СуммаПовышенияПонижения = ТабСотрудники.Итог("СуммаПовышенияПонижения"); 
        ОбластьИтого.Параметры.ПремияИтоговая   = ТабСотрудники.Итог("ПремияИтоговая"); 
        
        ТабличныйДокумент.Вывести(ОбластьИтого);
       
        ТабличныйДокумент.Вывести(ОбластьПодвал);
    КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции 

Функция ПечатьВедомости(МассивОбъектов, ОбъектыПечати)
	
	// Создаем табличный документ и устанавливаем имя параметров печати
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_Расчет";
	// Запомним номер строки с которой начали выводить текущий документ
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
	Макет = ПолучитьМакет("ПФ_MXL_Ведомость");

    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	мРасчетЗарплаты.Ссылка,
        |	мРасчетЗарплаты.Дата,
        |	мРасчетЗарплаты.Подразделение,
        |	мРасчетЗарплаты.Подписал4,
        |	мРасчетЗарплаты.Сотрудники.(
        |		Пользователь КАК Пользователь,
        |		Пользователь.ПредставлениеВДокументах КАК Сотрудник,
        |		ОкладПлановый,
        |		ЧасовПоФакту,
        |		ОкладЗаФОВ,
        |		Начислено,
        |		ОкладПоФакту,
        |		Премия,
        |		Итого,
        |		ПроцентПремииЗаРуководство,
        |		Должность,
        |		ТабельныйНомер,
        |		Подразделение,
        |		ПремияИтоговая
        |	),
        |	мРасчетЗарплаты.Подписал4.ПредставлениеВДокументах КАК ПредставлениеВДокументах4
        |ИЗ
        |	Документ.мРасчетЗарплаты КАК мРасчетЗарплаты
        |ГДЕ
        |	мРасчетЗарплаты.Ссылка В(&МассивОбъектов)
        |
        |УПОРЯДОЧИТЬ ПО
        |	Пользователь
        |АВТОУПОРЯДОЧИВАНИЕ";

    Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);

    РезультатЗапроса = Запрос.Выполнить();

    Выборка = РезультатЗапроса.Выбрать();

	ПервыйДокумент = Истина;
    Пока Выборка.Следующий() Цикл
        
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
        
        // Получение списка вложенных подразделений (отрядов)
        СпОтрядов = Новый СписокЗначений;
        ПоОтрядам = Ложь;
        
        ВыборкаДетальныеЗаписи = Выборка.Сотрудники.Выбрать();
        Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
            
            // Без начальников
            Если ВыборкаДетальныеЗаписи.ПроцентПремииЗаРуководство > 0 Тогда
                Продолжить;
            КонецЕсли;
            
            Если СпОтрядов.НайтиПоЗначению(ВыборкаДетальныеЗаписи.Подразделение) = Неопределено Тогда
                СпОтрядов.Добавить(ВыборкаДетальныеЗаписи.Подразделение);
                ПоОтрядам = Истина;
            КонецЕсли; 
        КонецЦикла;
        
        ВыборкаДетальныеЗаписи.Сбросить();
        
        // Шапка
        ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
        
        Если ПоОтрядам Тогда
	        ПервыйОтряд = Истина;
            Для каждого СтрОтряд Из СпОтрядов Цикл
            
                Если Не ПервыйОтряд Тогда
                    ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
                КонецЕсли;
                ПервыйОтряд = Ложь;
                
                ТекОтряд = СтрОтряд.Значение;
                
                // Шапка
                ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
                ОбластьШапка.Параметры.ТекстШапки = "" + ТекОтряд + " за " + Формат(Выборка.Дата, "ДФ=""ММММ гггг'г.'""");														        
                
                ТабличныйДокумент.Вывести(ОбластьШапка);
        
                // Подвал
                ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
                ОбластьПодвал.Параметры.Должность4 = РаботаСПользователями.ПолучитьДолжность(Выборка.Подписал4);
                ОбластьПодвал.Параметры.Подписал4 = Выборка.ПредставлениеВДокументах4;
                
                // Строки
                НомерПП = 0;
                ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
                ВыборкаДетальныеЗаписи = Выборка.Сотрудники.Выбрать();
                Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
                    
                    // Без начальников
                    Если ВыборкаДетальныеЗаписи.ПроцентПремииЗаРуководство > 0 Тогда
                        Продолжить;
                    КонецЕсли; 
                    
                    Если ТекОтряд <> ВыборкаДетальныеЗаписи.Подразделение Тогда
                        Продолжить;
                    КонецЕсли; 
                    
                    ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, ВыборкаДетальныеЗаписи);
                    
                    НомерПП = НомерПП+1;
                    ОбластьСтрока.Параметры.НомерПП = НомерПП;
                    ОбластьСтрока.Параметры.ТабельныйНомер = СокрЛП(ВыборкаДетальныеЗаписи.ТабельныйНомер);
                    
                    ТабличныйДокумент.Вывести(ОбластьСтрока);
                КонецЦикла;
                
                ТабличныйДокумент.Вывести(ОбластьПодвал);
            КонецЦикла; 
        Иначе
            // Шапка
            ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
            ОбластьШапка.Параметры.ТекстШапки = "" + Выборка.Подразделение + " за " + Формат(Выборка.Дата, "ДФ=""ММММ гггг'г.'""");														        
            
            ТабличныйДокумент.Вывести(ОбластьШапка);
            
            // Подвал
            ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
            ОбластьПодвал.Параметры.Должность4 = РаботаСПользователями.ПолучитьДолжность(Выборка.Подписал4);
            ОбластьПодвал.Параметры.Подписал4 = Выборка.ПредставлениеВДокументах4;
            
            // Строки
            НомерПП = 0;
            ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
            ВыборкаДетальныеЗаписи = Выборка.Сотрудники.Выбрать();
            Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
                
                // Без начальников
                Если ВыборкаДетальныеЗаписи.ПроцентПремииЗаРуководство > 0 Тогда
                    Продолжить;
                КонецЕсли; 
                
                ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, ВыборкаДетальныеЗаписи);
                
                НомерПП = НомерПП+1;
                ОбластьСтрока.Параметры.НомерПП = НомерПП;
                ОбластьСтрока.Параметры.ТабельныйНомер = СокрЛП(ВыборкаДетальныеЗаписи.ТабельныйНомер);
                
                ТабличныйДокумент.Вывести(ОбластьСтрока);
            КонецЦикла;
            
            ТабличныйДокумент.Вывести(ОбластьПодвал);
        КонецЕсли; 
    КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции // 

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("НачПериода", НачалоМесяца(ДокументСсылка.Дата));
	Запрос.УстановитьПараметр("КонПериода", КонецМесяца(ДокументСсылка.Дата));
	Запрос.Текст ="ВЫБРАТЬ
	              |	мРасчетЗарплатыСотрудники.Пользователь,
	              |	мРасчетЗарплатыСотрудники.ЧасовПоФакту,
	              |	мРасчетЗарплатыСотрудники.ОкладПоФакту,
	              |	мРасчетЗарплатыСотрудники.ПроцентПремииЗаРуководство,
	              |	мРасчетЗарплатыСотрудники.ПремияИтоговая,
	              |	мРасчетЗарплатыСотрудники.ТабельныйНомер,
	              |	мРасчетЗарплатыСотрудники.Должность,
	              |	мРасчетЗарплатыСотрудники.Ссылка.Дата КАК Период,
	              |	мРасчетЗарплатыСотрудники.Подразделение
	              |ИЗ
	              |	Документ.мРасчетЗарплаты.Сотрудники КАК мРасчетЗарплатыСотрудники
	              |ГДЕ
	              |	мРасчетЗарплатыСотрудники.Ссылка = &Ссылка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	мРасчетЗарплатыСотрудники.Пользователь КАК Исполнитель
	              |ПОМЕСТИТЬ Исполнители
	              |ИЗ
	              |	Документ.мРасчетЗарплаты.Сотрудники КАК мРасчетЗарплатыСотрудники
	              |ГДЕ
	              |	мРасчетЗарплатыСотрудники.Ссылка = &Ссылка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	НачислениеЗПОбороты.Подразделение,
	              |	НачислениеЗПОбороты.Исполнитель,
	              |	НачислениеЗПОбороты.ЭтапДоговора.ВидРабот.ВидРаботПоДоговорам.ВидЭкономическойДеятельности КАК ВидДеятельности,
	              |	СУММА(НачислениеЗПОбороты.СуммаОборот) КАК Начислено,
	              |	СУММА(НачислениеЗПОбороты.БазовоеНачислениеОборот) КАК НачисленоБаза
	              |ИЗ
	              |	РегистрНакопления.НачислениеЗП.Обороты(
	              |			&НачПериода,
	              |			&КонПериода,
	              |			Период,
	              |			Исполнитель В
	              |				(ВЫБРАТЬ
	              |					Исполнители.Исполнитель
	              |				ИЗ
	              |					Исполнители КАК Исполнители)) КАК НачислениеЗПОбороты
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	НачислениеЗПОбороты.Подразделение,
	              |	НачислениеЗПОбороты.Исполнитель,
	              |	НачислениеЗПОбороты.ЭтапДоговора.ВидРабот.ВидРаботПоДоговорам.ВидЭкономическойДеятельности";
				  
	Результат = Запрос.ВыполнитьПакет();
  
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ДанныеДокумента", Результат[0].Выгрузить());
	ТаблицыДляДвижений.Вставить("НачисленоПоВидамДеятельности", Результат[2].Выгрузить());
		
КонецПроцедуры // ИнициализироватьДанныеДокумента()
