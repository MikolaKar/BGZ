&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    Если Объект.Ссылка.Пустая() Тогда
        Объект.Ответственный = 	Пользователи.ТекущийПользователь();
    КонецЕсли; 
    
    // СтандартныеПодсистемы.Печать
    УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
    // Конец СтандартныеПодсистемы.Печать
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	Если Модифицированность Тогда
		Записать();
	КонецЕсли; 
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура Заполнить(Команда)
	Если Объект.КоличествоЧасов = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не указано плановое количество часов!";
		Сообщение.Поле = "Объект.КоличествоЧасов";
		//Сообщение.УстановитьДанные();
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ЗаполнитьНаСервере();
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
    РезультатЗапроса = ПолучитьИнформациюПоСотрудникам();
	
	ЕстьДанныеИзЗУП = РезультатЗапроса.Итог("ЧасовПоФакту") > 0;
	Если Не ЕстьДанныеИзЗУП Тогда
		Сообщить("Данные из ЗУП за "+Формат(Объект.Дата, "ДФ=dd.MM.yyyy")+" не подгружены!");
	КонецЕсли; 
	
	// копия таб части
	ТзСотр = Объект.Сотрудники.Выгрузить();
	
    Объект.Сотрудники.Очистить();    
    
    // Первый проход - расчет премий исполнителей
    // Второй проход - расчет премий начальников, т.к. зависит от премий исполнителей
    
    ТзПремий = Новый ТаблицаЗначений;
    ТзПремий.Колонки.Добавить("Подразделение");
    ТзПремий.Колонки.Добавить("БазоваяПремия");
    
    Для каждого СтрТаб Из РезультатЗапроса Цикл
        НоваяСтрока = Объект.Сотрудники.Добавить();
        ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрТаб);
		
		// Проверка окладов
		Если ЕстьДанныеИзЗУП Тогда
			Если СтрТаб.ОкладПлановый <> СтрТаб.ОкладЗУП Тогда
				Сообщить("Проверьте оклад у "+НоваяСтрока.Пользователь+"!");
				Сообщить("  В ДО: "+НоваяСтрока.СтрТаб+", а в ЗУП: "+СтрТаб.ОкладЗУП+"!");
			КонецЕсли; 
		КонецЕсли; 
        
        ЭтоНачальник = СтрТаб.ПроцентПремииЗаРуководствоОтрядом > 0 или СтрТаб.ПроцентПремииЗаРуководство > 0;
        
		Отбор = Новый Структура("Пользователь, Должность, ОкладПлановый", НоваяСтрока.Пользователь, НоваяСтрока.Должность, НоваяСтрока.ОкладПлановый); 
		МассивСтрок = ТзСотр.НайтиСтроки(Отбор);
		
		// Часы по факту берем из РС мФактическиОтработанноеВремя, если там нет, то из копии таблицы, если нечего взять, то из шапки документа
		Если ЕстьДанныеИзЗУП Тогда
			// Часы по факту уже заполнены
		Иначе
			Если МассивСтрок.Количество() = 0 Тогда
				// Это первое заполнение - берем из шапки
				НоваяСтрока.ЧасовПоФакту = Объект.КоличествоЧасов;
			Иначе
				// Это  повторное заполнение - берем из копии таблицы
				НоваяСтрока.ЧасовПоФакту = МассивСтрок[0].ЧасовПоФакту;
			КонецЕсли; 
		КонецЕсли; 

		Если МассивСтрок.Количество() > 0 Тогда
			// Процент повышения/понижения премии из копии
	        НоваяСтрока.ПроцентПовышенияПонижения = МассивСтрок[0].ПроцентПовышенияПонижения;
		КонецЕсли; 
        
        НоваяСтрока.ОкладЗаФОВ = Окр(НоваяСтрока.ОкладПлановый * НоваяСтрока.ЧасовПоФакту / Объект.КоличествоЧасов, мРазное.ЗнакОкр(Объект.Дата));
        
        Если ЭтоНачальник Тогда
            // Это начальник - Начислено не учитывается
            НоваяСтрока.ОкладПоФакту = НоваяСтрока.ОкладЗаФОВ;
        Иначе
            // Это сотрудник - Начислено учитывается
            НоваяСтрока.ОкладПоФакту = Мин(НоваяСтрока.Начислено, НоваяСтрока.ОкладЗаФОВ);
            НоваяСтрока.Премия = НоваяСтрока.Начислено - НоваяСтрока.ОкладПоФакту;
        	НоваяСтрока.БазоваяПремия = НоваяСтрока.БазовоеНачисление - НоваяСтрока.ОкладПоФакту;
			НоваяСтрока.БазоваяПремия = ?(НоваяСтрока.БазоваяПремия < 0, 0, НоваяСтрока.БазоваяПремия);
            
            // накопление премий по подразделениям
            СтрокаТз = ТзПремий.Добавить();
            СтрокаТз.Подразделение = НоваяСтрока.Подразделение;
			// Для расчета ЗП начальников применяется БазовоеНачисление (без учета +/- коэффициентов)
			СтрокаТз.БазоваяПремия = НоваяСтрока.БазоваяПремия;
		КонецЕсли; 
        
       // по умочанию НоваяСтрока.ПроцентПремииЗаРуководство = ПроцентПремииЗаРуководство из запроса
        Если СтрТаб.ПроцентПремииЗаРуководствоОтрядом > 0 Тогда
            НоваяСтрока.ПроцентПремииЗаРуководство = СтрТаб.ПроцентПремииЗаРуководствоОтрядом;
        КонецЕсли; 
        
        НоваяСтрока.ПремияИтоговая = НоваяСтрока.ПремияЗаРуководство + НоваяСтрока.СуммаПовышенияПонижения;
        НоваяСтрока.Итого = НоваяСтрока.ОкладПоФакту + НоваяСтрока.Премия + НоваяСтрока.ПремияИтоговая;
    КонецЦикла; 
    
    РассчитатьПремииНачальникам(ТзПремий);
КонецПроцедуры

&НаСервере
Функция ПолучитьИнформациюПоСотрудникам()
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	мПроцентПремииЗаРуководствоСрезПоследних.Должность КАК Должность,
        |	мПроцентПремииЗаРуководствоСрезПоследних.ЧисленностьОт КАК ЧисленностьОт,
        |	мПроцентПремииЗаРуководствоСрезПоследних.ЧисленностьДо КАК ЧисленностьДо,
        |	мПроцентПремииЗаРуководствоСрезПоследних.Процент КАК Процент
        |ПОМЕСТИТЬ ПремияЗаРуководство
        |ИЗ
        |	РегистрСведений.мПроцентПремииЗаРуководство.СрезПоследних(
        |			&ДатаСреза,
        |			ЧисленностьОт <= &Численность
        |				И &Численность < ЧисленностьДо) КАК мПроцентПремииЗаРуководствоСрезПоследних
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	мПроцентПремииЗаРуководствоОтрядомСрезПоследних.Должность,
        |	мПроцентПремииЗаРуководствоОтрядомСрезПоследних.Процент
        |ПОМЕСТИТЬ ПремияЗаРуководствоОтрядом
        |ИЗ
        |	РегистрСведений.мПроцентПремииЗаРуководствоОтрядом.СрезПоследних(&ДатаСреза, ) КАК мПроцентПремииЗаРуководствоОтрядомСрезПоследних
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	&НачПериода КАК НачалоПериода,
        |	мСведенияОСотрудникахСрезПоследних.Пользователь КАК Пользователь,
        |	мСведенияОСотрудникахСрезПоследних.Должность,
        |	мСведенияОСотрудникахСрезПоследних.Оклад,
        |	мСведенияОСотрудникахСрезПоследних.Подразделение,
        |	мСведенияОСотрудникахСрезПоследних.Пользователь.Наименование
        |ПОМЕСТИТЬ ПериодыРаботы
        |ИЗ
        |	РегистрСведений.мСведенияОСотрудниках.СрезПоследних(
        |			&НачПериода,
        |			Подразделение В ИЕРАРХИИ (&Подразделение)
        |				И НЕ Пользователь.Недействителен) КАК мСведенияОСотрудникахСрезПоследних
        |ГДЕ
        |	мСведенияОСотрудникахСрезПоследних.Оклад > 0
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	мСведенияОСотрудниках.Период,
        |	мСведенияОСотрудниках.Пользователь,
        |	мСведенияОСотрудниках.Должность,
        |	мСведенияОСотрудниках.Оклад,
        |	мСведенияОСотрудниках.Подразделение,
        |	мСведенияОСотрудниках.Пользователь.Наименование
        |ИЗ
        |	РегистрСведений.мСведенияОСотрудниках КАК мСведенияОСотрудниках
        |ГДЕ
        |	мСведенияОСотрудниках.Период МЕЖДУ &НачПериода1 И &КонПериода
        |	И мСведенияОСотрудниках.Подразделение В ИЕРАРХИИ(&Подразделение)
        |	И НЕ мСведенияОСотрудниках.Пользователь.Недействителен
        |	И мСведенияОСотрудниках.Оклад > 0
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	мФактическиОтработанноеВремя.Пользователь,
        |	мФактическиОтработанноеВремя.Должность,
        |	мФактическиОтработанноеВремя.Подразделение,
        |	мФактическиОтработанноеВремя.ЧасыФакт,
        |	мФактическиОтработанноеВремя.Оклад
        |ПОМЕСТИТЬ ПоФакту
        |ИЗ
        |	РегистрСведений.мФактическиОтработанноеВремя КАК мФактическиОтработанноеВремя
        |ГДЕ
        |	мФактическиОтработанноеВремя.Период = &НачПериода
        |	И мФактическиОтработанноеВремя.Пользователь В
        |			(ВЫБРАТЬ
        |				ПериодыРаботы.Пользователь
        |			ИЗ
        |				ПериодыРаботы КАК ПериодыРаботы)
        |	И мФактическиОтработанноеВремя.Должность В
        |			(ВЫБРАТЬ
        |				ПериодыРаботы.Должность
        |			ИЗ
        |				ПериодыРаботы КАК ПериодыРаботы)
        |	И мФактическиОтработанноеВремя.Подразделение В
        |			(ВЫБРАТЬ
        |				ПериодыРаботы.Подразделение
        |			ИЗ
        |				ПериодыРаботы КАК ПериодыРаботы)
        |;
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ПериодыРаботы.Пользователь КАК Пользователь,
        |	ПериодыРаботы.НачалоПериода КАК НачалоПериода,
        |	ПериодыРаботы.Должность КАК Должность,
        |	ПериодыРаботы.Оклад КАК ОкладПлановый,
        |	ПериодыРаботы.Подразделение КАК Подразделение,
        |	ЕСТЬNULL(НачислениеЗПОбороты.СуммаОборот, 0) КАК Начислено,
        |	ЕСТЬNULL(НачислениеЗПОбороты.БазовоеНачислениеОборот, 0) КАК БазовоеНачисление,
        |	ЕСТЬNULL(ПремияЗаРуководствоОтрядом.Процент, 0) КАК ПроцентПремииЗаРуководствоОтрядом,
        |	ЕСТЬNULL(ПремияЗаРуководство.Процент, 0) КАК ПроцентПремииЗаРуководство,
        |	ПериодыРаботы.Пользователь.ТабельныйНомер КАК ТабельныйНомер,
        |	ПериодыРаботы.ПользовательНаименование КАК ПользовательНаименование,
        |	ПоФакту.ЧасыФакт КАК ЧасовПоФакту,
        |	ПоФакту.Оклад КАК ОкладЗУП
        |ИЗ
        |	ПериодыРаботы КАК ПериодыРаботы
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НачислениеЗП.Обороты(&НачПериода, &КонПериода, Период, ) КАК НачислениеЗПОбороты
        |		ПО ПериодыРаботы.Подразделение = НачислениеЗПОбороты.Подразделение
		|			И ПериодыРаботы.Должность = НачислениеЗПОбороты.Должность
		|			И ПериодыРаботы.Оклад = НачислениеЗПОбороты.Оклад
		|			И ПериодыРаботы.Пользователь = НачислениеЗПОбороты.Исполнитель
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПремияЗаРуководствоОтрядом КАК ПремияЗаРуководствоОтрядом
        |		ПО ПериодыРаботы.Должность = ПремияЗаРуководствоОтрядом.Должность
        |		ЛЕВОЕ СОЕДИНЕНИЕ ПремияЗаРуководство КАК ПремияЗаРуководство
        |		ПО ПериодыРаботы.Должность = ПремияЗаРуководство.Должность
        |		ЛЕВОЕ СОЕДИНЕНИЕ ПоФакту КАК ПоФакту
        |		ПО ПериодыРаботы.Пользователь = ПоФакту.Пользователь
        |			И ПериодыРаботы.Должность = ПоФакту.Должность
        |			И ПериодыРаботы.Подразделение = ПоФакту.Подразделение
        |
        |УПОРЯДОЧИТЬ ПО
        |	Подразделение,
        |	ПользовательНаименование,
        |	НачалоПериода";

    Запрос.УстановитьПараметр("ДатаСреза", Объект.Дата);
    Запрос.УстановитьПараметр("КонПериода", КонецМесяца(Объект.Дата));
    Запрос.УстановитьПараметр("НачПериода", НачалоМесяца(Объект.Дата));
    Запрос.УстановитьПараметр("НачПериода1", НачалоМесяца(Объект.Дата)+1);
    Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
    Запрос.УстановитьПараметр("Численность", Объект.СреднесписочнаяЧисленность);
    Запрос.УстановитьПараметр("ВидДокумента", Справочники.ВидыВнутреннихДокументов.АктВыполненныхРабот);

    Результат = Запрос.Выполнить().Выгрузить();
    Возврат Результат;
КонецФункции 
 
&НаКлиенте
Процедура СотрудникиЧасовПоФактуПриИзменении(Элемент)
    ТекДанные = Элементы.Сотрудники.ТекущиеДанные;
    
    ТекДанные.ОкладЗаФОВ = Окр(ТекДанные.ОкладПлановый * ТекДанные.ЧасовПоФакту / Объект.КоличествоЧасов, ЗнакОкр(Объект.Дата));
    
    ОкладЗаФОВПриИзменении();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗнакОкр(Дата) Экспорт
	Если Дата < Дата(2016, 7, 1) Тогда
		Возврат 0;
	Иначе	
	    Возврат 2;
	КонецЕсли; 
КонецФункции // ЗнакОкр()

&НаКлиенте
Процедура СотрудникиОкладЗаФОВПриИзменении(Элемент)
    ОкладЗаФОВПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура ОкладЗаФОВПриИзменении()
    РассчитатьОкладПоФакту();
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиПроцентПовышенияПониженияПриИзменении(Элемент)
    ТекДанные = Элементы.Сотрудники.ТекущиеДанные;

    РассчитатьПовышениеПонижение(ТекДанные);
    
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиБазаПремииЗаРуководствоПриИзменении(Элемент)
    РассчитатьПремиюЗаРуководство();
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиПроцентПремииЗаРуководствоПриИзменении(Элемент)
    РассчитатьПремиюЗаРуководство();
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьОкладПоФакту()
    ТекДанные = Элементы.Сотрудники.ТекущиеДанные;
    
    //ТекДанные.ОкладЗаФОВ = Окр(ТекДанные.ОкладПлановый * ТекДанные.ЧасовПоФакту / Объект.КоличествоЧасов);
    Если ТекДанные.БазаПремииЗаРуководство > 0 Тогда
        // Это начальник - Начислено не учитывается
        ТекДанные.ОкладПоФакту = ТекДанные.ОкладЗаФОВ;
        
        РассчитатьПремиюЗаРуководство();
    Иначе
        // Это сотрудник - Начислено учитывается
        ТекДанные.ОкладПоФакту = Мин(ТекДанные.Начислено, ТекДанные.ОкладЗаФОВ);
        ТекДанные.Премия = ТекДанные.Начислено - ТекДанные.ОкладПоФакту;
        ТекДанные.БазоваяПремия = ТекДанные.БазовоеНачисление - ТекДанные.ОкладПоФакту;
		ТекДанные.БазоваяПремия = ?(ТекДанные.БазоваяПремия < 0, 0, ТекДанные.БазоваяПремия);
		
		РассчитатьПовышениеПонижение(ТекДанные);
		
        // Поменялась премия - пересчет всех премий за руководство
        РассчитатьПремииЗаРуководство();
    КонецЕсли; 
    
КонецПроцедуры

&НаСервере
Процедура РассчитатьПремииЗаРуководство()
    ТзПремий = Новый ТаблицаЗначений;
    ТзПремий.Колонки.Добавить("Подразделение");
    ТзПремий.Колонки.Добавить("БазоваяПремия");
    
    Для каждого Строка Из Объект.Сотрудники Цикл
        НоваяСтрока = ТзПремий.Добавить();
        ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
    КонецЦикла; 
    
    РассчитатьПремииНачальникам(ТзПремий);
    
КонецПроцедуры // РассчитатьПремииЗаРуководство()

&НаСервере
Процедура РассчитатьПремииНачальникам(ТзПремий)
    ТзПремий.Свернуть("Подразделение", "БазоваяПремия");
    
    БазаПремииЗаРуководство = ТзПремий.Итог("БазоваяПремия");
    
    // Расчет премий начальникам
    Для каждого Строка Из Объект.Сотрудники Цикл
    
    	Если Строка.ПроцентПремииЗаРуководство = 0 Тогда
            // Это исполнитель
            Продолжить;
        КонецЕсли; 
        
        ЭтоСектор = Найти(Строка.Подразделение.Наименование, "Сектор");
        
        Если ЭтоСектор > 0 Тогда
            // это отряд - ищем премию отряда
            Отбор = Новый Структура("Подразделение", Строка.Подразделение);
            ИскСтрока = ТзПремий.Найти(Строка.Подразделение, "Подразделение");
            Если ИскСтрока <> Неопределено Тогда
                Строка.БазаПремииЗаРуководство = ИскСтрока.БазоваяПремия;
            КонецЕсли; 
        Иначе
            // это отдел
            Строка.БазаПремииЗаРуководство = БазаПремииЗаРуководство;
        КонецЕсли; 
        
        Строка.ПремияЗаРуководство = Окр(Строка.БазаПремииЗаРуководство * Строка.ПроцентПремииЗаРуководство / 100 * Строка.ЧасовПоФакту / Объект.КоличествоЧасов, мРазное.ЗнакОкр(Объект.Дата));  
        Строка.СуммаПовышенияПонижения = Окр(Строка.ПремияЗаРуководство * Строка.ПроцентПовышенияПонижения / 100, мРазное.ЗнакОкр(Объект.Дата));
        Строка.ПремияИтоговая = Строка.ПремияЗаРуководство + Строка.СуммаПовышенияПонижения;
        Строка.Итого = Строка.ОкладПоФакту + Строка.Премия + Строка.ПремияИтоговая;
    КонецЦикла; 
КонецПроцедуры // РассчитатьПремииНачальникам()

&НаКлиенте
Процедура РассчитатьПремиюЗаРуководство()
    ТекДанные = Элементы.Сотрудники.ТекущиеДанные;
    
    ТекДанные.ПремияЗаРуководство = Окр(ТекДанные.БазаПремииЗаРуководство * ТекДанные.ПроцентПремииЗаРуководство / 100 * ТекДанные.ЧасовПоФакту / Объект.КоличествоЧасов, мРазное.ЗнакОкр(Объект.Дата));  
    
    РассчитатьПовышениеПонижение(ТекДанные);
КонецПроцедуры

// Для нач и исполнителей разный алгоритм
// Нач.: от ПремияЗаРуководство
// Исп: от Начислено
&НаКлиенте
Процедура РассчитатьПовышениеПонижение(ТекДанные)
    //ТекДанные = Элементы.Сотрудники.ТекущиеДанные;
	Если ТекДанные.ПроцентПремииЗаРуководство = 0 Тогда
		// Это исполнитель
		ТекДанные.СуммаПовышенияПонижения = Окр(ТекДанные.Начислено * ТекДанные.ПроцентПовышенияПонижения / 100, ЗнакОкр(Объект.Дата));
		ТекДанные.ПремияИтоговая = ТекДанные.Премия + ТекДанные.СуммаПовышенияПонижения;
		ТекДанные.Итого = ТекДанные.ОкладПоФакту + ТекДанные.ПремияИтоговая;
	Иначе
		// Это начальник
		ТекДанные.СуммаПовышенияПонижения = Окр(ТекДанные.ПремияЗаРуководство * ТекДанные.ПроцентПовышенияПонижения / 100, ЗнакОкр(Объект.Дата));
		ТекДанные.ПремияИтоговая = ТекДанные.ПремияЗаРуководство + ТекДанные.СуммаПовышенияПонижения;
		ТекДанные.Итого = ТекДанные.ОкладПоФакту + ТекДанные.Премия + ТекДанные.ПремияИтоговая;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
    ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиПослеУдаления(Элемент)
    РассчитатьПремииЗаРуководство();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПроцентПремииИсполнителям(Команда)
	ПроцентПремии = 0;
	Если ВвестиЧисло(ПроцентПремии, "Укажите процент премии исполнителям", 3, 0) Тогда
		Для каждого Строка Из Объект.Сотрудники Цикл
			Если Строка.ПроцентПремииЗаРуководство = 0 Тогда
				Строка.ПроцентПовышенияПонижения = ПроцентПремии;
				РассчитатьПовышениеПонижение(Строка);
			КонецЕсли; 
		КонецЦикла;
		Модифицированность = Истина;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Объект.Дата < '20151001000000' Тогда
		Элементы.СотрудникиБазовоеНачисление.Видимость = Ложь;
	КонецЕсли; 
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗнакОкр(Дата) Экспорт
	Если Дата < Дата(2016, 7, 1) Тогда
		Возврат 0;
	Иначе	
	    Возврат 2;
	КонецЕсли; 
КонецФункции // ЗнакОкр()

