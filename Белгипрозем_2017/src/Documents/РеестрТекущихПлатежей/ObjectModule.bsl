
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);

	Документы.РеестрТекущихПлатежей.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	ЗапасыСервер.ОтразитьРасчетыСПокупателями(ДополнительныеСвойства, Движения, Отказ);

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
    
    // Очистка независимых регистров
	мРаботаСДоговорами.УдалитьДатуДоговора(Ссылка, Отказ);

    // Запись дат договора 
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДатыДоговоров;
    ТабДляДатыОплаты = Таблица.Скопировать();
	ТабДляДатыОплаты.Свернуть("ЭтапДоговора, ВидДатыДоговора, Дата, Основание, Период", "");	
    
	НаборЗаписей = РегистрыСведений.мДатыДоговоров.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Основание.Установить(Ссылка);
	//НаборЗаписей.Отбор.ВидДатыДоговора.Установить(ВидДаты);
    НаборЗаписей.Загрузить(ТабДляДатыОплаты);
    НаборЗаписей.Записать();
	
	// Определение этапов договоров для расчета и записи планового срока
	ИскМассив = ТабДляДатыОплаты.ВыгрузитьКолонку("ЭтапДоговора");
	//ИскМассив = Таблица.ВыгрузитьКолонку("ЭтапДоговора");
	
	ЭтапыДляРасчетаПлановогоСрока = ПолучитьЭтапыДляРасчетаПлановогоСрока(ИскМассив);
	
	ПлановыеСрокиЭтапов = мРаботаСДоговорами.РассчитатьПлановыеСрокиЭтапов(ЭтапыДляРасчетаПлановогоСрока);
    
	ВидДаты = Справочники.мВидыДатДоговоров.ПлановыйСрок;
    
    ТабДляДаты = ТабДляДатыОплаты.Скопировать();
    //ТабДляДаты = Таблица.Скопировать();
    
    Для каждого Стр Из ТабДляДаты Цикл
        Отбор = Новый Структура("ЭтапДоговора", Стр.ЭтапДоговора);
        ИскСтроки = ПлановыеСрокиЭтапов.НайтиСтроки(Отбор);
    	Если ИскСтроки.Количество() = 0 Тогда
            Продолжить;
        КонецЕсли;
        НовСтр = ТабДляДатыОплаты.Добавить();
        ЗаполнитьЗначенияСвойств(НовСтр, Стр);
        
        НовСтр.ВидДатыДоговора = ВидДаты;
        НовСтр.Дата = ИскСтроки[0].ПлановыйСрок;
   КонецЦикла; 
    
    НаборЗаписей = РегистрыСведений.мДатыДоговоров.СоздатьНаборЗаписей();
    НаборЗаписей.Отбор.Основание.Установить(Ссылка);
    //НаборЗаписей.Отбор.ВидДатыДоговора.Установить(ВидДаты);
    //
    //Для каждого Стр Из ПлановыеСрокиЭтапов Цикл
    //    НовЗап = НаборЗаписей.Добавить();
    //    НовЗап.ЭтапДоговора = Стр.ЭтапДоговора;
    //	НовЗап.ВидДатыДоговора = ВидДаты;
    //    НовЗап.Основание = Ссылка;
    //    НовЗап.Дата = Стр.ПлановыйСрок;
    //    НовЗап.Комментарий = Стр.Комментарий;
    //КонецЦикла; 
    
    НаборЗаписей.Загрузить(ТабДляДатыОплаты);
	//НаборЗаписей.Загрузить(Таблица);
    НаборЗаписей.Записать();
	
	
    ////
    ////// Запись даты оплаты
    ////ВидДатыДоговора = Справочники.мВидыДатДоговоров.ДатаОплаты;
    ////
    ////Для каждого СтрокаТаб Из Таблица Цикл
    ////	
    ////	// Добавление записи даты договора Дата оплаты
    ////	ТабДляДаты.Очистить();
    ////	НоваяСтрока = ТабДляДаты.Добавить();
    ////	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаб);
    ////	//НоваяСтрока.ВидДатыДоговора = ВидДатыДоговора;
    ////	//НоваяСтрока.Дата = СтрокаТаб.Период;
    ////	//НоваяСтрока.Ссылка = Ссылка;

    ////	СтруктураОтбора = Новый Структура;
    ////	//СтруктураОтбора.Вставить("Период", СтрокаТаб.Период);
    ////	СтруктураОтбора.Вставить("ЭтапДоговора", СтрокаТаб.ЭтапДоговора);
    ////	СтруктураОтбора.Вставить("ВидДатыДоговора", ВидДатыДоговора);
    ////	СтруктураОтбора.Вставить("Основание", Ссылка);
    ////	
    ////	мРаботаСДоговорами.ЗаписатьДатуДоговора(ТабДляДаты, СтруктураОтбора, Отказ);
    ////    
    ////КонецЦикла; 
    //
    //// запись планового срока
    //ВидДаты = Справочники.мВидыДатДоговоров.ПлановыйСрок;
    //
    //Для каждого СтрокаТаб Из Таблица Цикл
    //	
    //	// Если плановый срок есть, то пересчитывать его не надо
    //	ТекущийПлановыйСрок = мРаботаСДоговорами.ПрочитатьДатуЭтапаДоговора(СтрокаТаб.ЭтапДоговора, ТекущаяДата(), ВидДаты);
    //	Если ЗначениеЗаполнено(ТекущийПлановыйСрок) Тогда
    //		Продолжить;
    //	КонецЕсли; 
    //	
    //	НадоСчитатьПлановыйСрок = мРаботаСДоговорами.ЕстьУсловиеДляРасчетаПлановогоСрока(СтрокаТаб.Договор, СтрокаТаб.ЭтапДоговора, ТекущаяДата(), "ПоОплате");
    //	Если НадоСчитатьПлановыйСрок Тогда
    //		
    //		// если установлена длительность или вид дней в этапе, то берем из него
    //		ПараметрыДляРасчета = Неопределено;
    //		Если ЗначениеЗаполнено(СтрокаТаб.Длительность) или ЗначениеЗаполнено(СтрокаТаб.ВидДней) Тогда
    //			ПараметрыДляРасчета = Новый Структура();
    //			ПараметрыДляРасчета.Вставить("Длительность", СтрокаТаб.Длительность);
    //			ПараметрыДляРасчета.Вставить("ВидДней", СтрокаТаб.ВидДней);
    //		КонецЕсли; 

    //		ПлановыйСрок = мРаботаСДоговорами.РассчитатьПлановыйСрокВыполненияДоговора(СтрокаТаб.ЭтапДоговора, , Ложь, ПараметрыДляРасчета);
    //		
    //		Если ПлановыйСрок <> Неопределено Тогда
    //			ТабДляДаты.Очистить();
    //			НоваяСтрока = ТабДляДаты.Добавить();
    //			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаб);
    //			//НоваяСтрока.Период = ТекущаяДата();
    //			НоваяСтрока.ВидДатыДоговора = ВидДаты;
    //			НоваяСтрока.Дата = ПлановыйСрок;
    //			//НоваяСтрока.Ссылка = Ссылка;
    //			
    //			СтруктураОтбора = Новый Структура;
    //			//СтруктураОтбора.Вставить("Период", СтрокаТаб.Период);
    //			СтруктураОтбора.Вставить("ЭтапДоговора", СтрокаТаб.ЭтапДоговора);
    //			СтруктураОтбора.Вставить("ВидДатыДоговора", ВидДаты);
    //			СтруктураОтбора.Вставить("Основание", Ссылка);
    //			
    //			мРаботаСДоговорами.ЗаписатьДатуДоговора(ТабДляДаты, СтруктураОтбора, Ложь);
    //		КонецЕсли; 
    //	КонецЕсли; 
    //КонецЦикла; 
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
КонецПроцедуры

Функция ПолучитьЭтапыДляРасчетаПлановогоСрока(ИскМассив)
	// из ИскМассив надо исключить те, у которых уже рассчитан плановый срок, а также те, 
	// у которых не выполняются условия для его расчета
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
        |   МАКСИМУМ(мДатыДоговоровСрезПоследних.Период) КАК МаксДата,
        |   мДатыДоговоровСрезПоследних.ЭтапДоговора,
        |   мДатыДоговоровСрезПоследних.ВидДатыДоговора
        |ПОМЕСТИТЬ МаксДаты
        |ИЗ
        |   РегистрСведений.мДатыДоговоров.СрезПоследних(
        |           ,
        |           ЭтапДоговора В (&ИскМассив)
        |               И ВидДатыДоговора = &ВидДатыДоговора) КАК мДатыДоговоровСрезПоследних
        |
        |СГРУППИРОВАТЬ ПО
        |   мДатыДоговоровСрезПоследних.ЭтапДоговора,
        |   мДатыДоговоровСрезПоследних.ВидДатыДоговора
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   мДатыДоговоровСрезПоследних.ЭтапДоговора,
        |   мДатыДоговоровСрезПоследних.Дата
        |ПОМЕСТИТЬ ПлановыеСроки
        |ИЗ
        |   МаксДаты КАК МаксДаты
        |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.мДатыДоговоров.СрезПоследних(
        |               ,
        |               ЭтапДоговора В (&ИскМассив)
        |                   И ВидДатыДоговора = &ВидДатыДоговора) КАК мДатыДоговоровСрезПоследних
        |       ПО МаксДаты.ЭтапДоговора = мДатыДоговоровСрезПоследних.ЭтапДоговора
        |           И МаксДаты.ВидДатыДоговора = мДатыДоговоровСрезПоследних.ВидДатыДоговора
        |           И МаксДаты.МаксДата = мДатыДоговоровСрезПоследних.Период
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   мУсловияДоговоровСрезПоследних.ЭтапДоговора,
        |   ЕСТЬNULL(ПлановыеСроки.Дата, &ПустаяДата) КАК ПлановыйСрок
        |ИЗ
        |   РегистрСведений.мУсловияДоговоров.СрезПоследних(, ЭтапДоговора В (&ИскМассив)) КАК мУсловияДоговоровСрезПоследних
        |       ЛЕВОЕ СОЕДИНЕНИЕ ПлановыеСроки КАК ПлановыеСроки
        |       ПО мУсловияДоговоровСрезПоследних.ЭтапДоговора = ПлановыеСроки.ЭтапДоговора
        |ГДЕ
        |   мУсловияДоговоровСрезПоследних.УчетДатыПредоплаты
        |   И мУсловияДоговоровСрезПоследних.ПроцентПредоплаты > 0
        |   И НЕ мУсловияДоговоровСрезПоследних.ЭтапДоговора.ЗапретИзмененияПлановогоСрока
        |   И ЕСТЬNULL(ПлановыеСроки.Дата, &ПустаяДата) = &ПустаяДата";
	
	Запрос.УстановитьПараметр("ИскМассив", ИскМассив);
	Запрос.УстановитьПараметр("ПустаяДата", Дата(1,1,1));
	Запрос.УстановитьПараметр("ВидДатыДоговора", Справочники.мВидыДатДоговоров.ПлановыйСрок);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;	

КонецФункции // ПолучитьЭтапыДляРасчетаПлановогоСрока(ИскМассив)()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;	
	
	ПроведениеСервер.УстановитьРежимПроведения(Проведен, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

КонецПроцедуры

// Процедура - обработчик события "ОбработкаУдаленияПроведения".
//
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Удаление даты договора
	мРаботаСДоговорами.УдалитьДатуДоговора(Ссылка, Отказ);
КонецПроцедуры

