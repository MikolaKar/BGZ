
&НаКлиенте
Процедура ЗаполнитьАкты(Команда)
    Если Не ОчиститьТабЧасть(Объект.Акты, "Акты") Тогда
        Возврат;   
	КонецЕсли; 
	
	Если Объект.Проведен Тогда
		ТекстПредупреждения = НСтр("ru='Для правильного заполнения таблицы надо отменить проведение документа. Продолжить?'");
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос(ТекстПредупреждения, Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		
		ОтменитьПроведениеДокумента(); 
	КонецЕсли; 
	
	ЗаполнитьАктыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАктыНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсходящиеДокументыПолучатели.Получатель КАК Корреспондент,
		|	СвязиДокументов1.Документ КАК Договор,
		|	ЭтапыДоговоров.Ссылка КАК ЭтапДоговора,
		|	УчетДоговоровОстатки.СуммаОстаток КАК Сумма,
		|	УчетДоговоровОстатки.НДСОстаток КАК НДС,
		|	ЭтапыДоговоров.Подразделение,
		|	РасчетыСПокупателямиОбороты.СуммаПриход КАК Оплата
		|ИЗ
		|	Справочник.ИсходящиеДокументы.Получатели КАК ИсходящиеДокументыПолучатели
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СвязиДокументов КАК СвязиДокументов
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВнутренниеДокументы.ДополнительныеРеквизиты КАК ВнутренниеДокументыДополнительныеРеквизиты
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СвязиДокументов КАК СвязиДокументов1
		|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
		|						ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.УчетДоговоров.Остатки(&ДатаСреза, ) КАК УчетДоговоровОстатки
		|						ПО ЭтапыДоговоров.Ссылка = УчетДоговоровОстатки.ЭтапДоговора
		|						ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПокупателями.Обороты КАК РасчетыСПокупателямиОбороты
		|						ПО ЭтапыДоговоров.Ссылка = РасчетыСПокупателямиОбороты.ЭтапДоговора
		|					ПО СвязиДокументов1.Документ.Ссылка = ЭтапыДоговоров.Владелец
		|				ПО ВнутренниеДокументыДополнительныеРеквизиты.Ссылка = СвязиДокументов1.СвязанныйДокумент.Ссылка
		|			ПО СвязиДокументов.Документ.Ссылка = ВнутренниеДокументыДополнительныеРеквизиты.Ссылка
		|		ПО ИсходящиеДокументыПолучатели.Ссылка = СвязиДокументов.СвязанныйДокумент.Ссылка
		|ГДЕ
		|	ИсходящиеДокументыПолучатели.Ссылка.ВидДокумента.Наименование = ""Расписка в получении""
		|	И СвязиДокументов.Документ.ВидДокумента.Наименование = ""Дело""
		|	И ВнутренниеДокументыДополнительныеРеквизиты.Свойство.Наименование = ""Этап договора""
		|	И ЭтапыДоговоров.НомерЭтапа = ВнутренниеДокументыДополнительныеРеквизиты.Значение
		|	И УчетДоговоровОстатки.СуммаОстаток > 0";

	Запрос.УстановитьПараметр("ДатаСреза", Объект.Дата);

	Результат = Запрос.Выполнить().Выгрузить();

	Для каждого СтрокаТЗ Из Результат Цикл
		ТекущаяСтрока = Объект.Акты.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТЗ);
		ТекущаяСтрока.НомерАкта = ТекущаяСтрока.Договор.РегистрационныйНомер + "/" + ТекущаяСтрока.ЭтапДоговора.НомерЭтапа;
	КонецЦикла;
	
	РаскраситьТаблицу();

КонецПроцедуры // ЗаполнитьАктыНаСервере()

&НаКлиенте
Функция ОчиститьТабЧасть(ТабЧасть, ИмяТЧ)
	Если ТабЧасть.Количество() > 0 Тогда
		ТекстПредупреждения = НСтр("ru='В документе будет очищена таблица %ПредставлениеТабличнойЧасти%. Продолжить выполнение операции?'");
		ТекстПредупреждения = СтрЗаменить(ТекстПредупреждения, "%ПредставлениеТабличнойЧасти%", ИмяТЧ);
		Режим = РежимДиалогаВопрос.ДаНет;
		Ответ = Вопрос(ТекстПредупреждения, Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат Ложь;
		КонецЕсли;
		ТабЧасть.Очистить();
	КонецЕсли;	
                          
    Возврат Истина;
КонецФункции // ОчиститьТабЧасть()

&НаСервере
Функция ОтменитьПроведениеДокумента()
	
	ДокОбъект = Объект.Ссылка.ПолучитьОбъект();
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Объект.Ссылка, ДокОбъект.ДополнительныеСвойства);
	ДокОбъект.ДополнительныеСвойства.Вставить("ЭтоНовый", Ложь);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ДокОбъект);
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ДокОбъект);
    ДокОбъект.Проведен = Ложь;
	
КонецФункции 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	РаскраситьТаблицу();
КонецПроцедуры

&НаСервере
Процедура РаскраситьТаблицу()
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Красный);
	
	ЭлементУсловия = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Акты.Сумма");
	ЭлементУсловия.ПравоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Акты.Оплата");
	ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
	
	ОформляемыеПоля = ЭлементУО.Поля.Элементы.Добавить();
	ОформляемыеПоля.Поле = Новый ПолеКомпоновкиДанных("АктыНомерСтроки");
	ОформляемыеПоля = ЭлементУО.Поля.Элементы.Добавить();
	ОформляемыеПоля.Поле = Новый ПолеКомпоновкиДанных("АктыСумма");
	ОформляемыеПоля = ЭлементУО.Поля.Элементы.Добавить();
	ОформляемыеПоля.Поле = Новый ПолеКомпоновкиДанных("АктыОплата");
	ОформляемыеПоля = ЭлементУО.Поля.Элементы.Добавить();
	ОформляемыеПоля.Поле = Новый ПолеКомпоновкиДанных("АктыДатаАкта");
	ОформляемыеПоля = ЭлементУО.Поля.Элементы.Добавить();
	ОформляемыеПоля.Поле = Новый ПолеКомпоновкиДанных("АктыНомерАкта");
	ОформляемыеПоля = ЭлементУО.Поля.Элементы.Добавить();
	ОформляемыеПоля.Поле = Новый ПолеКомпоновкиДанных("АктыКорреспондент");
	ОформляемыеПоля = ЭлементУО.Поля.Элементы.Добавить();
	ОформляемыеПоля.Поле = Новый ПолеКомпоновкиДанных("АктыДоговор");
	ОформляемыеПоля = ЭлементУО.Поля.Элементы.Добавить();
	ОформляемыеПоля.Поле = Новый ПолеКомпоновкиДанных("АктыЭтапДоговора");
	ОформляемыеПоля = ЭлементУО.Поля.Элементы.Добавить();
	ОформляемыеПоля.Поле = Новый ПолеКомпоновкиДанных("АктыПодразделение");

КонецПроцедуры // РаскраситьТаблицу()

&НаКлиенте
Процедура АктыСуммаПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Акты.ТекущиеДанные;
	ТекущаяСтрока.НДС = РассчитатьНДС(ТекущаяСтрока.ЭтапДоговора, ТекущаяСтрока.Сумма);
КонецПроцедуры

// Расчет суммы НДС от всего
&НаСервереБезКонтекста
Функция РассчитатьНДС(ЭтапДоговора, Сумма)
	Ставка = ЭтапДоговора.СтавкаНДС.Ставка;
	Возврат Сумма * Ставка / (100 + Ставка);
КонецФункции // 

&НаКлиенте
Процедура АктыПриАктивизацииСтроки(Элемент)
	ПоказатьЗарплатуИсполнителейЭтапа(Элемент);
КонецПроцедуры

// <Описание процедуры>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура ПоказатьЗарплатуИсполнителейЭтапа(Элемент)
	СтруктураОтбор = Новый ФиксированнаяСтруктура("ЭтапДоговора", "@#$*");
	
	Если НЕ Элемент.ТекущиеДанные = Неопределено Тогда
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.ЭтапДоговора) Тогда
			СтруктураОтбор = Новый ФиксированнаяСтруктура("ЭтапДоговора", Элемент.ТекущиеДанные.ЭтапДоговора);
		КонецЕсли;
	КонецЕсли; 
	
	Элементы.Зарплата.ОтборСтрок = СтруктураОтбор;
КонецПроцедуры // ПоказатьИсполнителейЭтапа(Элемент)

&НаКлиенте
Процедура АктыПослеУдаления(Элемент)
    УдалитьЗарплатуЛишнихИсполнителейЭтапов();
КонецПроцедуры
 
 &НаСервере
Процедура УдалитьЗарплатуЛишнихИсполнителейЭтапов()
	
	Для й = -Объект.Зарплата.Количество() + 1 По 0 Цикл
		Отбор = Новый Структура("ЭтапДоговора", Объект.Зарплата[-й].ЭтапДоговора);
		НайденныеСтроки = Объект.Акты.НайтиСтроки(Отбор);
		Если  НайденныеСтроки.Количество() = 0 Тогда
			Объект.Зарплата.Удалить(-й);
		КонецЕсли;
    КонецЦикла;
    
КонецПроцедуры // УдалитьЛишнихИсполнителейЭтапов()

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
    ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
КонецПроцедуры

 


 