#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    Если Объект.Ссылка.Пустая() Тогда
        Объект.Ответственный = 	Пользователи.ТекущийПользователь();
    КонецЕсли; 
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьКорреспондентКредит(Команда)
    Объект.КорреспондентКре = Объект.КорреспондентДеб;
    УстановитьВидВзаимозачета();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДоговорКредит(Команда)
    Объект.КорреспондентКре = Объект.КорреспондентДеб;
    Объект.ДоговорКре = Объект.ДоговорДеб;
    УстановитьВидВзаимозачета();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОснованиеПриИзменении(Элемент)
    РеквизитыДокОснования = ОснованиеПриИзмененииНаСервере(Объект.Основание);
     
    Объект.НомерДокумента = РеквизитыДокОснования.Номер; 
    Объект.ДатаДокумента = РеквизитыДокОснования.Дата; 
КонецПроцедуры

&НаКлиенте
Процедура КорреспондентДебПриИзменении(Элемент)
    УстановитьВидВзаимозачета();
КонецПроцедуры

&НаКлиенте
Процедура КорреспондентКреПриИзменении(Элемент)
    УстановитьВидВзаимозачета();
КонецПроцедуры

&НаКлиенте
Процедура ДоговорДебПриИзменении(Элемент)
    УстановитьВидВзаимозачета();
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКреПриИзменении(Элемент)
    УстановитьВидВзаимозачета();
КонецПроцедуры

&НаСервереБезКонтекста
Функция КорреспондентДоговора(Договор)
	Возврат Договор.Корреспондент;	
КонецФункции
 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ОснованиеПриИзмененииНаСервере(Основание)
    СтруктураРеквизитов = Новый Структура("Номер, Дата");
    Если ЗначениеЗаполнено(Основание) Тогда
        СтруктураРеквизитов.Вставить("Номер", Основание.ИсходящийНомер);
        СтруктураРеквизитов.Вставить("Дата", Основание.ИсходящаяДата);
    КонецЕсли; 
    Возврат СтруктураРеквизитов;
КонецФункции

&НаСервере
Процедура УстановитьВидВзаимозачета()
    Если Объект.КорреспондентДеб <> Объект.КорреспондентКре Тогда
        Объект.ВидВзаимозачета = Перечисления.мВидыВзаимозачета.МеждуКорреспондентами;
        
    ИначеЕсли Объект.ДоговорДеб <> Объект.ДоговорКре Тогда
        Объект.ВидВзаимозачета = Перечисления.мВидыВзаимозачета.МеждуДоговорами;
        
    Иначе
        Объект.ВидВзаимозачета = Перечисления.мВидыВзаимозачета.МеждуЭтапамиДоговоров;
    КонецЕсли; 	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
    
    // Расчет и запись плановых сроков по этапам взаимозачета
    Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
        
        ВидДатыПлановыйСрок = Справочники.мВидыДатДоговоров.ПлановыйСрок;
        
        ПлановыйСрок = мРаботаСДоговорами.РассчитатьПлановыйСрокВыполненияДоговора(ТекущийОбъект.ЭтапДоговораДеб, , Ложь);
		Если ПлановыйСрок <> Неопределено Тогда
           
            НаборЗаписей = РегистрыСведений.мДатыДоговоров.СоздатьНаборЗаписей();
            
            НаборЗаписей.Отбор.Основание.Установить(ТекущийОбъект.Ссылка);
            НаборЗаписей.Отбор.ВидДатыДоговора.Установить(ВидДатыПлановыйСрок);
            НаборЗаписей.Отбор.ЭтапДоговора.Установить(ТекущийОбъект.ЭтапДоговораДеб);
            
            НоваяЗапись = НаборЗаписей.Добавить();
            НоваяЗапись.Период = ТекущаяДата();
            НоваяЗапись.ВидДатыДоговора = ВидДатыПлановыйСрок;
            НоваяЗапись.ЭтапДоговора = ТекущийОбъект.ЭтапДоговораДеб;
            НоваяЗапись.Основание = ТекущийОбъект.Ссылка;
            НоваяЗапись.Дата = ПлановыйСрок;
            НоваяЗапись.Комментарий = ТекущийОбъект.Комментарий;
            НоваяЗапись.Установил = Пользователи.ТекущийПользователь();
			
            НаборЗаписей.Записать(Истина);
        КонецЕсли; 
        
        ПлановыйСрок = мРаботаСДоговорами.РассчитатьПлановыйСрокВыполненияДоговора(ТекущийОбъект.ЭтапДоговораКре, , Ложь);
		Если ПлановыйСрок <> Неопределено Тогда
            
            НаборЗаписей = РегистрыСведений.мДатыДоговоров.СоздатьНаборЗаписей();
            
            НаборЗаписей.Отбор.Основание.Установить(ТекущийОбъект.Ссылка);
            НаборЗаписей.Отбор.ВидДатыДоговора.Установить(ВидДатыПлановыйСрок);
            НаборЗаписей.Отбор.ЭтапДоговора.Установить(ТекущийОбъект.ЭтапДоговораКре);
            
            НоваяЗапись = НаборЗаписей.Добавить();
            НоваяЗапись.Период = ТекущаяДата();
            НоваяЗапись.ВидДатыДоговора = ВидДатыПлановыйСрок;
            НоваяЗапись.ЭтапДоговора = ТекущийОбъект.ЭтапДоговораКре;
            НоваяЗапись.Основание = ТекущийОбъект.Ссылка;
            НоваяЗапись.Дата = ПлановыйСрок;
            НоваяЗапись.Комментарий = ТекущийОбъект.Комментарий;
            НоваяЗапись.Установил = Пользователи.ТекущийПользователь();
            
            НаборЗаписей.Записать(Истина);
        КонецЕсли; 
    КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ДоговорДебНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	Если ЗначениеЗаполнено(Объект.КорреспондентДеб) Тогда
		СписокНайденных = ПолучитьСписокДоговоровКорреспондента(Объект.КорреспондентДеб);
        Если СписокНайденных.Количество() = 1 Тогда
            Объект.ДоговорДеб = СписокНайденных.Получить(0).Значение; 
            
        ИначеЕсли СписокНайденных.Количество() > 1 Тогда
            
            ВыбЭлемент = СписокНайденных.ВыбратьЭлемент(,);
            Если ВыбЭлемент = Неопределено Тогда
                Возврат;
            КонецЕсли;
            
            Объект.ДоговорДеб = ВыбЭлемент.Значение;
        Иначе
            Сообщить("Договоров у "+Объект.КорреспондентДеб+" нет!");
			Объект.ДоговорДеб = Неопределено;
        КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКреНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	Если ЗначениеЗаполнено(Объект.КорреспондентКре) Тогда
		СписокНайденных = ПолучитьСписокДоговоровКорреспондента(Объект.КорреспондентКре);
        Если СписокНайденных.Количество() = 1 Тогда
            Объект.ДоговорКре = СписокНайденных.Получить(0).Значение; 
            
        ИначеЕсли СписокНайденных.Количество() > 1 Тогда
            
            ВыбЭлемент = СписокНайденных.ВыбратьЭлемент(,);
            Если ВыбЭлемент = Неопределено Тогда
                Возврат;
            КонецЕсли;
            
            Объект.ДоговорКре = ВыбЭлемент.Значение;
        Иначе
            Сообщить("Договоров у "+Объект.КорреспондентКре+" нет!");
			Объект.ДоговорКре = Неопределено;
        КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокДоговоровКорреспондента(Корреспондент)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВнутренниеДокументыКорреспонденты.Ссылка КАК Договор
		|ИЗ
		|	Справочник.ВнутренниеДокументы.Корреспонденты КАК ВнутренниеДокументыКорреспонденты
		|ГДЕ
		|	ВнутренниеДокументыКорреспонденты.Корреспондент = &Корреспондент
		|	И ВнутренниеДокументыКорреспонденты.Ссылка.ВидДокумента В ИЕРАРХИИ(&ВидДокумента)";
	
	Запрос.УстановитьПараметр("Корреспондент", Корреспондент);
	Запрос.УстановитьПараметр("ВидДокумента", Справочники.ВидыВнутреннихДокументов.ДоговораЗемлеустроительныхРабот);
	
	Результат = Запрос.Выполнить();
	
	МассивДоговоров = Результат.Выгрузить().ВыгрузитьКолонку("Договор");
	СписокДоговоров = Новый СписокЗначений;
	СписокДоговоров.ЗагрузитьЗначения(МассивДоговоров);
	Возврат СписокДоговоров;	
КонецФункции
#КонецОбласти
