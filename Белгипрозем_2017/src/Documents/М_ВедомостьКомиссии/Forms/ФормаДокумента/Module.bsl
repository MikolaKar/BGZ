&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	    // СтандартныеПодсистемы.Печать
    УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
    // Конец СтандартныеПодсистемы.Печать

    УстановитьУсловноеОформление();
КонецПроцедуры

Процедура УстановитьУсловноеОформление()

    УсловноеОформление.Элементы.Очистить();
    
    // Если Оценка выставлена - выделить зеленым
    ЭлементУО = УсловноеОформление.Элементы.Добавить();
    ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.БледноЗеленый);
    ЭлементУсловия = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.АктыПроверки.Выставлена");
    Элементусловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементУсловия.ПравоеЗначение = Истина;
    
    ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("АктыПроверкиОценкаКомиссии"); 
    
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	Если Модифицированность Тогда
		Записать();
	КонецЕсли; 
	
	ОписаниеКоманды = Команда;
	Если ТипЗнч(Команда) = Тип("КомандаФормы") Тогда
		ОписаниеКоманды = УправлениеПечатьюКлиент.ОписаниеКомандыПечати(Команда.Имя, ЭтаФорма.ИмяФормы);
	КонецЕсли;
	
	Если ОписаниеКоманды.Идентификатор = "АктПроверки" Тогда
		// подмена источника для команды
		АктПроверки = Элементы.АктыПроверки.ТекущиеДанные.АктПроверки;

		Источник = Новый Структура("Ссылка", АктПроверки); 
		
		УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Источник);
	Иначе
		УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАктыПроверки(Команда)
    Если Объект.АктыПроверки.Количество() > 0 Тогда
        Если Вопрос("Табличная часть будет очищена. Продолжать?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
            ОчиститьТабЧасть();
        Иначе
            Возврат;
        КонецЕсли; 
    КонецЕсли; 
    ЗаполнитьАктыПроверкиНаСервере();    
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАктыПроверкиНаСервере()
	
	Результат = мПроверкаДела.ПолучитьАктыПроверкиДляВедомостиКомиссии(Объект.Дата);
	
	Если Результат.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Акты проверки для ведомости не найдены!";
		//Сообщение.Поле = "";
		//Сообщение.УстановитьДанные();
		Сообщение.Сообщить(); 
        Возврат;
	КонецЕсли; 

	// копия таб части для сохранения выставленных комиссией оценок
	ТзКопия = Объект.АктыПроверки.Выгрузить();

	//ТзАктов = Результат.Скопировать();
	//
	// ТзАктов.Свернуть("АктПроверки, ВидПроверки, КоэффициентПроверки, ОценкаКомиссии, Исполнитель, Подразделение, ВидРабот, НаименованиеОбъекта, Договор, Корреспондент, ДатаАктирования");
    
    Для каждого Акт Из Результат Цикл
        
		//Отбор = Новый Структура("АктПроверки", Акт.АктПроверки); 
		//Проверяющие = Результат.НайтиСтроки(Отбор);
		//
		//НачальникОтдела = "";	ОценкаНачОтдела = 0;
		//ГлавныйСпециалист = ""; ОценкаГлавСпеца = 0;
		//НачальникОтряда = "";   ОценкаНачОтряда = 0;
		//ПроверяющийСТКК = "";   ОценкаСТКК = 0;
		//Для каждого Строка Из Проверяющие Цикл
		//    Если ПроверяющийСТКК = "" и ЗначениеЗаполнено(Строка.СотрудникСТКК) Тогда
		//        ПроверяющийСТКК = Строка.СотрудникСТКК;
		//		ОценкаСТКК = Строка.ОценкаСТКК;
		//    КонецЕсли; 
		//    Если НачальникОтдела = "" и ЗначениеЗаполнено(Строка.НачальникОтдела) Тогда
		//        НачальникОтдела = Строка.НачальникОтдела;
		//	ОценкаНачОтдела = Строка.ОценкаНачОтдела;
		//   КонецЕсли; 
		//    Если НачальникОтряда = "" и ЗначениеЗаполнено(Строка.НачальникОтряда) Тогда
		//        НачальникОтряда = Строка.НачальникОтряда;
		//	ОценкаНачОтряда = Строка.ОценкаНачОтряда;
		//   КонецЕсли; 
		//    Если ГлавныйСпециалист = "" и ЗначениеЗаполнено(Строка.ГлавныйСпециалист) Тогда
		//        ГлавныйСпециалист = Строка.ГлавныйСпециалист;
		//		ОценкаГлавСпеца = Строка.ОценкаГлавСпеца;
		//    КонецЕсли; 
		//КонецЦикла; 
		//
		//// Нач. отдела может не быть в проверяющих, а в таб части должен быть всегда
		////  получим из подразделения исполнителя
		//Если Не ЗначениеЗаполнено(НачальникОтдела) Тогда
		//    НачальникОтдела = ПолучитьНачальникаОтдела(Акт.Подразделение);    
		//КонецЕсли;
        
        СтрокаАкта = Объект.АктыПроверки.Добавить();
        ЗаполнитьЗначенияСвойств(СтрокаАкта, Акт);
		//СтрокаАкта.НачальникОтряда = НачальникОтряда;
		//СтрокаАкта.ГлавныйСпециалист = ГлавныйСпециалист;
		//СтрокаАкта.НачальникОтдела = НачальникОтдела;
		//СтрокаАкта.ПроверяющийСТКК = ПроверяющийСТКК;
		//СтрокаАкта.ОценкаНачОтряда = ОценкаНачОтряда;
		//СтрокаАкта.ОценкаГлавСпеца = ОценкаГлавСпеца;
		//СтрокаАкта.ОценкаНачОтдела = ОценкаНачОтдела;
		//СтрокаАкта.ОценкаСТКК = ОценкаСТКК;
		
		// Восстановление оценки
		Отбор = Новый Структура("АктПроверки", СтрокаАкта.АктПроверки);
		ИскСтроки = ТзКопия.НайтиСтроки(Отбор);
		
		Если ИскСтроки.Количество() > 0 Тогда
			СохраненныеОценки = "ОценкаКомиссии, ОценкаНачОтделаИтоговая, ОценкаГлавСпецаИтоговая, ОценкаНачОтрядаИтоговая, ОценкаИсполнителю, Выставлена";
			ЗаполнитьЗначенияСвойств(СтрокаАкта, ИскСтроки[0], СохраненныеОценки);
		КонецЕсли; 
    КонецЦикла; 

КонецПроцедуры 

&НаСервере
Процедура ОчиститьТабЧасть()

	Объект.АктыПроверки.Очистить();

КонецПроцедуры // ОчиститьТабЧасть()

// проверяет текущее подразделение и вышестоящее
&НаСервере
Функция ПолучитьНачальникаОтдела(Подразделение)
    НачальникОтдела = Неопределено;
    МассивПодразделение = Новый Массив;
    
    МассивПодразделение.Добавить(Подразделение);
    Если ЗначениеЗаполнено(Подразделение.Родитель) Тогда
        МассивПодразделение.Добавить(Подразделение.Родитель);
    КонецЕсли;
   
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   СведенияОПользователях.Пользователь,
        |   СведенияОПользователях.Подразделение,
        |   СведенияОПользователях.Должность.Наименование КАК ДолжностьНаименование
        |ИЗ
        |   РегистрСведений.СведенияОПользователях КАК СведенияОПользователях
        |ГДЕ
        |   СведенияОПользователях.Подразделение В(&Подразделение)";

    Запрос.УстановитьПараметр("Подразделение", МассивПодразделение);

    Результат = Запрос.Выполнить();

    ВыборкаДетальныеЗаписи = Результат.Выбрать();

    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
        Если Найти(ВыборкаДетальныеЗаписи.ДолжностьНаименование, "Начальник отдела") > 0 Тогда
            НачальникОтдела = ВыборкаДетальныеЗаписи.Пользователь;
        	Прервать;        
        КонецЕсли;    
    КонецЦикла;

    Возврат НачальникОтдела;
КонецФункции // ПолучитьНачальникаОтдела(Подразделение)

&НаКлиенте
Процедура ПечатьАктаПроверки(Команда)
    ТекДанные = Элементы.АктыПроверки.ТекущиеДанные;
    Если ТекДанные = Неопределено Тогда
        Возврат;
    КонецЕсли; 
    
    ПараметрыФормы = Новый Структура;
    ПараметрыФормы.Вставить("АктПроверки", ТекДанные.АктПроверки);
    
    ОткрытьФорму("Справочник.мАктыПроверки.Форма.ФормаДляПросмотра", ПараметрыФормы, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура АктыПроверкиОценкаКомиссииПриИзменении(Элемент)
	тд = Элементы.АктыПроверки.ТекущиеДанные;
	
	Если тд.ОценкаКомиссии = 0 Тогда
		// Сброс выставления оценки
		тд.Выставлена = Ложь;
	Иначе
		тд.Выставлена = Истина;
	КонецЕсли; 
	
	// Зам нач филиала оценка ставится, если есть оценка СТКК
	Если тд.ОценкаСТКК > 0 Тогда
		Если ГородБазы <> "Прилуки" Тогда
			тд.ОценкаЗамНачФилиалаИтоговая = тд.ОценкаКомиссии;
		КонецЕсли; 
	КонецЕсли; 
	
	// нач отдела ставится всегда оценка комиссии
	//тд.ОценкаНачОтделаИтоговая = 0;
	//Если тд.ОценкаНачОтдела > 0 Тогда
		тд.ОценкаНачОтделаИтоговая = тд.ОценкаКомиссии;
	//КонецЕсли;
	
	// зам нач отдела ставится всегда оценка комиссии
	//тд.ОценкаГлавСпецаИтоговая = 0;
	//Если тд.ОценкаГлавСпеца > 0 Тогда
		тд.ОценкаГлавСпецаИтоговая = тд.ОценкаКомиссии;
	//КонецЕсли;
	
	// нач сектора ставится меньшая из оценки комиссии и нач отдела/зам нач отдела
	//тд.ОценкаНачОтрядаИтоговая = 0;
	//Если тд.ОценкаНачОтряда > 0 Тогда
		МасОц = Новый Массив;
		МасОц.Добавить(тд.ОценкаКомиссии);
		Если тд.ОценкаЗамНачФилиала > 0 Тогда
			МасОц.Добавить(тд.ОценкаЗамНачФилиала);
		КонецЕсли; 
		Если тд.ОценкаНачОтдела > 0 Тогда
			МасОц.Добавить(тд.ОценкаНачОтдела);
		КонецЕсли; 
		Если тд.ОценкаГлавСпеца > 0 Тогда
			МасОц.Добавить(тд.ОценкаГлавСпеца);
		КонецЕсли;
		тд.ОценкаНачОтрядаИтоговая = 1;
		Для каждого Оц Из МасОц Цикл
			тд.ОценкаНачОтрядаИтоговая = Мин(тд.ОценкаНачОтрядаИтоговая, Оц);
		КонецЦикла; 
	//КонецЕсли;
	
	// исполнителю ставится наименьшая из оценки комиссии, нач отдела/зам нач отдела, нач сектора
	тд.ОценкаИсполнителю = 1;
	МасОц = Новый Массив;
	МасОц.Добавить(тд.ОценкаКомиссии);
	Если тд.ОценкаЗамНачФилиала > 0 и тд.ОценкаСТКК > 0 Тогда
		// ОценкаЗамНачФилиала учитывается, если после нее есть ОценкаСТКК 
		МасОц.Добавить(тд.ОценкаЗамНачФилиала);
	КонецЕсли; 
	Если тд.ОценкаНачОтдела > 0 Тогда
		МасОц.Добавить(тд.ОценкаНачОтдела);
	КонецЕсли; 
	Если тд.ОценкаГлавСпеца > 0 Тогда
		МасОц.Добавить(тд.ОценкаГлавСпеца);
	КонецЕсли;
	Если тд.ОценкаНачОтряда > 0 Тогда
		МасОц.Добавить(тд.ОценкаНачОтряда);
	КонецЕсли;
	Для каждого Оц Из МасОц Цикл
		тд.ОценкаИсполнителю = Мин(тд.ОценкаИсполнителю, Оц);
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура АктыПроверкиДатаАктированияПриИзменении(Элемент)
	ТекДанные = Элементы.АктыПроверки.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекДанные.ДатаАктирования) Тогда
		ТекДанные.ДляПросмотра = "1";
	Иначе
		ТекДанные.ДляПросмотра = "0";
	КонецЕсли;
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьДляОтбора();
	ГородБазы = мРазное.ПолучитьГородБазы();
	Если ГородБазы = "Прилуки" Тогда
		Элементы.ГруппаЗамНачФилиала.Видимость = Ложь;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДляОтбора()
	Для каждого Стр Из Объект.АктыПроверки Цикл
		Если ЗначениеЗаполнено(Стр.ДатаАктирования) Тогда
			Стр.ДляПросмотра = "1";
		Иначе
			Стр.ДляПросмотра = "0";
		КонецЕсли; 
	КонецЦикла; 
	Если Не ЗначениеЗаполнено(Просмотр) Тогда
		Просмотр = "Все";
	КонецЕсли; 
	УстановитьОтбор();
КонецПроцедуры
 
&НаКлиенте
Процедура УстановитьОтбор()
	Если Просмотр = "Заактировано" Тогда
		Отбор = Новый ФиксированнаяСтруктура("ДляПросмотра", "1");
		Элементы.АктыПроверки.ОтборСтрок = Отбор;
	ИначеЕсли Просмотр = "Незаактировано" Тогда
		Отбор = Новый ФиксированнаяСтруктура("ДляПросмотра", "0");
		Элементы.АктыПроверки.ОтборСтрок = Отбор;
	Иначе 
		// все
	    Элементы.АктыПроверки.ОтборСтрок = Неопределено;
	КонецЕсли; 
КонецПроцедуры
 

