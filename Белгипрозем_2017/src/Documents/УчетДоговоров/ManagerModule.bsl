// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", НачалоДня(ДокументСсылка.Дата));
	Запрос.УстановитьПараметр("ПустаяДата", '00010101000000');
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("КонДата", ДокументСсылка.Дата-1);
	Запрос.УстановитьПараметр("Договор", ДокументСсылка.Договор);
	Запрос.УстановитьПараметр("ЭтапДоговора", ДокументСсылка.ЭтапДоговора);
	Если ДокументСсылка.Сумма >= 0 Тогда
		// Это сметная стоимость
		Запрос.Текст = "ВЫБРАТЬ
		|	УчетДоговоров.Договор,
		|	УчетДоговоров.ЭтапДоговора,
		|	УчетДоговоров.СтавкаНДС,
		|	УчетДоговоров.ОсвобождениеОтНДС,
		|	УчетДоговоров.Сумма КАК Сумма,
		|	УчетДоговоров.НДС КАК НДС,
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	"""" КАК НомерДокумента
		|ИЗ
		|	Документ.УчетДоговоров КАК УчетДоговоров
		|ГДЕ
		|	УчетДоговоров.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УчетДоговоровОбороты.Договор,
		|	УчетДоговоровОбороты.ЭтапДоговора,
		|	УчетДоговоровОбороты.СтавкаНДС,
		|	УчетДоговоровОбороты.ОсвобождениеОтНДС,
		|	-УчетДоговоровОбороты.СуммаПриход,
		|	-УчетДоговоровОбороты.НДСПриход,
		|	&Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
		|	""""
		|ИЗ
		|	РегистрНакопления.УчетДоговоров.Обороты(
		|			,
		|			&КонДата,
		|			Регистратор,
		|			Договор = &Договор
		|				И ЭтапДоговора = &ЭтапДоговора) КАК УчетДоговоровОбороты
		|ГДЕ
		|	УчетДоговоровОбороты.Регистратор <> &Ссылка
		|;";
	Иначе
		// Это актирование
		Запрос.Текст = "ВЫБРАТЬ
		|	УчетДоговоров.Договор,
		|	УчетДоговоров.ЭтапДоговора,
		|	УчетДоговоров.СтавкаНДС,
		|	УчетДоговоров.ОсвобождениеОтНДС,
		|	-УчетДоговоров.Сумма КАК Сумма,
		|	-УчетДоговоров.НДС КАК НДС,
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	"""" КАК НомерДокумента
		|ИЗ
		|	Документ.УчетДоговоров КАК УчетДоговоров
		|ГДЕ
		|	УчетДоговоров.Ссылка = &Ссылка
		|;";
	
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА мЭтапыДоговоровНоменклатура.Ссылка.ДатаПоследнейЗаписи = &ПустаяДата
	|			ТОГДА &Период
	|		ИНАЧЕ мЭтапыДоговоровНоменклатура.Ссылка.ДатаПоследнейЗаписи
	|	КОНЕЦ КАК Период,
	|	мЭтапыДоговоровНоменклатура.Ссылка КАК ЭтапДоговора,
	|	мЭтапыДоговоровНоменклатура.НоменклатураПроизводства,
	|	мЭтапыДоговоровНоменклатура.Калькуляция,
	|	мЭтапыДоговоровНоменклатура.Количество,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения
	|ИЗ
	|	Справочник.мЭтапыДоговоров.Номенклатура КАК мЭтапыДоговоровНоменклатура
	|ГДЕ
	|	мЭтапыДоговоровНоменклатура.Ссылка = &ЭтапДоговора";
	
	
	РезультатЗапроса   = Запрос.ВыполнитьПакет();
	Результат          = РезультатЗапроса[0].Выгрузить();
	ТаблицаНоменклатураПроизводства = РезультатЗапроса[1].Выгрузить();
	Результат.Свернуть("ВидДвижения, Договор, ЭтапДоговора, СтавкаНДС, ОсвобождениеОтНДС, Период, НомерДокумента", "Сумма, НДС");
	
	// Получим резервы по этапу для их коррекции (сторнирования)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетПроизводствоОстатки.НоменклатураПроизводства,
		|	УчетПроизводствоОстатки.Калькуляция,
		|	УчетПроизводствоОстатки.ЭтапДоговора,
		|	ВЫБОР
		|		КОГДА УчетПроизводствоОстатки.ЭтапДоговора.ДатаПоследнейЗаписи = &ПустаяДата
		|			ТОГДА &Период
		|		ИНАЧЕ УчетПроизводствоОстатки.ЭтапДоговора.ДатаПоследнейЗаписи
		|	КОНЕЦ КАК Период,
		|	-УчетПроизводствоОстатки.КоличествоОстаток КАК Количество,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения
		|ИЗ
		|	РегистрНакопления.УчетПроизводство.Остатки(&Период, ЭтапДоговора = &ЭтапДоговора) КАК УчетПроизводствоОстатки";
	
	Запрос.УстановитьПараметр("Период", НачалоДня(ДокументСсылка.Дата));
	Запрос.УстановитьПараметр("ЭтапДоговора", ДокументСсылка.ЭтапДоговора);
	Запрос.УстановитьПараметр("ПустаяДата", '00010101000000');
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Стр = ТаблицаНоменклатураПроизводства.Добавить();
		ЗаполнитьЗначенияСвойств(Стр, Выборка)
	КонецЦикла;
	
	ТаблицаНоменклатураПроизводства.Свернуть("ВидДвижения, ЭтапДоговора, НоменклатураПроизводства, Калькуляция, Период", "Количество");
	
	// удалим строки с количество=0
	й = ТаблицаНоменклатураПроизводства.Количество()-1;
	Пока й >= 0 Цикл
		Если ТаблицаНоменклатураПроизводства[й].Количество = 0 Тогда
			ТаблицаНоменклатураПроизводства.Удалить(й);
		КонецЕсли; 
		й = й-1;
	КонецЦикла; 
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаУчетДоговоров", Результат);
	ТаблицыДляДвижений.Вставить("ТаблицаНоменклатураПроизводства", ТаблицаНоменклатураПроизводства);
		
КонецПроцедуры // ИнициализироватьДанныеДокумента()

// Поиск документов УчетДоговора по ЭтапуДоговора
Функция ПолучитьДокументыУчетДоговоровПоЭтапуДоговора(ЭтапДоговораСсылка, Смета = "") Экспорт
    МассивДокументов = Новый Массив;
    
	ИскомыйДокумент = Документы.УчетДоговоров.ПустаяСсылка();
    
    Если Не ЗначениеЗаполнено(ЭтапДоговораСсылка) Тогда
        Возврат МассивДокументов;
	КонецЕсли;
              
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетДоговоров.Ссылка
	|ИЗ
	|	Документ.УчетДоговоров КАК УчетДоговоров
	|ГДЕ
	|	УчетДоговоров.ЭтапДоговора = &ЭтапДоговора";
	
	Если ЗначениеЗаполнено(Смета) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И УчетДоговоров.Смета = &Смета";
		
		Запрос.УстановитьПараметр("Смета", Смета);
	КонецЕсли; 
	
	Запрос.Текст = Запрос.Текст + "	
	|
	|УПОРЯДОЧИТЬ ПО
	|	УчетДоговоров.Дата УБЫВ";
	
	Запрос.УстановитьПараметр("ЭтапДоговора", ЭтапДоговораСсылка);
	
	Результат = Запрос.Выполнить().Выгрузить();
    
    МассивДокументов = Результат.ВыгрузитьКолонку("Ссылка");
	
	Возврат МассивДокументов;

КонецФункции

// Поиск документов УчетДоговора по Договору
// Возвращает ТаблицуЗначений
Функция ПолучитьДокументыУчетДоговоров(ДоговорСсылка) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетДоговоров.Ссылка
	|ИЗ
	|	Документ.УчетДоговоров КАК УчетДоговоров
	|ГДЕ
	|	УчетДоговоров.Договор = &Договор";
	
	Запрос.УстановитьПараметр("Договор", ДоговорСсылка);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;

КонецФункции

// Возвращает Учет договоров с датой равной ДатаПоследнейЗаписи из этапа
Функция ПолучитьТекущийУчетДоговоров(ЭтапСсылка) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетДоговоров.Ссылка
		|ИЗ
		|	Документ.УчетДоговоров КАК УчетДоговоров
		|ГДЕ
		|	УчетДоговоров.Дата Между &Дата1 и &Дата2
		|	И УчетДоговоров.ЭтапДоговора = &ЭтапДоговора
		|	И УчетДоговоров.Проведен";
	
	Запрос.УстановитьПараметр("Дата1", НачалоДня(ЭтапСсылка.ДатаПоследнейЗаписи));
	Запрос.УстановитьПараметр("Дата2", КонецДня(ЭтапСсылка.ДатаПоследнейЗаписи));
	Запрос.УстановитьПараметр("ЭтапДоговора", ЭтапСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Ссылка;
	КонецЦикла;
	
	Возврат Неопределено;
КонецФункции // ПолучитьТекущийУчетДоговоров(ЭтапСсылка)
