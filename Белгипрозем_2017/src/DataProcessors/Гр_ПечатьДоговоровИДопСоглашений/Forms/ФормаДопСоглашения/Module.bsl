
&НаКлиенте
Перем Док;

&НаКлиенте
Перем WordApp;

&НаКлиенте
Перем Селекция, НачалоЗакладки;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Договор = Неопределено;
	Если Параметры.Свойство("Договор") Тогда
		Договор = Параметры.Договор;
	КонецЕсли; 
	
	СКопейками = Ложь;
	
	ОбновитьНастройкиНаСервере();
	ЗаполнитьСписокНастроекПечати();
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	// Вставить содержимое обработчика.
	ИмяПроцедуры = ПолучитьНазваниеПроцедуры(НастройкаПечати);
	Если ИмяПроцедуры = "Печать физ. лица доп. соглашения на оконч. срок" Тогда	
		ГродноДопСоглашениеФЛОкончСрок();
		
	ИначеЕсли ИмяПроцедуры = "Печать физ. лица доп. соглашения на срок" Тогда	
		ГродноДопСоглашениеФЛСрок();
		
	ИначеЕсли ИмяПроцедуры = "Печать физ. лица доп. соглашения на стоимость" Тогда	
		ГродноДопСоглашениеФЛСтоимость();
		
	ИначеЕсли ИмяПроцедуры = "Печать физ. лица доп. соглашения на расторжение" Тогда	
		ГродноДопСоглашениеФЛРасторжение();	
		
	ИначеЕсли ИмяПроцедуры = "Печать юр. лица доп. соглашения на расторжение по заявлению" Тогда	
		ГродноДопСоглЮЛРасторжениеЗаявление();	
		
	ИначеЕсли ИмяПроцедуры = "Печать юр. лица доп. соглашения по факту+оконч.срок" Тогда	
		ГродноДопСоглЮЛПоФактуОкончСрок();	
		
	ИначеЕсли ИмяПроцедуры = "Печать юр. лица доп. соглашения на стоимость-этап" Тогда	
		ГродноДопСоглЮЛСтоимостьМЭтап();	
		
	ИначеЕсли ИмяПроцедуры = "Печать юр. лица доп. соглашения на стоимость+этап" Тогда	
		ГродноДопСоглЮЛСтоимостьПЭтап();	
		
	ИначеЕсли ИмяПроцедуры = "Печать юр. лица доп. соглашения открыт.дата" Тогда	
		ГродноДопСоглашениеЮЛОткрытаяДата();	
		
	ИначеЕсли ИмяПроцедуры = "Печать юр. лица доп. соглашения на оконч.срок" Тогда	
		ГродноДопСоглашениеЮЛОкончСрок();
		
	ИначеЕсли ИмяПроцедуры = "Печать юр. лица доп. соглашения на расторжение" Тогда	
		ГродноДопСоглЮЛРасторжение()
		
	Иначе
		Сообщить("Не реализована процедура печати для " + НастройкаПечати);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция Объект()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции

#Область УправлениеДиалогом
&НаКлиенте
Процедура ДоговорПриИзменении(Элемент)
	// При изменении договора по его виду документа 
	//  отбираются настройки для печати
	//  После выбора настройки - шаблон уже известен
	
	ЗаполнитьСписокНастроекПечати();
	ЗаполнитьНастройку();
	СформироватьИмяФайла();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокНастроекПечати()
	СписокНастроекПечати.Очистить();
	Если ЗначениеЗаполнено(Договор) Тогда
		Отбор = Новый Структура("ВидДокумента, ВидПечатногоДокумента", Договор.ВидДокумента, Перечисления.ВидПечатногоДокумента.ДопСоглашение);
		ИскСтроки = НастройкиПечати.НайтиСтроки(Отбор);
		
		Для каждого Настройка Из ИскСтроки Цикл 
			СписокНастроекПечати.Добавить(Настройка.Настройка, Настройка.НаименованиеНастройки); 
		КонецЦикла; 
	КонецЕсли; 
	НомерДоговора = Договор.РегистрационныйНомер;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНастройку()
	//НастройкаПечати = "";
	Если СписокНастроекПечати.Количество()>0 Тогда
		НастройкаПечати = СписокНастроекПечати[0].Значение;	
		ШаблонДоговора = ПолучитьФайлШаблона(НастройкаПечати);
	КонецЕсли; 
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьФайлШаблона(НастройкаПечати) 
	Возврат НастройкаПечати.ФайлШаблона;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьНазваниеПроцедуры(НастройкаПечати) 
	Возврат НастройкаПечати.НазваниеПроцедуры;
КонецФункции

&НаКлиенте
Процедура НастройкаПечатиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СписокНастроекПечати;
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПечатиПриИзменении(Элемент)
	ШаблонДоговора = ПолучитьФайлШаблона(НастройкаПечати);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьНастройку(); 
	Элементы.ИмяФайла.ТолькоПросмотр = Не СоздатьДокумент;
	СформироватьИмяФайла();
КонецПроцедуры
	
&НаСервере
Процедура ОбновитьНастройкиНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	мНастройкиПечатиДоговоров.НазваниеПроцедуры,
		|	мНастройкиПечатиДоговоров.ВидДокумента,
		|	мНастройкиПечатиДоговоров.ФайлШаблона,
		|	мНастройкиПечатиДоговоров.Наименование КАК НаименованиеНастройки,
		|	мНастройкиПечатиДоговоров.Ссылка КАК Настройка,
		|	мНастройкиПечатиДоговоров.ВидПечатногоДокумента
		|ИЗ
		|	Справочник.мНастройкиПечатиДоговоров КАК мНастройкиПечатиДоговоров
		|ГДЕ
		|	НЕ мНастройкиПечатиДоговоров.ПометкаУдаления";
	
	Результат = Запрос.Выполнить().Выгрузить();
	ЗначениеВРеквизитФормы(Результат, "НастройкиПечати");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНастройки(Команда)
	ОбновитьНастройкиНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПутьКШаблону(ШаблонДоговора) 
	Возврат ШаблонДоговора.ТекущаяВерсияТом.ПолныйПутьWindows + ШаблонДоговора.ТекущаяВерсияПутьКФайлу;
КонецФункции

&НаКлиенте
Процедура СоздатьДокументПриИзменении(Элемент)
	Элементы.ИмяФайла.ТолькоПросмотр = Не СоздатьДокумент;
КонецПроцедуры

#КонецОбласти

#Область ОбщиеПроцедурыПечати

&НаКлиенте
Процедура ИнициализироватьДокументWord() 
	ВременныйПуть = КаталогВременныхФайлов();
	//ПутьКФайлуНаДиске = ВременныйПуть + "Договор "+ИмяФайла+".docx";
	ПутьКФайлуНаДиске = ВременныйПуть + ИмяФайла;
	ПутьКШаблону = ПолучитьПутьКШаблону(ШаблонДоговора); 
	
	ФайлШаблона = Новый ДвоичныеДанные(ПутьКШаблону);
	ФайлШаблона.Записать(ПутьКФайлуНаДиске);
	
	WordApp = Новый COMОбъект("Word.Application");
	Док = WordApp.Documents.ADD(ПутьКФайлуНаДиске);
	
	Селекция = WordApp.Selection;
	
	Док.Content.Find.ClearFormatting();
	Док.Content.Find.Replacement.ClearFormatting();
КонецПроцедуры 

&НаКлиенте
Функция СформироватьИмяФайла() 
	ИмяФайла = СтрЗаменить(НомерДоговора, "/", "-");
	ИмяФайла = СтрЗаменить(ИмяФайла, "\", "-");
	ИмяФайла = "Доп.Соглашение "+СокрЛП(ИмяФайла)+".docx";
КонецФункции 

&НаКлиенте
Процедура ВывестиПодписи(Док, СтруктураНашихРеквизитов, Подписи) 
	Для каждого Реквизит Из СтруктураНашихРеквизитов Цикл
		Заменить(Док, Реквизит.Ключ, Реквизит.Значение);  
	КонецЦикла;
	
	//Заменить(Док, "%Заказчик%", ДанныеКорр.ПолноеНаименование);  
	Заменить(Док, "%Адрес%", Заказчики[0].Адрес); 
	РасчетныйСчет = Заказчики[0].НомерСчета + " " + Заказчики[0].Банк + ", "+Заказчики[0].БанкАдрес + ", МФО "+Заказчики[0].КодБанка;
	Заменить(Док, "%РасчетныйСчет%", РасчетныйСчет);  
	Заменить(Док, "%УНП%", Заказчики[0].УНП);  
	Заменить(Док, "%ОКПО%", Заказчики[0].ОКПО);  
	Заменить(Док, "%Телефон%", Заказчики[0].Телефон);  
	
	Заменить(Док, "%ПодписалДолжность", Подписи.ПодписалДолжность);  
	Заменить(Док, "%ПодписалКратко", Подписи.ПодписалКратко);  
	Заменить(Док, "ДолжностьКорр", Заказчики[0].ДолжностьКорр);
	КорреспондентКратко = ФамилияИнициалыФизЛица(Заказчики[0].КорреспондентКратко);
	Заменить(Док, "КорреспондентКратко", КорреспондентКратко);  
	
	Заменить(Док, "ОтделИсполнителя", ОтделИсполнителя);  
	Заменить(Док, "Исполнитель", НачИсполнителя);  
	Заменить(Док, "ТелефонИсполнителя", ТелефонИсполнителя);  

КонецПроцедуры 

&НаКлиенте
Процедура ВывестиДокумент() 
	WordApp.Visible = Ложь; 
	
	Док.SaveAs(ПутьКФайлуНаДиске);//(ПутьКФайлуНаДиске)                        
	Док.Saved = Истина;
	Док.Close(); 
	
	Док = РаботаСФайламиКлиент.СоздатьДокументНаОсновеФайла(ПутьКФайлуНаДиске, Договор, ЭтаФорма, Истина, , , , ,);
	//ЗапуститьПриложение(ПутьКФайлуНаДиске,, , );	
	РаботаСФайламиКлиент.РедактироватьСОповещением(,Док,ЭтаФорма.УникальныйИдентификатор);
	//WordApp.Quit();	
	//WordApp = Неопределено;
	
	//УдалитьФайлы(ПутьКФайлуНаДиске);	
	Закрыть();
КонецПроцедуры 

&НаКлиенте
Функция ДобавитьТочку(ТекстВывода)
	Если Не ЗначениеЗаполнено(ТекстВывода) Тогда
		Возврат "";	
	ИначеЕсли Прав(СокрЛП(ТекстВывода), 1) = "." Тогда
		// Точка уже есть
		Возврат ТекстВывода;
	Иначе
		Возврат ТекстВывода + ".";	
	КонецЕсли; 
КонецФункции

&НаКлиенте
Процедура УдалитьЗакладку(ИмяЗакладки) 
	НачалоЗакладки = Док.Bookmarks(ИмяЗакладки).Start;
	КонецЗакладки = Док.Bookmarks(ИмяЗакладки).End;
	Селекция.Start = НачалоЗакладки;
	Селекция.End = КонецЗакладки;
	Селекция.Cut();   
КонецПроцедуры 

#КонецОбласти 

&НаСервере
Процедура ПолучитьОбщиеДанныеДоговора()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭтапыДоговоров.Ссылка КАК ЭтапДоговора,
		|	ЭтапыДоговоров.НомерЭтапа,
		|	ЭтапыДоговоров.Стоимость,
		|	ЭтапыДоговоров.ВидРабот,
		|	ЭтапыДоговоров.ВидРабот.СрокОплаты КАК ПредУсловие,
		|	ЭтапыДоговоров.ВидРабот.РезультатРаботы КАК РезультатРаботы,
		|	ЭтапыДоговоров.ВидРабот.ПолноеНаименование КАК НаименованиеРаботы,
		|	ВЫРАЗИТЬ(ЭтапыДоговоров.ОбъектРабот.ПолноеНаименование КАК СТРОКА(1000)) КАК ОбъектРабот,
		|	ВЫБОР
		|		КОГДА ЭтапыДоговоров.Подразделение.Родитель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			ТОГДА ЭтапыДоговоров.Подразделение
		|		ИНАЧЕ ЭтапыДоговоров.Подразделение.Родитель
		|	КОНЕЦ КАК ОтделИсполнителя,
		|	ВЫБОР
		|		КОГДА ЭтапыДоговоров.Подразделение.Родитель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			ТОГДА ЭтапыДоговоров.Подразделение.Руководитель
		|		ИНАЧЕ ЭтапыДоговоров.Подразделение.Родитель.Руководитель
		|	КОНЕЦ КАК НачИсполнителя,
		|	ВЫБОР
		|		КОГДА ЭтапыДоговоров.СтавкаНДС.НеОблагается
		|			ТОГДА ""Без НДС""
		|		ИНАЧЕ ЭтапыДоговоров.СтавкаНДС.Ставка
		|	КОНЕЦ КАК СтавкаНДС,
		|	ЭтапыДоговоров.ОсвобождениеОтНДС,
		|	ЭтапыДоговоров.ОсвобождениеОтНДС.ДляПечати КАК ОсвобождениеОтНДСДляПечати,
		|	ЭтапыДоговоров.Цена,
		|	ЭтапыДоговоров.СуммаНДС,
		|	ЭтапыДоговоров.СтоимостьСНДС,
		|	ЭтапыДоговоров.КоличествоУчастков,
		|	ЭтапыДоговоров.Месторасположение,
		|	ЭтапыДоговоров.КакДоговорЮрЛица,
		|	ЕСТЬNULL(УчетДоговоровОбороты.СуммаРасход, 0) КАК Заактировано,
		|	ЭтапыДоговоров.ИсточникФинансирования.Наименование КАК ИсточникФинанс,
		|	мУсловияДоговоровСрезПоследних.ПроцентПредоплаты
		|ИЗ
		|	Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.УчетДоговоров.Обороты(&НачПер, &КонПер, День, ЭтапДоговора.Владелец = &Договор) КАК УчетДоговоровОбороты
		|		ПО ЭтапыДоговоров.Ссылка = УчетДоговоровОбороты.ЭтапДоговора
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.мУсловияДоговоров.СрезПоследних(
		|				,
		|				Договор = &Договор
		|					И ЭтапДоговора.Владелец = &Договор) КАК мУсловияДоговоровСрезПоследних
		|		ПО (мУсловияДоговоровСрезПоследних.ЭтапДоговора = ЭтапыДоговоров.Ссылка)
		|ГДЕ
		|	ЭтапыДоговоров.Владелец = &Договор
		|	И НЕ ЭтапыДоговоров.ПометкаУдаления
		|	И ЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВнутренниеДокументы.ДатаРегистрации КАК ДатаРегистрации,
		|	ВнутренниеДокументы.РегистрационныйНомер КАК РегистрационныйНомер,
		|	ВнутренниеДокументы.Утвердил,
		|	ВнутренниеДокументы.Валюта,
		|	ВнутренниеДокументы.Ссылка КАК Договор
		|ИЗ
		|	Справочник.ВнутренниеДокументы КАК ВнутренниеДокументы
		|ГДЕ
		|	ВнутренниеДокументы.Ссылка = &Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВнутренниеДокументыКорреспонденты.Корреспондент,
		|	ВнутренниеДокументыКорреспонденты.Корреспондент.ФизЛицо КАК ФизЛицо,
		|	ВнутренниеДокументыКорреспонденты.ПодписалОтКорреспондента,
		|	ВнутренниеДокументыКорреспонденты.КонтактноеЛицо,
		|	ВнутренниеДокументыКорреспонденты.Корреспондент.Наименование,
		|	ВнутренниеДокументыКорреспонденты.Корреспондент.ПолноеНаименование,
		|	ВнутренниеДокументыКорреспонденты.Корреспондент.ИНН,
		|	ВнутренниеДокументыКорреспонденты.Корреспондент.КодПоОКПО,
		|	ВнутренниеДокументыКорреспонденты.Корреспондент.ОсновнойБанковскийСчет.НомерСчета,
		|	ВнутренниеДокументыКорреспонденты.Корреспондент.ОсновнойБанковскийСчет.Банк.Код,
		|	ВнутренниеДокументыКорреспонденты.Корреспондент.ОсновнойБанковскийСчет.Банк.Наименование,
		|	ВнутренниеДокументыКорреспонденты.Корреспондент.ОсновнойБанковскийСчет.Банк.Адрес,
		|	ВнутренниеДокументыКорреспонденты.ПодписалОтКорреспондента КАК ПодписалОтКорреспондента,
		|	ВнутренниеДокументыКорреспонденты.ПодписалОтКорреспондента.Должность
		|ПОМЕСТИТЬ Заказчики
		|ИЗ
		|	Справочник.ВнутренниеДокументы.Корреспонденты КАК ВнутренниеДокументыКорреспонденты
		|ГДЕ
		|	ВнутренниеДокументыКорреспонденты.Ссылка = &Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорреспондентыКонтактнаяИнформация.Представление КАК Адрес,
		|	КорреспондентыКонтактнаяИнформация.Ссылка КАК Корреспондент
		|ПОМЕСТИТЬ тАдрес
		|ИЗ
		|	Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
		|ГДЕ
		|	КорреспондентыКонтактнаяИнформация.Ссылка В
		|			(ВЫБРАТЬ
		|				Заказчики.Корреспондент
		|			ИЗ
		|				Заказчики КАК Заказчики)
		|	И КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮридическийАдресКорреспондента)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорреспондентыКонтактнаяИнформация.Представление КАК Телефон,
		|	КорреспондентыКонтактнаяИнформация.Ссылка КАК Корреспондент
		|ПОМЕСТИТЬ тТелефон
		|ИЗ
		|	Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
		|ГДЕ
		|	КорреспондентыКонтактнаяИнформация.Ссылка В
		|			(ВЫБРАТЬ
		|				Заказчики.Корреспондент
		|			ИЗ
		|				Заказчики КАК Заказчики)
		|	И КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКорреспондента)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(тАдрес.Адрес, ""__________________"") КАК Адрес,
		|	ЕСТЬNULL(тТелефон.Телефон, ""__________________"") КАК Телефон,
		|	Заказчики.Корреспондент,
		|	Заказчики.КорреспондентНаименование КАК Наименование,
		|	Заказчики.КорреспондентПолноеНаименование КАК ПолноеНаименование,
		|	Заказчики.КорреспондентИНН КАК УНП,
		|	Заказчики.КорреспондентКодПоОКПО КАК ОКПО,
		|	Заказчики.КорреспондентОсновнойБанковскийСчетНомерСчета КАК НомерСчета,
		|	Заказчики.КорреспондентОсновнойБанковскийСчетБанкКод КАК КодБанка,
		|	Заказчики.КорреспондентОсновнойБанковскийСчетБанкНаименование КАК Банк,
		|	Заказчики.КорреспондентОсновнойБанковскийСчетБанкАдрес КАК БанкАдрес,
		|	Заказчики.ПодписалОтКорреспондента КАК ПодписалОтКорреспондента,
		|	Заказчики.ПодписалОтКорреспондента.Наименование КАК КорреспондентКратко,
		|	Заказчики.ПодписалОтКорреспондентаДолжность КАК ДолжностьКорр
		|ИЗ
		|	Заказчики КАК Заказчики
		|		ЛЕВОЕ СОЕДИНЕНИЕ тАдрес КАК тАдрес
		|		ПО Заказчики.Корреспондент = тАдрес.Корреспондент
		|		ЛЕВОЕ СОЕДИНЕНИЕ тТелефон КАК тТелефон
		|		ПО Заказчики.Корреспондент = тТелефон.Корреспондент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Заказчики.Корреспондент КАК Корреспондент,
		|	Заказчики.ФизЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ФизЛица
		|ИЗ
		|	Заказчики КАК Заказчики
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорреспондентыКонтактнаяИнформация.Представление КАК ДомашнийАдрес,
		|	КорреспондентыКонтактнаяИнформация.Ссылка КАК Корреспондент
		|ПОМЕСТИТЬ ДомашниеАдреса
		|ИЗ
		|	Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
		|ГДЕ
		|	КорреспондентыКонтактнаяИнформация.Ссылка В
		|			(ВЫБРАТЬ
		|				Заказчики.Корреспондент
		|			ИЗ
		|				Заказчики КАК Заказчики)
		|	И КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ДомашнийАдресФизическогоЛица)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорреспондентыКонтактнаяИнформация.Представление КАК ДомашнийТелефон,
		|	КорреспондентыКонтактнаяИнформация.Ссылка КАК Корреспондент
		|ПОМЕСТИТЬ ДомашниеТелефоны
		|ИЗ
		|	Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
		|ГДЕ
		|	КорреспондентыКонтактнаяИнформация.Ссылка В
		|			(ВЫБРАТЬ
		|				Заказчики.Корреспондент
		|			ИЗ
		|				Заказчики КАК Заказчики)
		|	И КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ДомашнийТелефонФизическогоЛица)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорреспондентыКонтактнаяИнформация.Представление КАК ПочтовыйАдрес,
		|	КорреспондентыКонтактнаяИнформация.Ссылка КАК Корреспондент
		|ПОМЕСТИТЬ ПочтовыеАдреса
		|ИЗ
		|	Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
		|ГДЕ
		|	КорреспондентыКонтактнаяИнформация.Ссылка В
		|			(ВЫБРАТЬ
		|				Заказчики.Корреспондент
		|			ИЗ
		|				Заказчики КАК Заказчики)
		|	И КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ПочтовыйАдресФизическогоЛица)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорреспондентыКонтактнаяИнформация.Представление КАК МобильныйТелефон,
		|	КорреспондентыКонтактнаяИнформация.Ссылка КАК Корреспондент
		|ПОМЕСТИТЬ МобильныеТелефоны
		|ИЗ
		|	Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
		|ГДЕ
		|	КорреспондентыКонтактнаяИнформация.Ссылка В
		|			(ВЫБРАТЬ
		|				Заказчики.Корреспондент
		|			ИЗ
		|				Заказчики КАК Заказчики)
		|	И КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.МобильныйТелефонФизическогоЛица)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокументыФизическихЛицСрезПоследних.Физлицо,
		|	МАКСИМУМ(ДокументыФизическихЛицСрезПоследних.Период) КАК Период
		|ПОМЕСТИТЬ ДокументыСрез
		|ИЗ
		|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(
		|			,
		|			ЯвляетсяДокументомУдостоверяющимЛичность
		|				И Физлицо В
		|					(ВЫБРАТЬ
		|						ФизЛица.ФизЛицо
		|					ИЗ
		|						ФизЛица КАК ФизЛица)) КАК ДокументыФизическихЛицСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокументыФизическихЛицСрезПоследних.Физлицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокументыФизическихЛицСрезПоследних.Серия,
		|	ДокументыФизическихЛицСрезПоследних.Номер,
		|	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи,
		|	ДокументыФизическихЛицСрезПоследних.СрокДействия,
		|	ДокументыФизическихЛицСрезПоследних.КемВыдан,
		|	ДокументыФизическихЛицСрезПоследних.Физлицо
		|ПОМЕСТИТЬ ДанныеПаспорта
		|ИЗ
		|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(
		|			,
		|			ЯвляетсяДокументомУдостоверяющимЛичность
		|				И Физлицо В
		|					(ВЫБРАТЬ
		|						ФизЛица.ФизЛицо
		|					ИЗ
		|						ФизЛица КАК ФизЛица)) КАК ДокументыФизическихЛицСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыСрез КАК ДокументыСрез
		|		ПО ДокументыФизическихЛицСрезПоследних.Период = ДокументыСрез.Период
		|			И ДокументыФизическихЛицСрезПоследних.Физлицо = ДокументыСрез.Физлицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДокументыСрез
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ДомашниеАдреса.ДомашнийАдрес, """") КАК Адрес,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДомашниеТелефоны.ДомашнийТелефон, """") <> """"
		|			ТОГДА ЕСТЬNULL(ДомашниеТелефоны.ДомашнийТелефон, """")
		|		ИНАЧЕ ЕСТЬNULL(МобильныеТелефоны.МобильныйТелефон, """")
		|	КОНЕЦ КАК Телефон,
		|	ЕСТЬNULL(ПочтовыеАдреса.ПочтовыйАдрес, """") КАК ПочтовыйАдрес,
		|	ЕСТЬNULL(ДанныеПаспорта.Серия, """") КАК СерияПаспорта,
		|	ЕСТЬNULL(ДанныеПаспорта.Номер, """") КАК НомерПаспорта,
		|	ЕСТЬNULL(ДанныеПаспорта.ДатаВыдачи, """") КАК ДатаВыдачи,
		|	ЕСТЬNULL(ДанныеПаспорта.КемВыдан, """") КАК КемВыдан,
		|	ЕСТЬNULL(ДанныеПаспорта.СрокДействия, """") КАК СрокДействия,
		|	ФизЛица.Корреспондент.ПолноеНаименование КАК ПолноеНаименование,
		|	ФизЛица.Корреспондент,
		|	ФизЛица.ФизЛицо
		|ИЗ
		|	ФизЛица КАК ФизЛица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДомашниеАдреса КАК ДомашниеАдреса
		|		ПО ФизЛица.Корреспондент = ДомашниеАдреса.Корреспондент
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДомашниеТелефоны КАК ДомашниеТелефоны
		|		ПО ФизЛица.Корреспондент = ДомашниеТелефоны.Корреспондент
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПочтовыеАдреса КАК ПочтовыеАдреса
		|		ПО ФизЛица.Корреспондент = ПочтовыеАдреса.ПочтовыйАдрес
		|		ЛЕВОЕ СОЕДИНЕНИЕ МобильныеТелефоны КАК МобильныеТелефоны
		|		ПО ФизЛица.Корреспондент = МобильныеТелефоны.Корреспондент
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПаспорта КАК ДанныеПаспорта
		|		ПО ФизЛица.ФизЛицо = ДанныеПаспорта.Физлицо";

	Запрос.УстановитьПараметр("Договор", Договор);
 	Запрос.УстановитьПараметр("НачПер", Договор.ДатаРегистрации);
	Запрос.УстановитьПараметр("КонПер", ТекущаяДата());

	Результат = Запрос.ВыполнитьПакет();

	// Этапы
	Выборка = Результат[0].Выбрать();
	
	НачИсполнителя = "";
	ТелефонИсполнителя = "";
	ОтделИсполнителя = "";
	
	ЭтапыДоговора.Очистить();
	Пока Выборка.Следующий() Цикл
		Этап = ЭтапыДоговора.Добавить();
		ЗаполнитьЗначенияСвойств(Этап, Выборка);
		Если Выборка.КоличествоУчастков = 0 Тогда
		    Этап.КоличествоУчастков = 1;
		КонецЕсли; 
		Если Выборка.Заактировано > 0 Тогда
			Этап.Пометка = Ложь;
		Иначе
			Этап.Пометка = Истина; 
		КонецЕсли; 
		Если ЗначениеЗаполнено(Выборка.ИсточникФинанс) Тогда
			ИсточникФинанс = Выборка.ИсточникФинанс;
		КонецЕсли; 
		
		Если Не ЗначениеЗаполнено(НачИсполнителя) Тогда
			Если ЗначениеЗаполнено(Выборка.НачИсполнителя) Тогда
				НачИсполнителя = Выборка.НачИсполнителя;
				ТелефонИсполнителя = УправлениеКонтактнойИнформацией.ПолучитьКонтактнуюИнформацияОбъекта(Выборка.НачИсполнителя, Справочники.ВидыКонтактнойИнформации.ТелефонПользователя)
			КонецЕсли; 
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ОтделИсполнителя) Тогда
			Если ЗначениеЗаполнено(Выборка.ОтделИсполнителя) Тогда
				ОтделИсполнителя = Выборка.ОтделИсполнителя;
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
	
	// Договор
	ДанныеДоговора = Результат[1].Выгрузить();
	НомерДоговора = ДанныеДоговора[0].РегистрационныйНомер;
	ДатаДоговора = ДанныеДоговора[0].ДатаРегистрации;
	Подписал = ДанныеДоговора[0].Утвердил;
	Если ЗначениеЗаполнено(ДанныеДоговора[0].Валюта) Тогда
		ВалютаДоговора = ДанныеДоговора[0].Валюта; 
	Иначе	
		ВалютаДоговора = Константы.ОсновнаяВалюта.Получить(); 
	КонецЕсли; 
	
	// Заказчики
	ЮрЛица = Результат[5].Выгрузить();
	ФизЛица = Результат[14].Выгрузить();
	ЭтоФизЛица = ЮрЛица[0].Корреспондент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо;	
	
	Заказчики.Очистить();
	
	Если ЭтоФизЛица Тогда
		ТзЗаказчики = ФизЛица;
	Иначе
		ТзЗаказчики = ЮрЛица;
	КонецЕсли; 
	
	Для каждого СтрокаТз Из ТзЗаказчики Цикл
		Заказчик = Заказчики.Добавить();
		ЗаполнитьЗначенияСвойств(Заказчик, СтрокаТз);
	КонецЦикла; 
	
КонецПроцедуры // ПолучитьОбщиеДанныеДоговора()

&НаСервере
Функция ПолучитьМакетДоговора()
	//ИмяМакета = ШаблоныДоговоров.НайтиПоЗначению(СписокПроцедур);
	//Если ИмяМакета = Неопределено Тогда
	//	Сообщить("Не найден макет для " + СписокПроцедур); 
	//	Возврат "";
	//КонецЕсли; 
	//
	//Макет = Объект().ПолучитьМакет(ИмяМакета.Представление);
	//Возврат Макет;
КонецФункции // ПолучитьМакетДоговора()

&НаСервереБезКонтекста
Функция ПолучитьПодписиПодрядчика(Договор)
	СтруктураПараметров = Новый Структура(); 
	
	Подписал = Договор.Утвердил;
	Если ЗначениеЗаполнено(Подписал) Тогда
		ПодписалДолжность = РаботаСПользователями.ПолучитьДолжность(Подписал).Наименование;
		ПодписалКратко = ФизическиеЛица.ФамилияИнициалыФизЛица(Подписал.ПредставлениеВДокументах,,,,Ложь);
		ПодписалДоверенность = ПолучитьДоверенность(Подписал, Договор.ДатаРегистрации);
	Иначе
		Сообщить("Не заполнен в договоре Подписал!");
		ПодписалДолжность = "___________________";
		ПодписалКратко = "___________________";
		ПодписалДоверенность = "___________________";
	КонецЕсли; 
	
	СтруктураПараметров.Вставить("ПодписалДолжность", ПодписалДолжность);
	СтруктураПараметров.Вставить("ПодписалКратко", ПодписалКратко);
	СтруктураПараметров.Вставить("ПодписалДоверенность", ПодписалДоверенность);
	СтруктураПараметров.Вставить("Подписал", Подписал);
	
	Возврат СтруктураПараметров;
КонецФункции // ПолучитьПодписиПодрядчика()

&НаСервереБезКонтекста
Функция ПолучитьДоверенность(Подписал, ДатаРегистрации)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДействиеДоверенностей.НомерДоверенности КАК НомерДоверенности,
	|	ДействиеДоверенностей.ДатаНачала КАК ДатаДоверенности,
	|	ДействиеДоверенностей.ДатаОкончания
	|ИЗ
	|	РегистрСведений.ДействиеДоверенностей КАК ДействиеДоверенностей
	|ГДЕ
	|	ДействиеДоверенностей.Пользователь = &Пользователь
	|	И &ДатаДоговора МЕЖДУ ДействиеДоверенностей.ДатаНачала И ДействиеДоверенностей.ДатаОкончания";
	
	Запрос.УстановитьПараметр("ДатаДоговора", ДатаРегистрации);
	Запрос.УстановитьПараметр("Пользователь", Подписал);
	ВыборкаШапкаДоговора = Запрос.Выполнить().Выбрать();
	ВыборкаШапкаДоговора.Следующий();
	
	НомерДоверенности = СокрЛП(ВыборкаШапкаДоговора.НомерДоверенности);
	Если НомерДоверенности = "Устав" Тогда
		РезультатОбработки = "";
	Иначе
		РезультатОбработки = НомерДоверенности+ " от "+Формат(ВыборкаШапкаДоговора.ДатаДоверенности, "ДЛФ = DD");
	КонецЕсли;
	
	Возврат РезультатОбработки;
	
КонецФункции // ПолучитьДоверенность()

&НаСервереБезКонтекста
Функция ПолучитьСтрокуРуководителя(Подписи)
	Если Подписи.Свойство("Подписал") И ЗначениеЗаполнено(Подписи.Подписал) Тогда
		Руководитель = СклонениеПоПадежам.обСклонениеСтроки(Подписи.ПодписалДолжность, "Р", "Должность");
		Руководитель = Руководитель + " " + СклонениеПоПадежам.ПросклонятьСтрокуФИО(Подписи.Подписал, "", "Р", "ФИО");
		ПолСсылка = СклонениеПоПадежам.ПолучитьПол(Подписи.Подписал);
		Если ПолСсылка = Перечисления.ПолФизическогоЛица.Женский тогда 
			Руководитель = Руководитель + ", действующей";
		Иначе
			Руководитель = Руководитель + ", действующего";
		КонецЕсли;
	Иначе
	    Руководитель = "_____________________________________ __________________________, действующего ";
	КонецЕсли; 
	
	Возврат Руководитель;
КонецФункции // ПолучитьСтрокуРуководителя()

&НаСервереБезКонтекста
Функция ПолучитьСтрокуРуководителяЗаказчика(ПодписалОтКорреспондента)
	Если ЗначениеЗаполнено(ПодписалОтКорреспондента) Тогда
		Должность = ПодписалОтКорреспондента.Должность;
	Иначе
		Должность = "";
	КонецЕсли;
	РезультатОбработки = СклонениеПоПадежам.обСклонениеСтроки(Должность, "Р", "Должность");
	РезультатОбработки = РезультатОбработки + " " + СклонениеПоПадежам.ПросклонятьСтрокуФИО(ПодписалОтКорреспондента, "", "Р", "ФИО");
	ПолСсылка = СклонениеПоПадежам.ПолучитьПол(ПодписалОтКорреспондента);
	Если ПолСсылка = Перечисления.ПолФизическогоЛица.Женский тогда 
		РезультатОбработки = РезультатОбработки + ", действующей";
	Иначе
		РезультатОбработки = РезультатОбработки + ", действующего";
	КонецЕсли;
	ДействуетНаОсновании = УправлениеКонтактнойИнформацией.ПолучитьКонтактнуюИнформацияОбъекта(ПодписалОтКорреспондента, Справочники.ВидыКонтактнойИнформации.ДействуетНаОсновании);
	
	РезультатОбработки = РезультатОбработки + " на основании "+ДействуетНаОсновании;	
	Возврат РезультатОбработки;
КонецФункции // ПолучитьСтрокуРуководителя()

&НаСервереБезКонтекста
Функция ПолучитьКорреспондента(Заказчики)
	// Если заказчиков много, берем пока первого
	Если Заказчики.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли; 
	СтрокаЗаказчика = Заказчики[0];
	
	Если ЗначениеЗаполнено(СтрокаЗаказчика.ПолноеНаименование) Тогда
		Возврат СтрокаЗаказчика.ПолноеНаименование;
	Иначе
		Возврат "_____________________________";
	КонецЕсли;
КонецФункции // ПолучитьКорреспондента()

&НаКлиенте
Процедура Заменить(Док, ИмяЗакладки, Значение)
	Док.Content.Find.Execute(ИмяЗакладки,  Ложь, Истина, Ложь, , , Истина, , Ложь, Значение, 2);
КонецПроцедуры

&НаКлиенте
Функция ФамилияИнициалыФизЛица(ОбъектИлиСтрока = "", Фамилия = " ", Имя = " ", Отчество = " ") Экспорт

	ТипОбъекта = ТипЗнч(ОбъектИлиСтрока);
	Если ТипОбъекта = Тип("Строка") Тогда
		ФИО = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СокрЛП(ОбъектИлиСтрока), " ");
	ИначеЕсли ТипОбъекта = Тип("СправочникСсылка.ФизическиеЛица") Или ТипОбъекта = Тип("СправочникОбъект.ФизическиеЛица") Тогда
		ФИО = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СокрЛП(ОбъектИлиСтрока.Наименование), " ");
	Иначе
		// используем возможно переданные отдельные строки
		Возврат ?(Не ПустаяСтрока(Фамилия), 
		          Фамилия + ?(Не ПустаяСтрока(Имя), " " + Лев(Имя,1) + "." + ?(Не ПустаяСтрока(Отчество), Лев(Отчество,1) + ".", ""), ""),
		          "")
	КонецЕсли;
	
	КоличествоПодстрок = ФИО.Количество();
	Фамилия            = ?(КоличествоПодстрок > 0, ФИО[0], "");
	Имя                = ?(КоличествоПодстрок > 1, ФИО[1], "");
	Отчество           = ?(КоличествоПодстрок > 2, ФИО[2], "");
	
	Возврат ?(Не ПустаяСтрока(Фамилия), 
	          Фамилия + ?(Не ПустаяСтрока(Имя), " " + Лев(Имя,1) + "." + ?(Не ПустаяСтрока(Отчество), Лев(Отчество, 1) + ".", ""), ""),
	          "");
	
КонецФункции

#Область ФЛДопсСоглашения

&НаКлиенте
Процедура ГродноДопСоглашениеФЛСрок()
	ПолучитьОбщиеДанныеДоговора();
	
	Подписи = ПолучитьПодписиПодрядчика(Договор);
	
	ИнициализироватьДокументWord();
		
	// Заполнение доп. соглашения 
	Заменить(Док,"РегНомерДата", Строка(НомерДоговора) + " от " + Формат(ДатаДоговора,"ДФ=dd.MM.yyyy"));
	//Заменить(Док, "НомерДС", "1");
	Заменить(Док, "ДеньДатаДС",Формат(ТекущаяДата(),"ДФ=дд"));
	Заменить(Док, "МесяцДатаДС", НРег(СклонениеПоПадежам.обСклонениеСтроки(Формат(ТекущаяДата(),"ДФ=ММММ"), "Р", "Должность")) + " " + Формат(ТекущаяДата(),"ДФ=гггг"));
	Заменить(Док, "ДатаДС", Формат(ТекущаяДата(),"ДЛФ=DD"));
	Заказчик = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДоговораФизЛиц(Договор);
	Док.Bookmarks("Корреспондент").Range.Text = Заказчик;
	Док.Bookmarks("Руководитель").Range.Text  = Гр_ПравилаАвтозаполненияШаблонов.ВозвращетСтрокуНашегоРуководителя(); 
	
	УдалитьЗакладку("ЗаказчикиПодвал");
	МассивЗаказчиков = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДляПодписиФизЛица(Договор);
	Для й=0 по МассивЗаказчиков.ВГраница() Цикл
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		Заменить(Док, "КорреспондентКратко", МассивЗаказчиков[й] + Символы.ВК);
	КонецЦикла; 
	
	ВывестиДокумент();
КонецПроцедуры

&НаКлиенте
Процедура ГродноДопСоглашениеФЛОкончСрок()
	ПолучитьОбщиеДанныеДоговора();
	
	Подписи = ПолучитьПодписиПодрядчика(Договор);
	
	ИнициализироватьДокументWord();
	
	// Заполнение доп. соглашения 
	Заменить(Док,"РегНомерДата", Строка(НомерДоговора) + " от " + Формат(ДатаДоговора,"ДФ=dd.MM.yyyy"));
	//Заменить(Док, "НомерДС", "1");
	Заменить(Док, "ДеньДатаДС",Формат(ТекущаяДата(),"ДФ=дд"));
	Заменить(Док, "МесяцДатаДС", НРег(СклонениеПоПадежам.обСклонениеСтроки(Формат(ТекущаяДата(),"ДФ=ММММ"), "Р", "Должность") + " " + Формат(ТекущаяДата(),"ДФ=гггг")));
	Заменить(Док, "%ДатаДС", Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy")); 
	Заменить(Док, "ДатаДС", Формат(ТекущаяДата(),"ДЛФ=DD"));
	
	Заказчик = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДоговораФизЛиц(Договор);
	Док.Bookmarks("Корреспондент").Range.Text = Заказчик;
	Док.Bookmarks("Руководитель").Range.Text  = Гр_ПравилаАвтозаполненияШаблонов.ВозвращетСтрокуНашегоРуководителя(); 
	
	УдалитьЗакладку("ЗаказчикиПодвал");
	МассивЗаказчиков = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДляПодписиФизЛица(Договор);
	Для й=0 по МассивЗаказчиков.ВГраница() Цикл
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		Заменить(Док, "КорреспондентКратко", МассивЗаказчиков[й] + Символы.ВК);
	КонецЦикла; 
	
	ВывестиДокумент();

КонецПроцедуры

&НаКлиенте
Процедура ГродноДопСоглашениеФЛСтоимость()
	ПолучитьОбщиеДанныеДоговора();
	
	Подписи = ПолучитьПодписиПодрядчика(Договор);
	
	ИнициализироватьДокументWord();
	
	// Заполнение доп. соглашения 
	Заменить(Док,"РегНомерДата", Строка(НомерДоговора) + " от " + Формат(ДатаДоговора,"ДФ=dd.MM.yyyy"));
	//Заменить(Док, "НомерДС", "1");
	Заменить(Док, "ДеньДатаДС",Формат(ТекущаяДата(),"ДФ=дд"));
	Заменить(Док, "МесяцДатаДС", НРег(СклонениеПоПадежам.обСклонениеСтроки(Формат(ТекущаяДата(),"ДФ=ММММ"), "Р", "Должность"))+" "+Формат(ТекущаяДата(),"ДФ=гггг"));
	Заменить(Док, "ДатаДС", Формат(ТекущаяДата(),"ДЛФ=DD"));
	Заказчик = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДоговораФизЛиц(Договор);
	Док.Bookmarks("Корреспондент").Range.Text = Заказчик;
	Док.Bookmarks("Руководитель").Range.Text  = Гр_ПравилаАвтозаполненияШаблонов.ВозвращетСтрокуНашегоРуководителя(); 
	
	//заполнение таблицы
	УдалитьЗакладку("СтрокаТаблицы");		
	Этапы = Новый СписокЗначений;
	г = ЭтапыДоговора.Количество()-1;
	Пока г<>-1 Цикл
		Этапы.Добавить(ЭтапыДоговора[г],"ЭтапДоговора");
		г = г - 1;
	КонецЦикла;
	
	СуммаДога   = 0;
	НомерСтроки = Этапы.Количество();
	Зашел = Ложь;
	СтатьяОсвобождения = Новый Массив;

	Массив = Новый Массив(5);
	Массив[0] = Символ(42);
	Массив[1] = Символ(185);
	Массив[2] = Символ(178);
	Массив[3] = Символ(179);
	Массив[4] = Символ(8308);
	т = 0;
	ОбщиеСроки = 0;
	
	Для каждого Этапа из Этапы Цикл
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		СтруктураСтроки = Гр_ПравилаАвтозаполненияШаблонов.ВозвращаетСтруктуруЭтапаДляТаблицы(Этапа.Значение.ЭтапДоговора);
		СтоимостьЭтапа = СтруктураСтроки.стоимостьЭтапа;
		Если СтруктураСтроки.Статья <> "" Тогда
			Для й=0 по СтатьяОсвобождения.ВГраница() Цикл
				Если СтруктураСтроки.Статья = СтатьяОсвобождения[й] Тогда
					Зашел = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если Не Зашел Тогда
				Статьяосвобождения.Добавить(СтруктураСтроки.Статья);
				т = т + 1;
			КонецЕсли;
			Зашел = Ложь;
			СтоимостьЭтапа = Строка(СтруктураСтроки.СтоимостьЭтапа) + " " + Массив[0] + Массив[т];			
		КонецЕсли;
	
		Заменить(Док, "%Номер%", НомерСтроки);
		Заменить(Док, "%СтоимЭтапа%", Строка(СтоимостьЭтапа));
		Заменить(Док, "%Объект1%", Строка(СтруктураСтроки.Объект1));
		Заменить(Док, "%Объект2%", Строка(СтруктураСтроки.Объект2));
		Заменить(Док, "%Вид1%", Строка(СтруктураСтроки.Вид1));
		Заменить(Док, "%Вид2%", Строка(СтруктураСтроки.Вид2));
		Заменить(Док, "%Адрес%", Строка(СтруктураСтроки.Адрес));
					 
		СуммаДога   = СуммаДога + Число(Этапа.Значение.СтоимостьСНДС);
		Статья      = "";
		НомерСтроки = НомерСтроки - 1;
	КонецЦикла;
	
	т = 0;
	Если СтатьяОсвобождения.Количество() <> 0 Тогда
		Для г = 0 по СтатьяОсвобождения.ВГраница() Цикл
			Строки = Строка(Строки) + Массив[0] + Массив[т+1] + " Освобождение от НДС, согласно " + Строка(СтатьяОсвобождения[г]);
			Если г <> СтатьяОсвобождения.ВГраница() Тогда
				Строки = Строка(Строки) +Символы.ВК;
			КонецЕсли;
			т = т + 1;
		КонецЦикла;
		Док.Bookmarks("Сноски").Range.Text = Строки;
	Иначе
		Док.Bookmarks("Сноски").Range.Text = "";
	КонецЕсли;	
	
	СтоимостьДоговора = СокрЛП(мРаботаСДоговорами.СуммаЧисломИПрописью(СуммаДога, ВалютаДоговора)) + ", ";
		
	Док.Bookmarks("СтоимостьДоговора").Range.Text = СтоимостьДоговора;
	Док.Bookmarks("НДС").Range.Text               = Гр_ПравилаАвтозаполненияШаблонов.ВозвращаетПоВидамРаботСуммуНДС(Договор);
	Док.Bookmarks("ИтогоСумма").Range.Text        = Формат(СуммаДога,"ЧРГ=' '; ЧН=0");	
	
	НашиРеквизиты = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьНашиРеквизиты();
	Док.Bookmarks("БанкНашейОрганизации").Range.Text = "" + НашиРеквизиты.НашРасчетныйСчет + " УНП:" +НашиРеквизиты.НашУНП + " ";
	
	СтруктураСтроки = Гр_ПравилаАвтозаполненияШаблонов.ВозвращаетСтруктуруЭтапаДляТаблицы(Этапы[0].Значение.ЭтапДоговора);  
	Заменить(Док, "СуммаОплаты", СокрЛП(мРаботаСДоговорами.СуммаЧисломИПрописью(ЭтапыДоговора[ЭтапыДоговора.Количество()-1].СтоимостьСНДС, ВалютаДоговора)));
	Заменить(Док, "%ВидРаботы%", СтруктураСтроки.Вид1 + СтруктураСтроки.Вид2);
	
	УдалитьЗакладку("ЗаказчикиПодвал");
	МассивЗаказчиков = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДляПодписиФизЛица(Договор);
	Для й=0 по МассивЗаказчиков.ВГраница() Цикл
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		Заменить(Док, "КорреспондентКратко", МассивЗаказчиков[й] + Символы.ВК);
	КонецЦикла; 
	
	ВывестиДокумент();

КонецПроцедуры

&НаКлиенте
Процедура ГродноДопСоглашениеФЛРасторжение()
	ПолучитьОбщиеДанныеДоговора();
	
	Подписи = ПолучитьПодписиПодрядчика(Договор);
	
	ИнициализироватьДокументWord();
		
	// Заполнение доп. соглашения 
	Заказчик 		 = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДоговораФизЛиц(Договор);
	МассивЗаказчиков = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДляПодписиФизЛица(Договор);
	
	//Заменить(Док, "НомерДС", "1");
	Заменить(Док, "РегНомерДата", Строка(НомерДоговора) + " от " + Формат(ДатаДоговора,"ДФ=dd.MM.yyyy"));
	Заменить(Док, "ДеньДатаДС",   Формат(ТекущаяДата(),"ДФ=дд"));
	Заменить(Док, "МесяцДатаДС",  НРег(СклонениеПоПадежам.обСклонениеСтроки(Формат(ТекущаяДата(),"ДФ=ММММ"), "Р", "Должность")) + " " + Формат(ТекущаяДата(),"ДФ=гггг"));
	Заменить(Док, "ДатаДС",       Формат(ТекущаяДата(),"ДЛФ=DD"));
	
	Док.Bookmarks("Корреспондент").Range.Text = Заказчик;
	Док.Bookmarks("Руководитель").Range.Text  = Гр_ПравилаАвтозаполненияШаблонов.ВозвращетСтрокуНашегоРуководителя(); 
	
	УдалитьЗакладку("ЗаказчикиПодвал");
	Для й=0 по МассивЗаказчиков.ВГраница() Цикл
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док, "КорреспондентКратко", МассивЗаказчиков[й] + Символы.ВК);
	КонецЦикла; 
	
	ВывестиДокумент();
КонецПроцедуры

#КонецОбласти


#Область ЮЛДопСоглашения

&НаКлиенте
Процедура ГродноДопСоглашениеЮЛОткрытаяДата()
	ПолучитьОбщиеДанныеДоговора();
	
	Подписи = ПолучитьПодписиПодрядчика(Договор);
	
	ИнициализироватьДокументWord();
		
	// Заполнение доп. соглашения 
	Руководитель = Гр_ПравилаАвтозаполненияШаблонов.ВозвращетСтрокуНашегоРуководителя(); 
	
	Заменить(Док,"РегНомерДата",           Строка(НомерДоговора) + " от " + Формат(ДатаДоговора,"ДФ=dd.MM.yyyy"));
	Заменить(Док, "ДеньДатаДС",            Формат(ТекущаяДата(),"ДФ=дд"));
	Заменить(Док, "МесяцДатаДС",           НРег(СклонениеПоПадежам.обСклонениеСтроки(Формат(ТекущаяДата(),"ДФ=ММММ"), "Р", "Должность")) + " " + Формат(ТекущаяДата(),"ДФ=гггг"));
	Заменить(Док, "ДатаДС",                Формат(ТекущаяДата(),"ДЛФ=DD"));
	Заменить(Док, "%ДолжностьПодрядчика%", Подписи.ПодписалДолжность); 
	Заменить(Док, "УтвердилКратко1",       Подписи.ПодписалКратко);
		
	Док.Bookmarks("Руководитель").Range.Text  = Руководитель;
	
#Область ВыводШапкиЗаказчиков
	Счетчик = 0;
	ЗаказчикиФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковДоговораФизЛиц(Договор);	
	ИнвесторыФЛ = Гр_ПравилаАвтозаполненияшаблонов.ПолучитьШапкуЗаказчиковДоговораФизЛиц(Договор,Ложь);
	
	СтрокаЗаказчикиФЛ = "";
	СтрокаИнвесторыФЛ = "";
	СтрокаИнвЗакФЛ    = "";
	
	ЗаказчикИнвестор  = Ложь;
	ИндексИнвЗакЮЛ    = Новый Массив;
	ИндексИнвЗакФЛ    = Новый Массив;
	ЗаказчикИнвесторМ = Новый Массив;
	
	//формирование строки Закзачиков ФизЛиц
	Для й=0 по ЗаказчикиФЛ.ВГраница() Цикл
		Для к=0 по ИнвесторыФЛ.ВГраница() Цикл
			Если ИнвесторыФЛ[к] = ЗаказчикиФЛ[й] и ЗаказчикиФЛ[й]<>"Стоп" Тогда
				ЗаказчикИнвестор = Истина;
				ИндексИнвЗакФЛ.Добавить(к);
			КонецЕсли;
		КонецЦикла;
		Если НЕ ЗаказчикИнвестор Тогда
			Если ЗаказчикиФЛ[й] = "Стоп" Тогда
				Если й <> 0 И й <> ЗаказчикиФЛ.ВГраница() тогда
					Если ЗаказчикиФЛ[й] <> ЗаказчикиФЛ[й+1] и ЗаказчикиФЛ[й-1]<>ЗаказчикиФЛ[й]  Тогда
						СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + " а также ";
					КонецЕсли;
				КонецЕсли;
				Счетчик = Счетчик + 1;
			Иначе
				Если Счетчик = 1 ИЛИ Счетчик = 2 Тогда
					СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + Строка(ЗаказчикиФЛ[й]) + ", и ";
				Иначе 
					СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + Строка(ЗаказчикиФЛ[й]) + ", ";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		ЗаказчикИнвестор = Ложь;
	КонецЦикла;
	
	//формирование строки Заказчика - Инвестора ФизЛиц
	Для й=0 по ИндексИнвЗакФЛ.ВГраница() Цикл
		СтрокаИнвЗакФЛ = Строка(СтрокаИнвЗакФЛ) + Строка(ИнвесторыФЛ[ИндексИнвЗакФЛ[й]]) + ", "; 
		ЗаказчикИнвесторМ.Добавить(ИнвесторыФЛ[ИндексИнвЗакФЛ[й]]);
	КонецЦикла;
	
	ИнвесторЗаказчик = Ложь;
	
	//формирование строки Инвесторов ФизЛиц
	Для й=0 по ИнвесторыФЛ.ВГраница() Цикл
		Для к=0 по ИндексИнвЗакФЛ.ВГраница() Цикл
			Если ИндексИнвЗакФЛ[к]=й Тогда
				ИнвесторЗаказчик = Истина;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ИнвесторЗаказчик Тогда
			Если ИнвесторыФЛ[й] = "Стоп" Тогда
				Если й <> 0 И й <> ИнвесторыФЛ.ВГраница() тогда
					Если ИнвесторыФЛ[й] <> ИнвесторыФЛ[й+1] и ИнвесторыФЛ[й-1] <> ИнвесторыФЛ[й]  Тогда
						СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + " а также ";
					КонецЕсли;
				КонецЕсли;
				Счетчик = Счетчик + 1;
			Иначе
				Если Счетчик = 1 ИЛИ Счетчик = 2 Тогда
					СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + Строка(ИнвесторыФЛ[й]) + ", и ";
				Иначе 
					СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + Строка(ИнвесторыФЛ[й]) + ", ";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	    ИнвесторЗаказчик = Ложь;
	КонецЦикла;
	
	СтрокаЗаказчикиФЛ = СтрЗаменить(СтрокаЗаказчикиФЛ,", и  а"," а ");
	СтроказаказчикиФЛ = СтрЗаменить(СтрокаЗаказчикиФЛ,", , и",",");
	СтрокаИнвесторыФЛ = СтрЗаменить(СтрокаИнвесторыФЛ,", и  а"," а ");
	СтрокаИнвесторыФЛ = СтрЗаменить(СтрокаИнвесторыФЛ,", , и",",");
	
	ИнвесторыЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковЮрЛица(Договор, Ложь);
	ЗаказчикиЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковЮрЛица(Договор);
	
	//Формирование строки Инвесторов ЮрЛиц
	Для й=0 по ЗаказчикиЮЛ.ВГраница() Цикл
		Для к=0 по ИнвесторыЮЛ.ВГраница() Цикл
			Если ИнвесторыЮЛ[к] = ЗаказчикиЮЛ[й] Тогда
				ЗаказчикИнвестор = Истина;
				ИндексИнвЗакЮЛ.Добавить(к);
			КонецЕсли;
		КонецЦикла;
		Если НЕ ЗаказчикИнвестор Тогда
			СтрокаЗаказчикиЮЛ = Строка(СтрокаЗаказчикиЮЛ) + Строка(ЗаказчикиЮЛ[й]) + ", ";
		КонецЕсли;
		ЗаказчикИнвестор = Ложь;
	КонецЦикла;
	
	//Формирование строки Заказчика - Инвестора ЮрЛиц
	Для й=0 по ИндексИнвЗакЮЛ.ВГраница() Цикл
		СтрокаИнвЗакЮЛ = Строка(СтрокаИнвЗакЮЛ) + Строка(ИнвесторыЮЛ[ИндексИнвЗакЮЛ[й]]) + ", "; 
		ЗаказчикИнвесторМ.Добавить(ИнвесторыЮЛ[ИндексИнвЗакЮЛ[й]]);
	КонецЦикла;
	
	//Формирование строки Инвестора ЮрЛиц
	ИнвесторЗаказчик = Ложь;
	Для й=0 по ИнвесторыЮЛ.ВГраница() Цикл
		Для к=0 по ИндексИнвЗакЮЛ.ВГраница() Цикл
			Если ИндексИнвЗакЮЛ[к]=й Тогда
				ИнвесторЗаказчик = Истина;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ИнвесторЗаказчик Тогда
			СтрокаИнвесторыЮЛ = Строка(СтрокаИнвесторыЮЛ) + Строка(ИнвесторыЮЛ[й]) + ", ";
		КонецЕсли;
	    ИнвесторЗаказчик = Ложь;
	КонецЦикла;
	
	СтрокаЗаказчикиФЛ = ?(СтрокаЗаказчикиФЛ <> "", Строка(СтрокаЗаказчикиФЛ) + "именуемые ", Строка(СтрокаЗаказчикиФЛ) + "именуемый ");
	СтрокаИнвЗакФЛ    = ?(СтрокаИнвЗакФЛ <> "", Строка(СтрокаИнвЗакФЛ) + "именуемые ", Строка(СтрокаИнвЗакФЛ) + "именуемый "); 
	СтрокаИнвесторыФЛ = ?(СтрокаИнвесторыФЛ<>"", Строка(СтрокаИнвесторыФЛ) + "именуемые ", Строка(СтрокаинвесторыФЛ) + "именуемый ");
	
	Организация = Строка(СтрокаЗаказчикиЮЛ) + Строка(СтрокаЗаказчикиФЛ) + "в дальнейшем «Заказчик», ";
	
	Если ИндексИнвЗакЮЛ.Количество() <> 0 ИЛИ ИндексИнвЗакФЛ.Количество()<>0 Тогда
		Организация = Строка(Организация) + " и " + Строка(СтрокаИнвЗакЮЛ) + Строка(СтрокаИнвЗакФЛ) + "в дальнейшем «Заказчик-Инвестор», ";
	КонецЕсли;
	
	Если ИнвесторыЮЛ.Количество() <> ИндексИнвЗакЮЛ.Количество() ИЛИ ИнвесторыФЛ.Количество() <> ИндексИнвЗакФЛ.Количество() Тогда
		Организация = Строка(Организация) + "со второй стороны, и " + Строка(СтрокаИнвесторыЮЛ) + Строка(СтрокаИнвесторыФЛ) + "в дальнейшем «Инвестор», с третьей стороны, ";
	Иначе
		Организация = Строка(Организация) + "со второй стороны, "; 
	КонецЕсли;
	
	Док.Bookmarks("Организация").Range.Text = Организация;	
#КонецОбласти	

#область ВыводПодписейЗаказчиковДоговор	
	МассивЗаказчиковЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьРеквизитыЮрЛица(Договор);
	МассивИнвесторовЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьРеквизитыЮрЛица(Договор,Ложь);
	МассивЗаказчиковФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДляПодписиФизЛица(Договор);
	МассивИнвесторовФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДляПодписиФизЛица(Договор, Ложь);

	УдалитьЗакладку("ЗаказчикПодвал");
	к=0;
	Для й=0 по МассивЗаказчиковФЛ.ВГраница() Цикл
		Пока к<>МассивИнвесторовФЛ.Количество() Цикл
			Если МассивЗаказчиковФЛ[й]=МассивИнвесторовФЛ[к] Тогда
				 МассивИнвесторовФЛ.Удалить(к);
				 к=к-1;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", "");
		Заменить(Док,"%КорреспондентКратко%", МассивЗаказчиковФЛ[й]+Символы.ВК);
		к=0;
	КонецЦикла;
	
	Для й=0 по МассивИнвесторовФЛ.ВГраница() Цикл	
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", "");
		Заменить(Док,"%КорреспондентКратко%", МассивИнвесторовФЛ[й]+Символы.ВК);
	КонецЦикла;
	
	Для й=0 по МассивЗаказчиковЮЛ.ВГраница() Цикл
		Пока к<>МассивИнвесторовЮЛ.Количество() Цикл
			Если СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],1) = СтрПолучитьСтроку(МассивИнвесторовЮЛ[к],1) Тогда
				МассивИнвесторовЮЛ.Удалить(к);
				к=к-1;
			КонецЕсли; 
			к=к+1;
		КонецЦикла;
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],8));
		Заменить(Док,"%КорреспондентКратко%", Фамилия(СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],7))+Символы.ВК);
		к=0;
	КонецЦикла;
	
	Для й=0 по МассивИнвесторовЮЛ.ВГраница() Цикл	
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", СтрПолучитьСтроку(МассивИнвесторовЮЛ[й],8));
		Заменить(Док,"%КорреспондентКратко%", Фамилия(СтрПолучитьСтроку(МассивИнвесторовЮЛ[й],7))+Символы.ВК);
	КонецЦикла;
#КонецОбласти
			
#Область ВыводВТекстеЗаказчикИИнвестор
	Если МассивИнвесторовФЛ.Количество()>0 ИЛИ МассивИнвесторовЮЛ.Количество()>0 ИЛИ ЗаказчикИнвесторМ.Количество()>0 Тогда
		Заменить(Док, "%КопийДвух%", "трех");
	Иначе
		Заменить(Док, "%КопийДвух%", "двух");
	КонецЕсли;
#КонецОбласти

	ВывестиДокумент();
КонецПроцедуры

&НаКлиенте
Процедура ГродноДопСоглашениеЮЛОкончСрок()
	ПолучитьОбщиеДанныеДоговора();
	
	Подписи = ПолучитьПодписиПодрядчика(Договор);
	
	ИнициализироватьДокументWord();
		
	// Заполнение доп. соглашения 
	Руководитель = Гр_ПравилаАвтозаполненияШаблонов.ВозвращетСтрокуНашегоРуководителя(); 
	
	Заменить(Док, "РегНомерДата",          Строка(НомерДоговора) + " от " + Формат(ДатаДоговора,"ДФ=dd.MM.yyyy"));
	Заменить(Док, "ДеньДатаДС",            Формат(ТекущаяДата(),"ДФ=дд"));
	Заменить(Док, "МесяцДатаДС",           НРег(СклонениеПоПадежам.обСклонениеСтроки(Формат(ТекущаяДата(),"ДФ=ММММ"), "Р", "Должность")) + " " + Формат(ТекущаяДата(),"ДФ=гггг"));
	Заменить(Док, "%ДатаДС",               Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy"));
	Заменить(Док, "ДатаДС",                Формат(ТекущаяДата(),"ДЛФ=DD"));
	Заменить(Док, "%ДолжностьПодрядчика%", Подписи.ПодписалДолжность); 
	Заменить(Док, "УтвердилКратко1",       Подписи.ПодписалКратко);
	
	Док.Bookmarks("Руководитель").Range.Text  = Руководитель;
		
#Область ВыводШапкиЗаказчиков
	Счетчик = 0;
	ЗаказчикиФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковДоговораФизЛиц(Договор);	
	ИнвесторыФЛ = Гр_ПравилаАвтозаполненияшаблонов.ПолучитьШапкуЗаказчиковДоговораФизЛиц(Договор,Ложь);
	
	СтрокаЗаказчикиФЛ = "";
	СтрокаИнвесторыФЛ = "";
	СтрокаИнвЗакФЛ    = "";
	
	ЗаказчикИнвестор  = Ложь;
	ИндексИнвЗакЮЛ    = Новый Массив;
	ИндексИнвЗакФЛ    = Новый Массив;
	ЗаказчикИнвесторМ = Новый Массив;
	
	//формирование строки Закзачиков ФизЛиц
	Для й=0 по ЗаказчикиФЛ.ВГраница() Цикл
		Для к=0 по ИнвесторыФЛ.ВГраница() Цикл
			Если ИнвесторыФЛ[к] = ЗаказчикиФЛ[й] и ЗаказчикиФЛ[й]<>"Стоп" Тогда
				ЗаказчикИнвестор = Истина;
				ИндексИнвЗакФЛ.Добавить(к);
			КонецЕсли;
		КонецЦикла;
		Если НЕ ЗаказчикИнвестор Тогда
			Если ЗаказчикиФЛ[й] = "Стоп" Тогда
				Если й <> 0 И й <> ЗаказчикиФЛ.ВГраница() тогда
					Если ЗаказчикиФЛ[й] <> ЗаказчикиФЛ[й+1] и ЗаказчикиФЛ[й-1]<>ЗаказчикиФЛ[й]  Тогда
						СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + " а также ";
					КонецЕсли;
				КонецЕсли;
				Счетчик = Счетчик + 1;
			Иначе
				Если Счетчик = 1 ИЛИ Счетчик = 2 Тогда
					СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + Строка(ЗаказчикиФЛ[й]) + ", и ";
				Иначе 
					СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + Строка(ЗаказчикиФЛ[й]) + ", ";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		ЗаказчикИнвестор = Ложь;
	КонецЦикла;
	
	//формирование строки Заказчика - Инвестора ФизЛиц
	Для й=0 по ИндексИнвЗакФЛ.ВГраница() Цикл
		СтрокаИнвЗакФЛ = Строка(СтрокаИнвЗакФЛ) + Строка(ИнвесторыФЛ[ИндексИнвЗакФЛ[й]]) + ", "; 
		ЗаказчикИнвесторМ.Добавить(ИнвесторыФЛ[ИндексИнвЗакФЛ[й]]);
	КонецЦикла;
	
	ИнвесторЗаказчик = Ложь;
	
	//формирование строки Инвесторов ФизЛиц
	Для й=0 по ИнвесторыФЛ.ВГраница() Цикл
		Для к=0 по ИндексИнвЗакФЛ.ВГраница() Цикл
			Если ИндексИнвЗакФЛ[к]=й Тогда
				ИнвесторЗаказчик = Истина;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ИнвесторЗаказчик Тогда
			Если ИнвесторыФЛ[й] = "Стоп" Тогда
				Если й <> 0 И й <> ИнвесторыФЛ.ВГраница() тогда
					Если ИнвесторыФЛ[й] <> ИнвесторыФЛ[й+1] и ИнвесторыФЛ[й-1] <> ИнвесторыФЛ[й]  Тогда
						СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + " а также ";
					КонецЕсли;
				КонецЕсли;
				Счетчик = Счетчик + 1;
			Иначе
				Если Счетчик = 1 ИЛИ Счетчик = 2 Тогда
					СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + Строка(ИнвесторыФЛ[й]) + ", и ";
				Иначе 
					СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + Строка(ИнвесторыФЛ[й]) + ", ";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	    ИнвесторЗаказчик = Ложь;
	КонецЦикла;
	
	СтрокаЗаказчикиФЛ = СтрЗаменить(СтрокаЗаказчикиФЛ,", и  а"," а ");
	СтроказаказчикиФЛ = СтрЗаменить(СтрокаЗаказчикиФЛ,", , и",",");
	СтрокаИнвесторыФЛ = СтрЗаменить(СтрокаИнвесторыФЛ,", и  а"," а ");
	СтрокаИнвесторыФЛ = СтрЗаменить(СтрокаИнвесторыФЛ,", , и",",");
	
	ИнвесторыЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковЮрЛица(Договор, Ложь);
	ЗаказчикиЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковЮрЛица(Договор);
	
	//Формирование строки Инвесторов ЮрЛиц
	Для й=0 по ЗаказчикиЮЛ.ВГраница() Цикл
		Для к=0 по ИнвесторыЮЛ.ВГраница() Цикл
			Если ИнвесторыЮЛ[к] = ЗаказчикиЮЛ[й] Тогда
				ЗаказчикИнвестор = Истина;
				ИндексИнвЗакЮЛ.Добавить(к);
			КонецЕсли;
		КонецЦикла;
		Если НЕ ЗаказчикИнвестор Тогда
			СтрокаЗаказчикиЮЛ = Строка(СтрокаЗаказчикиЮЛ) + Строка(ЗаказчикиЮЛ[й]) + ", ";
		КонецЕсли;
		ЗаказчикИнвестор = Ложь;
	КонецЦикла;
	
	//Формирование строки Заказчика - Инвестора ЮрЛиц
	Для й=0 по ИндексИнвЗакЮЛ.ВГраница() Цикл
		СтрокаИнвЗакЮЛ = Строка(СтрокаИнвЗакЮЛ) + Строка(ИнвесторыЮЛ[ИндексИнвЗакЮЛ[й]]) + ", "; 
		ЗаказчикИнвесторМ.Добавить(ИнвесторыЮЛ[ИндексИнвЗакЮЛ[й]]);
	КонецЦикла;
	
	//Формирование строки Инвестора ЮрЛиц
	ИнвесторЗаказчик = Ложь;
	Для й=0 по ИнвесторыЮЛ.ВГраница() Цикл
		Для к=0 по ИндексИнвЗакЮЛ.ВГраница() Цикл
			Если ИндексИнвЗакЮЛ[к]=й Тогда
				ИнвесторЗаказчик = Истина;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ИнвесторЗаказчик Тогда
			СтрокаИнвесторыЮЛ = Строка(СтрокаИнвесторыЮЛ) + Строка(ИнвесторыЮЛ[й]) + ", ";
		КонецЕсли;
	    ИнвесторЗаказчик = Ложь;
	КонецЦикла;
	
	СтрокаЗаказчикиФЛ = ?(СтрокаЗаказчикиФЛ <> "", Строка(СтрокаЗаказчикиФЛ) + "именуемые ", Строка(СтрокаЗаказчикиФЛ) + "именуемый ");
	СтрокаИнвЗакФЛ    = ?(СтрокаИнвЗакФЛ <> "", Строка(СтрокаИнвЗакФЛ) + "именуемые ", Строка(СтрокаИнвЗакФЛ) + "именуемый "); 
	СтрокаИнвесторыФЛ = ?(СтрокаИнвесторыФЛ<>"", Строка(СтрокаИнвесторыФЛ) + "именуемые ", Строка(СтрокаинвесторыФЛ) + "именуемый ");
	
	Организация = Строка(СтрокаЗаказчикиЮЛ) + Строка(СтрокаЗаказчикиФЛ) + "в дальнейшем «Заказчик», ";
	
	Если ИндексИнвЗакЮЛ.Количество() <> 0 ИЛИ ИндексИнвЗакФЛ.Количество()<>0 Тогда
		Организация = Строка(Организация) + " и " + Строка(СтрокаИнвЗакЮЛ) + Строка(СтрокаИнвЗакФЛ) + "в дальнейшем «Заказчик-Инвестор», ";
	КонецЕсли;
	
	Если ИнвесторыЮЛ.Количество() <> ИндексИнвЗакЮЛ.Количество() ИЛИ ИнвесторыФЛ.Количество() <> ИндексИнвЗакФЛ.Количество() Тогда
		Организация = Строка(Организация) + "со второй стороны, и " + Строка(СтрокаИнвесторыЮЛ) + Строка(СтрокаИнвесторыФЛ) + "в дальнейшем «Инвестор», с третьей стороны, ";
	Иначе
		Организация = Строка(Организация) + "со второй стороны, "; 
	КонецЕсли;
	
	Док.Bookmarks("Организация").Range.Text = Организация;	
#КонецОбласти	

#область ВыводПодписейЗаказчиковДоговор	
	МассивЗаказчиковЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьРеквизитыЮрЛица(Договор);
	МассивИнвесторовЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьРеквизитыЮрЛица(Договор,Ложь);
	МассивЗаказчиковФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДляПодписиФизЛица(Договор);
	МассивИнвесторовФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДляПодписиФизЛица(Договор, Ложь);

	УдалитьЗакладку("ЗаказчикПодвал");
	к=0;
	Для й=0 по МассивЗаказчиковФЛ.ВГраница() Цикл
		Пока к<>МассивИнвесторовФЛ.Количество() Цикл
			Если МассивЗаказчиковФЛ[й]=МассивИнвесторовФЛ[к] Тогда
				 МассивИнвесторовФЛ.Удалить(к);
				 к=к-1;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", "");
		Заменить(Док,"%КорреспондентКратко%", МассивЗаказчиковФЛ[й]+Символы.ВК);
		к=0;
	КонецЦикла;
	
	Для й=0 по МассивИнвесторовФЛ.ВГраница() Цикл	
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", "");
		Заменить(Док,"%КорреспондентКратко%", МассивИнвесторовФЛ[й]+Символы.ВК);
	КонецЦикла;
	
	Для й=0 по МассивЗаказчиковЮЛ.ВГраница() Цикл
		Пока к<>МассивИнвесторовЮЛ.Количество() Цикл
			Если СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],1) = СтрПолучитьСтроку(МассивИнвесторовЮЛ[к],1) Тогда
				МассивИнвесторовЮЛ.Удалить(к);
				к=к-1;
			КонецЕсли; 
			к=к+1;
		КонецЦикла;
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],8));
		Заменить(Док,"%КорреспондентКратко%", Фамилия(СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],7))+Символы.ВК);
		к=0;
	КонецЦикла;
	
	Для й=0 по МассивИнвесторовЮЛ.ВГраница() Цикл	
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", СтрПолучитьСтроку(МассивИнвесторовЮЛ[й],8));
		Заменить(Док,"%КорреспондентКратко%", Фамилия(СтрПолучитьСтроку(МассивИнвесторовЮЛ[й],7))+Символы.ВК);
	КонецЦикла;
#КонецОбласти

#Область ВыводВТекстеЗаказчикИИнвестор
	Если МассивИнвесторовФЛ.Количество()>0 ИЛИ МассивИнвесторовЮЛ.Количество()>0 ИЛИ ЗаказчикИнвесторМ.Количество()>0 Тогда
		Заменить(Док, "%КопийДвух%", "трех");
	Иначе
		Заменить(Док, "%КопийДвух%", "двух");
	КонецЕсли;
#КонецОбласти

	ВывестиДокумент();
КонецПроцедуры

&НаКлиенте
Процедура ГродноДопСоглЮЛСтоимостьПЭтап()
	ПолучитьОбщиеДанныеДоговора();
	
	Подписи = ПолучитьПодписиПодрядчика(Договор);
	
	ИнициализироватьДокументWord();
	
	// Заполнение доп. соглашения
	Руководитель = Гр_ПравилаАвтозаполненияШаблонов.ВозвращетСтрокуНашегоРуководителя();
	
	Заменить(Док, "РегНомерДата",          Строка(НомерДоговора) + " от " + Формат(ДатаДоговора,"ДФ=dd.MM.yyyy"));
	Заменить(Док, "ДеньДатаДС",            Формат(ТекущаяДата(),"ДФ=дд"));
	Заменить(Док, "МесяцДатаДС",           НРег(СклонениеПоПадежам.обСклонениеСтроки(Формат(ТекущаяДата(),"ДФ=ММММ"), "Р", "Должность"))+" "+Формат(ТекущаяДата(),"ДФ=гггг"));
	Заменить(Док, "%ДатаДС",               Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy"));
	Заменить(Док, "ДатаДС",                Формат(ТекущаяДата(),"ДЛФ=DD"));
	Заменить(Док, "%ДолжностьПодрядчика%", Подписи.ПодписалДолжность); 
	Заменить(Док, "УтвердилКратко1",       Подписи.ПодписалКратко);
	
	Док.Bookmarks("УКАЗ").Range.Text          = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьТекстУказаДогвора(Договор);
	Док.Bookmarks("ПереченьРабот").Range.Text = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьПереченьРаботДоговора(Договор);
	Док.Bookmarks("Руководитель").Range.Text  = Руководитель;
	Док.Bookmarks("Рукв").Range.Text          = Руководитель;
	
#Область ВыводШапкиЗаказчиков
	Счетчик = 0;
	ЗаказчикиФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковДоговораФизЛиц(Договор);	
	ИнвесторыФЛ = Гр_ПравилаАвтозаполненияшаблонов.ПолучитьШапкуЗаказчиковДоговораФизЛиц(Договор,Ложь);
	
	СтрокаЗаказчикиФЛ = "";
	СтрокаИнвесторыФЛ = "";
	СтрокаИнвЗакФЛ    = "";
	
	ЗаказчикИнвестор  = Ложь;
	ИндексИнвЗакЮЛ    = Новый Массив;
	ИндексИнвЗакФЛ    = Новый Массив;
	ЗаказчикИнвесторМ = Новый Массив;
	
	//формирование строки Закзачиков ФизЛиц
	Для й=0 по ЗаказчикиФЛ.ВГраница() Цикл
		Для к=0 по ИнвесторыФЛ.ВГраница() Цикл
			Если ИнвесторыФЛ[к] = ЗаказчикиФЛ[й] и ЗаказчикиФЛ[й]<>"Стоп" Тогда
				ЗаказчикИнвестор = Истина;
				ИндексИнвЗакФЛ.Добавить(к);
			КонецЕсли;
		КонецЦикла;
		Если НЕ ЗаказчикИнвестор Тогда
			Если ЗаказчикиФЛ[й] = "Стоп" Тогда
				Если й <> 0 И й <> ЗаказчикиФЛ.ВГраница() тогда
					Если ЗаказчикиФЛ[й] <> ЗаказчикиФЛ[й+1] и ЗаказчикиФЛ[й-1]<>ЗаказчикиФЛ[й]  Тогда
						СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + " а также ";
					КонецЕсли;
				КонецЕсли;
				Счетчик = Счетчик + 1;
			Иначе
				Если Счетчик = 1 ИЛИ Счетчик = 2 Тогда
					СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + Строка(ЗаказчикиФЛ[й]) + ", и ";
				Иначе 
					СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + Строка(ЗаказчикиФЛ[й]) + ", ";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		ЗаказчикИнвестор = Ложь;
	КонецЦикла;
	
	//формирование строки Заказчика - Инвестора ФизЛиц
	Для й=0 по ИндексИнвЗакФЛ.ВГраница() Цикл
		СтрокаИнвЗакФЛ = Строка(СтрокаИнвЗакФЛ) + Строка(ИнвесторыФЛ[ИндексИнвЗакФЛ[й]]) + ", "; 
		ЗаказчикИнвесторМ.Добавить(ИнвесторыФЛ[ИндексИнвЗакФЛ[й]]);
	КонецЦикла;
	
	ИнвесторЗаказчик = Ложь;
	
	//формирование строки Инвесторов ФизЛиц
	Для й=0 по ИнвесторыФЛ.ВГраница() Цикл
		Для к=0 по ИндексИнвЗакФЛ.ВГраница() Цикл
			Если ИндексИнвЗакФЛ[к]=й Тогда
				ИнвесторЗаказчик = Истина;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ИнвесторЗаказчик Тогда
			Если ИнвесторыФЛ[й] = "Стоп" Тогда
				Если й <> 0 И й <> ИнвесторыФЛ.ВГраница() тогда
					Если ИнвесторыФЛ[й] <> ИнвесторыФЛ[й+1] и ИнвесторыФЛ[й-1] <> ИнвесторыФЛ[й]  Тогда
						СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + " а также ";
					КонецЕсли;
				КонецЕсли;
				Счетчик = Счетчик + 1;
			Иначе
				Если Счетчик = 1 ИЛИ Счетчик = 2 Тогда
					СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + Строка(ИнвесторыФЛ[й]) + ", и ";
				Иначе 
					СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + Строка(ИнвесторыФЛ[й]) + ", ";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	    ИнвесторЗаказчик = Ложь;
	КонецЦикла;
	
	СтрокаЗаказчикиФЛ = СтрЗаменить(СтрокаЗаказчикиФЛ,", и  а"," а ");
	СтроказаказчикиФЛ = СтрЗаменить(СтрокаЗаказчикиФЛ,", , и",",");
	СтрокаИнвесторыФЛ = СтрЗаменить(СтрокаИнвесторыФЛ,", и  а"," а ");
	СтрокаИнвесторыФЛ = СтрЗаменить(СтрокаИнвесторыФЛ,", , и",",");
	
	ИнвесторыЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковЮрЛица(Договор, Ложь);
	ЗаказчикиЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковЮрЛица(Договор);
	
	//Формирование строки Инвесторов ЮрЛиц
	Для й=0 по ЗаказчикиЮЛ.ВГраница() Цикл
		Для к=0 по ИнвесторыЮЛ.ВГраница() Цикл
			Если ИнвесторыЮЛ[к] = ЗаказчикиЮЛ[й] Тогда
				ЗаказчикИнвестор = Истина;
				ИндексИнвЗакЮЛ.Добавить(к);
			КонецЕсли;
		КонецЦикла;
		Если НЕ ЗаказчикИнвестор Тогда
			СтрокаЗаказчикиЮЛ = Строка(СтрокаЗаказчикиЮЛ) + Строка(ЗаказчикиЮЛ[й]) + ", ";
		КонецЕсли;
		ЗаказчикИнвестор = Ложь;
	КонецЦикла;
	
	//Формирование строки Заказчика - Инвестора ЮрЛиц
	Для й=0 по ИндексИнвЗакЮЛ.ВГраница() Цикл
		СтрокаИнвЗакЮЛ = Строка(СтрокаИнвЗакЮЛ) + Строка(ИнвесторыЮЛ[ИндексИнвЗакЮЛ[й]]) + ", "; 
		ЗаказчикИнвесторМ.Добавить(ИнвесторыЮЛ[ИндексИнвЗакЮЛ[й]]);
	КонецЦикла;
	
	//Формирование строки Инвестора ЮрЛиц
	ИнвесторЗаказчик = Ложь;
	Для й=0 по ИнвесторыЮЛ.ВГраница() Цикл
		Для к=0 по ИндексИнвЗакЮЛ.ВГраница() Цикл
			Если ИндексИнвЗакЮЛ[к]=й Тогда
				ИнвесторЗаказчик = Истина;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ИнвесторЗаказчик Тогда
			СтрокаИнвесторыЮЛ = Строка(СтрокаИнвесторыЮЛ) + Строка(ИнвесторыЮЛ[й]) + ", ";
		КонецЕсли;
	    ИнвесторЗаказчик = Ложь;
	КонецЦикла;
	
	СтрокаЗаказчикиФЛ = ?(СтрокаЗаказчикиФЛ <> "", Строка(СтрокаЗаказчикиФЛ) + "именуемые ", Строка(СтрокаЗаказчикиФЛ) + "именуемый ");
	СтрокаИнвЗакФЛ    = ?(СтрокаИнвЗакФЛ <> "", Строка(СтрокаИнвЗакФЛ) + "именуемые ", Строка(СтрокаИнвЗакФЛ) + "именуемый "); 
	СтрокаИнвесторыФЛ = ?(СтрокаИнвесторыФЛ<>"", Строка(СтрокаИнвесторыФЛ) + "именуемые ", Строка(СтрокаинвесторыФЛ) + "именуемый ");
	
	Организация = Строка(СтрокаЗаказчикиЮЛ) + Строка(СтрокаЗаказчикиФЛ) + "в дальнейшем «Заказчик», ";
	
	Если ИндексИнвЗакЮЛ.Количество() <> 0 ИЛИ ИндексИнвЗакФЛ.Количество()<>0 Тогда
		Организация = Строка(Организация) + " и " + Строка(СтрокаИнвЗакЮЛ) + Строка(СтрокаИнвЗакФЛ) + "в дальнейшем «Заказчик-Инвестор», ";
	КонецЕсли;
	
	Если ИнвесторыЮЛ.Количество() <> ИндексИнвЗакЮЛ.Количество() ИЛИ ИнвесторыФЛ.Количество() <> ИндексИнвЗакФЛ.Количество() Тогда
		Организация = Строка(Организация) + "со второй стороны, и " + Строка(СтрокаИнвесторыЮЛ) + Строка(СтрокаИнвесторыФЛ) + "в дальнейшем «Инвестор», с третьей стороны, ";
	Иначе
		Организация = Строка(Организация) + "со второй стороны, "; 
	КонецЕсли;
	
	Док.Bookmarks("Организация").Range.Text = Организация;
	Док.Bookmarks("Заказчик").Range.Text = Организация;
	
#КонецОбласти	
	
#Область ЗаполнениеТаблицы
	УдалитьЗакладку("СтрокаТаблицы");		
	Этапы = Новый СписокЗначений;
	
	г = ЭтапыДоговора.Количество()-1;
	Пока г<>-1 Цикл
		Этапы.Добавить(ЭтапыДоговора[г],"ЭтапДоговора");
		г = г - 1;
	КонецЦикла;
	
	СуммаДога   = 0;
	НомерСтроки = Этапы.Количество();
	Зашел 		= Ложь;
	СтатьяОсвобождения = Новый Массив;

	Массив = Новый Массив(5);
	Массив[0] = Символ(42);
	Массив[1] = Символ(185);
	Массив[2] = Символ(178);
	Массив[3] = Символ(179);
	Массив[4] = Символ(8308);
	т = 0;
	ОбщиеСроки = 0;
	//Формирование таблицы
	Для каждого Этапа из Этапы Цикл
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		СтруктураСтроки = Гр_ПравилаАвтозаполненияШаблонов.ВозвращаетСтруктуруЭтапаДляТаблицы(Этапа.Значение.ЭтапДоговора);
		СтоимостьЭтапа = СтруктураСтроки.стоимостьЭтапа;
		Если СтруктураСтроки.Вид1 = "" Тогда
			Прервать;
		КонецЕсли;
		Если СтруктураСтроки.Статья <> "" Тогда
			Для й=0 по СтатьяОсвобождения.ВГраница() Цикл
				Если СтруктураСтроки.Статья = СтатьяОсвобождения[й] Тогда
					Зашел = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если Не Зашел Тогда
				Статьяосвобождения.Добавить(СтруктураСтроки.Статья);
				т = т + 1;
			КонецЕсли;
			Зашел = Ложь;
			СтоимостьЭтапа = Строка(СтруктураСтроки.СтоимостьЭтапа) + " " + Массив[0] + Массив[т];			
		КонецЕсли;
		
		Если НЕ СтруктураСтроки.Совместно Тогда
			Если ОбщиеСроки = 0 Тогда
				СрокВыполнения = Строка(СтруктураСтроки.СрокВыполнения) + " " + Строка(СтруктураСтроки.ВидДней);
			Иначе
				СрокВыполнения = "общий срок п. " + Строка(НомерСтроки) + "-" + Строка(НомерСтроки+ОбщиеСроки)+ " " + Строка(СтруктураСтроки.СрокВыполнения) + " " + Строка(СтруктураСтроки.ВидДней);
				ОбщиеСроки = 0;
			КонецЕсли;
		Иначе 
			ОбщиеСроки = ОбщиеСроки + 1;
			СрокВыполнения = "";
		КонецЕсли;
		
		Заменить(Док, "%Номер%",     НомерСтроки);
		Заменить(Док, "%СтоимЭтапа%", Строка(СтоимостьЭтапа));
		Заменить(Док, "%Объект1%",   Строка(СтруктураСтроки.Объект1));
		Заменить(Док, "%Объект2%",   Строка(СтруктураСтроки.Объект2));
		Заменить(Док, "%Вид1%",      Строка(СтруктураСтроки.Вид1));
		Заменить(Док, "%Вид2%",      Строка(СтруктураСтроки.Вид2));
		Заменить(Док, "%СрокВып%",   СрокВыполнения);
				 
		СуммаДога   = СуммаДога + Число(Этапа.Значение.СтоимостьСНДС);
		Статья      = "";
		НомерСтроки = НомерСтроки - 1;
	КонецЦикла;
	
#КонецОбласти	
	
	т = 0;
	Если СтатьяОсвобождения.Количество() <> 0 Тогда
		Для г = 0 по СтатьяОсвобождения.ВГраница() Цикл
			Строки = Строка(Строки) + Массив[0] + Массив[т+1] + " Освобождение от НДС, согласно " + Строка(СтатьяОсвобождения[г]);
			Если г <> СтатьяОсвобождения.ВГраница() Тогда
				Строки = Строка(Строки) +Символы.ВК;
			КонецЕсли;
			т = т + 1;
		КонецЦикла;
		Док.Bookmarks("Сноски").Range.Text = Строки;
	Иначе
		Док.Bookmarks("Сноски").Range.Text = "";
	КонецЕсли;		
	
	СтруктураСтроки = Гр_ПравилаАвтозаполненияШаблонов.ВозвращаетСтруктуруЭтапаДляТаблицы(Этапы[0].Значение.ЭтапДоговора);  
	Заменить(Док, "СуммаОплаты", СокрЛП(мРаботаСДоговорами.СуммаЧисломИПрописью(ЭтапыДоговора[ЭтапыДоговора.Количество()-1].СтоимостьСНДС, ВалютаДоговора)));
	Заменить(Док, "%ВидРаботы%", СтруктураСтроки.Вид1 + СтруктураСтроки.Вид2);
	
	СтоимостьДоговора = Гр_ПравилаАвтозаполненияШаблонов.СтоимостьДоговора(Договор);
	НашиРеквизиты = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьНашиРеквизиты();
	Док.Bookmarks("СтоимостьДоговора").Range.Text    = СтоимостьДоговора;
	Док.bookmarks("Стоимость").Range.Text            = СтоимостьДоговора;
	Док.Bookmarks("ИтогоСумма").Range.Text           = Формат(СуммаДога,"ЧРГ=' '; ЧН=0");	
	Док.Bookmarks("БанкНашейОрганизации").Range.Text = "" + НашиРеквизиты.НашРасчетныйСчет + " УНП:" +НашиРеквизиты.НашУНП + " ";
#область ВыводПодписейЗаказчиковДоговор	
	МассивЗаказчиковЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьРеквизитыЮрЛица(Договор);
	МассивИнвесторовЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьРеквизитыЮрЛица(Договор,Ложь);
	МассивЗаказчиковФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДляПодписиФизЛица(Договор);
	МассивИнвесторовФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДляПодписиФизЛица(Договор, Ложь);

	УдалитьЗакладку("ЗаказчикПодвал");
	к=0;
	Для й=0 по МассивЗаказчиковФЛ.ВГраница() Цикл
		Пока к<>МассивИнвесторовФЛ.Количество() Цикл
			Если МассивЗаказчиковФЛ[й]=МассивИнвесторовФЛ[к] Тогда
				 МассивИнвесторовФЛ.Удалить(к);
				 к=к-1;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", "");
		Заменить(Док,"%КорреспондентКратко%", МассивЗаказчиковФЛ[й]+Символы.ВК);
		к=0;
	КонецЦикла;
	
	Для й=0 по МассивИнвесторовФЛ.ВГраница() Цикл	
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", "");
		Заменить(Док,"%КорреспондентКратко%", МассивИнвесторовФЛ[й]+Символы.ВК);
	КонецЦикла;
	
	Для й=0 по МассивЗаказчиковЮЛ.ВГраница() Цикл
		Пока к<>МассивИнвесторовЮЛ.Количество() Цикл
			Если СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],1) = СтрПолучитьСтроку(МассивИнвесторовЮЛ[к],1) Тогда
				МассивИнвесторовЮЛ.Удалить(к);
				к=к-1;
			КонецЕсли; 
			к=к+1;
		КонецЦикла;
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],8));
		Заменить(Док,"%КорреспондентКратко%", Фамилия(СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],7))+Символы.ВК);
		к=0;
	КонецЦикла;
	
	Для й=0 по МассивИнвесторовЮЛ.ВГраница() Цикл	
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", СтрПолучитьСтроку(МассивИнвесторовЮЛ[й],8));
		Заменить(Док,"%КорреспондентКратко%", Фамилия(СтрПолучитьСтроку(МассивИнвесторовЮЛ[й],7))+Символы.ВК);
	КонецЦикла;
#КонецОбласти

#Область ВыводПодписейЗаказчиковПротокол
	УдалитьЗакладку("ЗаказчикКратко");
	
	Для й=0 по МассивЗаказчиковФЛ.ВГраница() Цикл
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказ", "");
		Заменить(Док,"%ЗаказчикКратко%", МассивЗаказчиковФЛ[й]+Символы.ВК);
	КонецЦикла;
	
	Для й=0 по МассивИнвесторовФЛ.ВГраница() Цикл	
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказ", "");
		Заменить(Док,"%ЗаказчикКратко%", МассивИнвесторовФЛ[й]+Символы.ВК);
	КонецЦикла;
	
	Для й=0 по МассивЗаказчиковЮЛ.ВГраница() Цикл
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказ", СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],8));
		Заменить(Док,"%ЗаказчикКратко%", Фамилия(СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],7))+Символы.ВК);
	КонецЦикла;
	
	Для й=0 по МассивИнвесторовЮЛ.ВГраница() Цикл	
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказ", СтрПолучитьСтроку(МассивИнвесторовЮЛ[й],8));
		Заменить(Док,"%ЗаказчикКратко%", Фамилия(СтрПолучитьСтроку(МассивИнвесторовЮЛ[й],7))+Символы.ВК);
	КонецЦикла; 
#КонецОбласти

#Область ВыводВТекстеЗаказчикИИнвестор
	Если МассивИнвесторовФЛ.Количество()>0 ИЛИ МассивИнвесторовЮЛ.Количество()>0 ИЛИ ЗаказчикИнвесторМ.Количество()>0 Тогда
		Заменить(Док, "%КопийДвух%", "трех");
		Если ВозвратПроцентаИнвестора(Договор) тогда
			Заменить(Док, "%Инвестором%", "Инвестором");
		Иначе
			Заменить(Док, "%Инвестором%", "Заказчиком и Инвестором");
		КонецЕсли;		
	Иначе
		Заменить(Док, "%КопийДвух%", "двух");
		Заменить(Док, "%Инвестором%", "Заказчиком");
	КонецЕсли;
#КонецОбласти
	
	ВывестиДокумент();

КонецПроцедуры

&НаКлиенте
Процедура ГродноДопСоглЮЛСтоимостьМЭтап()
	ПолучитьОбщиеДанныеДоговора();
	
	Подписи = ПолучитьПодписиПодрядчика(Договор);
	
	ИнициализироватьДокументWord();
	
	// Заполнение доп. соглашения
	Руководитель = Гр_ПравилаАвтозаполненияШаблонов.ВозвращетСтрокуНашегоРуководителя();
	
	Заменить(Док, "РегНомерДата",          Строка(НомерДоговора) + " от " + Формат(ДатаДоговора,"ДФ=dd.MM.yyyy"));
	Заменить(Док, "ДеньДатаДС",            Формат(ТекущаяДата(),"ДФ=дд"));
	Заменить(Док, "МесяцДатаДС",           НРег(СклонениеПоПадежам.обСклонениеСтроки(Формат(ТекущаяДата(),"ДФ=ММММ"), "Р", "Должность"))+" "+Формат(ТекущаяДата(),"ДФ=гггг"));
	Заменить(Док, "%ДатаДС",               Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy"));
	Заменить(Док, "ДатаДС",                Формат(ТекущаяДата(),"ДЛФ=DD"));
	Заменить(Док, "%ДолжностьПодрядчика%", Подписи.ПодписалДолжность); 
	Заменить(Док, "УтвердилКратко1",       Подписи.ПодписалКратко);

	
	Док.Bookmarks("Руководитель").Range.Text  = Руководитель;
	Док.Bookmarks("Рукв").Range.Text          = Руководитель;
	
#Область ВыводШапкиЗаказчиков
	Счетчик = 0;
	ЗаказчикиФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковДоговораФизЛиц(Договор);	
	ИнвесторыФЛ = Гр_ПравилаАвтозаполненияшаблонов.ПолучитьШапкуЗаказчиковДоговораФизЛиц(Договор,Ложь);
	
	СтрокаЗаказчикиФЛ = "";
	СтрокаИнвесторыФЛ = "";
	СтрокаИнвЗакФЛ    = "";
	
	ЗаказчикИнвестор  = Ложь;
	ИндексИнвЗакЮЛ    = Новый Массив;
	ИндексИнвЗакФЛ    = Новый Массив;
	ЗаказчикИнвесторМ = Новый Массив;
	
	//формирование строки Закзачиков ФизЛиц
	Для й=0 по ЗаказчикиФЛ.ВГраница() Цикл
		Для к=0 по ИнвесторыФЛ.ВГраница() Цикл
			Если ИнвесторыФЛ[к] = ЗаказчикиФЛ[й] и ЗаказчикиФЛ[й]<>"Стоп" Тогда
				ЗаказчикИнвестор = Истина;
				ИндексИнвЗакФЛ.Добавить(к);
			КонецЕсли;
		КонецЦикла;
		Если НЕ ЗаказчикИнвестор Тогда
			Если ЗаказчикиФЛ[й] = "Стоп" Тогда
				Если й <> 0 И й <> ЗаказчикиФЛ.ВГраница() тогда
					Если ЗаказчикиФЛ[й] <> ЗаказчикиФЛ[й+1] и ЗаказчикиФЛ[й-1]<>ЗаказчикиФЛ[й]  Тогда
						СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + " а также ";
					КонецЕсли;
				КонецЕсли;
				Счетчик = Счетчик + 1;
			Иначе
				Если Счетчик = 1 ИЛИ Счетчик = 2 Тогда
					СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + Строка(ЗаказчикиФЛ[й]) + ", и ";
				Иначе 
					СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + Строка(ЗаказчикиФЛ[й]) + ", ";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		ЗаказчикИнвестор = Ложь;
	КонецЦикла;
	
	//формирование строки Заказчика - Инвестора ФизЛиц
	Для й=0 по ИндексИнвЗакФЛ.ВГраница() Цикл
		СтрокаИнвЗакФЛ = Строка(СтрокаИнвЗакФЛ) + Строка(ИнвесторыФЛ[ИндексИнвЗакФЛ[й]]) + ", "; 
		ЗаказчикИнвесторМ.Добавить(ИнвесторыФЛ[ИндексИнвЗакФЛ[й]]);
	КонецЦикла;
	
	ИнвесторЗаказчик = Ложь;
	
	//формирование строки Инвесторов ФизЛиц
	Для й=0 по ИнвесторыФЛ.ВГраница() Цикл
		Для к=0 по ИндексИнвЗакФЛ.ВГраница() Цикл
			Если ИндексИнвЗакФЛ[к]=й Тогда
				ИнвесторЗаказчик = Истина;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ИнвесторЗаказчик Тогда
			Если ИнвесторыФЛ[й] = "Стоп" Тогда
				Если й <> 0 И й <> ИнвесторыФЛ.ВГраница() тогда
					Если ИнвесторыФЛ[й] <> ИнвесторыФЛ[й+1] и ИнвесторыФЛ[й-1] <> ИнвесторыФЛ[й]  Тогда
						СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + " а также ";
					КонецЕсли;
				КонецЕсли;
				Счетчик = Счетчик + 1;
			Иначе
				Если Счетчик = 1 ИЛИ Счетчик = 2 Тогда
					СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + Строка(ИнвесторыФЛ[й]) + ", и ";
				Иначе 
					СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + Строка(ИнвесторыФЛ[й]) + ", ";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	    ИнвесторЗаказчик = Ложь;
	КонецЦикла;
	
	СтрокаЗаказчикиФЛ = СтрЗаменить(СтрокаЗаказчикиФЛ,", и  а"," а ");
	СтроказаказчикиФЛ = СтрЗаменить(СтрокаЗаказчикиФЛ,", , и",",");
	СтрокаИнвесторыФЛ = СтрЗаменить(СтрокаИнвесторыФЛ,", и  а"," а ");
	СтрокаИнвесторыФЛ = СтрЗаменить(СтрокаИнвесторыФЛ,", , и",",");
	
	ИнвесторыЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковЮрЛица(Договор, Ложь);
	ЗаказчикиЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковЮрЛица(Договор);
	
	//Формирование строки Инвесторов ЮрЛиц
	Для й=0 по ЗаказчикиЮЛ.ВГраница() Цикл
		Для к=0 по ИнвесторыЮЛ.ВГраница() Цикл
			Если ИнвесторыЮЛ[к] = ЗаказчикиЮЛ[й] Тогда
				ЗаказчикИнвестор = Истина;
				ИндексИнвЗакЮЛ.Добавить(к);
			КонецЕсли;
		КонецЦикла;
		Если НЕ ЗаказчикИнвестор Тогда
			СтрокаЗаказчикиЮЛ = Строка(СтрокаЗаказчикиЮЛ) + Строка(ЗаказчикиЮЛ[й]) + ", ";
		КонецЕсли;
		ЗаказчикИнвестор = Ложь;
	КонецЦикла;
	
	//Формирование строки Заказчика - Инвестора ЮрЛиц
	Для й=0 по ИндексИнвЗакЮЛ.ВГраница() Цикл
		СтрокаИнвЗакЮЛ = Строка(СтрокаИнвЗакЮЛ) + Строка(ИнвесторыЮЛ[ИндексИнвЗакЮЛ[й]]) + ", "; 
		ЗаказчикИнвесторМ.Добавить(ИнвесторыЮЛ[ИндексИнвЗакЮЛ[й]]);
	КонецЦикла;
	
	//Формирование строки Инвестора ЮрЛиц
	ИнвесторЗаказчик = Ложь;
	Для й=0 по ИнвесторыЮЛ.ВГраница() Цикл
		Для к=0 по ИндексИнвЗакЮЛ.ВГраница() Цикл
			Если ИндексИнвЗакЮЛ[к]=й Тогда
				ИнвесторЗаказчик = Истина;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ИнвесторЗаказчик Тогда
			СтрокаИнвесторыЮЛ = Строка(СтрокаИнвесторыЮЛ) + Строка(ИнвесторыЮЛ[й]) + ", ";
		КонецЕсли;
	    ИнвесторЗаказчик = Ложь;
	КонецЦикла;
	
	СтрокаЗаказчикиФЛ = ?(СтрокаЗаказчикиФЛ <> "", Строка(СтрокаЗаказчикиФЛ) + "именуемые ", Строка(СтрокаЗаказчикиФЛ) + "именуемый ");
	СтрокаИнвЗакФЛ    = ?(СтрокаИнвЗакФЛ <> "", Строка(СтрокаИнвЗакФЛ) + "именуемые ", Строка(СтрокаИнвЗакФЛ) + "именуемый "); 
	СтрокаИнвесторыФЛ = ?(СтрокаИнвесторыФЛ<>"", Строка(СтрокаИнвесторыФЛ) + "именуемые ", Строка(СтрокаинвесторыФЛ) + "именуемый ");
	
	Организация = Строка(СтрокаЗаказчикиЮЛ) + Строка(СтрокаЗаказчикиФЛ) + "в дальнейшем «Заказчик», ";
	
	Если ИндексИнвЗакЮЛ.Количество() <> 0 ИЛИ ИндексИнвЗакФЛ.Количество()<>0 Тогда
		Организация = Строка(Организация) + " и " + Строка(СтрокаИнвЗакЮЛ) + Строка(СтрокаИнвЗакФЛ) + "в дальнейшем «Заказчик-Инвестор», ";
	КонецЕсли;
	
	Если ИнвесторыЮЛ.Количество() <> ИндексИнвЗакЮЛ.Количество() ИЛИ ИнвесторыФЛ.Количество() <> ИндексИнвЗакФЛ.Количество() Тогда
		Организация = Строка(Организация) + "со второй стороны, и " + Строка(СтрокаИнвесторыЮЛ) + Строка(СтрокаИнвесторыФЛ) + "в дальнейшем «Инвестор», с третьей стороны, ";
	Иначе
		Организация = Строка(Организация) + "со второй стороны, "; 
	КонецЕсли;
	
	Док.Bookmarks("Организация").Range.Text = Организация;
	Док.Bookmarks("Заказчик").Range.Text = Организация;
	
#КонецОбласти	
	
#Область ЗаполнениеТаблицы
	УдалитьЗакладку("СтрокаТаблицы");		
	Этапы = Новый СписокЗначений;
	
	г = ЭтапыДоговора.Количество()-1;
	Пока г<>-1 Цикл
		Этапы.Добавить(ЭтапыДоговора[г],"ЭтапДоговора");
		г = г - 1;
	КонецЦикла;
	
	СуммаДога   = 0;
	НомерСтроки = Этапы.Количество();
	Зашел 		= Ложь;
	СтатьяОсвобождения = Новый Массив;

	Массив = Новый Массив(5);
	Массив[0] = Символ(42);
	Массив[1] = Символ(185);
	Массив[2] = Символ(178);
	Массив[3] = Символ(179);
	Массив[4] = Символ(8308);
	т = 0;
	ОбщиеСроки = 0;
	//Формирование таблицы
	Для каждого Этапа из Этапы Цикл
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		СтруктураСтроки = Гр_ПравилаАвтозаполненияШаблонов.ВозвращаетСтруктуруЭтапаДляТаблицы(Этапа.Значение.ЭтапДоговора);
		СтоимостьЭтапа = СтруктураСтроки.стоимостьЭтапа;
		Если СтруктураСтроки.Вид1 = "" Тогда
			Прервать;
		КонецЕсли;
		Если СтруктураСтроки.Статья <> "" Тогда
			Для й=0 по СтатьяОсвобождения.ВГраница() Цикл
				Если СтруктураСтроки.Статья = СтатьяОсвобождения[й] Тогда
					Зашел = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если Не Зашел Тогда
				Статьяосвобождения.Добавить(СтруктураСтроки.Статья);
				т = т + 1;
			КонецЕсли;
			Зашел = Ложь;
			СтоимостьЭтапа = Строка(СтруктураСтроки.СтоимостьЭтапа) + " " + Массив[0] + Массив[т];			
		КонецЕсли;
		
		Если НЕ СтруктураСтроки.Совместно Тогда
			Если ОбщиеСроки = 0 Тогда
				СрокВыполнения = Строка(СтруктураСтроки.СрокВыполнения) + " " + Строка(СтруктураСтроки.ВидДней);
			Иначе
				СрокВыполнения = "общий срок п. " + Строка(НомерСтроки) + "-" + Строка(НомерСтроки+ОбщиеСроки)+ " " + Строка(СтруктураСтроки.СрокВыполнения) + " " + Строка(СтруктураСтроки.ВидДней);
				ОбщиеСроки = 0;
			КонецЕсли;
		Иначе 
			ОбщиеСроки = ОбщиеСроки + 1;
			СрокВыполнения = "";
		КонецЕсли;
		
		Заменить(Док, "%Номер%",     НомерСтроки);
		Заменить(Док, "%СтоимЭтапа%", Строка(СтоимостьЭтапа));
		Заменить(Док, "%Объект1%",   Строка(СтруктураСтроки.Объект1));
		Заменить(Док, "%Объект2%",   Строка(СтруктураСтроки.Объект2));
		Заменить(Док, "%Вид1%",      Строка(СтруктураСтроки.Вид1));
		Заменить(Док, "%Вид2%",      Строка(СтруктураСтроки.Вид2));
		Заменить(Док, "%СрокВып%",   СрокВыполнения);
				 
		СуммаДога   = СуммаДога + Число(Этапа.Значение.СтоимостьСНДС);
		Статья      = "";
		НомерСтроки = НомерСтроки - 1;
	КонецЦикла;
#КонецОбласти

	т = 0;
	Если СтатьяОсвобождения.Количество() <> 0 Тогда
		Для г = 0 по СтатьяОсвобождения.ВГраница() Цикл
			Строки = Строка(Строки) + Массив[0] + Массив[т+1] + " Освобождение от НДС, согласно " + Строка(СтатьяОсвобождения[г]);
			Если г <> СтатьяОсвобождения.ВГраница() Тогда
				Строки = Строка(Строки) +Символы.ВК;
			КонецЕсли;
			т = т + 1;
		КонецЦикла;
		Док.Bookmarks("Сноски").Range.Text = Строки;
	Иначе
		Док.Bookmarks("Сноски").Range.Text = "";
	КонецЕсли;	
	
	СтоимостьДоговора = Гр_ПравилаАвтозаполненияШаблонов.СтоимостьДоговора(Договор);
	Док.Bookmarks("СтоимостьДоговора").Range.Text = СтоимостьДоговора;
	Док.bookmarks("Стоимость").Range.Text         = СтоимостьДоговора;
	Док.Bookmarks("ИтогоСумма").Range.Text        = Формат(СуммаДога,"ЧРГ=' '; ЧН=0");	
	
#область ВыводПодписейЗаказчиковДоговор	
	МассивЗаказчиковЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьРеквизитыЮрЛица(Договор);
	МассивИнвесторовЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьРеквизитыЮрЛица(Договор,Ложь);
	МассивЗаказчиковФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДляПодписиФизЛица(Договор);
	МассивИнвесторовФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДляПодписиФизЛица(Договор, Ложь);

	УдалитьЗакладку("ЗаказчикПодвал");
	к=0;
	Для й=0 по МассивЗаказчиковФЛ.ВГраница() Цикл
		Пока к<>МассивИнвесторовФЛ.Количество() Цикл
			Если МассивЗаказчиковФЛ[й]=МассивИнвесторовФЛ[к] Тогда
				 МассивИнвесторовФЛ.Удалить(к);
				 к=к-1;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", "");
		Заменить(Док,"%КорреспондентКратко%", МассивЗаказчиковФЛ[й]+Символы.ВК);
		к=0;
	КонецЦикла;
	
	Для й=0 по МассивИнвесторовФЛ.ВГраница() Цикл	
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", "");
		Заменить(Док,"%КорреспондентКратко%", МассивИнвесторовФЛ[й]+Символы.ВК);
	КонецЦикла;
	
	Для й=0 по МассивЗаказчиковЮЛ.ВГраница() Цикл
		Пока к<>МассивИнвесторовЮЛ.Количество() Цикл
			Если СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],1) = СтрПолучитьСтроку(МассивИнвесторовЮЛ[к],1) Тогда
				МассивИнвесторовЮЛ.Удалить(к);
				к=к-1;
			КонецЕсли; 
			к=к+1;
		КонецЦикла;
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],8));
		Заменить(Док,"%КорреспондентКратко%", Фамилия(СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],7))+Символы.ВК);
		к=0;
	КонецЦикла;
	
	Для й=0 по МассивИнвесторовЮЛ.ВГраница() Цикл	
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", СтрПолучитьСтроку(МассивИнвесторовЮЛ[й],8));
		Заменить(Док,"%КорреспондентКратко%", Фамилия(СтрПолучитьСтроку(МассивИнвесторовЮЛ[й],7))+Символы.ВК);
	КонецЦикла;
#КонецОбласти

#Область ВыводПодписейЗаказчиковПротокол
	УдалитьЗакладку("ЗаказчикКратко");
	
	Для й=0 по МассивЗаказчиковФЛ.ВГраница() Цикл
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказ", "");
		Заменить(Док,"%ЗаказчикКратко%", МассивЗаказчиковФЛ[й]+Символы.ВК);
	КонецЦикла;
	
	Для й=0 по МассивИнвесторовФЛ.ВГраница() Цикл	
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказ", "");
		Заменить(Док,"%ЗаказчикКратко%", МассивИнвесторовФЛ[й]+Символы.ВК);
	КонецЦикла;
	
	Для й=0 по МассивЗаказчиковЮЛ.ВГраница() Цикл
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказ", СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],8));
		Заменить(Док,"%ЗаказчикКратко%", Фамилия(СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],7))+Символы.ВК);
	КонецЦикла;
	
	Для й=0 по МассивИнвесторовЮЛ.ВГраница() Цикл	
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказ", СтрПолучитьСтроку(МассивИнвесторовЮЛ[й],8));
		Заменить(Док,"%ЗаказчикКратко%", Фамилия(СтрПолучитьСтроку(МассивИнвесторовЮЛ[й],7))+Символы.ВК);
	КонецЦикла; 
#КонецОбласти

#Область ВыводВТекстеЗаказчикИИнвестор
	Если МассивИнвесторовФЛ.Количество()>0 ИЛИ МассивИнвесторовЮЛ.Количество()>0 ИЛИ ЗаказчикИнвесторМ.Количество()>0 Тогда
		Заменить(Док, "%КопийДвух%", "трех");
		Если ВозвратПроцентаИнвестора(Договор) тогда
			Заменить(Док, "%Инвестором%", "Инвестором");
		Иначе
			Заменить(Док, "%Инвестором%", "Заказчиком и Инвестором");
		КонецЕсли;		
	Иначе
		Заменить(Док, "%КопийДвух%", "двух");
		Заменить(Док, "%Инвестором%", "Заказчиком");
	КонецЕсли;
#КонецОбласти
	
	ВывестиДокумент();

КонецПроцедуры

&НаКлиенте
Процедура ГродноДопСоглЮЛПоФактуОкончСрок()
	ПолучитьОбщиеДанныеДоговора();
	
	Подписи = ПолучитьПодписиПодрядчика(Договор);
	
	ИнициализироватьДокументWord();
	
	// Заполнение доп. соглашения
	Руководитель = Гр_ПравилаАвтозаполненияШаблонов.ВозвращетСтрокуНашегоРуководителя();
	
	Заменить(Док, "РегНомерДата",          Строка(НомерДоговора) + " от " + Формат(ДатаДоговора,"ДФ=dd.MM.yyyy"));
	Заменить(Док, "ДеньДатаДС",            Формат(ТекущаяДата(),"ДФ=дд"));
	Заменить(Док, "МесяцДатаДС",           НРег(СклонениеПоПадежам.обСклонениеСтроки(Формат(ТекущаяДата(),"ДФ=ММММ"), "Р", "Должность"))+" "+Формат(ТекущаяДата(),"ДФ=гггг"));
	Заменить(Док, "%ДатаДС",               Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy"));
	Заменить(Док, "ДатаДС",                Формат(ТекущаяДата(),"ДЛФ=DD"));
	Заменить(Док, "%ДолжностьПодрядчика%", Подписи.ПодписалДолжность); 
	Заменить(Док, "УтвердилКратко1",       Подписи.ПодписалКратко);
	Заменить(Док, "%РегНомер%",            Строка(НомерДоговора));
		
	Док.Bookmarks("Руководитель").Range.Text  = Руководитель;
	Док.Bookmarks("Рукв").Range.Text          = Руководитель;
	
#Область ВыводШапкиЗаказчиков
	Счетчик = 0;
	ЗаказчикиФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковДоговораФизЛиц(Договор);	
	ИнвесторыФЛ = Гр_ПравилаАвтозаполненияшаблонов.ПолучитьШапкуЗаказчиковДоговораФизЛиц(Договор,Ложь);
	
	СтрокаЗаказчикиФЛ = "";
	СтрокаИнвесторыФЛ = "";
	СтрокаИнвЗакФЛ    = "";
	
	ЗаказчикИнвестор  = Ложь;
	ИндексИнвЗакЮЛ    = Новый Массив;
	ИндексИнвЗакФЛ    = Новый Массив;
	ЗаказчикИнвесторМ = Новый Массив;
	
	//формирование строки Закзачиков ФизЛиц
	Для й=0 по ЗаказчикиФЛ.ВГраница() Цикл
		Для к=0 по ИнвесторыФЛ.ВГраница() Цикл
			Если ИнвесторыФЛ[к] = ЗаказчикиФЛ[й] и ЗаказчикиФЛ[й]<>"Стоп" Тогда
				ЗаказчикИнвестор = Истина;
				ИндексИнвЗакФЛ.Добавить(к);
			КонецЕсли;
		КонецЦикла;
		Если НЕ ЗаказчикИнвестор Тогда
			Если ЗаказчикиФЛ[й] = "Стоп" Тогда
				Если й <> 0 И й <> ЗаказчикиФЛ.ВГраница() тогда
					Если ЗаказчикиФЛ[й] <> ЗаказчикиФЛ[й+1] и ЗаказчикиФЛ[й-1]<>ЗаказчикиФЛ[й]  Тогда
						СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + " а также ";
					КонецЕсли;
				КонецЕсли;
				Счетчик = Счетчик + 1;
			Иначе
				Если Счетчик = 1 ИЛИ Счетчик = 2 Тогда
					СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + Строка(ЗаказчикиФЛ[й]) + ", и ";
				Иначе 
					СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + Строка(ЗаказчикиФЛ[й]) + ", ";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		ЗаказчикИнвестор = Ложь;
	КонецЦикла;
	
	//формирование строки Заказчика - Инвестора ФизЛиц
	Для й=0 по ИндексИнвЗакФЛ.ВГраница() Цикл
		СтрокаИнвЗакФЛ = Строка(СтрокаИнвЗакФЛ) + Строка(ИнвесторыФЛ[ИндексИнвЗакФЛ[й]]) + ", "; 
		ЗаказчикИнвесторМ.Добавить(ИнвесторыФЛ[ИндексИнвЗакФЛ[й]]);
	КонецЦикла;
	
	ИнвесторЗаказчик = Ложь;
	
	//формирование строки Инвесторов ФизЛиц
	Для й=0 по ИнвесторыФЛ.ВГраница() Цикл
		Для к=0 по ИндексИнвЗакФЛ.ВГраница() Цикл
			Если ИндексИнвЗакФЛ[к]=й Тогда
				ИнвесторЗаказчик = Истина;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ИнвесторЗаказчик Тогда
			Если ИнвесторыФЛ[й] = "Стоп" Тогда
				Если й <> 0 И й <> ИнвесторыФЛ.ВГраница() тогда
					Если ИнвесторыФЛ[й] <> ИнвесторыФЛ[й+1] и ИнвесторыФЛ[й-1] <> ИнвесторыФЛ[й]  Тогда
						СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + " а также ";
					КонецЕсли;
				КонецЕсли;
				Счетчик = Счетчик + 1;
			Иначе
				Если Счетчик = 1 ИЛИ Счетчик = 2 Тогда
					СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + Строка(ИнвесторыФЛ[й]) + ", и ";
				Иначе 
					СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + Строка(ИнвесторыФЛ[й]) + ", ";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	    ИнвесторЗаказчик = Ложь;
	КонецЦикла;
	
	СтрокаЗаказчикиФЛ = СтрЗаменить(СтрокаЗаказчикиФЛ,", и  а"," а ");
	СтроказаказчикиФЛ = СтрЗаменить(СтрокаЗаказчикиФЛ,", , и",",");
	СтрокаИнвесторыФЛ = СтрЗаменить(СтрокаИнвесторыФЛ,", и  а"," а ");
	СтрокаИнвесторыФЛ = СтрЗаменить(СтрокаИнвесторыФЛ,", , и",",");
	
	ИнвесторыЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковЮрЛица(Договор, Ложь);
	ЗаказчикиЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковЮрЛица(Договор);
	
	//Формирование строки Инвесторов ЮрЛиц
	Для й=0 по ЗаказчикиЮЛ.ВГраница() Цикл
		Для к=0 по ИнвесторыЮЛ.ВГраница() Цикл
			Если ИнвесторыЮЛ[к] = ЗаказчикиЮЛ[й] Тогда
				ЗаказчикИнвестор = Истина;
				ИндексИнвЗакЮЛ.Добавить(к);
			КонецЕсли;
		КонецЦикла;
		Если НЕ ЗаказчикИнвестор Тогда
			СтрокаЗаказчикиЮЛ = Строка(СтрокаЗаказчикиЮЛ) + Строка(ЗаказчикиЮЛ[й]) + ", ";
		КонецЕсли;
		ЗаказчикИнвестор = Ложь;
	КонецЦикла;
	
	//Формирование строки Заказчика - Инвестора ЮрЛиц
	Для й=0 по ИндексИнвЗакЮЛ.ВГраница() Цикл
		СтрокаИнвЗакЮЛ = Строка(СтрокаИнвЗакЮЛ) + Строка(ИнвесторыЮЛ[ИндексИнвЗакЮЛ[й]]) + ", "; 
		ЗаказчикИнвесторМ.Добавить(ИнвесторыЮЛ[ИндексИнвЗакЮЛ[й]]);
	КонецЦикла;
	
	//Формирование строки Инвестора ЮрЛиц
	ИнвесторЗаказчик = Ложь;
	Для й=0 по ИнвесторыЮЛ.ВГраница() Цикл
		Для к=0 по ИндексИнвЗакЮЛ.ВГраница() Цикл
			Если ИндексИнвЗакЮЛ[к]=й Тогда
				ИнвесторЗаказчик = Истина;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ИнвесторЗаказчик Тогда
			СтрокаИнвесторыЮЛ = Строка(СтрокаИнвесторыЮЛ) + Строка(ИнвесторыЮЛ[й]) + ", ";
		КонецЕсли;
	    ИнвесторЗаказчик = Ложь;
	КонецЦикла;
	
	СтрокаЗаказчикиФЛ = ?(СтрокаЗаказчикиФЛ <> "", Строка(СтрокаЗаказчикиФЛ) + "именуемые ", Строка(СтрокаЗаказчикиФЛ) + "именуемый ");
	СтрокаИнвЗакФЛ    = ?(СтрокаИнвЗакФЛ <> "", Строка(СтрокаИнвЗакФЛ) + "именуемые ", Строка(СтрокаИнвЗакФЛ) + "именуемый "); 
	СтрокаИнвесторыФЛ = ?(СтрокаИнвесторыФЛ<>"", Строка(СтрокаИнвесторыФЛ) + "именуемые ", Строка(СтрокаинвесторыФЛ) + "именуемый ");
	
	Организация = Строка(СтрокаЗаказчикиЮЛ) + Строка(СтрокаЗаказчикиФЛ) + "в дальнейшем «Заказчик», ";
	
	Если ИндексИнвЗакЮЛ.Количество() <> 0 ИЛИ ИндексИнвЗакФЛ.Количество()<>0 Тогда
		Организация = Строка(Организация) + " и " + Строка(СтрокаИнвЗакЮЛ) + Строка(СтрокаИнвЗакФЛ) + "в дальнейшем «Заказчик-Инвестор», ";
	КонецЕсли;
	
	Если ИнвесторыЮЛ.Количество() <> ИндексИнвЗакЮЛ.Количество() ИЛИ ИнвесторыФЛ.Количество() <> ИндексИнвЗакФЛ.Количество() Тогда
		Организация = Строка(Организация) + "со второй стороны, и " + Строка(СтрокаИнвесторыЮЛ) + Строка(СтрокаИнвесторыФЛ) + "в дальнейшем «Инвестор», с третьей стороны, ";
	Иначе
		Организация = Строка(Организация) + "со второй стороны, "; 
	КонецЕсли;
	
	Док.Bookmarks("Организация").Range.Text = Организация;
	Док.Bookmarks("Заказчик").Range.Text = Организация;
	
#КонецОбласти	
	
#Область ЗаполнениеТаблицы
	УдалитьЗакладку("СтрокаТаблицы");		
	Этапы = Новый СписокЗначений;
	
	г = ЭтапыДоговора.Количество()-1;
	Пока г<>-1 Цикл
		Этапы.Добавить(ЭтапыДоговора[г],"ЭтапДоговора");
		г = г - 1;
	КонецЦикла;
	
	СуммаДога   = 0;
	НомерСтроки = Этапы.Количество();
	Зашел 		= Ложь;
	СтатьяОсвобождения = Новый Массив;

	Массив = Новый Массив(5);
	Массив[0] = Символ(42);
	Массив[1] = Символ(185);
	Массив[2] = Символ(178);
	Массив[3] = Символ(179);
	Массив[4] = Символ(8308);
	т = 0;
	ОбщиеСроки = 0;
	//Формирование таблицы
	Для каждого Этапа из Этапы Цикл
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		СтруктураСтроки = Гр_ПравилаАвтозаполненияШаблонов.ВозвращаетСтруктуруЭтапаДляТаблицы(Этапа.Значение.ЭтапДоговора);
		СтоимостьЭтапа = СтруктураСтроки.стоимостьЭтапа;
		Если СтруктураСтроки.Вид1 = "" Тогда
			Прервать;
		КонецЕсли;
		Если СтруктураСтроки.Статья <> "" Тогда
			Для й=0 по СтатьяОсвобождения.ВГраница() Цикл
				Если СтруктураСтроки.Статья = СтатьяОсвобождения[й] Тогда
					Зашел = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если Не Зашел Тогда
				Статьяосвобождения.Добавить(СтруктураСтроки.Статья);
				т = т + 1;
			КонецЕсли;
			Зашел = Ложь;
			СтоимостьЭтапа = Строка(СтруктураСтроки.СтоимостьЭтапа) + " " + Массив[0] + Массив[т];			
		КонецЕсли;
		
		Если НЕ СтруктураСтроки.Совместно Тогда
			Если ОбщиеСроки = 0 Тогда
				СрокВыполнения = Строка(СтруктураСтроки.СрокВыполнения) + " " + Строка(СтруктураСтроки.ВидДней);
			Иначе
				СрокВыполнения = "общий срок п. " + Строка(НомерСтроки) + "-" + Строка(НомерСтроки+ОбщиеСроки)+ " " + Строка(СтруктураСтроки.СрокВыполнения) + " " + Строка(СтруктураСтроки.ВидДней);
				ОбщиеСроки = 0;
			КонецЕсли;
		Иначе 
			ОбщиеСроки = ОбщиеСроки + 1;
			СрокВыполнения = "";
		КонецЕсли;
		
		Заменить(Док, "%Номер%",     НомерСтроки);
		Заменить(Док, "%СтоимЭтапа%", Строка(СтоимостьЭтапа));
		Заменить(Док, "%Объект1%",   Строка(СтруктураСтроки.Объект1));
		Заменить(Док, "%Объект2%",   Строка(СтруктураСтроки.Объект2));
		Заменить(Док, "%Вид1%",      Строка(СтруктураСтроки.Вид1));
		Заменить(Док, "%Вид2%",      Строка(СтруктураСтроки.Вид2));
		Заменить(Док, "%СрокВып%",   СрокВыполнения);
				 
		СуммаДога   = СуммаДога + Число(Этапа.Значение.СтоимостьСНДС);
		Статья      = "";
		НомерСтроки = НомерСтроки - 1;
	КонецЦикла;
#КонецОбласти

	т = 0;
	Если СтатьяОсвобождения.Количество() <> 0 Тогда
		Для г = 0 по СтатьяОсвобождения.ВГраница() Цикл
			Строки = Строка(Строки) + Массив[0] + Массив[т+1] + " Освобождение от НДС, согласно " + Строка(СтатьяОсвобождения[г]);
			Если г <> СтатьяОсвобождения.ВГраница() Тогда
				Строки = Строка(Строки) +Символы.ВК;
			КонецЕсли;
			т = т + 1;
		КонецЦикла;
		Док.Bookmarks("Сноски").Range.Text = Строки;
	Иначе
		Док.Bookmarks("Сноски").Range.Text = "";
	КонецЕсли;	
	
	СтоимостьДоговора = Гр_ПравилаАвтозаполненияШаблонов.СтоимостьДоговора(Договор);
	Док.Bookmarks("СтоимостьДоговора").Range.Text = СтоимостьДоговора;
	Док.bookmarks("Стоимость").Range.Text         = СтоимостьДоговора;
	Док.Bookmarks("ИтогоСумма").Range.Text        = Формат(СуммаДога,"ЧРГ=' '; ЧН=0");	
	
#область ВыводПодписейЗаказчиковДоговор	
	МассивЗаказчиковЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьРеквизитыЮрЛица(Договор);
	МассивИнвесторовЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьРеквизитыЮрЛица(Договор,Ложь);
	МассивЗаказчиковФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДляПодписиФизЛица(Договор);
	МассивИнвесторовФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДляПодписиФизЛица(Договор, Ложь);

	УдалитьЗакладку("ЗаказчикПодвал");
	к=0;
	Для й=0 по МассивЗаказчиковФЛ.ВГраница() Цикл
		Пока к<>МассивИнвесторовФЛ.Количество() Цикл
			Если МассивЗаказчиковФЛ[й]=МассивИнвесторовФЛ[к] Тогда
				 МассивИнвесторовФЛ.Удалить(к);
				 к=к-1;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", "");
		Заменить(Док,"%КорреспондентКратко%", МассивЗаказчиковФЛ[й]+Символы.ВК);
		к=0;
	КонецЦикла;
	
	Для й=0 по МассивИнвесторовФЛ.ВГраница() Цикл	
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", "");
		Заменить(Док,"%КорреспондентКратко%", МассивИнвесторовФЛ[й]+Символы.ВК);
	КонецЦикла;
	
	Для й=0 по МассивЗаказчиковЮЛ.ВГраница() Цикл
		Пока к<>МассивИнвесторовЮЛ.Количество() Цикл
			Если СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],1) = СтрПолучитьСтроку(МассивИнвесторовЮЛ[к],1) Тогда
				МассивИнвесторовЮЛ.Удалить(к);
				к=к-1;
			КонецЕсли; 
			к=к+1;
		КонецЦикла;
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],8));
		Заменить(Док,"%КорреспондентКратко%", Фамилия(СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],7))+Символы.ВК);
		к=0;
	КонецЦикла;
	
	Для й=0 по МассивИнвесторовЮЛ.ВГраница() Цикл	
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", СтрПолучитьСтроку(МассивИнвесторовЮЛ[й],8));
		Заменить(Док,"%КорреспондентКратко%", Фамилия(СтрПолучитьСтроку(МассивИнвесторовЮЛ[й],7))+Символы.ВК);
	КонецЦикла;
#КонецОбласти

#Область ВыводПодписейЗаказчиковПротокол
	УдалитьЗакладку("ЗаказчикКратко");
	
	Для й=0 по МассивЗаказчиковФЛ.ВГраница() Цикл
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказ", "");
		Заменить(Док,"%ЗаказчикКратко%", МассивЗаказчиковФЛ[й]+Символы.ВК);
	КонецЦикла;
	
	Для й=0 по МассивИнвесторовФЛ.ВГраница() Цикл	
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказ", "");
		Заменить(Док,"%ЗаказчикКратко%", МассивИнвесторовФЛ[й]+Символы.ВК);
	КонецЦикла;
	
	Для й=0 по МассивЗаказчиковЮЛ.ВГраница() Цикл
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказ", СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],8));
		Заменить(Док,"%ЗаказчикКратко%", Фамилия(СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],7))+Символы.ВК);
	КонецЦикла;
	
	Для й=0 по МассивИнвесторовЮЛ.ВГраница() Цикл	
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказ", СтрПолучитьСтроку(МассивИнвесторовЮЛ[й],8));
		Заменить(Док,"%ЗаказчикКратко%", Фамилия(СтрПолучитьСтроку(МассивИнвесторовЮЛ[й],7))+Символы.ВК);
	КонецЦикла; 
#КонецОбласти

#Область ВыводВТекстеЗаказчикИИнвестор
	Если МассивИнвесторовФЛ.Количество()>0 ИЛИ МассивИнвесторовЮЛ.Количество()>0 ИЛИ ЗаказчикИнвесторМ.Количество()>0 Тогда
		Заменить(Док, "%КопийДвух%", "трех");
		Если ВозвратПроцентаИнвестора(Договор) тогда
			Заменить(Док, "%Инвестором%", "Инвестором");
		Иначе
			Заменить(Док, "%Инвестором%", "Заказчиком и Инвестором");
		КонецЕсли;		
	Иначе
		Заменить(Док, "%КопийДвух%", "двух");
		Заменить(Док, "%Инвестором%", "Заказчиком");
	КонецЕсли;
#КонецОбласти
	
	ВывестиДокумент();

КонецПроцедуры

&НаКлиенте
Процедура ГродноДопСоглЮЛРасторжениеЗаявление()
	ПолучитьОбщиеДанныеДоговора();
	
	Подписи = ПолучитьПодписиПодрядчика(Договор);
	
	ИнициализироватьДокументWord();
		
	// Заполнение доп. соглашения 
	Руководитель = Гр_ПравилаАвтозаполненияШаблонов.ВозвращетСтрокуНашегоРуководителя(); 
	
	Заменить(Док,"РегНомерДата",           Строка(НомерДоговора) + " от " + Формат(ДатаДоговора,"ДФ=dd.MM.yyyy"));
	Заменить(Док, "ДеньДатаДС",            Формат(ТекущаяДата(),"ДФ=дд"));
	Заменить(Док, "МесяцДатаДС",           НРег(СклонениеПоПадежам.обСклонениеСтроки(Формат(ТекущаяДата(),"ДФ=ММММ"), "Р", "Должность")) + " " + Формат(ТекущаяДата(),"ДФ=гггг"));
	Заменить(Док, "ДатаДС",                Формат(ТекущаяДата(),"ДЛФ=DD"));
	Заменить(Док, "%ДолжностьПодрядчика%", Подписи.ПодписалДолжность); 
	Заменить(Док, "УтвердилКратко1",       Подписи.ПодписалКратко);
		
	Док.Bookmarks("Руководитель").Range.Text  = Руководитель;
	
#Область ВыводШапкиЗаказчиков
	Счетчик = 0;
	ЗаказчикиФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковДоговораФизЛиц(Договор);	
	ИнвесторыФЛ = Гр_ПравилаАвтозаполненияшаблонов.ПолучитьШапкуЗаказчиковДоговораФизЛиц(Договор,Ложь);
	
	СтрокаЗаказчикиФЛ = "";
	СтрокаИнвесторыФЛ = "";
	СтрокаИнвЗакФЛ    = "";
	
	ЗаказчикИнвестор  = Ложь;
	ИндексИнвЗакЮЛ    = Новый Массив;
	ИндексИнвЗакФЛ    = Новый Массив;
	ЗаказчикИнвесторМ = Новый Массив;
	
	//формирование строки Закзачиков ФизЛиц
	Для й=0 по ЗаказчикиФЛ.ВГраница() Цикл
		Для к=0 по ИнвесторыФЛ.ВГраница() Цикл
			Если ИнвесторыФЛ[к] = ЗаказчикиФЛ[й] и ЗаказчикиФЛ[й]<>"Стоп" Тогда
				ЗаказчикИнвестор = Истина;
				ИндексИнвЗакФЛ.Добавить(к);
			КонецЕсли;
		КонецЦикла;
		Если НЕ ЗаказчикИнвестор Тогда
			Если ЗаказчикиФЛ[й] = "Стоп" Тогда
				Если й <> 0 И й <> ЗаказчикиФЛ.ВГраница() тогда
					Если ЗаказчикиФЛ[й] <> ЗаказчикиФЛ[й+1] и ЗаказчикиФЛ[й-1]<>ЗаказчикиФЛ[й]  Тогда
						СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + " а также ";
					КонецЕсли;
				КонецЕсли;
				Счетчик = Счетчик + 1;
			Иначе
				Если Счетчик = 1 ИЛИ Счетчик = 2 Тогда
					СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + Строка(ЗаказчикиФЛ[й]) + ", и ";
				Иначе 
					СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + Строка(ЗаказчикиФЛ[й]) + ", ";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		ЗаказчикИнвестор = Ложь;
	КонецЦикла;
	
	//формирование строки Заказчика - Инвестора ФизЛиц
	Для й=0 по ИндексИнвЗакФЛ.ВГраница() Цикл
		СтрокаИнвЗакФЛ = Строка(СтрокаИнвЗакФЛ) + Строка(ИнвесторыФЛ[ИндексИнвЗакФЛ[й]]) + ", "; 
		ЗаказчикИнвесторМ.Добавить(ИнвесторыФЛ[ИндексИнвЗакФЛ[й]]);
	КонецЦикла;
	
	ИнвесторЗаказчик = Ложь;
	
	//формирование строки Инвесторов ФизЛиц
	Для й=0 по ИнвесторыФЛ.ВГраница() Цикл
		Для к=0 по ИндексИнвЗакФЛ.ВГраница() Цикл
			Если ИндексИнвЗакФЛ[к]=й Тогда
				ИнвесторЗаказчик = Истина;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ИнвесторЗаказчик Тогда
			Если ИнвесторыФЛ[й] = "Стоп" Тогда
				Если й <> 0 И й <> ИнвесторыФЛ.ВГраница() тогда
					Если ИнвесторыФЛ[й] <> ИнвесторыФЛ[й+1] и ИнвесторыФЛ[й-1] <> ИнвесторыФЛ[й]  Тогда
						СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + " а также ";
					КонецЕсли;
				КонецЕсли;
				Счетчик = Счетчик + 1;
			Иначе
				Если Счетчик = 1 ИЛИ Счетчик = 2 Тогда
					СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + Строка(ИнвесторыФЛ[й]) + ", и ";
				Иначе 
					СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + Строка(ИнвесторыФЛ[й]) + ", ";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	    ИнвесторЗаказчик = Ложь;
	КонецЦикла;
	
	СтрокаЗаказчикиФЛ = СтрЗаменить(СтрокаЗаказчикиФЛ,", и  а"," а ");
	СтроказаказчикиФЛ = СтрЗаменить(СтрокаЗаказчикиФЛ,", , и",",");
	СтрокаИнвесторыФЛ = СтрЗаменить(СтрокаИнвесторыФЛ,", и  а"," а ");
	СтрокаИнвесторыФЛ = СтрЗаменить(СтрокаИнвесторыФЛ,", , и",",");
	
	ИнвесторыЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковЮрЛица(Договор, Ложь);
	ЗаказчикиЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковЮрЛица(Договор);
	
	//Формирование строки Инвесторов ЮрЛиц
	Для й=0 по ЗаказчикиЮЛ.ВГраница() Цикл
		Для к=0 по ИнвесторыЮЛ.ВГраница() Цикл
			Если ИнвесторыЮЛ[к] = ЗаказчикиЮЛ[й] Тогда
				ЗаказчикИнвестор = Истина;
				ИндексИнвЗакЮЛ.Добавить(к);
			КонецЕсли;
		КонецЦикла;
		Если НЕ ЗаказчикИнвестор Тогда
			СтрокаЗаказчикиЮЛ = Строка(СтрокаЗаказчикиЮЛ) + Строка(ЗаказчикиЮЛ[й]) + ", ";
		КонецЕсли;
		ЗаказчикИнвестор = Ложь;
	КонецЦикла;
	
	//Формирование строки Заказчика - Инвестора ЮрЛиц
	Для й=0 по ИндексИнвЗакЮЛ.ВГраница() Цикл
		СтрокаИнвЗакЮЛ = Строка(СтрокаИнвЗакЮЛ) + Строка(ИнвесторыЮЛ[ИндексИнвЗакЮЛ[й]]) + ", "; 
		ЗаказчикИнвесторМ.Добавить(ИнвесторыЮЛ[ИндексИнвЗакЮЛ[й]]);
	КонецЦикла;
	
	//Формирование строки Инвестора ЮрЛиц
	ИнвесторЗаказчик = Ложь;
	Для й=0 по ИнвесторыЮЛ.ВГраница() Цикл
		Для к=0 по ИндексИнвЗакЮЛ.ВГраница() Цикл
			Если ИндексИнвЗакЮЛ[к]=й Тогда
				ИнвесторЗаказчик = Истина;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ИнвесторЗаказчик Тогда
			СтрокаИнвесторыЮЛ = Строка(СтрокаИнвесторыЮЛ) + Строка(ИнвесторыЮЛ[й]) + ", ";
		КонецЕсли;
	    ИнвесторЗаказчик = Ложь;
	КонецЦикла;
	
	СтрокаЗаказчикиФЛ = ?(СтрокаЗаказчикиФЛ <> "", Строка(СтрокаЗаказчикиФЛ) + "именуемые ", Строка(СтрокаЗаказчикиФЛ) + "именуемый ");
	СтрокаИнвЗакФЛ    = ?(СтрокаИнвЗакФЛ <> "", Строка(СтрокаИнвЗакФЛ) + "именуемые ", Строка(СтрокаИнвЗакФЛ) + "именуемый "); 
	СтрокаИнвесторыФЛ = ?(СтрокаИнвесторыФЛ<>"", Строка(СтрокаИнвесторыФЛ) + "именуемые ", Строка(СтрокаинвесторыФЛ) + "именуемый ");
	
	Организация = Строка(СтрокаЗаказчикиЮЛ) + Строка(СтрокаЗаказчикиФЛ) + "в дальнейшем «Заказчик», ";
	
	Если ИндексИнвЗакЮЛ.Количество() <> 0 ИЛИ ИндексИнвЗакФЛ.Количество()<>0 Тогда
		Организация = Строка(Организация) + " и " + Строка(СтрокаИнвЗакЮЛ) + Строка(СтрокаИнвЗакФЛ) + "в дальнейшем «Заказчик-Инвестор», ";
	КонецЕсли;
	
	Если ИнвесторыЮЛ.Количество() <> ИндексИнвЗакЮЛ.Количество() ИЛИ ИнвесторыФЛ.Количество() <> ИндексИнвЗакФЛ.Количество() Тогда
		Организация = Строка(Организация) + "со второй стороны, и " + Строка(СтрокаИнвесторыЮЛ) + Строка(СтрокаИнвесторыФЛ) + "в дальнейшем «Инвестор», с третьей стороны, ";
	Иначе
		Организация = Строка(Организация) + "со второй стороны, "; 
	КонецЕсли;
	
	Док.Bookmarks("Организация").Range.Text = Организация;	
#КонецОбласти	

#область ВыводПодписейЗаказчиковДоговор	
	МассивЗаказчиковЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьРеквизитыЮрЛица(Договор);
	МассивИнвесторовЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьРеквизитыЮрЛица(Договор,Ложь);
	МассивЗаказчиковФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДляПодписиФизЛица(Договор);
	МассивИнвесторовФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДляПодписиФизЛица(Договор, Ложь);

	УдалитьЗакладку("ЗаказчикПодвал");
	к=0;
	Для й=0 по МассивЗаказчиковФЛ.ВГраница() Цикл
		Пока к<>МассивИнвесторовФЛ.Количество() Цикл
			Если МассивЗаказчиковФЛ[й]=МассивИнвесторовФЛ[к] Тогда
				 МассивИнвесторовФЛ.Удалить(к);
				 к=к-1;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", "");
		Заменить(Док,"%КорреспондентКратко%", МассивЗаказчиковФЛ[й]+Символы.ВК);
		к=0;
	КонецЦикла;
	
	Для й=0 по МассивИнвесторовФЛ.ВГраница() Цикл	
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", "");
		Заменить(Док,"%КорреспондентКратко%", МассивИнвесторовФЛ[й]+Символы.ВК);
	КонецЦикла;
	
	Для й=0 по МассивЗаказчиковЮЛ.ВГраница() Цикл
		Пока к<>МассивИнвесторовЮЛ.Количество() Цикл
			Если СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],1) = СтрПолучитьСтроку(МассивИнвесторовЮЛ[к],1) Тогда
				МассивИнвесторовЮЛ.Удалить(к);
				к=к-1;
			КонецЕсли; 
			к=к+1;
		КонецЦикла;
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],8));
		Заменить(Док,"%КорреспондентКратко%", Фамилия(СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],7))+Символы.ВК);
		к=0;
	КонецЦикла;
	
	Для й=0 по МассивИнвесторовЮЛ.ВГраница() Цикл	
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", СтрПолучитьСтроку(МассивИнвесторовЮЛ[й],8));
		Заменить(Док,"%КорреспондентКратко%", Фамилия(СтрПолучитьСтроку(МассивИнвесторовЮЛ[й],7))+Символы.ВК);
	КонецЦикла;
#КонецОбласти
			
#Область ВыводВТекстеЗаказчикИИнвестор
	Если МассивИнвесторовФЛ.Количество()>0 ИЛИ МассивИнвесторовЮЛ.Количество()>0 ИЛИ ЗаказчикИнвесторМ.Количество()>0 Тогда
		Заменить(Док, "%КопийДвух%", "трех");
	Иначе
		Заменить(Док, "%КопийДвух%", "двух");
	КонецЕсли;
#КонецОбласти

	ВывестиДокумент();

КонецПроцедуры

&НаКлиенте
Процедура ГродноДопСоглЮЛРасторжение()
	ПолучитьОбщиеДанныеДоговора();
	
	Подписи = ПолучитьПодписиПодрядчика(Договор);
	
	ИнициализироватьДокументWord();
		
	// Заполнение доп. соглашения 
	Руководитель = Гр_ПравилаАвтозаполненияШаблонов.ВозвращетСтрокуНашегоРуководителя(); 
	
	Заменить(Док,"РегНомерДата",           Строка(НомерДоговора) + " от " + Формат(ДатаДоговора,"ДФ=dd.MM.yyyy"));
	Заменить(Док, "ДеньДатаДС",            Формат(ТекущаяДата(),"ДФ=дд"));
	Заменить(Док, "МесяцДатаДС",           НРег(СклонениеПоПадежам.обСклонениеСтроки(Формат(ТекущаяДата(),"ДФ=ММММ"), "Р", "Должность")) + " " + Формат(ТекущаяДата(),"ДФ=гггг"));
	Заменить(Док, "ДатаДС",                Формат(ТекущаяДата(),"ДЛФ=DD"));
	Заменить(Док, "%ДолжностьПодрядчика%", Подписи.ПодписалДолжность); 
	Заменить(Док, "УтвердилКратко1",       Подписи.ПодписалКратко);
		
	Док.Bookmarks("Руководитель").Range.Text  = Руководитель;
	
#Область ВыводШапкиЗаказчиков
	Счетчик = 0;
	ЗаказчикиФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковДоговораФизЛиц(Договор);	
	ИнвесторыФЛ = Гр_ПравилаАвтозаполненияшаблонов.ПолучитьШапкуЗаказчиковДоговораФизЛиц(Договор,Ложь);
	
	СтрокаЗаказчикиФЛ = "";
	СтрокаИнвесторыФЛ = "";
	СтрокаИнвЗакФЛ    = "";
	
	ЗаказчикИнвестор  = Ложь;
	ИндексИнвЗакЮЛ    = Новый Массив;
	ИндексИнвЗакФЛ    = Новый Массив;
	ЗаказчикИнвесторМ = Новый Массив;
	
	//формирование строки Закзачиков ФизЛиц
	Для й=0 по ЗаказчикиФЛ.ВГраница() Цикл
		Для к=0 по ИнвесторыФЛ.ВГраница() Цикл
			Если ИнвесторыФЛ[к] = ЗаказчикиФЛ[й] и ЗаказчикиФЛ[й]<>"Стоп" Тогда
				ЗаказчикИнвестор = Истина;
				ИндексИнвЗакФЛ.Добавить(к);
			КонецЕсли;
		КонецЦикла;
		Если НЕ ЗаказчикИнвестор Тогда
			Если ЗаказчикиФЛ[й] = "Стоп" Тогда
				Если й <> 0 И й <> ЗаказчикиФЛ.ВГраница() тогда
					Если ЗаказчикиФЛ[й] <> ЗаказчикиФЛ[й+1] и ЗаказчикиФЛ[й-1]<>ЗаказчикиФЛ[й]  Тогда
						СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + " а также ";
					КонецЕсли;
				КонецЕсли;
				Счетчик = Счетчик + 1;
			Иначе
				Если Счетчик = 1 ИЛИ Счетчик = 2 Тогда
					СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + Строка(ЗаказчикиФЛ[й]) + ", и ";
				Иначе 
					СтрокаЗаказчикиФЛ = Строка(СтрокаЗаказчикиФЛ) + Строка(ЗаказчикиФЛ[й]) + ", ";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		ЗаказчикИнвестор = Ложь;
	КонецЦикла;
	
	//формирование строки Заказчика - Инвестора ФизЛиц
	Для й=0 по ИндексИнвЗакФЛ.ВГраница() Цикл
		СтрокаИнвЗакФЛ = Строка(СтрокаИнвЗакФЛ) + Строка(ИнвесторыФЛ[ИндексИнвЗакФЛ[й]]) + ", "; 
		ЗаказчикИнвесторМ.Добавить(ИнвесторыФЛ[ИндексИнвЗакФЛ[й]]);
	КонецЦикла;
	
	ИнвесторЗаказчик = Ложь;
	
	//формирование строки Инвесторов ФизЛиц
	Для й=0 по ИнвесторыФЛ.ВГраница() Цикл
		Для к=0 по ИндексИнвЗакФЛ.ВГраница() Цикл
			Если ИндексИнвЗакФЛ[к]=й Тогда
				ИнвесторЗаказчик = Истина;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ИнвесторЗаказчик Тогда
			Если ИнвесторыФЛ[й] = "Стоп" Тогда
				Если й <> 0 И й <> ИнвесторыФЛ.ВГраница() тогда
					Если ИнвесторыФЛ[й] <> ИнвесторыФЛ[й+1] и ИнвесторыФЛ[й-1] <> ИнвесторыФЛ[й]  Тогда
						СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + " а также ";
					КонецЕсли;
				КонецЕсли;
				Счетчик = Счетчик + 1;
			Иначе
				Если Счетчик = 1 ИЛИ Счетчик = 2 Тогда
					СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + Строка(ИнвесторыФЛ[й]) + ", и ";
				Иначе 
					СтрокаИнвесторыФЛ = Строка(СтрокаИнвесторыФЛ) + Строка(ИнвесторыФЛ[й]) + ", ";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	    ИнвесторЗаказчик = Ложь;
	КонецЦикла;
	
	СтрокаЗаказчикиФЛ = СтрЗаменить(СтрокаЗаказчикиФЛ,", и  а"," а ");
	СтроказаказчикиФЛ = СтрЗаменить(СтрокаЗаказчикиФЛ,", , и",",");
	СтрокаИнвесторыФЛ = СтрЗаменить(СтрокаИнвесторыФЛ,", и  а"," а ");
	СтрокаИнвесторыФЛ = СтрЗаменить(СтрокаИнвесторыФЛ,", , и",",");
	
	ИнвесторыЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковЮрЛица(Договор, Ложь);
	ЗаказчикиЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьШапкуЗаказчиковЮрЛица(Договор);
	
	//Формирование строки Инвесторов ЮрЛиц
	Для й=0 по ЗаказчикиЮЛ.ВГраница() Цикл
		Для к=0 по ИнвесторыЮЛ.ВГраница() Цикл
			Если ИнвесторыЮЛ[к] = ЗаказчикиЮЛ[й] Тогда
				ЗаказчикИнвестор = Истина;
				ИндексИнвЗакЮЛ.Добавить(к);
			КонецЕсли;
		КонецЦикла;
		Если НЕ ЗаказчикИнвестор Тогда
			СтрокаЗаказчикиЮЛ = Строка(СтрокаЗаказчикиЮЛ) + Строка(ЗаказчикиЮЛ[й]) + ", ";
		КонецЕсли;
		ЗаказчикИнвестор = Ложь;
	КонецЦикла;
	
	//Формирование строки Заказчика - Инвестора ЮрЛиц
	Для й=0 по ИндексИнвЗакЮЛ.ВГраница() Цикл
		СтрокаИнвЗакЮЛ = Строка(СтрокаИнвЗакЮЛ) + Строка(ИнвесторыЮЛ[ИндексИнвЗакЮЛ[й]]) + ", "; 
		ЗаказчикИнвесторМ.Добавить(ИнвесторыЮЛ[ИндексИнвЗакЮЛ[й]]);
	КонецЦикла;
	
	//Формирование строки Инвестора ЮрЛиц
	ИнвесторЗаказчик = Ложь;
	Для й=0 по ИнвесторыЮЛ.ВГраница() Цикл
		Для к=0 по ИндексИнвЗакЮЛ.ВГраница() Цикл
			Если ИндексИнвЗакЮЛ[к]=й Тогда
				ИнвесторЗаказчик = Истина;
			КонецЕсли;
		КонецЦикла;
		Если НЕ ИнвесторЗаказчик Тогда
			СтрокаИнвесторыЮЛ = Строка(СтрокаИнвесторыЮЛ) + Строка(ИнвесторыЮЛ[й]) + ", ";
		КонецЕсли;
	    ИнвесторЗаказчик = Ложь;
	КонецЦикла;
	
	СтрокаЗаказчикиФЛ = ?(СтрокаЗаказчикиФЛ <> "", Строка(СтрокаЗаказчикиФЛ) + "именуемые ", Строка(СтрокаЗаказчикиФЛ) + "именуемый ");
	СтрокаИнвЗакФЛ    = ?(СтрокаИнвЗакФЛ <> "", Строка(СтрокаИнвЗакФЛ) + "именуемые ", Строка(СтрокаИнвЗакФЛ) + "именуемый "); 
	СтрокаИнвесторыФЛ = ?(СтрокаИнвесторыФЛ<>"", Строка(СтрокаИнвесторыФЛ) + "именуемые ", Строка(СтрокаинвесторыФЛ) + "именуемый ");
	
	Организация = Строка(СтрокаЗаказчикиЮЛ) + Строка(СтрокаЗаказчикиФЛ) + "в дальнейшем «Заказчик», ";
	
	Если ИндексИнвЗакЮЛ.Количество() <> 0 ИЛИ ИндексИнвЗакФЛ.Количество()<>0 Тогда
		Организация = Строка(Организация) + " и " + Строка(СтрокаИнвЗакЮЛ) + Строка(СтрокаИнвЗакФЛ) + "в дальнейшем «Заказчик-Инвестор», ";
	КонецЕсли;
	
	Если ИнвесторыЮЛ.Количество() <> ИндексИнвЗакЮЛ.Количество() ИЛИ ИнвесторыФЛ.Количество() <> ИндексИнвЗакФЛ.Количество() Тогда
		Организация = Строка(Организация) + "со второй стороны, и " + Строка(СтрокаИнвесторыЮЛ) + Строка(СтрокаИнвесторыФЛ) + "в дальнейшем «Инвестор», с третьей стороны, ";
	Иначе
		Организация = Строка(Организация) + "со второй стороны, "; 
	КонецЕсли;
	
	Док.Bookmarks("Организация").Range.Text = Организация;	
#КонецОбласти	

#область ВыводПодписейЗаказчиковДоговор	
	МассивЗаказчиковЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьРеквизитыЮрЛица(Договор);
	МассивИнвесторовЮЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьРеквизитыЮрЛица(Договор,Ложь);
	МассивЗаказчиковФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДляПодписиФизЛица(Договор);
	МассивИнвесторовФЛ = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЗаказчиковДляПодписиФизЛица(Договор, Ложь);

	УдалитьЗакладку("ЗаказчикПодвал");
	к=0;
	Для й=0 по МассивЗаказчиковФЛ.ВГраница() Цикл
		Пока к<>МассивИнвесторовФЛ.Количество() Цикл
			Если МассивЗаказчиковФЛ[й]=МассивИнвесторовФЛ[к] Тогда
				 МассивИнвесторовФЛ.Удалить(к);
				 к=к-1;
			КонецЕсли;
			к=к+1;
		КонецЦикла;
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", "");
		Заменить(Док,"%КорреспондентКратко%", МассивЗаказчиковФЛ[й]+Символы.ВК);
		к=0;
	КонецЦикла;
	
	Для й=0 по МассивИнвесторовФЛ.ВГраница() Цикл	
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", "");
		Заменить(Док,"%КорреспондентКратко%", МассивИнвесторовФЛ[й]+Символы.ВК);
	КонецЦикла;
	
	Для й=0 по МассивЗаказчиковЮЛ.ВГраница() Цикл
		Пока к<>МассивИнвесторовЮЛ.Количество() Цикл
			Если СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],1) = СтрПолучитьСтроку(МассивИнвесторовЮЛ[к],1) Тогда
				МассивИнвесторовЮЛ.Удалить(к);
				к=к-1;
			КонецЕсли; 
			к=к+1;
		КонецЦикла;
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],8));
		Заменить(Док,"%КорреспондентКратко%", Фамилия(СтрПолучитьСтроку(МассивЗаказчиковЮЛ[й],7))+Символы.ВК);
		к=0;
	КонецЦикла;
	
	Для й=0 по МассивИнвесторовЮЛ.ВГраница() Цикл	
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		Заменить(Док,"ДолжностьЗаказчика", СтрПолучитьСтроку(МассивИнвесторовЮЛ[й],8));
		Заменить(Док,"%КорреспондентКратко%", Фамилия(СтрПолучитьСтроку(МассивИнвесторовЮЛ[й],7))+Символы.ВК);
	КонецЦикла;
#КонецОбласти
			
#Область ВыводВТекстеЗаказчикИИнвестор
	Если МассивИнвесторовФЛ.Количество()>0 ИЛИ МассивИнвесторовЮЛ.Количество()>0 ИЛИ ЗаказчикИнвесторМ.Количество()>0 Тогда
		Заменить(Док, "%КопийДвух%", "трех");
	Иначе
		Заменить(Док, "%КопийДвух%", "двух");
	КонецЕсли;
#КонецОбласти

	ВывестиДокумент();

КонецПроцедуры

#КонецОбласти


&НаСервере
Функция ГродноПолучитьНашуОрганизацию() 
	Возврат Константы.М_ОсновнаяОрганизация.Получить()
КонецФункции

&НаСервере
Функция ВозвратПроцентаИнвестора(Договор)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВнутренниеДокументыИнвесторы.Процент КАК Процент,
	|	ВнутренниеДокументыИнвесторы.Корреспондент КАК Корреспондент,
	|   ВнутренниеДокументыИнвесторы.Корреспондент.ЮрФизЛицо КАК ЮрФизЛицо
	|ИЗ
	|	Справочник.ВнутренниеДокументы.Инвесторы КАК ВнутренниеДокументыИнвесторы
	|ГДЕ
	|   ВнутренниеДокументыИнвесторы.Ссылка = &Договор
	|";
	Запрос.УстановитьПараметр("Договор",Договор);
	тзИнвесторов = Запрос.Выполнить().Выгрузить();
	
	тзИнвесторов.Свернуть(,"Процент");
	процент = Строка(тзИнвесторов[0].процент);
	Если Процент = "100" Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции

&НаСервере
Функция Фамилия(Строка1) 
	Если Строка1="" Тогда
		Возврат "";
	Иначе
	Возврат ФизическиеЛица.ФамилияИнициалыФизЛица(строка1,,,,Ложь);
	КонецЕсли;
КонецФункции
