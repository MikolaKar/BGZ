
&НаКлиенте
Перем Док;

&НаКлиенте
Перем WordApp;

&НаКлиенте
Перем Селекция, НачалоЗакладки, Поиск;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЭтапыДоговора.Очистить();
	Заказчики.Очистить();
	
	Город = мРазное.ПолучитьГородБазы();
	
	Договор = Неопределено;
	Если Параметры.Свойство("Договор") Тогда
		Договор = Параметры.Договор;
	КонецЕсли; 
	Если Параметры.Свойство("АктВыполненныхРабот") Тогда
		АктВыполненныхРабот = Параметры.АктВыполненныхРабот;
	КонецЕсли;
	
	Элементы.ПечататьШтрихКод.Видимость = Ложь;
	Если ЗначениеЗаполнено(АктВыполненныхРабот) Тогда                    
	    ЗаполнитьФорму();
		ЭтапДоговора = АктВыполненныхРабот.ЭтапДоговора;
		Подписал = АктВыполненныхРабот.Утвердил;
		
		Для каждого СтрЭтапа Из ЭтапыДоговора Цикл
			СтрЭтапа.Пометка = СтрЭтапа.ЭтапДоговора = ЭтапДоговора; 
		КонецЦикла; 
		
		Элементы.ПечататьШтрихКод.Видимость = Истина;
		ПечататьШтрихКод = Истина;
		
	ИначеЕсли ЗначениеЗаполнено(Договор) Тогда
		
	    ЗаполнитьФорму();
	//Иначе
	//	Сообщить("Печать возможна только из формы договора или акта выполненных работ!");
	КонецЕсли;
	
	Если ЭтоФизЛица Тогда
		Элементы.ЗаказчикПлательщики.Видимость = Ложь;
	Иначе
		Элементы.ЗаказчикПлательщики.Видимость = Истина;
	КонецЕсли; 
	
	Если Город = "Брест" ИЛИ Город = "Гродно" Тогда
		Элементы.Подписал.Видимость = Ложь;	
	Иначе
		Элементы.Подписал.Видимость = Истина;	
	КонецЕсли; 
	
	ГородПодразделения	= мРазное.ПолучитьГородПодразделения();
	  	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФорму()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭтапыДоговоров.Ссылка КАК ЭтапДоговора,
		|	ЭтапыДоговоров.НомерЭтапа,
		|	ЭтапыДоговоров.Стоимость,
		|	ЭтапыДоговоров.ВидРабот,
		|	ЭтапыДоговоров.ВидРабот.ПолноеНаименование КАК НаименованиеРаботы,
		|	ВЫРАЗИТЬ(ЭтапыДоговоров.ОбъектРабот.ПолноеНаименование КАК СТРОКА(1000)) КАК ОбъектРабот,
		|	ВЫБОР
		|		КОГДА ЭтапыДоговоров.Подразделение.Родитель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			ТОГДА ЭтапыДоговоров.Подразделение
		|		ИНАЧЕ ЭтапыДоговоров.Подразделение.Родитель
		|	КОНЕЦ КАК ОтделИсполнителя,
		|	ВЫБОР
		|		КОГДА ЭтапыДоговоров.Подразделение.Родитель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			ТОГДА ЭтапыДоговоров.Подразделение.Руководитель
		|		ИНАЧЕ ЭтапыДоговоров.Подразделение.Родитель.Руководитель
		|	КОНЕЦ КАК НачИсполнителя,
		|	ВЫБОР
		|		КОГДА ЭтапыДоговоров.СтавкаНДС.НеОблагается
		|			ТОГДА ""Без НДС""
		|		ИНАЧЕ ЭтапыДоговоров.СтавкаНДС.Ставка
		|	КОНЕЦ КАК СтавкаНДС,
		|	ЭтапыДоговоров.ОсвобождениеОтНДС,
		|	ЭтапыДоговоров.ОсвобождениеОтНДС.ДляПечати КАК ОсвобождениеОтНДСДляПечати,
		|	ЭтапыДоговоров.Цена,
		|	ЭтапыДоговоров.СуммаНДС,
		|	ЭтапыДоговоров.СтоимостьСНДС,
		|	ЭтапыДоговоров.КоличествоУчастков,
		|	ЭтапыДоговоров.Месторасположение,
		|	ЭтапыДоговоров.КакДоговорЮрЛица,
		|	ЕСТЬNULL(УчетДоговоровОбороты.СуммаРасход, 0) КАК Заактировано,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(мСвязиЭтаповДоговоров.ОсновнойЭтапДоговора, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЭтоОсновнойЭтап,
		|	ЕСТЬNULL(мСвязиЭтаповДоговоров1.ОсновнойЭтапДоговора, ЗНАЧЕНИЕ(Справочник.мЭтапыДоговоров.ПустаяСсылка)) КАК ОсновнойЭтапДоговора,
		|	ЭтапыДоговоров.ПорядокВыполненияСовместно КАК Совместно,
		|	ЭтапыДоговоров.ВидРабот.ВидРаботПоДоговорам.ЭтоУслуга КАК ЭтоУслуга
		|ИЗ
		|	Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.УчетДоговоров.Обороты(&НачПер, &КонПер, День, ЭтапДоговора.Владелец = &Договор) КАК УчетДоговоровОбороты
		|		ПО ЭтапыДоговоров.Ссылка = УчетДоговоровОбороты.ЭтапДоговора
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.мСвязиЭтаповДоговоров КАК мСвязиЭтаповДоговоров
		|		ПО (мСвязиЭтаповДоговоров.ОсновнойЭтапДоговора = ЭтапыДоговоров.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.мСвязиЭтаповДоговоров КАК мСвязиЭтаповДоговоров1
		|		ПО (мСвязиЭтаповДоговоров1.ЭтапДоговора = ЭтапыДоговоров.Ссылка)
		|ГДЕ
		|	ЭтапыДоговоров.Владелец = &Договор
		|	И НЕ ЭтапыДоговоров.ПометкаУдаления
		|	И ЭтапыДоговоров.ДатаИсключенИзДоговора = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВнутренниеДокументы.ДатаРегистрации КАК ДатаРегистрации,
		|	ВнутренниеДокументы.РегистрационныйНомер КАК РегистрационныйНомер,
		|	ВнутренниеДокументы.Утвердил,
		|	ВнутренниеДокументы.Организация,
		|	ВнутренниеДокументы.Валюта,
		|	ВнутренниеДокументы.Ссылка КАК Договор
		|ИЗ
		|	Справочник.ВнутренниеДокументы КАК ВнутренниеДокументы
		|ГДЕ
		|	ВнутренниеДокументы.Ссылка = &Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВнутренниеДокументыКорреспонденты.Корреспондент,
		|	ВнутренниеДокументыКорреспонденты.Корреспондент.ФизЛицо КАК ФизЛицо,
		|	ВнутренниеДокументыКорреспонденты.ПодписалОтКорреспондента,
		|	ВнутренниеДокументыКорреспонденты.КонтактноеЛицо,
		|	ВнутренниеДокументыКорреспонденты.Корреспондент.Наименование,
		|	ВнутренниеДокументыКорреспонденты.Корреспондент.ПолноеНаименование,
		|	ВнутренниеДокументыКорреспонденты.Корреспондент.ИНН,
		|	ВнутренниеДокументыКорреспонденты.Корреспондент.КодПоОКПО,
		|	ВнутренниеДокументыКорреспонденты.Корреспондент.ОсновнойБанковскийСчет.НомерСчета,
		|	ВнутренниеДокументыКорреспонденты.Корреспондент.ОсновнойБанковскийСчет.Банк.Код,
		|	ВнутренниеДокументыКорреспонденты.Корреспондент.ОсновнойБанковскийСчет.СчетИБАН,
		|	ВнутренниеДокументыКорреспонденты.Корреспондент.ОсновнойБанковскийСчет.Банк.БИК,
		|	ВнутренниеДокументыКорреспонденты.Корреспондент.ОсновнойБанковскийСчет.Банк.Наименование,
		|	ВнутренниеДокументыКорреспонденты.Корреспондент.ОсновнойБанковскийСчет.Банк.Адрес,
		|	ВнутренниеДокументыКорреспонденты.ПодписалОтКорреспондента.Наименование КАК ПодписалОтКорреспондента,
		|	ВнутренниеДокументыКорреспонденты.ПодписалОтКорреспондента.Должность
		|ПОМЕСТИТЬ Заказчики
		|ИЗ
		|	Справочник.ВнутренниеДокументы.Корреспонденты КАК ВнутренниеДокументыКорреспонденты
		|ГДЕ
		|	ВнутренниеДокументыКорреспонденты.Ссылка = &ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорреспондентыКонтактнаяИнформация.Представление КАК Адрес,
		|	КорреспондентыКонтактнаяИнформация.Ссылка КАК Корреспондент
		|ПОМЕСТИТЬ тАдрес
		|ИЗ
		|	Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
		|ГДЕ
		|	КорреспондентыКонтактнаяИнформация.Ссылка В
		|			(ВЫБРАТЬ
		|				Заказчики.Корреспондент
		|			ИЗ
		|				Заказчики КАК Заказчики)
		|	И КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮридическийАдресКорреспондента)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорреспондентыКонтактнаяИнформация.Представление КАК Телефон,
		|	КорреспондентыКонтактнаяИнформация.Ссылка КАК Корреспондент
		|ПОМЕСТИТЬ тТелефон
		|ИЗ
		|	Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
		|ГДЕ
		|	КорреспондентыКонтактнаяИнформация.Ссылка В
		|			(ВЫБРАТЬ
		|				Заказчики.Корреспондент
		|			ИЗ
		|				Заказчики КАК Заказчики)
		|	И КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКорреспондента)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(тАдрес.Адрес, ""__________________"") КАК Адрес,
		|	ЕСТЬNULL(тТелефон.Телефон, ""__________________"") КАК Телефон,
		|	Заказчики.Корреспондент,
		|	Заказчики.КорреспондентНаименование КАК Наименование,
		|	Заказчики.КорреспондентПолноеНаименование КАК ПолноеНаименование,
		|	Заказчики.КорреспондентИНН КАК УНП,
		|	Заказчики.КорреспондентКодПоОКПО КАК ОКПО,
		|	Заказчики.КорреспондентОсновнойБанковскийСчетСчетИБАН КАК НомерСчета,
		|	Заказчики.КорреспондентОсновнойБанковскийСчетБанкБИК КАК КодБанка,
		|	Заказчики.КорреспондентОсновнойБанковскийСчетБанкНаименование КАК Банк,
		|	Заказчики.КорреспондентОсновнойБанковскийСчетБанкАдрес КАК БанкАдрес,
		|	Заказчики.ПодписалОтКорреспондента КАК КорреспондентКратко,
		|	Заказчики.ПодписалОтКорреспондентаДолжность КАК ДолжностьКорр
		|ИЗ
		|	Заказчики КАК Заказчики
		|		ЛЕВОЕ СОЕДИНЕНИЕ тАдрес КАК тАдрес
		|		ПО Заказчики.Корреспондент = тАдрес.Корреспондент
		|		ЛЕВОЕ СОЕДИНЕНИЕ тТелефон КАК тТелефон
		|		ПО Заказчики.Корреспондент = тТелефон.Корреспондент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Заказчики.Корреспондент КАК Корреспондент,
		|	Заказчики.ФизЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ФизЛица
		|ИЗ
		|	Заказчики КАК Заказчики
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорреспондентыКонтактнаяИнформация.Представление КАК ДомашнийАдрес,
		|	КорреспондентыКонтактнаяИнформация.Ссылка КАК Корреспондент
		|ПОМЕСТИТЬ ДомашниеАдреса
		|ИЗ
		|	Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
		|ГДЕ
		|	КорреспондентыКонтактнаяИнформация.Ссылка В
		|			(ВЫБРАТЬ
		|				Заказчики.Корреспондент
		|			ИЗ
		|				Заказчики КАК Заказчики)
		|	И КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ДомашнийАдресФизическогоЛица)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорреспондентыКонтактнаяИнформация.Представление КАК ДомашнийТелефон,
		|	КорреспондентыКонтактнаяИнформация.Ссылка КАК Корреспондент
		|ПОМЕСТИТЬ ДомашниеТелефоны
		|ИЗ
		|	Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
		|ГДЕ
		|	КорреспондентыКонтактнаяИнформация.Ссылка В
		|			(ВЫБРАТЬ
		|				Заказчики.Корреспондент
		|			ИЗ
		|				Заказчики КАК Заказчики)
		|	И КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ДомашнийТелефонФизическогоЛица)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорреспондентыКонтактнаяИнформация.Представление КАК ПочтовыйАдрес,
		|	КорреспондентыКонтактнаяИнформация.Ссылка КАК Корреспондент
		|ПОМЕСТИТЬ ПочтовыеАдреса
		|ИЗ
		|	Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
		|ГДЕ
		|	КорреспондентыКонтактнаяИнформация.Ссылка В
		|			(ВЫБРАТЬ
		|				Заказчики.Корреспондент
		|			ИЗ
		|				Заказчики КАК Заказчики)
		|	И КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ПочтовыйАдресФизическогоЛица)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорреспондентыКонтактнаяИнформация.Представление КАК МобильныйТелефон,
		|	КорреспондентыКонтактнаяИнформация.Ссылка КАК Корреспондент
		|ПОМЕСТИТЬ МобильныеТелефоны
		|ИЗ
		|	Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
		|ГДЕ
		|	КорреспондентыКонтактнаяИнформация.Ссылка В
		|			(ВЫБРАТЬ
		|				Заказчики.Корреспондент
		|			ИЗ
		|				Заказчики КАК Заказчики)
		|	И КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.МобильныйТелефонФизическогоЛица)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокументыФизическихЛицСрезПоследних.Физлицо,
		|	МАКСИМУМ(ДокументыФизическихЛицСрезПоследних.Период) КАК Период
		|ПОМЕСТИТЬ ДокументыСрез
		|ИЗ
		|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(
		|			,
		|			ЯвляетсяДокументомУдостоверяющимЛичность
		|				И Физлицо В
		|					(ВЫБРАТЬ
		|						ФизЛица.ФизЛицо
		|					ИЗ
		|						ФизЛица КАК ФизЛица)) КАК ДокументыФизическихЛицСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокументыФизическихЛицСрезПоследних.Физлицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокументыФизическихЛицСрезПоследних.Серия,
		|	ДокументыФизическихЛицСрезПоследних.Номер,
		|	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи,
		|	ДокументыФизическихЛицСрезПоследних.СрокДействия,
		|	ДокументыФизическихЛицСрезПоследних.КемВыдан,
		|	ДокументыФизическихЛицСрезПоследних.Физлицо
		|ПОМЕСТИТЬ ДанныеПаспорта
		|ИЗ
		|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(
		|			,
		|			ЯвляетсяДокументомУдостоверяющимЛичность
		|				И Физлицо В
		|					(ВЫБРАТЬ
		|						ФизЛица.ФизЛицо
		|					ИЗ
		|						ФизЛица КАК ФизЛица)) КАК ДокументыФизическихЛицСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыСрез КАК ДокументыСрез
		|		ПО ДокументыФизическихЛицСрезПоследних.Период = ДокументыСрез.Период
		|			И ДокументыФизическихЛицСрезПоследних.Физлицо = ДокументыСрез.Физлицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДокументыСрез
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ДомашниеАдреса.ДомашнийАдрес, """") КАК Адрес,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДомашниеТелефоны.ДомашнийТелефон, """") <> """"
		|			ТОГДА ЕСТЬNULL(ДомашниеТелефоны.ДомашнийТелефон, """")
		|		ИНАЧЕ ЕСТЬNULL(МобильныеТелефоны.МобильныйТелефон, """")
		|	КОНЕЦ КАК Телефон,
		|	ЕСТЬNULL(ПочтовыеАдреса.ПочтовыйАдрес, """") КАК ПочтовыйАдрес,
		|	ЕСТЬNULL(ДанныеПаспорта.Серия, """") КАК СерияПаспорта,
		|	ЕСТЬNULL(ДанныеПаспорта.Номер, """") КАК НомерПаспорта,
		|	ЕСТЬNULL(ДанныеПаспорта.ДатаВыдачи, """") КАК ДатаВыдачи,
		|	ЕСТЬNULL(ДанныеПаспорта.КемВыдан, """") КАК КемВыдан,
		|	ЕСТЬNULL(ДанныеПаспорта.СрокДействия, """") КАК СрокДействия,
		|	ФизЛица.Корреспондент.ПолноеНаименование КАК ПолноеНаименование,
		|	ФизЛица.Корреспондент,
		|	ФизЛица.ФизЛицо
		|ИЗ
		|	ФизЛица КАК ФизЛица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДомашниеАдреса КАК ДомашниеАдреса
		|		ПО ФизЛица.Корреспондент = ДомашниеАдреса.Корреспондент
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДомашниеТелефоны КАК ДомашниеТелефоны
		|		ПО ФизЛица.Корреспондент = ДомашниеТелефоны.Корреспондент
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПочтовыеАдреса КАК ПочтовыеАдреса
		|		ПО ФизЛица.Корреспондент = ПочтовыеАдреса.ПочтовыйАдрес
		|		ЛЕВОЕ СОЕДИНЕНИЕ МобильныеТелефоны КАК МобильныеТелефоны
		|		ПО ФизЛица.Корреспондент = МобильныеТелефоны.Корреспондент
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПаспорта КАК ДанныеПаспорта
		|		ПО ФизЛица.ФизЛицо = ДанныеПаспорта.Физлицо";

	Запрос.УстановитьПараметр("Договор", Договор);
	Если ЗначениеЗаполнено(АктВыполненныхРабот) Тогда
	 	Запрос.УстановитьПараметр("ДокументОснование", АктВыполненныхРабот);
	Иначе
	 	Запрос.УстановитьПараметр("ДокументОснование", Договор);
	КонецЕсли; 
	Запрос.УстановитьПараметр("НачПер", Договор.ДатаРегистрации);
	Запрос.УстановитьПараметр("КонПер", ТекущаяДата());

	Результат = Запрос.ВыполнитьПакет();

	// Этапы
	ВыборкаДетальныеЗаписи = Результат[0].Выбрать();
	
	РеквАкта = "";
	ЭтапыДоговора.Очистить();
	Если ЗначениеЗаполнено(АктВыполненныхРабот) Тогда
		РеквАкта = мРаботаСДоговорами.ПолучитьРеквизитыАктаВыполненныхРабот(АктВыполненныхРабот); 
	КонецЕсли;

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		// в таб часть добавляем только этап из Акта выполненных работ
		Если ЗначениеЗаполнено(АктВыполненныхРабот) Тогда
			Если ВыборкаДетальныеЗаписи.ЭтапДоговора <> АктВыполненныхРабот.ЭтапДоговора Тогда
				Продолжить;
			КонецЕсли; 
		КонецЕсли;
		
		Этап = ЭтапыДоговора.Добавить();
		ЗаполнитьЗначенияСвойств(Этап, ВыборкаДетальныеЗаписи);
		
		Если ЗначениеЗаполнено(АктВыполненныхРабот) Тогда
			Если Этап.ЭтапДоговора = АктВыполненныхРабот.ЭтапДоговора Тогда
				// берем суммы из акта
				Если Этап.СтоимостьСНДС <> РеквАкта.Сумма Тогда
					Сообщить("Сумма в акте не равна сметной стоимости этапа!");
				КонецЕсли; 
				Если Этап.СуммаНДС <> РеквАкта.СуммаНДС Тогда
					Сообщить("Сумма НДС в акте не равна сумме НДС этапа!");
				КонецЕсли; 
			    Этап.СтоимостьСНДС = РеквАкта.Сумма;
			    Этап.СуммаНДС = РеквАкта.СуммаНДС;
				Этап.Стоимость = Этап.СтоимостьСНДС - Этап.СуммаНДС;
			КонецЕсли; 
		КонецЕсли; 
		
		Если ВыборкаДетальныеЗаписи.КоличествоУчастков = 0 Тогда
		    Этап.КоличествоУчастков = 1;
		КонецЕсли; 

		Если мРазное.ПолучитьГородБазы() = "Гродно" Тогда
			Если ВыборкаДетальныеЗаписи.Заактировано = 0 Тогда
				Этап.Пометка = Ложь;
			Иначе
				Этап.Пометка = Истина; 
			КонецЕсли;
		Иначе	
			Если ВыборкаДетальныеЗаписи.Заактировано > 0 Тогда
				Этап.Пометка = Ложь;
			Иначе
				Этап.Пометка = Истина; 
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
    Если ЭтапыДоговора.Количество() > 0 Тогда
		//НачИсполнителя = ЭтапыДоговора[0].ЭтапДоговора.Подразделение.Руководитель;
        НачИсполнителя = ЭтапыДоговора[0].НачИсполнителя;
    КонецЕсли; 
	
	// Договор
	ДанныеДоговора = Результат[1].Выгрузить();
	НомерДоговора = ДанныеДоговора[0].РегистрационныйНомер;
	ДатаДоговора = ДанныеДоговора[0].ДатаРегистрации;
    //Подписал = ДанныеДоговора[0].Утвердил;
	Организация = ДанныеДоговора[0].Организация;
	
    Если Город = "Брест" Тогда
        Если ЗначениеЗаполнено(АктВыполненныхРабот) Тогда
            Подписал = АктВыполненныхРабот.Утвердил;
        Иначе    
            // Подписывает акт - тот кто подписал договор
            Подписал = ДанныеДоговора[0].Утвердил;
        КонецЕсли; 
    КонецЕсли;
    
	Если ЗначениеЗаполнено(ДанныеДоговора[0].Валюта) Тогда
		ВалютаДоговора = ДанныеДоговора[0].Валюта; 
	Иначе	
		ВалютаДоговора = Константы.ОсновнаяВалюта.Получить(); 
	КонецЕсли; 
	
	// Заказчики
	ЮрЛица = Результат[5].Выгрузить();
	ФизЛица = Результат[14].Выгрузить();
	ЭтоФизЛица = ЮрЛица[0].Корреспондент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо;	
	
	Заказчики.Очистить();
	
	Если ЭтоФизЛица Тогда
		ТзЗаказчики = ФизЛица;
	Иначе
		ТзЗаказчики = ЮрЛица;
	КонецЕсли; 
	
	Для каждого СтрокаТз Из ТзЗаказчики Цикл
		Отбор = Новый Структура("Корреспондент", СтрокаТз.Корреспондент);
		ИскСтроки = Заказчики.НайтиСтроки(Отбор);
		Если ИскСтроки.Количество() = 0 Тогда
			Заказчик = Заказчики.Добавить();
			ЗаполнитьЗначенияСвойств(Заказчик, СтрокаТз);
		КонецЕсли; 
	КонецЦикла; 
	РублиНовые = Справочники.Валюты.НайтиПоКоду("933");
	РублиСтарые = Справочники.Валюты.НайтиПоКоду("974");
КонецПроцедуры 

&НаСервере
Функция ПолучитьМакетСервер(КакДоговорЮрЛица, Режим="")
	Если ЭтоФизЛица Тогда
		Если КакДоговорЮрЛица Тогда
			Режим = "ФизЛицаКакЮрЛица";
			Если Город = "Брест" Тогда
				Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет("ПФ_DOCX_АктФизЛицКакЮрЛиц_Брест");
			Иначе
				Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет("ПФ_DOCX_АктФизЛицКакЮрЛиц");
			КонецЕсли; 
		Иначе
			Режим = "ФизЛица";
			Если Город = "Брест" Тогда
				Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет("ПФ_DOCX_АктФизЛиц_Брест");
			ИначеЕсли Город = "Прилуки" Тогда
				Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет("ПФ_DOCX_АктФизЛиц_Прилуки");
			Иначе
				Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет("ПФ_DOCX_АктФизЛиц");
			КонецЕсли; 
		КонецЕсли; 
	Иначе
		Режим = "ЮрЛица";
			Если Город = "Брест" Тогда
				Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет("ПФ_DOCX_АктЮрЛиц_Брест");
			ИначеЕсли Город = "Прилуки" Тогда
				Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет("ПФ_DOCX_АктЮрЛиц_Прилуки");
			Иначе
				Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет("ПФ_DOCX_АктЮрЛиц");
			КонецЕсли; 
	КонецЕсли; 
КонецФункции
 
// Возвращает Фимилию и инициалы из полного наименования
//
// Параметры:
//  ПолноеНаименование  - <Строка> - Фамилия Имя Отчетство
//
// Возвращаемое значение:
//   <Строка>   - Фамилия И.О.
//
&НаСервере
Функция ПолучитьЗаказчикаКратко(ПолноеНаименование)
	Возврат ФизическиеЛица.ФамилияИнициалыФизЛица(ПолноеНаименование);
КонецФункции // ПолучитьЗаказчикаКратко()
 
&НаСервере
Функция СформироватьСуммуПрописью(СтоимостьАкта, Валюта, Флаг)
	Возврат РаботаСКурсамиВалют.СформироватьСуммуПрописью(СтоимостьАкта, Валюта, Флаг);
КонецФункции // СформироватьСуммуПрописью(СтоимостьАкта, Валюта, Истина)

&НаСервере
Функция ПолучитьПодписиИсполнителя(ЭтапДоговора, НачИсполнителяИзЭтапа = "")
	
	Подразделение = ЭтапДоговора.Подразделение;
	
	Если Город = "Брест" Тогда
		// Исполнителя берем из формы - НачИсполнителя
		Если НачИсполнителяИзЭтапа <> НачИсполнителя И ЗначениеЗаполнено(НачИсполнителя) Тогда
			Исполнитель = НачИсполнителя;
		Иначе	
			Исполнитель = НачИсполнителяИзЭтапа;
		КонецЕсли; 
		ОтделИсполнителяНаименование = РаботаСПользователями.ПолучитьПодразделение(Исполнитель).Наименование;
	Иначе
		Если ЗначениеЗаполнено(Подразделение) Тогда
			Если ЗначениеЗаполнено(ЭтапДоговора.Подразделение.Родитель) Тогда
				ОтделИсполнителя = ЭтапДоговора.Подразделение.Родитель;
				ОтделИсполнителяНаименование = ЭтапДоговора.Подразделение.Родитель.Наименование;
			Иначе
				ОтделИсполнителя = ЭтапДоговора.Подразделение;
				ОтделИсполнителяНаименование = ЭтапДоговора.Подразделение.Наименование;
			КонецЕсли; 
			
			Исполнитель = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ОтделИсполнителя, "Руководитель");
		КонецЕсли; 
	КонецЕсли; 
	
	ИсполнительКратко = ФизическиеЛица.ФамилияИнициалыФизЛица(Исполнитель.ФизЛицо);
	ДолжностьИсполнителя = РаботаСПользователями.ПолучитьДолжность(Исполнитель).Наименование;
	ТелефонИсполнителя = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Исполнитель, Справочники.ВидыКонтактнойИнформации.ТелефонПользователя);
	
	Если Не ЗначениеЗаполнено(Подразделение) Тогда
		ОтделИсполнителяНаименование = "___________________";
	КонецЕсли; 
	Если Не ЗначениеЗаполнено(ИсполнительКратко) Тогда
		ИсполнительКратко = "___________________";
	КонецЕсли; 
	Если Не ЗначениеЗаполнено(ДолжностьИсполнителя) Тогда
		ДолжностьИсполнителя = "___________________";
	КонецЕсли; 
	Если Не ЗначениеЗаполнено(ТелефонИсполнителя) Тогда
		ТелефонИсполнителя = "___________________";
	КонецЕсли; 
	
	СтруктураПараметров = Новый Структура(); 
	СтруктураПараметров.Вставить("ОтделИсполнителя", ОтделИсполнителяНаименование);
	СтруктураПараметров.Вставить("ДолжностьИсполнителя", ДолжностьИсполнителя);
	СтруктураПараметров.Вставить("ИсполнительКратко", ИсполнительКратко);
	СтруктураПараметров.Вставить("ТелефонИсполнителя", ТелефонИсполнителя);
	
	Возврат СтруктураПараметров;
КонецФункции // ПолучитьПодписиИсполнителя()

&НаСервере
Функция ПолучитьПодписиПодрядчика(Договор, КтоПодписал)
	СтруктураПараметров = Новый Структура(); 
	
	//Подписал = Договор.Утвердил;
	Если ЗначениеЗаполнено(КтоПодписал) Тогда
		ПодписалДолжность = РаботаСПользователями.ПолучитьДолжность(КтоПодписал).Наименование;
		ПодписалКратко = КтоПодписал.ПредставлениеВДокументах;
		ПодписалДоверенность = ПолучитьДоверенность(КтоПодписал, Договор.ДатаРегистрации);
	
	Иначе
		Если Не Город = "Брест" Тогда
			Сообщить("Не заполнен в договоре/акте Подписал!");
		КонецЕсли; 
		ПодписалДолжность = "___________________";
		ПодписалКратко = "___________________";
		ПодписалДоверенность = "___________________";
	КонецЕсли; 
	СтруктураПараметров.Вставить("ПодписалДолжность", ПодписалДолжность);
	СтруктураПараметров.Вставить("ПодписалКратко", ПодписалКратко);
	СтруктураПараметров.Вставить("ПодписалДоверенность", ПодписалДоверенность);
	
	Возврат СтруктураПараметров;
КонецФункции // ПолучитьПодписиПодрядчика()

&НаКлиенте
Процедура ДоговорПриИзменении(Элемент)
	ЗаполнитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    // Выделим отмеченные строки
    Для каждого Этап Из ЭтапыДоговора Цикл
        Если Этап.Пометка Тогда
            Элементы.ЭтапыДоговора.ВыделенныеСтроки.Добавить(Этап);
        КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДоверенность(Подписал, ДатаРегистрации)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДействиеДоверенностей.НомерДоверенности КАК НомерДоверенности,
	|	ДействиеДоверенностей.ДатаНачала КАК ДатаДоверенности,
	|	ДействиеДоверенностей.ДатаОкончания
	|ИЗ
	|	РегистрСведений.ДействиеДоверенностей КАК ДействиеДоверенностей
	|ГДЕ
	|	ДействиеДоверенностей.Пользователь = &Пользователь
	|	И &ДатаДоговора МЕЖДУ ДействиеДоверенностей.ДатаНачала И ДействиеДоверенностей.ДатаОкончания";
	
	Запрос.УстановитьПараметр("ДатаДоговора", ДатаРегистрации);
	Запрос.УстановитьПараметр("Пользователь", Подписал);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		РезультатОбработки = "";
		Возврат РезультатОбработки;
	КонецЕсли; 
	
	ВыборкаШапкаДоговора = Результат.Выбрать();
	ВыборкаШапкаДоговора.Следующий();
	
	НомерДоверенности = СокрЛП(ВыборкаШапкаДоговора.НомерДоверенности);
	Если НомерДоверенности = "Устав" Тогда
		РезультатОбработки = "";
	Иначе
		РезультатОбработки = "(на основании "+НомерДоверенности+ " от "+Формат(ВыборкаШапкаДоговора.ДатаДоверенности, "ДЛФ = DD")+")";
	КонецЕсли;
	
	Возврат РезультатОбработки;
	
КонецФункции // ПолучитьРеквизитыКорреспондента()

&НаСервере
Функция ПолучитьЦель()
	РезультатОбработки = "";
	ИскСвойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Цель предоставления зем. участка физлицам");
	МасСвойств = Новый Массив;
	МасСвойств.Добавить(ИскСвойство);
	ТаблСвойств = УправлениеСвойствами.ПолучитьЗначенияСвойств(Договор, Истина, Ложь, МасСвойств); 
	Если ТаблСвойств.Количество() > 0 Тогда
		РезультатОбработки = НРег(ТаблСвойств[0].Значение);
	КонецЕсли;	
	
	Возврат РезультатОбработки;
КонецФункции 

&НаКлиенте
Процедура Создать(Команда)
	СоздатьАкт = Истина;  
	Если Не ЗначениеЗаполнено(Договор) Тогда
		Сообщить("Укажите договор или акт выполненных работ!");
		Возврат;
	КонецЕсли; 
	Если мРазное.ПолучитьГородБазы() = "Гродно" Тогда
		ГродноПечатьАкта()
	Иначе
		ПечатьАкта();
	КонецЕсли;
	Оповестить("Напечатан акт выполненных работ", АктВыполненныхРабот);	
КонецПроцедуры // Печать()

&НаКлиенте
Процедура ПечатьВорд(Команда)
	СоздатьАкт = Ложь;
	Если Не ЗначениеЗаполнено(Договор) Тогда
		Сообщить("Укажите договор или акт выполненных работ!");
		Возврат;
	КонецЕсли; 
	Если мРазное.ПолучитьГородБазы() = "Гродно" Тогда
		ГродноПечатьАкта()
	Иначе
		ПечатьАкта();
	КонецЕсли;
	
	//Для Каждого СтрЭтапа Из ЭтапыДоговора Цикл
	//	Если СтрЭтапа.Пометка Тогда
	//		ЗаписатьДатуПечатиАкта(СтрЭтапа.ЭтапДоговора, ТекущаяДата());
	//	КонецЕсли;
	//КонецЦикла;	
	Оповестить("Напечатан акт выполненных работ", АктВыполненныхРабот);	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьАкта()
	Город = мРазное.ПолучитьГородБазы();
	Если НЕ Город = "Брест" Тогда
		Если Не ЗначениеЗаполнено(НачИсполнителя) Тогда
			// Создание сообщения
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "Не заполнено поле ""Начальник исполнителя""!";
			Сообщение.Поле = "НачИсполнителя";
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли; 
	КонецЕсли; 
	
	Подписи = ПолучитьПодписиПодрядчика(Договор, Подписал);
	СтруктураНашихРеквизитов = мРаботаСДоговорами.ПолучитьНашиРеквизиты(Договор);
	
	КолвоАктов = 0;
	ЕстьСовместно = Ложь;
	Для Каждого СтрЭтапа Из ЭтапыДоговора Цикл
		Если СтрЭтапа.Пометка Тогда
			Если СтрЭтапа.Совместно Тогда
				ЕстьСовместно = Истина;
			Иначе
				// совместные не печатаются отдельно
				КолвоАктов = КолвоАктов + 1;	
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
	
	Если КолвоАктов = 0 Тогда
		Сообщить("Нет отмеченных актов для печати!");	
		Возврат;
	КонецЕсли; 
	
	WordApp = Новый COMОбъект("Word.Application");
	Индикатор = мРазноеКлиент.ПолучитьИндикаторПроцесса(КолвоАктов);
	Сч=0;
	
	СписокФайлов = Новый СписокЗначений;
	
	Для Каждого СтрЭтапа Из ЭтапыДоговора Цикл
		Если СтрЭтапа.Пометка Тогда
			Если ЕстьСовместно и СтрЭтапа.Совместно Тогда
				// этот этап был выведен в акт вместе с основным этапом
				Продолжить;
			КонецЕсли; 
			
			Сч = Сч + 1;
			Индикатор.ПредставлениеПроцесса = "Подготовка к печати... "+Сч+" из "+КолвоАктов+"...";
			мРазноеКлиент.ОбработатьИндикатор(Индикатор, Сч);

	        Режим = "";
			Макет = ПолучитьМакетСервер(СтрЭтапа.КакДоговорЮрЛица, Режим);
			временныйПуть = КаталогВременныхФайлов();
            Если ЗначениеЗаполнено(АктВыполненныхРабот) Тогда
                ПутьКФайлуНаДиске = "Акт "+ПолучитьРегНомерАкта(АктВыполненныхРабот)+".docx";
            Иначе
                ПутьКФайлуНаДиске = "Акт "+НомерДоговора+"_"+СтрЭтапа.НомерЭтапа+".docx";
            КонецЕсли; 
			ПутьКФайлуНаДиске = СтрЗаменить(ПутьКФайлуНаДиске, "/", "_");
			ПутьКФайлуНаДиске = СтрЗаменить(ПутьКФайлуНаДиске, "\", "_");
			ПутьКФайлуНаДиске = временныйПуть + ПутьКФайлуНаДиске;
			Макет.Записать(ПутьКФайлуНаДиске);
			
			Док = WordApp.Documents.ADD(ПутьКФайлуНаДиске);
			
			СписокФайлов.Добавить(ПутьКФайлуНаДиске);
			
			Селекция = WordApp.Selection;
			
			Поиск = Док.Content.Find;
			Поиск.ClearFormatting();
			Поиск.Replacement.ClearFormatting();
			
			// Шапка документа
			Для каждого Реквизит Из СтруктураНашихРеквизитов Цикл
				мРазноеКлиент.Заменить(Поиск, Реквизит.Ключ, Реквизит.Значение);  
			КонецЦикла; 
			
			// Заказчики
			ВыводЗаказчиков(Режим);
			
			// Заполнение акта
			РегНомер = НомерДоговора;
			ДатаРег = Формат(ДатаДоговора,"ДЛФ=D");
            Если ЗначениеЗаполнено(АктВыполненныхРабот) Тогда
                НомерАкта = ПолучитьРегНомерАкта(АктВыполненныхРабот);
            Иначе
    			НомерАкта = РегНомер+"/"+СтрЭтапа.НомерЭтапа;
            КонецЕсли; 
			мРазноеКлиент.Заменить(Поиск, "НомерДатаДоговора", РегНомер+" от "+ДатаРег);  
			мРазноеКлиент.Заменить(Поиск, "НомерАкта", НомерАкта); 
			Если СтрЭтапа.ЭтоУслуга Тогда
				ВидАкта = "сдачи-приемки оказанных услуг";
				ВидРабот = "оказанных услуг";
				ВидРаботКратко = "услуг";
			Иначе
				ВидАкта = "готовности землеустроительных работ, выполненных";
				ВидРабот = "выполненных работ";
				ВидРаботКратко = "работ";
			КонецЕсли; 
			мРазноеКлиент.Заменить(Поиск, "%ВидАкта%", ВидАкта); 
			мРазноеКлиент.Заменить(Поиск, "%ВидРабот%", ВидРабот); 
			мРазноеКлиент.Заменить(Поиск, "%ВидРаботКратко%", ВидРаботКратко); 
			мРазноеКлиент.Заменить(Поиск, "%Город", ГородПодразделения); 
			Если ЗначениеЗаполнено(АктВыполненныхРабот) И (НЕ Город = "Брест" ИЛИ Режим = "ЮрЛица") Тогда
				ДатаАкта = ПолучитьДатуРегистрации(АктВыполненныхРабот);
				Если ЗначениеЗаполнено(ДатаАкта) Тогда
					ДатаАкта = Формат(ДатаАкта, "ДЛФ=DD");
				Иначе	
					ДатаАкта = "«_____»_____________201___г.";
				КонецЕсли; 
			Иначе
				ДатаАкта = "«_____»_____________201___г.";
			КонецЕсли; 
			мРазноеКлиент.Заменить(Поиск, "%ДатаАкта%", ДатаАкта);  
			
			Если Режим = "ФизЛица" Тогда
				МестоРасположение = ?(Прав(СтрЭтапа.Месторасположение, 1)=".", 
					Лев(СтрЭтапа.Месторасположение, СтрДлина(СтрЭтапа.Месторасположение)-1), 
					СокрЛП(СтрЭтапа.Месторасположение));
				Цель = ПолучитьЦель();
				ОбъектРаботЦель = "Местоположение: " + ?(ЗначениеЗаполнено(МестоРасположение), МестоРасположение, "_______________________") + 
					?(ЗначениеЗаполнено(Цель), ", " + Цель, "");
				
				Док.Bookmarks("ОбъектРаботЦель").Range.Text = ОбъектРаботЦель;  
			Иначе
				Если СтрЭтапа.ЭтоУслуга Тогда
					Док.Bookmarks("ОбъектРаботЦель").Range.Text = "Наименование объекта услуг и его местоположение: " + СокрЛП(СтрЭтапа.ОбъектРабот); // Закладка удаляется 
				Иначе
					Док.Bookmarks("ОбъектРаботЦель").Range.Text = "Наименование объекта работ и его местоположение: " + СокрЛП(СтрЭтапа.ОбъектРабот); // Закладка удаляется 
				КонецЕсли; 
			КонецЕсли; 
			
			ВыводЭтапов(СтрЭтапа, ЕстьСовместно, Режим);
			
			// Подписи
			ВыводПодписиПодрядчика(СтрЭтапа, Подписи);

			// Подписи заказчиков
			ВыводПодписиЗаказчиков(Режим);
			
			ВыводШтрихкода(Город);
			
			Док.SaveAs(ПутьКФайлуНаДиске);                        
			Док.Saved = Истина;
			
			Если СоздатьАкт Тогда
				Док.Close();
				WordApp.Visible = Ложь; 
				Если ЗначениеЗаполнено(АктВыполненныхРабот) Тогда
					// Сохранить в Акт вып работ
					КарточкаФайла = РаботаСФайламиКлиент.СоздатьДокументНаОсновеФайла(ПутьКФайлуНаДиске, АктВыполненныхРабот, ЭтаФорма, Истина, , , , ,);
					
					// Открытие файла на редактирование из карточки в списке файлов договора
					КомандыРаботыСФайламиКлиент.Редактировать(КарточкаФайла);
				КонецЕсли; 
			Иначе
				Если ПечатьСразуНаПринтер Тогда
					Если Копий > 0 Тогда
						Док.PrintOut(,,,,,,,Копий);
					Иначе 
						Док.PrintOut();
					КонецЕсли;
					
					Док.Close(); 
					WordApp.Quit();	
					WordApp = Неопределено;
				Иначе
					// Открытие на просмотр файла
					ЗапуститьПриложение(ПутьКФайлуНаДиске, , , ); 
				КонецЕсли; 
            КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
	
	//Для Сч=0 По СписокФайлов.Количество()-1 Цикл
	//	ИмяФайла = СписокФайлов[Сч].Значение;
	//	Если Сч = 0 Тогда
	//		Док = WordApp.Documents.ADD(ИмяФайла);
	//		Контекст = Док.Content;
	//		Контекст.InsertParagraphAfter();
	//	Иначе
	//		Док.Range(Контекст.End - 1, Контекст.End).InsertFile(ИмяФайла, "", Ложь, Ложь);
	//		Контекст.InsertParagraphAfter();
	//	КонецЕсли; 
	//	
	//	Если Сч+1 < КолвоАктов Тогда
	//		// Вставка разрыва раздела с новой страницы страницы
	//		ПозицияОкончанияДокумента = Док.Range().End;
	//		Док.Range(ПозицияОкончанияДокумента-1, ПозицияОкончанияДокумента-1).InsertBreak(2);
	//	КонецЕсли; 
	//КонецЦикла; 
	//
	//ПутьКФайлуНаДиске1 = ПолучитьИмяВременногоФайла("docx");
	//
	//Док.SaveAs(ПутьКФайлуНаДиске1);                        
	//Док.Saved = Истина;
	//
	//Если ПечатьСразуНаПринтер Тогда
	//	Если Копий > 0 Тогда
	//		Док.PrintOut(,,,,,,,Копий);
	//	Иначе 
	//		Док.PrintOut();
	//	КонецЕсли;
	//	
	//	Док.Close(); 
	//Иначе
	//	// Открытие на просмотр файла
	//	ЗапуститьПриложение(ПутьКФайлуНаДиске1, , , ); 
	//КонецЕсли; 
	
	//WordApp.Quit();	
	//WordApp = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ВыводЗаказчиков(Режим)
	//работаем с копированием абзацев
	НачалоЗакладки = Док.Bookmarks("ЗаказчикиРабот").Start;
	КонецЗакладки = Док.Bookmarks("ЗаказчикиРабот").End;
	Селекция.Start = НачалоЗакладки;
	Селекция.End = КонецЗакладки;
	Селекция.Cut();
	
	ЗаказчикиКоличество = Заказчики.Количество(); 
	
	Если Режим = "ЮрЛица" Тогда
		ПлательщикиКоличество = ЗаказчикиКоличество - 1;
		
		Для й=1 По ЗаказчикиКоличество Цикл
			селекция.Start = НачалоЗакладки; // Начало вставки
			селекция.Collapse();             // Вставка, а не замещение
			селекция.Paste();
			//заполняем параметры
			НомерЗаказчика = ЗаказчикиКоличество-й+1;
			
			ДанныеКорр = Заказчики[НомерЗаказчика-1];
			//ДанныеКорр = ДанныеКорреспондентов[НомерЗаказчика-1];
			
			Если ЗаказчикиКоличество=1 Тогда
				мРазноеКлиент.Заменить(Поиск, "%ЗаказчикШапка%", "Заказчик");
				мРазноеКлиент.Заменить(Поиск, "%НомерЗаказчика%", "");
				мРазноеКлиент.Заменить(Поиск, "%СтрокаЗАКАЗЧИКИ%", "ЗАКАЗЧИК");
				мРазноеКлиент.Заменить(Поиск, "%ю%", "е");
			Иначе
				Если ЗаказчикПлательщики Тогда
					Если й=ЗаказчикиКоличество Тогда // Вывод первого
						мРазноеКлиент.Заменить(Поиск, "%ЗаказчикШапка%", "Заказчик");
						мРазноеКлиент.Заменить(Поиск, "%НомерЗаказчика%", "");
						Если ПлательщикиКоличество = 1 Тогда
							мРазноеКлиент.Заменить(Поиск, "%СтрокаЗАКАЗЧИКИ%", "ЗАКАЗЧИК и ПЛАТЕЛЬЩИК");
						Иначе	
							мРазноеКлиент.Заменить(Поиск, "%СтрокаЗАКАЗЧИКИ%", "ЗАКАЗЧИК и ПЛАТЕЛЬЩИКИ");
						КонецЕсли; 
					Иначе
						мРазноеКлиент.Заменить(Поиск, "%ЗаказчикШапка%", "Плательщик");
						Если ПлательщикиКоличество = 1 Тогда
							мРазноеКлиент.Заменить(Поиск, "%НомерЗаказчика%", "");  
						Иначе	
							НомерПлательщика = НомерЗаказчика - 1;
							мРазноеКлиент.Заменить(Поиск, "%НомерЗаказчика%", " "+НомерПлательщика);  
						КонецЕсли; 
					КонецЕсли; 
				Иначе	
					мРазноеКлиент.Заменить(Поиск, "%ЗаказчикШапка%", "Заказчик");
					мРазноеКлиент.Заменить(Поиск, "%НомерЗаказчика%", " "+НомерЗаказчика);  
					мРазноеКлиент.Заменить(Поиск, "%СтрокаЗАКАЗЧИКИ%", "ЗАКАЗЧИКИ");
				КонецЕсли; 
				мРазноеКлиент.Заменить(Поиск, "%ю%", "ю");
			КонецЕсли; 
			мРазноеКлиент.Заменить(Поиск, "%Заказчик%", ДанныеКорр.ПолноеНаименование);  
			мРазноеКлиент.Заменить(Поиск, "%Адрес%", ДанныеКорр.Адрес); 
			Если ЗначениеЗаполнено(ДанныеКорр.НомерСчета) Тогда
				РасчетныйСчет = ДанныеКорр.НомерСчета + " " + ДанныеКорр.Банк + ?(ЗначениеЗаполнено(ДанныеКорр.БанкАдрес), ", ", "")+СокрЛП(ДанныеКорр.БанкАдрес) + ", БИК "+ДанныеКорр.КодБанка;
			Иначе
				РасчетныйСчет = "_________________ " + "_________________, "+"_________________ " + ", БИК ________ ";
			КонецЕсли; 
			мРазноеКлиент.Заменить(Поиск, "%РасчетныйСчет%", РасчетныйСчет);  
			мРазноеКлиент.Заменить(Поиск, "%УНП%", ДанныеКорр.УНП);  
			мРазноеКлиент.Заменить(Поиск, "%ОКПО%", ДанныеКорр.ОКПО);  
			мРазноеКлиент.Заменить(Поиск, "%Телефон%", ДанныеКорр.Телефон);  
		КонецЦикла; 
	Иначе
		Для й=1 По ЗаказчикиКоличество Цикл
			селекция.Start = НачалоЗакладки; // Начало вставки
			селекция.Collapse();             // Вставка, а не замещение
			селекция.Paste();
			//заполняем параметры
			НомерЗаказчика = ЗаказчикиКоличество-й+1;
			//РеквизитыФизЛица = мРаботаСДоговорами.ПолучитьРеквизитыФизЛица(Заказчики[НомерЗаказчика-1].Корреспондент);
			
			Если ЗаказчикиКоличество=1 Тогда
				мРазноеКлиент.Заменить(Поиск, "%СтрокаЗАКАЗЧИКИ%", "ЗАКАЗЧИК");
				мРазноеКлиент.Заменить(Поиск, "%НомерЗаказчика%", "");  
			Иначе
				мРазноеКлиент.Заменить(Поиск, "%СтрокаЗАКАЗЧИКИ%", "ЗАКАЗЧИКИ");
				мРазноеКлиент.Заменить(Поиск, "%НомерЗаказчика%", " "+НомерЗаказчика);  
			КонецЕсли; 
			мРазноеКлиент.Заменить(Поиск, "%Заказчик%", Заказчики[НомерЗаказчика-1].ПолноеНаименование);  
			Если мРазное.ПолучитьГородБазы() = "Брест" Тогда
				// Паспорт не нужен
				мРазноеКлиент.Заменить(Поиск, "%Паспорт%", "");  
				мРазноеКлиент.Заменить(Поиск, "%Выдан%", "");  
			Иначе
				мРазноеКлиент.Заменить(Поиск, "%Паспорт%", "Паспорт: " + Заказчики[НомерЗаказчика-1].СерияПаспорта +" №"+ Заказчики[НомерЗаказчика-1].НомерПаспорта+Символы.ВК);  
				мРазноеКлиент.Заменить(Поиск, "%Выдан%", "Выдан: " + Лев(Формат(Заказчики[НомерЗаказчика-1].ДатаВыдачи, "ДФ=dd.MM.yyyy"), 10) + " " + Заказчики[НомерЗаказчика-1].КемВыдан+Символы.ВК);  
			КонецЕсли; 
			мРазноеКлиент.Заменить(Поиск, "%Адрес%", Заказчики[НомерЗаказчика-1].Адрес);  
		КонецЦикла; 
	КонецЕсли; 
	
	Если ЗаказчикиКоличество=1 Тогда
		мРазноеКлиент.Заменить(Поиск, "%И%", "");
		мРазноеКлиент.Заменить(Поиск, "%ю%", "е");
	Иначе
		мРазноеКлиент.Заменить(Поиск, "%И%", "И");
		мРазноеКлиент.Заменить(Поиск, "%ю%", "ю");
	КонецЕсли; 
	
	Экземпляров = ЗаказчикиКоличество + 1;
	мРазноеКлиент.Заменить(Поиск, "%Экземпляров%", Экземпляров); 
КонецПроцедуры

&НаКлиенте
Процедура ВыводЭтапов(СтрЭтапа, ЕстьСовместно, Режим)
	ЕдИзм = ?(Режим = "ЮрЛица", "объект", "участок");
	ФорматЦен = "ЧДЦ=2; ЧРГ=' '; ЧН=-";
	СтавкаНДС = "";
			
	Если ЕстьСовместно и СтрЭтапа.ЭтоОсновнойЭтап  Тогда
		// Надо вывести итог по 2-м этапам, а затем оба этапа
		НачалоЗакладки = Док.Bookmarks("СтрокаАкта").Start;
		КонецЗакладки = Док.Bookmarks("СтрокаАкта").End;
		Селекция.Start = НачалоЗакладки;
		Селекция.End = КонецЗакладки;
		Селекция.Cut();
		
		// Итоги
		ЦенаВсего = 0;
		СуммаНДСВсего = 0;
		ЦенаСНДСВсего = 0;
		
		// Вывод этапов 
		й = ЭтапыДоговора.Количество()-1;
		Пока й >= 0 Цикл
			Стр = ЭтапыДоговора[й];
			Если Стр.ОсновнойЭтапДоговора = СтрЭтапа.ЭтапДоговора ИЛИ Стр.ЭтоОсновнойЭтап Тогда
				селекция.Start = НачалоЗакладки; // Начало вставки
				селекция.Collapse();             // Вставка, а не замещение
				селекция.Paste();
				
				мРазноеКлиент.Заменить(Поиск, "%НаименованиеРаботы%", "     " + Стр.НаименованиеРаботы); 
				мРазноеКлиент.Заменить(Поиск, "%ЕИ%", ЕдИзм); 
				мРазноеКлиент.Заменить(Поиск, "%КолУч%", Стр.КоличествоУчастков); 
				мРазноеКлиент.Заменить(Поиск, "%Цена%", Формат(Стр.Стоимость, ФорматЦен)); 
				мРазноеКлиент.Заменить(Поиск, "%СтавкаНДС%", Стр.СтавкаНДС); 
				мРазноеКлиент.Заменить(Поиск, "%СуммаНДС%", Формат(Стр.СуммаНДС, ФорматЦен)); 
				мРазноеКлиент.Заменить(Поиск, "%ЦенаСНДС%", Формат(СтрЭтапа.СтоимостьСНДС, ФорматЦен)); 
				
				Если Стр.СуммаНДС > 0 Тогда
					СтавкаНДС = Стр.СтавкаНДС;
				КонецЕсли; 
				
				ЦенаВсего = ЦенаВсего + Стр.Стоимость;
				СуммаНДСВсего = СуммаНДСВсего + Стр.СуммаНДС;
				ЦенаСНДСВсего = ЦенаСНДСВсего + СтрЭтапа.СтоимостьСНДС;
			КонецЕсли; 
			
			й=й-1;
		КонецЦикла; 
		
		//Вывод итога
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		мРазноеКлиент.Заменить(Поиск, "%НаименованиеРаботы%", СтрЭтапа.НаименованиеРаботы); 
		мРазноеКлиент.Заменить(Поиск, "%ЕИ%", ""); 
		мРазноеКлиент.Заменить(Поиск, "%КолУч%", ""); 
		мРазноеКлиент.Заменить(Поиск, "%Цена%", Формат(ЦенаВсего, ФорматЦен)); 
		мРазноеКлиент.Заменить(Поиск, "%СтавкаНДС%", ""); 
		мРазноеКлиент.Заменить(Поиск, "%СуммаНДС%", Формат(СуммаНДСВсего, ФорматЦен)); 
		мРазноеКлиент.Заменить(Поиск, "%ЦенаСНДС%", Формат(ЦенаСНДСВсего, ФорматЦен)); 
		
		СтоимостьАкта = СтоимостьАкта(ЦенаСНДСВсего, СуммаНДСВсего, СтавкаНДС, РублиНовые);
	Иначе
		// вывод этапа
		мРазноеКлиент.Заменить(Поиск, "%НаименованиеРаботы%", "     " + СтрЭтапа.НаименованиеРаботы); 
		мРазноеКлиент.Заменить(Поиск, "%ЕИ%", ЕдИзм); 
		мРазноеКлиент.Заменить(Поиск, "%КолУч%", СтрЭтапа.КоличествоУчастков); 
		мРазноеКлиент.Заменить(Поиск, "%Цена%", Формат(СтрЭтапа.Стоимость, ФорматЦен)); 
		мРазноеКлиент.Заменить(Поиск, "%СтавкаНДС%", СтрЭтапа.СтавкаНДС); 
		мРазноеКлиент.Заменить(Поиск, "%СуммаНДС%", Формат(СтрЭтапа.СуммаНДС, ФорматЦен)); 
		мРазноеКлиент.Заменить(Поиск, "%ЦенаСНДС%", Формат(СтрЭтапа.СтоимостьСНДС, ФорматЦен)); 
		
		СтоимостьАкта = СтоимостьАкта(СтрЭтапа.СтоимостьСНДС, СтрЭтапа.СуммаНДС, СтрЭтапа.СтавкаНДС, РублиНовые);
	КонецЕсли; 
	
	
	// Освобождение от НДС
	ЛьготаНДС = "";
	Если СтрЭтапа.СуммаНДС = 0 Тогда
		ЛьготаНДС = "В соответствии с "+СтрЭтапа.ОсвобождениеОтНДСДляПечати+" вышеуказанные работы освобождаются от обложения налогом на добавленную стоимость.";
	КонецЕсли; 
	
	Док.Bookmarks("СтоимостьАкта").Range.Text = СтоимостьАкта; 
	Док.Bookmarks("ЛьготаНДС").Range.Text = ЛьготаНДС; 
	
КонецПроцедуры
 
&НаКлиенте
Процедура ВыводПодписиПодрядчика(СтрЭтапа, Подписи)
	Если мРазное.ПолучитьГородБазы() = "Брест" Тогда
		// Брест подписывает только НачИсполнителя из Этапа договора
		ПодписиИсполнителя = ПолучитьПодписиИсполнителя(СтрЭтапа.ЭтапДоговора, СтрЭтапа.НачИсполнителя);
		
		мРазноеКлиент.Заменить(Поиск, "ОтделИсполнителя", СтрЭтапа.ОтделИсполнителя);
		Если Подписи.Свойство("ПодписалДолжность") Тогда
			мРазноеКлиент.Заменить(Поиск, "ДолжностьИсполнителя", ПодписиИсполнителя.ДолжностьИсполнителя);
		Иначе
			Сообщить("Не заполнена должность подписавшего!");
		КонецЕсли; 
		Если Подписи.Свойство("ПодписалКратко") Тогда
			мРазноеКлиент.Заменить(Поиск, "ИсполнительКратко", ПодписиИсполнителя.ИсполнительКратко);
		Иначе
			Сообщить("Не заполнен подписавший договор!");
		КонецЕсли; 
		
		Если ПодписиИсполнителя.Свойство("ТелефонИсполнителя")  Тогда
			Док.Bookmarks("ТелефонИсполнителя").Range.Text = ПодписиИсполнителя.ТелефонИсполнителя; 
		Иначе
			Док.Bookmarks("ТелефонИсполнителя").Range.Text = "_________________ "; 
			Сообщить("Не заполнен телефон исполнителя!");
		КонецЕсли; 
		
		//мРазноеКлиент.Заменить(Поиск, "ПодписалДоверенность", Подписи.ПодписалДоверенность+Символы.ВК);
	Иначе
		ПодписиИсполнителя = ПолучитьПодписиИсполнителя(СтрЭтапа.ЭтапДоговора, СтрЭтапа.НачИсполнителя);
		
		мРазноеКлиент.Заменить(Поиск, "ОтделИсполнителя", СтрЭтапа.ОтделИсполнителя);
		Если ПодписиИсполнителя.Свойство("ДолжностьИсполнителя") Тогда
			мРазноеКлиент.Заменить(Поиск, "ДолжностьИсполнителя", ПодписиИсполнителя.ДолжностьИсполнителя);
		Иначе
			Сообщить("Не заполнена должность исполнителя!");
		КонецЕсли; 
		Если ПодписиИсполнителя.Свойство("ИсполнительКратко") Тогда
			мРазноеКлиент.Заменить(Поиск, "ИсполнительКратко", ПодписиИсполнителя.ИсполнительКратко);
		Иначе
			Сообщить("Не заполнен исполнитель");
		КонецЕсли; 
		Если ПодписиИсполнителя.Свойство("ТелефонИсполнителя") Тогда
			Док.Bookmarks("ТелефонИсполнителя").Range.Text = ПодписиИсполнителя.ТелефонИсполнителя; 
		Иначе
			Сообщить("Не заполнен телефон исполнителя!");
		КонецЕсли; 
	КонецЕсли; 
	
	//мРазноеКлиент.Заменить(Поиск, "ТелефонИсполнителя", ПодписиИсполнителя.ТелефонИсполнителя);
	
	Если мРазное.ПолучитьГородБазы() = "Брест" Тогда
		мРазноеКлиент.Заменить(Поиск, "%ПодписалДолжность", "");
		мРазноеКлиент.Заменить(Поиск, "%МестоПодписи", "");
		мРазноеКлиент.Заменить(Поиск, "%ПодписалКратко", "");
		мРазноеКлиент.Заменить(Поиск, "%(подпись)ФИО", "");
		мРазноеКлиент.Заменить(Поиск, "ПодписалДоверенность", "");
	Иначе
		Если Подписи.Свойство("ПодписалДолжность") Тогда
			мРазноеКлиент.Заменить(Поиск, "%ПодписалДолжность", Подписи.ПодписалДолжность+Символы.ВК);
		Иначе
			Сообщить("Не заполнена должность подписавшего!");
		КонецЕсли; 
		мРазноеКлиент.Заменить(Поиск, "%МестоПодписи", ""+Символы.ВК+"_________________ ");
		Если Подписи.Свойство("ПодписалКратко") Тогда
			мРазноеКлиент.Заменить(Поиск, "%ПодписалКратко", Подписи.ПодписалКратко+Символы.ВК);
		Иначе
			Сообщить("Не заполнен подписавший договор!");
		КонецЕсли; 
		мРазноеКлиент.Заменить(Поиск, "%(подпись)ФИО", "         (подпись)                               (Ф.И.О.)"+Символы.ВК);
		мРазноеКлиент.Заменить(Поиск, "ПодписалДоверенность", Подписи.ПодписалДоверенность+Символы.ВК);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ВыводПодписиЗаказчиков(Режим)
	НачалоЗакладки = Док.Bookmarks("ЗаказчикиПодвал").Start;
	КонецЗакладки = Док.Bookmarks("ЗаказчикиПодвал").End;
	Селекция.Start = НачалоЗакладки;
	Селекция.End = КонецЗакладки;
	Селекция.Cut();
	
	ЗаказчикиКоличество = Заказчики.Количество(); 
	ПлательщикиКоличество = ЗаказчикиКоличество - 1;
	
	Если Режим = "ЮрЛица" Тогда
		Для й=1 По ЗаказчикиКоличество Цикл
			селекция.Start = НачалоЗакладки; // Начало вставки
			селекция.Collapse();             // Вставка, а не замещение
			селекция.Paste();
			//заполняем параметры
			НомерЗаказчика = ЗаказчикиКоличество-й+1;
			ДанныеКорр = Заказчики[НомерЗаказчика-1];
			//ДанныеКорр = ДанныеКорреспондентов[НомерЗаказчика-1];
			
			Если ЗаказчикиКоличество=1 Тогда
				мРазноеКлиент.Заменить(Поиск, "%ЗаказчикПодвал%", "ЗАКАЗЧИКА");
				мРазноеКлиент.Заменить(Поиск, "_НомерЗаказчика_", "");  
			Иначе
				Если ЗаказчикПлательщики Тогда
					Если й=ЗаказчикиКоличество Тогда //вывод первого
						мРазноеКлиент.Заменить(Поиск, "%ЗаказчикПодвал%", "ЗАКАЗЧИКА");
						мРазноеКлиент.Заменить(Поиск, "_НомерЗаказчика_", "");  
					Иначе
						мРазноеКлиент.Заменить(Поиск, "%ЗаказчикПодвал%", "ПЛАТЕЛЬЩИКА");
						Если ПлательщикиКоличество = 1 Тогда
							мРазноеКлиент.Заменить(Поиск, "_НомерЗаказчика_", "");  
						Иначе	
							НомерПлательщика = НомерЗаказчика - 1;
							мРазноеКлиент.Заменить(Поиск, "_НомерЗаказчика_", " "+НомерПлательщика);  
						КонецЕсли; 
					КонецЕсли; 
				Иначе	
					мРазноеКлиент.Заменить(Поиск, "%ЗаказчикПодвал%", "ЗАКАЗЧИКА");
					мРазноеКлиент.Заменить(Поиск, "_НомерЗаказчика_", " "+НомерЗаказчика);  
				КонецЕсли; 
			КонецЕсли; 
			Если ЗначениеЗаполнено(ДанныеКорр.ДолжностьКорр) Тогда
				мРазноеКлиент.Заменить(Поиск, "ДолжностьКорр", ДанныеКорр.ДолжностьКорр);  
			Иначе
				мРазноеКлиент.Заменить(Поиск, "ДолжностьКорр", "_________________ ");  
			КонецЕсли; 
			Если ЗначениеЗаполнено(ДанныеКорр.КорреспондентКратко) Тогда
				мРазноеКлиент.Заменить(Поиск, "КорреспондентКратко", ДанныеКорр.КорреспондентКратко);  
			Иначе
				мРазноеКлиент.Заменить(Поиск, "КорреспондентКратко", "________________________ ");  
			КонецЕсли; 
		КонецЦикла; 
	Иначе
		Для й=1 По ЗаказчикиКоличество Цикл
			селекция.Start = НачалоЗакладки; // Начало вставки
			селекция.Collapse();             // Вставка, а не замещение
			селекция.Paste();
			//заполняем параметры
			НомерЗаказчика = ЗаказчикиКоличество-й+1;
			//РеквизитыФизЛица = мРаботаСДоговорами.ПолучитьРеквизитыФизЛица(Заказчики[НомерЗаказчика-1].Корреспондент);
			
			Если ЗаказчикиКоличество=1 Тогда
				мРазноеКлиент.Заменить(Поиск, "_НомерЗаказчика_", "");  
			Иначе
				мРазноеКлиент.Заменить(Поиск, "_НомерЗаказчика_", " "+НомерЗаказчика);  
			КонецЕсли; 
			мРазноеКлиент.Заменить(Поиск, "КорреспондентКратко", ПолучитьЗаказчикаКратко(Заказчики[НомерЗаказчика-1].ПолноеНаименование));  
		КонецЦикла; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ВыводШтрихкода(Город)
	Если ПечататьШтрихКод И НЕ Город = "Брест"  Тогда
		Если ЗначениеЗаполнено(АктВыполненныхРабот) Тогда
			ДанныеОШтрихкоде = ШтрихкодированиеСервер.ПолучитьДанныеДляВставкиШтрихкодаВОбъект(АктВыполненныхРабот, Ложь, Истина);
			Если ДанныеОШтрихкоде <> Неопределено
				И ДанныеОШтрихкоде.Свойство("ДвоичныеДанныеИзображения") Тогда
				
				// Запись картинки штрихкода во временный файл
				ВременныйФайлКартинки = ПолучитьИмяВременногоФайла("png");
				ДанныеОШтрихкоде.ДвоичныеДанныеИзображения.Записать(ВременныйФайлКартинки);
				
				Док.Bookmarks("Штрихкод").Range.Select();
				Селекция = WordApp.Selection; // активная (выделенная) область 
				Рисунок = Селекция.InlineShapes.AddPicture(ВременныйФайлКартинки, Ложь, Истина);
				
				// Чтобы установить обтекание текста, конвертируем рисунок в фигуру
				Shape = Рисунок.ConvertToShape();
				Shape.WrapFormat.Type = 0; // по контуру...
				
				УдалитьФайлы(ВременныйФайлКартинки);
			КонецЕсли;
		Иначе 
			// Акта нет - штрихкод не вставляем
			мРазноеКлиент.Заменить(Поиск, "Штрихкод", "");
		КонецЕсли; 
	Иначе
		// Печатать штрихкод не надо
		мРазноеКлиент.Заменить(Поиск, "Штрихкод", "");
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Функция СтоимостьАкта(Всего, НДС, СтавкаНДС, Валюта)
	СтоимостьАкта = мРаботаСДоговорами.СуммаЧисломИПрописью(Всего, Валюта);
	Если НДС > 0 Тогда
		СуммаНДСПрописьюПолная = мРаботаСДоговорами.СуммаЧисломИПрописью(НДС, Валюта);
		СтоимостьАкта = СтоимостьАкта + ", в том числе НДС по ставке " + СтавкаНДС +"% в сумме " + СуммаНДСПрописьюПолная;
	КонецЕсли;
	Возврат СтоимостьАкта;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДатуРегистрации(_Акт) 
	Возврат _Акт.ДатаРегистрации;
КонецФункции
 
&НаСервереБезКонтекста
Функция ПолучитьРегНомерАкта(_Акт) 
	Возврат _Акт.РегистрационныйНомер;
КонецФункции
 
&НаСервере
Процедура ЗаписатьДатуПечатиАкта(ЭтапДоговора, ДатаПечати) 
	ЭтапДоговораОбъект = ЭтапДоговора.ПолучитьОбъект();
	ЭтапДоговораОбъект.ДатаПечатиАкта = ДатаПечати;
	ЭтапДоговораОбъект.ОбменДанными.Загрузка = Истина;
	Попытка
		ЭтапДоговораОбъект.Записать();
	Исключение
	    Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не удалось записать этап договора "+ЭтапДоговора+"! "+ОписаниеОшибки();
		Сообщение.Сообщить(); 
	КонецПопытки; 
КонецПроцедуры 

&НаКлиенте
Процедура ГродноПечатьАкта()
	Город = мРазное.ПолучитьГородБазы();
	Если Не Город = "Гродно" Тогда
		Если Не ЗначениеЗаполнено(Подписал) Тогда
			// Создание сообщения
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "Не заполнено поле ""Подписал""!";
			Сообщение.Поле  = "Подписал";
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли; 
	КонецЕсли; 
	
	Подписи = ПолучитьПодписиПодрядчика(Договор, Подписал);
	СтруктураНашихРеквизитов = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьНашиРеквизиты();
	
	Этапы = Новый СписокЗначений;
	г = ЭтапыДоговора.Количество()-1;
	Пока г<>-1 Цикл
		Если ЭтапыДоговора[г].Пометка Тогда
			Этапы.Добавить(ЭтапыДоговора[г],"ЭтапДоговора");
		КонецЕсли;
		г = г - 1;
	КонецЦикла;
	Режим = "";
	Макет = ГродноПолучитьМакетНаСервере(Этапы.Получить(0).Значение.КакДоговорЮрЛица, Режим);
	временныйПуть = КаталогВременныхФайлов();
	
	Дата = '00010101';
	НомерАктирования = 0;
	Для каждого Этапа из Этапы Цикл
		Данные = ГродноПолучитьНомерИДатуАкта(Этапа.Значение.ЭтапДоговора);
		Если Дата < Данные.Дата Тогда
			Дата = Данные.Дата;
			НомерАктирования = Данные.Номер;
		КонецЕсли;
	КонецЦикла;
	Если НомерАктирования = 0 Тогда
		НомерАктирования = НомерАктирования + 1;
	КонецЕсли;
	
	ПутьКФайлуНаДиске = временныйПуть + "Акт " + НомерДоговора + "_" + НомерАктирования + ".docx";
	Макет.Записать(ПутьКФайлуНаДиске);
	
	WordApp = Новый COMОбъект("Word.Application");
	Док = WordApp.Documents.ADD(ПутьКФайлуНаДиске);
	
	Селекция = WordApp.Selection;
	
	Поиск = Док.Content.Find;
	Поиск.ClearFormatting();
	Поиск.Replacement.ClearFormatting();
	
	// Заполнение акта
	РегНомер  = НомерДоговора;
	ДатаРег   = Формат(ДатаДоговора,"ДЛФ=D");
	НомерАкта = РегНомер + "/" + НомерАктирования;
	мРазноеКлиент.Заменить(Поиск, "НомерДатаДоговора", РегНомер + " от " + ДатаРег);  
	мРазноеКлиент.Заменить(Поиск, "НомерАкта", НомерАкта);
	Если Дата = '00010101' Тогда
		мРазноеКлиент.Заменить(Поиск, "%Период%", Формат(ТекущаяДата(),"ДЛФ=Д"));
	Иначе
		мРазноеКлиент.Заменить(Поиск, "%Период%", Формат(Дата,"ДЛФ=Д"));
	КонецЕсли;
	
	// Шапка документа
	Для каждого Реквизит Из СтруктураНашихРеквизитов Цикл
		мРазноеКлиент.Заменить(Поиск, Реквизит.Ключ, Реквизит.Значение);  
	КонецЦикла;
	
	// Заказчики
	//работаем с копированием абзацев
	НачалоЗакладки = Док.Bookmarks("ЗаказчикиРабот").Start;
	КонецЗакладки  = Док.Bookmarks("ЗаказчикиРабот").End;
	Селекция.Start = НачалоЗакладки;
	Селекция.End   = КонецЗакладки;
	Селекция.Cut();
	
	ЗаказчикиКоличество = Заказчики.Количество(); 
	
	Если Режим = "ЮрЛица" Тогда
		ПлательщикиКоличество = ЗаказчикиКоличество - 1;
		
		Для й=1 По ЗаказчикиКоличество Цикл
			селекция.Start = НачалоЗакладки; // Начало вставки
			селекция.Collapse();             // Вставка, а не замещение
			селекция.Paste();
			//заполняем параметры
			НомерЗаказчика = ЗаказчикиКоличество-й+1;
			
			ДанныеКорр     = Заказчики[НомерЗаказчика-1];
			//ДанныеКорр = ДанныеКорреспондентов[НомерЗаказчика-1];
			
			Если ЗаказчикиКоличество=1 Тогда
				//мРазноеКлиент.Заменить(Поиск, "%ЗаказчикШапка%", "Заказчик");
				//мРазноеКлиент.Заменить(Поиск, "%НомерЗаказчика%", "");
				мРазноеКлиент.Заменить(Поиск, "%СтрокаЗАКАЗЧИКИ%", "Заказчик");
				мРазноеКлиент.Заменить(Поиск, "%ю%", "е");
			//Иначе
				//Если ЗаказчикПлательщики Тогда
				//	Если й=ЗаказчикиКоличество Тогда // Вывод первого
						//мРазноеКлиент.Заменить(Поиск, "%ЗаказчикШапка%", "Заказчик");
						//мРазноеКлиент.Заменить(Поиск, "%НомерЗаказчика%", "");
					//	Если ПлательщикиКоличество = 1 Тогда
					//		мРазноеКлиент.Заменить(Поиск, "%СтрокаЗАКАЗЧИКИ%", "ЗАКАЗЧИК и ПЛАТЕЛЬЩИК");
					//	Иначе	
					//		мРазноеКлиент.Заменить(Поиск, "%СтрокаЗАКАЗЧИКИ%", "ЗАКАЗЧИК и ПЛАТЕЛЬЩИКИ");
					//	КонецЕсли; 
					//Иначе
					//	мРазноеКлиент.Заменить(Поиск, "%ЗаказчикШапка%", "Плательщик");
					//	Если ПлательщикиКоличество = 1 Тогда
					//		мРазноеКлиент.Заменить(Поиск, "%НомерЗаказчика%", "");  
					//	Иначе	
					//		НомерПлательщика = НомерЗаказчика - 1;
					//		мРазноеКлиент.Заменить(Поиск, "%НомерЗаказчика%", " "+НомерПлательщика);  
					//	КонецЕсли; 
					//КонецЕсли; 
				Иначе	
					//мРазноеКлиент.Заменить(Поиск, "%ЗаказчикШапка%", "Заказчик");
					//мРазноеКлиент.Заменить(Поиск, "%НомерЗаказчика%", " "+НомерЗаказчика);  
					мРазноеКлиент.Заменить(Поиск, "%СтрокаЗАКАЗЧИКИ%", "Заказчики");
					мРазноеКлиент.Заменить(Поиск, "%ю%", "ю");
				//КонецЕсли; 
			КонецЕсли; 
			мРазноеКлиент.Заменить(Поиск, "%Заказчик%", ДанныеКорр.ПолноеНаименование);  
			мРазноеКлиент.Заменить(Поиск, "%Адрес%", ДанныеКорр.Адрес); 
			РасчетныйСчет = ДанныеКорр.НомерСчета + " " + ДанныеКорр.Банк + ", "+ДанныеКорр.БанкАдрес + ", МФО "+ДанныеКорр.КодБанка;
			мРазноеКлиент.Заменить(Поиск, "%РасчетныйСчет%", РасчетныйСчет);  
			мРазноеКлиент.Заменить(Поиск, "%УНП%", ДанныеКорр.УНП);  
			мРазноеКлиент.Заменить(Поиск, "%ОКПО%", ДанныеКорр.ОКПО + Символы.ВК);    
		КонецЦикла; 
	Иначе
		Если ЗаказчикиКоличество>1 Тогда
			мРазноеКлиент.Заменить(Поиск, "%И%", "и");
			мРазноеКлиент.Заменить(Поиск, "%ю%", "ю");
		Иначе
			мРазноеКлиент.Заменить(Поиск, "%И%", "");
			мРазноеКлиент.Заменить(Поиск, "%ю%", "е");
		КонецЕсли;
		
		Для й=1 По ЗаказчикиКоличество Цикл
			селекция.Start = НачалоЗакладки; // Начало вставки
			селекция.Collapse();             // Вставка, а не замещение
			селекция.Paste();
			//заполняем параметры
			НомерЗаказчика = ЗаказчикиКоличество-й+1;
			//РеквизитыФизЛица = мРаботаСДоговорами.ПолучитьРеквизитыФизЛица(Заказчики[НомерЗаказчика-1].Корреспондент);
			мРазноеКлиент.Заменить(Поиск, "%Заказчик%", Строка(Заказчики[НомерЗаказчика-1].ПолноеНаименование));  
			// Паспорт не нужен		
			адрес=Строка(Заказчики[НомерЗаказчика-1].Адрес)+Символы.ВК;
			мРазноеКлиент.Заменить(Поиск, "%Адрес%", адрес);  
		КонецЦикла; 
	КонецЕсли; 
	
	//Формирование таблицы
	НачалоЗакладки = Док.Bookmarks("СтрокаТаблицы").Start;
	КонецЗакладки  = Док.Bookmarks("СтрокаТаблицы").End;
	Селекция.Start = НачалоЗакладки;
	Селекция.End   = КонецЗакладки;
	Селекция.Cut();
	
	СуммаЭтапа      = 0;
	СуммаВыпРабот   = 0;
	НомерСтроки     = Этапы.Количество();
	СуммаНДС        = 0;
	СуммаВыпНДС     = 0;
	СуммаЗаОтчМесяц = 0;
	СуммаНДСМесяц   = 0;
	
	СтатьяОсвобождения = Новый Массив;
	
	Массив = Новый Массив(5);
	Массив[0] = Символ(42);
	Массив[1] = Символ(185);
	Массив[2] = Символ(178);
	Массив[3] = Символ(179);
	Массив[4] = Символ(8308);
	
	Зашел = Истина;
	т = 0;
	Для каждого Этапа из Этапы Цикл
		селекция.Start = НачалоЗакладки; // Начало вставки
		селекция.Collapse();             // Вставка, а не замещение
		селекция.Paste();
		
		СтоимостьВыпРабот = ГродноПолучитьСтоимостьВыполненныхРабот(Этапа.Значение.ЭтапДоговора);	
		СтоимостьМесяц    = ГродноПолучитьСтоимостьЗаОтчМесяц(Этапа.Значение.ЭтапДоговора, Дата);
		СтоимостьЭтапа    = Этапа.Значение.СтоимостьСНДС;
		НДС               = Этапа.Значение.СуммаНДС;
		
		ВидРабот = Этапа.Значение.НаименованиеРаботы;
		Вид1     = Лев(ВидРабот,250);
		Вид2     = СтрЗаменить(Видработ,Вид1,""); 
		
		ОбъектРабот  = Строка(Этапа.Значение.ОбъектРабот);
		Объект1      = Лев(ОбъектРабот,250);
		Объект2      = СтрЗаменить(ОбъектРабот,Объект1,"");
		Статья       = "";
		
		Если Этапа.Значение.СтавкаНДС = "Без НДС" Тогда
			//Статья = Символы.ВК + "в т.ч. НДС по ст. " + Строка(Этапа.Значение.СтавкаНДС) + "% -" + Строка(НДС);
		//Иначе
			Если Зашел Тогда
				СтатьяОсвобождения.Добавить(Этапа.Значение.ОсвобождениеОтНДСДляПечати);
				Зашел = Ложь;
				т = т + 1;
			КонецЕсли;
			Статья = Строка(Статья) + " " + Массив[0] + Массив[т];
		КонецЕсли;
		
		мРазноеКлиент.Заменить(Поиск,"%Номер%", НомерСтроки);
		мРазноеКлиент.Заменить(Поиск,"%СтоимЭтапа%", Строка(СтоимостьЭтапа) + Строка(Статья));
		мРазноеКлиент.Заменить(Поиск, "%Объект1%", Строка(Объект1));
		мРазноеКлиент.Заменить(Поиск, "%Объект2%", Строка(Объект2));
		мРазноеКлиент.Заменить(Поиск, "%Вид1%", Строка(Вид1));
		мРазноеКлиент.Заменить(Поиск, "%Вид2%", Строка(Вид2));
		
		Если Режим <> "ЮрЛица" Тогда
			мРазноеКлиент.Заменить(Поиск,"%АдресОбъекта%"," по адресу: " + Строка(Этапа.Значение.Месторасположение));
		Иначе
			мРазноеКлиент.Заменить(Поиск,"%АдресОбъекта%"," ");
		КонецЕсли;
		
		//Если СтоимостьВыпРабот.НДСАкт>0 Тогда
		//	 мРазноеКлиент.Заменить(Поиск,"%СтоимВып%", Формат(СтоимостьВыпРабот.Актирование,"ЧРГ=' '; ЧН=0") + " в т.ч. НДС по ст. " + Строка(Этапа.Значение.СтавкаНДС) + "% -" + Строка(СтоимостьвыпРабот.НДСАкт));
		//Иначе
			 мРазноеКлиент.Заменить(Поиск,"%СтоимВып%", Формат(СтоимостьВыпРабот.Актирование,"ЧРГ=' '; ЧН=0"));
		//КонецЕсли; 
		//Если СтоимостьМесяц.НДСОтчМесяц>0 Тогда
		//	 мРазноеКлиент.Заменить(Поиск, "%СтоимМес%",Строка(СтоимостьМесяц.СтоимостьОтчМесяц) + " в т.ч. НДС по ст. " + Строка(Этапа.Значение.СтавкаНДС) + "% -" + Строка(СтоимостьМесяц.НДСОтчМесяц));
		//Иначе
			 мРазноеКлиент.Заменить(Поиск, "%СтоимМес%",СтоимостьМесяц.СтоимостьОтчМесяц);
		//КонецЕсли;

		СуммаЗаОтчМесяц = СуммаЗаОтчМесяц + Число(СтоимостьМесяц.СтоимостьОтчМесяц);
		СуммаНДСМесяц   = СуммаНДСМесяц   + Число(СтоимостьМесяц.НДСОтчМесяц);
		СуммаЭтапа      = СуммаЭтапа      + Число(СтоимостьЭтапа);
		СуммаВыпРабот   = СуммаВыпРабот   + Число(СтоимостьВыпРабот.Актирование);
		СуммаВыпНДС     = СуммаВыпНДС     + Число(СтоимостьВыпРабот.НДСАкт);
		СуммаНДС        = СуммаНДС        + НДС;
		Статья          = "";
		НомерСтроки     = НомерСтроки - 1;
	КонецЦикла;
		
	Док.Bookmarks("СтоимостьАкта").Range.Text = Формат(СуммаЭтапа,"ЧРГ=' '; ЧН=0");
	Док.Bookmarks("СтоимостьВып").Range.Text  = Формат(СуммаВыпРабот,"ЧРГ=' '; ЧН=0");
	Док.Bookmarks("НДСМес").Range.Text        = Формат(СуммаНДСМесяц,"ЧРГ=' '; ЧН=0");
	Док.Bookmarks("СтоимостьМес").Range.Text  = Формат(СуммаЗаОтчМесяц,"ЧРГ=' '; ЧН=0");
	Док.Bookmarks("НДСАкт").Range.Text        = Формат(СуммаНДС,"ЧРГ=' '; ЧН=0");
	Док.Bookmarks("НДСВып").Range.Text        = Формат(СуммаВыпНДС,"ЧРГ=' '; ЧН=0");
	
	т = 0;
	Если СтатьяОсвобождения.Количество() <> 0 Тогда
		Для г = 0 по СтатьяОсвобождения.ВГраница() Цикл
			Строки = Строка(Строки) + Массив[0] + Массив[т+1] + " Без НДС, согласно " + Строка(СтатьяОсвобождения[г]) + Символы.ВК;
			т = т + 1;
		КонецЦикла;
		Док.Bookmarks("Сноски").Range.Text = Строки;
	Иначе
		Док.Bookmarks("Сноски").Range.Text = "";
	КонецЕсли;
			
	Если СуммаЭтапа = СуммаВыпРабот Тогда
		мРазноеКлиент.Заменить(Поиск,"%ПРОМЕЖУТОЧНЫЙ%"," ");
	иначе
		мРазноеКлиент.Заменить(Поиск,"%ПРОМЕЖУТОЧНЫЙ%","ПРОМЕЖУТОЧНЫЙ");
	КонецЕсли;
	
	// Стоимость Акта цифрами и прописью
	СтоимостьАкта = мРаботаСДоговорами.СуммаЧисломИПрописью(СуммаЗаОтчМесяц, ВалютаДоговора);
	Если СуммаНДС > 0 Тогда
		СуммаНДСПрописьюПолная = мРаботаСДоговорами.СуммаЧисломИПрописью(СуммаНДСМесяц, ВалютаДоговора);
		СтоимостьАкта          = СтоимостьАкта + ", в том числе НДС в сумме " + СуммаНДСПрописьюПолная;
	КонецЕсли;
		
	Док.Bookmarks("СтоимостьАкт").Range.Text = СтоимостьАкта; 
	
	//Аванс
	Аванс = 0;
	Для каждого Этапа из Этапы Цикл
		Аванс = Аванс + ГродноПолучитьАвансПоЭтапу(Этапа.Значение.ЭтапДоговора);
	КонецЦикла;
	Док.Bookmarks("АвансЭтапа").Range.Text = мРаботаСДоговорами.СуммаЧисломИПрописью(Аванс, ВалютаДоговора);	
	
	Если Аванс = 0 Тогда
		Оплата = СуммаВыпРабот;
	Иначе
		Оплата = СуммаВыпРабот - Аванс;
	КонецЕсли;
	Если Оплата < 0 Тогда
		Оплата = 0;
	КонецЕсли;
	Док.Bookmarks("Оплата").Range.Text = мРаботаСДоговорами.СуммаЧисломИПрописью(Оплата, ВалютаДоговора);
		
	// Подписи
	ПодписиИсполнителя = ПолучитьПодписиИсполнителя(Этапы.Получить(0).Значение.ЭтапДоговора);
	
	Док.Bookmarks("ДолжностьИсполнителя").Range.Text = ПодписиИсполнителя.ДолжностьИсполнителя;
	Док.Bookmarks("ИсполнительКратко").Range.Text    = ПодписиИсполнителя.ИсполнительКратко;
	
	Если Лев(Подписи.ПодписалДолжность,2) = "__" Тогда
		Подписи.ПодписалДолжность = "____________ ";
		Подписи.ПодписалКратко    = "____________";
	КонецЕсли;
	мРазноеКлиент.Заменить(Поиск, "%ПодписалДолжность", Подписи.ПодписалДолжность);
	мРазноеКлиент.Заменить(Поиск, "%МестоПодписи", "____________ ");
	мРазноеКлиент.Заменить(Поиск, "%ПодписалКратко", Подписи.ПодписалКратко + Символы.ВК);
	
	//Подписи заказчиков
	НачалоЗакладки = Док.Bookmarks("ЗаказчикиПодвал").Start;
	КонецЗакладки  = Док.Bookmarks("ЗаказчикиПодвал").End;
	Селекция.Start = НачалоЗакладки;
	Селекция.End   = КонецЗакладки;
	Селекция.Cut();
	//
	Если Режим = "ЮрЛица" Тогда
		Для й=1 По ЗаказчикиКоличество Цикл
			селекция.Start = НачалоЗакладки; // Начало вставки
			селекция.Collapse();             // Вставка, а не замещение
			селекция.Paste();
			//заполняем параметры
			НомерЗаказчика = ЗаказчикиКоличество-й+1;
			ДанныеКорр     = Заказчики[НомерЗаказчика-1];
			//ДанныеКорр = ДанныеКорреспондентов[НомерЗаказчика-1];
			
			//Если ЗаказчикиКоличество=1 Тогда
			//	мРазноеКлиент.Заменить(Поиск, "%ЗаказчикПодвал%", "ЗАКАЗЧИКА");
			//	мРазноеКлиент.Заменить(Поиск, "_НомерЗаказчика_", "");  
			//Иначе
			//	Если ЗаказчикПлательщики Тогда
			//		Если й=ЗаказчикиКоличество Тогда //вывод первого
			//			мРазноеКлиент.Заменить(Поиск, "%ЗаказчикПодвал%", "ЗАКАЗЧИКА");
			//			мРазноеКлиент.Заменить(Поиск, "_НомерЗаказчика_", "");  
			//		Иначе
			//			мРазноеКлиент.Заменить(Поиск, "%ЗаказчикПодвал%", "ПЛАТЕЛЬЩИКА");
			//			Если ПлательщикиКоличество = 1 Тогда
			//				мРазноеКлиент.Заменить(Поиск, "_НомерЗаказчика_", "");  
			//			Иначе	
			//				НомерПлательщика = НомерЗаказчика - 1;
			//				мРазноеКлиент.Заменить(Поиск, "_НомерЗаказчика_", " "+НомерПлательщика);  
			//			КонецЕсли; 
			//		КонецЕсли; 
			//	Иначе	
			//		мРазноеКлиент.Заменить(Поиск, "%ЗаказчикПодвал%", "ЗАКАЗЧИКА");
			//		мРазноеКлиент.Заменить(Поиск, "_НомерЗаказчика_", " "+НомерЗаказчика);  
			//	КонецЕсли; 
			//КонецЕсли; 
			Если ДанныеКорр.КорреспондентКратко <> "" Тогда 
				мРазноеКлиент.Заменить(Поиск, "ДолжностьКорр", СокрЛП(ДанныеКорр.ДолжностьКорр) + " _____________ "+ Строка(ДанныеКорр.КорреспондентКратко));
				мРазноеКлиент.Заменить(Поиск, "ДолжностьКоррКР", "");
			Иначе
				мРазноеКлиент.Заменить(Поиск, "ДолжностьКоррКР", "Заполните поле подписал у Заказчика");
				мРазноеКлиент.Заменить(Поиск, "ДолжностьКорр","");
			КонецЕсли;			
		КонецЦикла; 
	Иначе
		Для й=1 По ЗаказчикиКоличество Цикл
			селекция.Start = НачалоЗакладки; // Начало вставки
			селекция.Collapse();             // Вставка, а не замещение
			селекция.Paste();
			НомерЗаказчика = ЗаказчикиКоличество-й+1;					
			мРазноеКлиент.Заменить(Поиск, "КорреспондентКратко", ПолучитьЗаказчикаКратко(Заказчики[НомерЗаказчика-1].ПолноеНаименование));  
		КонецЦикла; 
	КонецЕсли; 
	Если НЕ СоздатьАкт Тогда
		Док.SaveAs(ПутьКФайлуНаДиске);//(ПутьКФайлуНаДиске)                        
		Док.Saved = Истина;
		Док.Close(); 
		ЗапуститьПриложение(ПутьКФайлуНаДиске,, , );		
	Иначе
		WordApp.Visible = Ложь; 
		
		Док.SaveAs(ПутьКФайлуНаДиске);//(ПутьКФайлуНаДиске)                        
		Док.Saved = Истина;
		Док.Close(); 
		
		РаботаСФайламиКлиент.СоздатьДокументНаОсновеФайла(ПутьКФайлуНаДиске, Договор, ЭтаФорма, Истина, , , , ,);
		
		WordApp.Quit();	
		WordApp = Неопределено;
		
		УдалитьФайлы(ПутьКФайлуНаДиске);	
	КонецЕсли;

КонецПроцедуры

&Насервере
Функция ГродноПолучитьМакетНаСервере(КакДоговорЮрЛица, Режим="") 
Если ЭтоФизЛица Тогда
		//Если КакДоговорЮрЛица Тогда
		//	Режим = "ФизЛицаКакЮрЛица";
		//	Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет("ПФ_DOCX_АктФизЛицКакЮрЛиц");
		//Иначе
			Режим = "ФизЛица";
			Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет("Гродно_DOCX_АктФизЛиц");
		//КонецЕсли; 
	Иначе
		Режим = "ЮрЛица";
		Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет("Гродно_DOCX_АктЮрЛиц");
	КонецЕсли; 
КонецФункции

Функция ГродноПолучитьАвансПоЭтапу(ЭтапДоговора)
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	СУММА(ВЫБОР
	                |			КОГДА РасчетыСПокупателями.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	                |					И РасчетыСПокупателями.Сумма > 0
	                |				ТОГДА РасчетыСПокупателями.Сумма
	                |			ИНАЧЕ 0
	                |		КОНЕЦ) КАК Оплата
	                |ИЗ
	                |	РегистрНакопления.РасчетыСПокупателями КАК РасчетыСПокупателями
	                |ГДЕ
	                |	РасчетыСПокупателями.ЭтапДоговора = &ЭтапДоговора";
	Запрос.УстановитьПараметр("ЭтапДоговора",ЭтапДоговора);
	Результат = Запрос.Выполнить().Выгрузить();
	ОплаченоРанее = 0;
	Если Результат.Количество() <> 0 и Результат[0].Оплата<>Null Тогда
		ОплаченоРанее = Число(Результат[0].Оплата);
	КонецЕсли;
    	                    	
	Возврат ОплаченоРанее
КонецФункции

Функция ГродноПолучитьСтоимостьВыполненныхРабот(ЭтапДоговора)
	Запрос = Новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УчетДоговоровОбороты.СуммаРасход КАК СуммаРасход,
	               |	УчетДоговоровОбороты.НДСРасход КАК НДСРасход
	               |ИЗ
	               |	РегистрНакопления.УчетДоговоров.Обороты(, , , ЭтапДоговора = &ЭтапДоговора) КАК УчетДоговоровОбороты";
	Запрос.УстановитьПараметр("ЭтапДоговора",ЭтапДоговора);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Актирование = 0;
	Значения = Новый Структура;
	Если РезультатЗапроса.Количество()<>0 и РезультатЗапроса[0].СуммаРасход<>Null Тогда
		Значения.Вставить("Актирование",Число(РезультатЗапроса[0].СуммаРасход));
		Значения.Вставить("НДСАкт",Число(РезультатЗапроса[0].НДСРасход));
	Иначе 
		Значения.Вставить("Актирование",0);
		Значения.Вставить("НДСАкт",0);
	КонецЕсли;
	  
	Возврат Значения
КонецФункции

Функция ГродноПолучитьСтоимостьЗаОтчМесяц(ЭтапДоговора,ДатаАкта)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УчетДоговоровОбороты.СуммаРасход КАК СуммаРасход,
	|	УчетДоговоровОбороты.НДСРасход КАК НДСРасход
	|ИЗ
	|	РегистрНакопления.УчетДоговоров.Обороты(&НачалоПериода, &КонецПериода, Период, ЭтапДоговора = &ЭтапДоговора) КАК УчетДоговоровОбороты";
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ДатаАкта));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ДатаАкта));
	Запрос.УстановитьПараметр("ЭтапДоговора", ЭтапДоговора);
	
	РезультатЗапроса=Запрос.Выполнить().Выгрузить();
	
	Значение = Новый Структура;
	Если РезультатЗапроса.Количество()<>0 и РезультатЗапроса[0].СуммаРасход <> Null Тогда
		Значение.Вставить("СтоимостьОтчМесяц", РезультатЗапроса[0].СуммаРасход);
		Значение.Вставить("НДСОтчМесяц", РезультатЗапроса[0].НДСРасход);
	Иначе
		Значение.Вставить("СтоимостьОтчМесяц", 0);
		Значение.Вставить("НДСОтчМесяц", 0);
	КонецЕсли;	
	
	Возврат Значение
КонецФункции

Функция ГродноПолучитьНомерИДатуАкта(ЭтапДоговора)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РасчетыСПокупателями.Период КАК Период,
	               |	ВЫБОР
	               |		КОГДА РасчетыСПокупателями.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	               |				И РасчетыСПокупателями.ВидСписанияЗадолженности = ЗНАЧЕНИЕ(Перечисление.мВидыСписанияЗадолженности.ПустаяСсылка)
	               |			ТОГДА РасчетыСПокупателями.Сумма
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Актирование
	               |ИЗ
	               |	РегистрНакопления.РасчетыСПокупателями КАК РасчетыСПокупателями
	               |ГДЕ
	               |	РасчетыСПокупателями.ЭтапДоговора = &ЭтапДоговора
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Период УБЫВ";
	
	Запрос.УстановитьПараметр("ЭтапДоговора",ЭтапДоговора );
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Зашел = Истина;
	Номер = 0;
	Период = '00010101';
	Для каждого Строки Из РезультатЗапроса Цикл
		Если Строки.Актирование<>0 Тогда
			Если Зашел Тогда
				Период = Строки.Период;
				Зашел = Ложь;
			КонецЕсли;
			Номер = Номер + 1;
		КонецЕсли;
	КонецЦикла;
	Значение = Новый Структура;
	Значение.Вставить("Номер",Номер);
	Значение.Вставить("Дата",Период);
	
	Возврат Значение;
КонецФункции	

&НаКлиенте
Процедура ПодписалНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВидДокумента = ПредопределенноеЗначение("Справочник.ВидыВнутреннихДокументов.АктВыполненныхРабот");
	Подписал = РаботаСПользователямиКлиент.ПолучитьПодписанта(Организация, ВидДокумента);
КонецПроцедуры

&НаКлиенте
Процедура ПечатьСразуНаПринтерПриИзменении(Элемент)
	
	Если ПечатьСразуНаПринтер Тогда
		Элементы.Копий.Доступность = Истина;
		Копий = 2; 
	Иначе 
		Элементы.Копий.Доступность = Ложь;
		Копий = 0; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписалИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВидДокумента = ПредопределенноеЗначение("Справочник.ВидыВнутреннихДокументов.АктВыполненныхРабот");
	Подписал = РаботаСПользователямиКлиент.ПолучитьПодписанта(Организация, ВидДокумента, Текст);
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Настройки.Получить("ПечатьСразуНаПринтер") Тогда
		Элементы.Копий.Доступность = Истина;
	Иначе
		Элементы.Копий.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры
 
&НаКлиенте
Процедура ПометкаПриИзменении(Элемент)
	ТекДанные = Элементы.ЭтапыДоговора.ТекущиеДанные;
	Если ТекДанные.ЭтоОсновнойЭтап Тогда
		// надо установить аналогичный флаг и для подчиненного, если совместно
		ЗначениеПометки = ТекДанные.Пометка;
		ОсновнойЭтапДоговора = ТекДанные.ЭтапДоговора;
		
		Для каждого Стр Из ЭтапыДоговора Цикл
			Если Стр.ОсновнойЭтапДоговора = ОсновнойЭтапДоговора и Стр.Совместно Тогда
				Стр.Пометка = ЗначениеПометки;
			КонецЕсли; 
		КонецЦикла;
		
	ИначеЕсли ТекДанные.Совместно Тогда
		// надо установить аналогичный флаг и для основного, если совместно
		ЗначениеПометки = ТекДанные.Пометка;
		ОсновнойЭтапДоговора = ТекДанные.ОсновнойЭтапДоговора;
		
		Для каждого Стр Из ЭтапыДоговора Цикл
			Если Стр.ЭтапДоговора = ОсновнойЭтапДоговора Тогда
				Стр.Пометка = ЗначениеПометки;
				Прервать;
			КонецЕсли; 
		КонецЦикла;  
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПодписалОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ВидДокумента = ПредопределенноеЗначение("Справочник.ВидыВнутреннихДокументов.АктВыполненныхРабот");
	МассивПодписантов = мРаботаСДоговорами.ПолучитьИмеющихПравоПодписи(Организация, ВидДокумента);
	Если МассивПодписантов.Найти(ВыбранноеЗначение) = Неопределено Тогда
		ВыбранноеЗначение = Неопределено;
	КонецЕсли; 
КонецПроцедуры


