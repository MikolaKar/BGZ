Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
    // Устанавливаем признак достпности печати по-комплектно
    ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
    Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДляОплатыДоговораФизЛица") Тогда

		// Формируем табличный документ и добавляем его в коллекцию печатных форм
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
            "ДляОплатыДоговораФизЛица", "ДляОплатыДоговораФизЛица", ПечатьИнформацииДляОплатыДоговора(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));		
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДляОплатыДоговораЮрЛица") Тогда

		// Формируем табличный документ и добавляем его в коллекцию печатных форм
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
            "ДляОплатыДоговораЮрЛица", "ДляОплатыДоговораЮрЛица", ПечатьИнформацииДляОплатыДоговораЮрЛица(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));		
	КонецЕсли;
КонецПроцедуры

Функция ПечатьИнформацииДляОплатыДоговора(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	флОплатаДоговора = ПараметрыПечати.флОплатаДоговора; 
	флОплатаГосПошлины = ПараметрыПечати.флОплатаГосПошлины; 
	флОплатаГосРегистрация = ПараметрыПечати.флОплатаГосРегистрация; 
	флОплатаГосРегистрацияОграничение = ПараметрыПечати.флОплатаГосРегистрацияОграничение;
	КоличествоЭкземпляров = ПараметрыПечати.КоличествоЭкземпляров;

	// Создаем табличный документ и устанавливаем имя параметров печати
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_ИнформацияДляОплатыДоговора";
	// Запомним номер строки с которой начали выводить текущий документ
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
	Макет = ПолучитьМакет("ДляОплатыДоговораФизЛица");

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЭтапыДоговоров.СтоимостьСНДС КАК Сумма,
		|	ЭтапыДоговоров.ВидРабот.Наименование КАК НаименованиеПлатежа,
		|	ВнутренниеДокументы.Ссылка,
		|	ВнутренниеДокументы.ДатаРегистрации,
		|	ВнутренниеДокументы.Корреспондент,
		|	ВнутренниеДокументы.Корреспондент.Наименование КАК Плательщик,
		|	ВнутренниеДокументы.Корреспондент.ФизЛицо КАК ФизЛицо,
		|	ВнутренниеДокументы.РегистрационныйНомер
		|ИЗ
		|	Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВнутренниеДокументы КАК ВнутренниеДокументы
		|		ПО ЭтапыДоговоров.Владелец = ВнутренниеДокументы.Ссылка
		|ГДЕ
		|	ВнутренниеДокументы.Ссылка В(&МассивОбъектов)
		|	И НЕ ЭтапыДоговоров.ПометкаУдаления
		|	И ЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭтапыДоговоров.НомерЭтапа";

	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);

	Результат = Запрос.Выполнить();

    ТзЭтапы = Результат.Выгрузить();
	
	// Плательщик
	ДоговорПодряда = СокрЛП(ТзЭтапы[0].РегистрационныйНомер)+" от "+Формат(ТзЭтапы[0].ДатаРегистрации, "ДЛФ=D");
	НомерДоговора = СокрЛП(ТзЭтапы[0].РегистрационныйНомер);
	ДоговорПодрядаБрест = Лев(НомерДоговора, СтрДлина(НомерДоговора)-3)+
		", Год: "+Прав(НомерДоговора,2) + ", СМЕТА: №1";
	ФизЛицо = ТзЭтапы[0].ФизЛицо;
	Если ЗначениеЗаполнено(ФизЛицо) Тогда
		АдресПлательщика = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ФизЛицо, Справочники.ВидыКонтактнойИнформации.ДомашнийАдресФизическогоЛица);
	Иначе
		АдресПлательщика = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ТзЭтапы[0].Корреспондент, Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКорреспондента);
	КонецЕсли; 
	Плательщик = ТзЭтапы[0].Плательщик;
	ДанныеПечати = Новый Структура("ДоговорПодряда, Плательщик, АдресПлательщика");
	ДанныеПечати.ДоговорПодряда = ДоговорПодряда;
	ДанныеПечати.Плательщик = Плательщик;
	ДанныеПечати.АдресПлательщика = АдресПлательщика;
	
	// Получатели
	
	// Мы
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Корреспонденты.ПолноеНаименование КАК Получатель,
		|	Корреспонденты.Ссылка КАК Ссылка,
		|	Корреспонденты.ИНН КАК ПолучательУНН,
		|	Корреспонденты.КодПоОКПО КАК ПолучательОКПО,
		|	мРасчетныеСчетаДокументов.РасчетныйСчет.СчетИБАН КАК ПолучательСчет,
		|	мРасчетныеСчетаДокументов.РасчетныйСчет.Банк.БИК КАК ПолучательМФО,
		|	мРасчетныеСчетаДокументов.РасчетныйСчет.Банк.Адрес КАК ПолучательАдрес,
		|	мРасчетныеСчетаДокументов.РасчетныйСчет.Банк.Наименование КАК ПолучательБанк
		|ИЗ
		|	Справочник.Корреспонденты КАК Корреспонденты,
		|	РегистрСведений.мРасчетныеСчетаДокументов КАК мРасчетныеСчетаДокументов
		|ГДЕ
		|	Корреспонденты.Ссылка В(&МассивСсылка)
		|	И мРасчетныеСчетаДокументов.Документ В(&МассивОбъектов)";
		
	НашаОрганизация = Константы.НашаОрганизация.Получить();
	МассивСсылка = Новый Массив;
	МассивСсылка.Добавить(НашаОрганизация);
	
	Запрос.УстановитьПараметр("МассивСсылка", МассивСсылка);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	СтрПолучатель = Новый Структура;
	Если Выборка.Следующий() Тогда
		СтрПолучатель.Вставить("Получатель", Выборка.Получатель);
		СтрПолучатель.Вставить("ПолучательУНН", Выборка.ПолучательУНН);
		СтрПолучатель.Вставить("ПолучательОКПО", Выборка.ПолучательОКПО);
		СтрПолучатель.Вставить("ПолучательБанк", СокрЛП(Выборка.ПолучательБанк)+", "+СокрЛП(Выборка.ПолучательАдрес));
		СтрПолучатель.Вставить("ПолучательСчет", ВставитьПробелыВСчет(Выборка.ПолучательСчет));
		СтрПолучатель.Вставить("ПолучательМФО", Выборка.ПолучательМФО);
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Корреспонденты.ПолноеНаименование КАК Получатель,
		|	Корреспонденты.Ссылка КАК Ссылка,
		|	Корреспонденты.ИНН КАК ПолучательУНН,
		|	Корреспонденты.КодПоОКПО КАК ПолучательОКПО,
		|	Корреспонденты.ОсновнойБанковскийСчет.СчетИБАН КАК ПолучательСчет,
		|	Корреспонденты.ОсновнойБанковскийСчет.Банк.БИК КАК ПолучательМФО,
		|	Корреспонденты.ОсновнойБанковскийСчет.Банк.Адрес КАК ПолучательАдрес,
		|	Корреспонденты.ОсновнойБанковскийСчет.Банк.Наименование КАК ПолучательБанк
		|ИЗ
		|	Справочник.Корреспонденты КАК Корреспонденты
		|ГДЕ
		|	Корреспонденты.Ссылка В (&МассивСсылка)";

	//НашаОрганизация = Константы.НашаОрганизация.Получить();
	МассивСсылка = Новый Массив;
	//МассивСсылка.Добавить(НашаОрганизация);
	Если флОплатаГосПошлины Тогда
		МассивСсылка.Добавить(ПараметрыПечати.ПолучательГосПошлины);
	КонецЕсли; 
	Если флОплатаГосРегистрация Тогда
		МассивСсылка.Добавить(ПараметрыПечати.ПолучательГосРегистрации);
	КонецЕсли; 
	Если флОплатаГосРегистрацияОграничение  Тогда
		МассивСсылка.Добавить(ПараметрыПечати.ПолучательГосРегистрацииОграничение);
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("МассивСсылка", МассивСсылка);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	//СтрПолучатель = Новый Структура;
	СтрПолучательГосПошлины = Новый Структура;
	СтрПолучательГосРегистрации = Новый Структура;
	СтрПолучательГосРегистрацииОграничение = Новый Структура;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//Если ВыборкаДетальныеЗаписи.Ссылка = НашаОрганизация Тогда
		//	СтрПолучатель.Вставить("Получатель", ВыборкаДетальныеЗаписи.Получатель);
		//	СтрПолучатель.Вставить("ПолучательУНН", ВыборкаДетальныеЗаписи.ПолучательУНН);
		//	СтрПолучатель.Вставить("ПолучательОКПО", ВыборкаДетальныеЗаписи.ПолучательОКПО);
		//	СтрПолучатель.Вставить("ПолучательБанк", СокрЛП(ВыборкаДетальныеЗаписи.ПолучательБанк)+", "+СокрЛП(ВыборкаДетальныеЗаписи.ПолучательАдрес));
		//	СтрПолучатель.Вставить("ПолучательСчет", ВставитьПробелыВСчет(ВыборкаДетальныеЗаписи.ПолучательСчет));
		//	СтрПолучатель.Вставить("ПолучательМФО", ВыборкаДетальныеЗаписи.ПолучательМФО);
		//КонецЕсли; 
		Если флОплатаГосПошлины Тогда
			Если ВыборкаДетальныеЗаписи.Ссылка = ПараметрыПечати.ПолучательГосПошлины Тогда
				СтрПолучательГосПошлины.Вставить("Получатель", ВыборкаДетальныеЗаписи.Получатель);
				СтрПолучательГосПошлины.Вставить("ПолучательУНН", ВыборкаДетальныеЗаписи.ПолучательУНН);
				СтрПолучательГосПошлины.Вставить("ПолучательОКПО", ВыборкаДетальныеЗаписи.ПолучательОКПО);
				СтрПолучательГосПошлины.Вставить("ПолучательБанк", СокрЛП(ВыборкаДетальныеЗаписи.ПолучательБанк)+", "+СокрЛП(ВыборкаДетальныеЗаписи.ПолучательАдрес));
				СтрПолучательГосПошлины.Вставить("ПолучательСчет", ВставитьПробелыВСчет(ВыборкаДетальныеЗаписи.ПолучательСчет));
				СтрПолучательГосПошлины.Вставить("ПолучательМФО", ВыборкаДетальныеЗаписи.ПолучательМФО);
			КонецЕсли; 
		КонецЕсли; 
		Если флОплатаГосРегистрация Тогда
			Если ВыборкаДетальныеЗаписи.Ссылка = ПараметрыПечати.ПолучательГосРегистрации Тогда
				СтрПолучательГосРегистрации.Вставить("Получатель", ВыборкаДетальныеЗаписи.Получатель);
				СтрПолучательГосРегистрации.Вставить("ПолучательУНН", ВыборкаДетальныеЗаписи.ПолучательУНН);
				СтрПолучательГосРегистрации.Вставить("ПолучательОКПО", ВыборкаДетальныеЗаписи.ПолучательОКПО);
				СтрПолучательГосРегистрации.Вставить("ПолучательБанк", СокрЛП(ВыборкаДетальныеЗаписи.ПолучательБанк)+", "+СокрЛП(ВыборкаДетальныеЗаписи.ПолучательАдрес));
				СтрПолучательГосРегистрации.Вставить("ПолучательСчет", ВставитьПробелыВСчет(ВыборкаДетальныеЗаписи.ПолучательСчет));
				СтрПолучательГосРегистрации.Вставить("ПолучательМФО", ВыборкаДетальныеЗаписи.ПолучательМФО);
				//СтрПолучательГосРегистрации.Вставить("КодЕРИП", КодЕРИП);
			КонецЕсли; 
		КонецЕсли; 
		Если флОплатаГосРегистрацияОграничение Тогда
			Если ВыборкаДетальныеЗаписи.Ссылка = ПараметрыПечати.ПолучательГосРегистрацииОграничение Тогда
				СтрПолучательГосРегистрацииОграничение.Вставить("Получатель", ВыборкаДетальныеЗаписи.Получатель);
				СтрПолучательГосРегистрацииОграничение.Вставить("ПолучательУНН", ВыборкаДетальныеЗаписи.ПолучательУНН);
				СтрПолучательГосРегистрацииОграничение.Вставить("ПолучательОКПО", ВыборкаДетальныеЗаписи.ПолучательОКПО);
				СтрПолучательГосРегистрацииОграничение.Вставить("ПолучательБанк", СокрЛП(ВыборкаДетальныеЗаписи.ПолучательБанк)+", "+СокрЛП(ВыборкаДетальныеЗаписи.ПолучательАдрес));
				СтрПолучательГосРегистрацииОграничение.Вставить("ПолучательСчет", ВставитьПробелыВСчет(ВыборкаДетальныеЗаписи.ПолучательСчет));
				СтрПолучательГосРегистрацииОграничение.Вставить("ПолучательМФО", ВыборкаДетальныеЗаписи.ПолучательМФО);
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
	
	Если флОплатаДоговора Тогда
		ОбластьШапка1Левая = Макет.ПолучитьОбласть("Шапка1|Левая");
		ОбластьСтрока1Левая = Макет.ПолучитьОбласть("Строка1|Левая");
		ОбластьВсего1Левая = Макет.ПолучитьОбласть("Всего1|Левая");
		
		ЗаполнитьЗначенияСвойств(ОбластьШапка1Левая.Параметры, ДанныеПечати);
		
		ГородБазы = мРазное.ПолучитьГородБазы();
		Если ГородБазы = "Брест" Тогда
			ОбластьШапка1Левая.Параметры.ДоговорПодряда = ДоговорПодрядаБрест;
		КонецЕсли;
		
		// Путь платежа в ЕРИП
		ПутьЕРИП = "Путь платежа в ЕРИП: Прочие республиканские услуги/ Обустройство дома, бытовые услуги/ Специальные строительные работы/ Проектный институт Белгипрозем/ Землеустроительные работы";
		
		Если ГородБазы = "Прилуки" Тогда
			ПутьЕРИП = "Путь платежа в ЕРИП: Прочие республиканские услуги/ Обустройство дома, бытовые услуги/ Специальные строительные работы/ БелПСХАГИ/ Землеустроительные работы";
		КонецЕсли;
		
		ПутьЕРИП = ПутьЕРИП + Символы.ПС + "Номер услуги в ЕРИП: 4329001";
		
		ОбластьШапка1Левая.Параметры.ПутьЕРИП = ПутьЕРИП;
		
		ЗаполнитьЗначенияСвойств(ОбластьШапка1Левая.Параметры, СтрПолучатель);
	КонецЕсли; 
	
	Если флОплатаГосПошлины Тогда
		ОбластьШапка2Левая = Макет.ПолучитьОбласть("Шапка2|Левая");
		
		ЗаполнитьЗначенияСвойств(ОбластьШапка2Левая.Параметры, ДанныеПечати);
		ЗаполнитьЗначенияСвойств(ОбластьШапка2Левая.Параметры, СтрПолучательГосПошлины);
	КонецЕсли; 
	
	Если флОплатаГосРегистрация Тогда
		ОбластьШапка1Правая = Макет.ПолучитьОбласть("Шапка1|Правая");
		ОбластьСтрока1Правая = Макет.ПолучитьОбласть("Строка1|Правая");
		ОбластьВсего1Правая = Макет.ПолучитьОбласть("Всего1|Правая");
		
		ЗаполнитьЗначенияСвойств(ОбластьШапка1Правая.Параметры, ДанныеПечати);
		ЗаполнитьЗначенияСвойств(ОбластьШапка1Правая.Параметры, СтрПолучательГосРегистрации);
	КонецЕсли; 
	
	Если флОплатаГосРегистрацияОграничение Тогда
		ОбластьШапка2Правая = Макет.ПолучитьОбласть("Шапка2|Правая");
		
		ЗаполнитьЗначенияСвойств(ОбластьШапка2Правая.Параметры, ДанныеПечати);
		ЗаполнитьЗначенияСвойств(ОбластьШапка2Правая.Параметры, СтрПолучательГосРегистрацииОграничение);
	КонецЕсли; 
	
	ОбластьПустаяЛевая = Макет.ПолучитьОбласть("Пустая|Левая");
	ОбластьПустаяПравая = Макет.ПолучитьОбласть("Пустая|Правая");
	
	Если флОплатаДоговора И флОплатаГосРегистрация Тогда
		// Вывод 2-х форм
		ТабличныйДокумент.Вывести(ОбластьШапка1Левая);
		ТабличныйДокумент.Присоединить(ОбластьШапка1Правая);
		
		мВидыПлатежейГосРегистрации = Новый ТаблицаЗначений;
		мВидыПлатежейГосРегистрации.Колонки.Добавить("ВидПлатежа");
		мВидыПлатежейГосРегистрации.Колонки.Добавить("НаименованиеПлатежа");
		мВидыПлатежейГосРегистрации.Колонки.Добавить("Пометка");
		//мВидыПлатежейГосРегистрации.Колонки.Добавить("СуммаДо");
		мВидыПлатежейГосРегистрации.Колонки.Добавить("Сумма");
		
		КоличествоПлатежей = ПараметрыПечати.КоличествоПлатежейГосРегистрации;
		
		СтруктураПлатежа = "";
		Для ы = 1 По КоличествоПлатежей Цикл
			Если ПараметрыПечати.Свойство("Платеж"+ы, СтруктураПлатежа) Тогда
				НовПлатеж = мВидыПлатежейГосРегистрации.Добавить();
				ЗаполнитьЗначенияСвойств(НовПлатеж, СтруктураПлатежа);
				//Если ТекущаяДата() < Дата(2016, 7, 1) Тогда
				//	//НовПлатеж.СуммаДо = СтруктураПлатежа.Сумма;
				//	НовПлатеж.Сумма = СтруктураПлатежа.Сумма/10000;
				//Иначе
					НовПлатеж.Сумма = СтруктураПлатежа.Сумма;
				//	НовПлатеж.СуммаДо = СтруктураПлатежа.Сумма*10000;
				//КонецЕсли; 
			КонецЕсли; 
		КонецЦикла; 
		
		МаксСтрок = Макс(ТзЭтапы.Количество(), КоличествоПлатежей)+1; // +1 для строки Всего
		
		ВсегоЛевый = 0;
		ВсегоПравый = 0;
		//ВсегоДоЛевый = 0;
		//ВсегоДоПравый = 0;
		ВыводитьВсегоЛево = Ложь;
		ВыводитьВсегоПраво = Ложь;
		
		Для й = 1 По МаксСтрок Цикл
			Если й <= ТзЭтапы.Количество() Тогда
				ОбластьСтрока1Левая.Параметры.НаименованиеПлатежа = ""+й+". "+ТзЭтапы[й-1].НаименованиеПлатежа;
				//Если ТекущаяДата() < Дата(2016, 7, 1) Тогда
				//	СуммаДо = ТзЭтапы[й-1].Сумма;
				//	Сумма = ТзЭтапы[й-1].Сумма/10000;
				//Иначе
					Сумма = ТзЭтапы[й-1].Сумма;
				//	СуммаДо = ТзЭтапы[й-1].Сумма*10000;
				//КонецЕсли; 
				
				ОбластьСтрока1Левая.Параметры.Сумма = Сумма;
				//ОбластьСтрока1Левая.Параметры.СуммаДо = СуммаДо;
				
				ВсегоЛевый = ВсегоЛевый + Сумма;
				//ВсегоДоЛевый = ВсегоДоЛевый + СуммаДо;
				Если й = ТзЭтапы.Количество() Тогда
					ВыводитьВсегоЛево = Истина;
				КонецЕсли;
			КонецЕсли; 
			Если й <= мВидыПлатежейГосРегистрации.Количество() Тогда
				ОбластьСтрока1Правая.Параметры.НаименованиеПлатежа = ""+й+". "+мВидыПлатежейГосРегистрации[й-1].НаименованиеПлатежа;
				//СуммаДо = мВидыПлатежейГосРегистрации[й-1].СуммаДо;
				Сумма = мВидыПлатежейГосРегистрации[й-1].Сумма;
				ОбластьСтрока1Правая.Параметры.Сумма = Сумма;
				//ОбластьСтрока1Правая.Параметры.СуммаДо = СуммаДо;
				ВсегоПравый = ВсегоПравый + Сумма;
				//ВсегоДоПравый = ВсегоДоПравый + СуммаДо;
				Если й = КоличествоПлатежей Тогда
					ВыводитьВсегоПраво = Истина;
				КонецЕсли;
			КонецЕсли; 
			
			Если й <= ТзЭтапы.Количество() Тогда
				ТабличныйДокумент.Вывести(ОбластьСтрока1Левая);
			ИначеЕсли ВыводитьВсегоЛево Тогда
				ОбластьВсего1Левая.Параметры.Всего = ВсегоЛевый;
				//ОбластьВсего1Левая.Параметры.ВсегоДо = ВсегоДоЛевый;
				ТабличныйДокумент.Вывести(ОбластьВсего1Левая);
				ВыводитьВсегоЛево = Ложь;
			Иначе
				ТабличныйДокумент.Вывести(ОбластьПустаяЛевая);
			КонецЕсли;
			Если й <= КоличествоПлатежей Тогда
				ТабличныйДокумент.Присоединить(ОбластьСтрока1Правая);
			ИначеЕсли ВыводитьВсегоПраво Тогда
				ОбластьВсего1Правая.Параметры.Всего = ВсегоПравый;
				//ОбластьВсего1Правая.Параметры.ВсегоДо = ВсегоДоПравый;
				ТабличныйДокумент.Присоединить(ОбластьВсего1Правая);
				ВыводитьВсегоПраво = Ложь;
			Иначе
				ТабличныйДокумент.Присоединить(ОбластьПустаяПравая);
			КонецЕсли;
		КонецЦикла; 
	Иначе
		// может вывод одной формы?
		Если флОплатаДоговора Тогда
			ТабличныйДокумент.Вывести(ОбластьШапка1Левая);
            ВсегоЛевый = 0;
            ВсегоПравый = 0;
			//ВсегоДоЛевый = 0;
			//ВсегоДоПравый = 0;
			Всего = 0;
			Для й = 1 По ТзЭтапы.Количество() Цикл
				ЗаполнитьЗначенияСвойств(ОбластьСтрока1Левая.Параметры, ТзЭтапы[й-1]);
				ОбластьСтрока1Левая.Параметры.НаименованиеПлатежа = ""+й+". "+ОбластьСтрока1Левая.Параметры.НаименованиеПлатежа;
				//Если ТекущаяДата() < Дата(2016, 7, 1) Тогда
				//	СуммаДо = ТзЭтапы[й-1].Сумма;
				//	Сумма = ТзЭтапы[й-1].Сумма/10000;
				//Иначе
					Сумма = ТзЭтапы[й-1].Сумма;
				//	СуммаДо = ТзЭтапы[й-1].Сумма*10000;
				//КонецЕсли; 
				
				ОбластьСтрока1Левая.Параметры.Сумма = Сумма;
				//ОбластьСтрока1Левая.Параметры.СуммаДо = СуммаДо;
				
				ВсегоЛевый = ВсегоЛевый + Сумма;
				//ВсегоДоЛевый = ВсегоДоЛевый + СуммаДо;
				ТабличныйДокумент.Вывести(ОбластьСтрока1Левая);
			КонецЦикла; 
			ОбластьВсего1Левая.Параметры.Всего = ВсегоЛевый;
			//ОбластьВсего1Левая.Параметры.ВсегоДо = ВсегоДоЛевый;
			ТабличныйДокумент.Вывести(ОбластьВсего1Левая);
				
		ИначеЕсли флОплатаГосРегистрация Тогда
			ТабличныйДокумент.Вывести(ОбластьШапка1Правая);
			
            ВсегоЛевый = 0;
            ВсегоПравый = 0;
			//ВсегоДоЛевый = 0;
			//ВсегоДоПравый = 0;
			Всего = 0;
			НомерПП = 0;
			
		мВидыПлатежейГосРегистрации = Новый ТаблицаЗначений;
		мВидыПлатежейГосРегистрации.Колонки.Добавить("ВидПлатежа");
		мВидыПлатежейГосРегистрации.Колонки.Добавить("НаименованиеПлатежа");
		мВидыПлатежейГосРегистрации.Колонки.Добавить("Пометка");
		//мВидыПлатежейГосРегистрации.Колонки.Добавить("СуммаДо");
		мВидыПлатежейГосРегистрации.Колонки.Добавить("Сумма");
		
		КоличествоПлатежей = ПараметрыПечати.КоличествоПлатежейГосРегистрации;
		
		СтруктураПлатежа = "";
		Для ы = 1 По КоличествоПлатежей Цикл
			Если ПараметрыПечати.Свойство("Платеж"+ы, СтруктураПлатежа) Тогда
				НовПлатеж = мВидыПлатежейГосРегистрации.Добавить();
				ЗаполнитьЗначенияСвойств(НовПлатеж, СтруктураПлатежа);
				//Если ТекущаяДата() < Дата(2016, 7, 1) Тогда
				//	НовПлатеж.СуммаДо = СтруктураПлатежа.Сумма;
				//	НовПлатеж.Сумма = СтруктураПлатежа.Сумма/10000;
				//Иначе
					НовПлатеж.Сумма = СтруктураПлатежа.Сумма;
				//	НовПлатеж.СуммаДо = СтруктураПлатежа.Сумма*10000;
				//КонецЕсли; 
			КонецЕсли; 
		КонецЦикла; 
		
			
			СтруктураПлатежа = "";
			Для ы = 1 По КоличествоПлатежей Цикл
				Если ПараметрыПечати.Свойство("Платеж"+ы, СтруктураПлатежа) Тогда
					ЗаполнитьЗначенияСвойств(ОбластьСтрока1Правая.Параметры, СтруктураПлатежа);
					НомерПП = НомерПП+1;
					ОбластьСтрока1Правая.Параметры.НаименованиеПлатежа = ""+ы+". "+ОбластьСтрока1Правая.Параметры.НаименованиеПлатежа;
					//СуммаДо = мВидыПлатежейГосРегистрации[ы-1].СуммаДо;
					Сумма = мВидыПлатежейГосРегистрации[ы-1].Сумма;
					ОбластьСтрока1Правая.Параметры.Сумма = Сумма;
					//ОбластьСтрока1Правая.Параметры.СуммаДо = СуммаДо;
					ВсегоПравый = ВсегоПравый + Сумма;
					//ВсегоДоПравый = ВсегоДоПравый + СуммаДо;
					ТабличныйДокумент.Вывести(ОбластьСтрока1Правая);
				КонецЕсли; 
			КонецЦикла; 
		
			ОбластьВсего1Правая.Параметры.Всего = ВсегоПравый;
			//ОбластьВсего1Правая.Параметры.ВсегоДо = ВсегоДоПравый;
			ТабличныйДокумент.Вывести(ОбластьВсего1Правая);
		КонецЕсли;
	КонецЕсли;
		
	Если флОплатаГосПошлины и флОплатаГосРегистрацияОграничение Тогда
		СтруктураПлатежа = ПараметрыПечати.ГоспошлинаПлатеж1;
		ЗаполнитьЗначенияСвойств(ОбластьШапка2Левая.Параметры, СтруктураПлатежа);
		//Если ТекущаяДата() < Дата(2016, 7, 1) Тогда
		//	СуммаДо = СтруктураПлатежа.Сумма;
		//	Сумма = СтруктураПлатежа.Сумма/10000;
		//Иначе
			Сумма = СтруктураПлатежа.Сумма;
		//	СуммаДо = СтруктураПлатежа.Сумма*10000;
		//КонецЕсли; 
		ОбластьШапка2Левая.Параметры.Сумма = Сумма;
		//ОбластьШапка2Левая.Параметры.СуммаДо = СуммаДо;
		ТабличныйДокумент.Вывести(ОбластьШапка2Левая);
		
		//СуммыПлатежей = ПараметрыПечати.СуммаОграничения;
		//ЗаполнитьЗначенияСвойств(ОбластьШапка2Правая.Параметры, СуммыПлатежей);
		//Если ТекущаяДата() < Дата(2016, 7, 1) Тогда
		//	СуммаДо = ПараметрыПечати.СуммаОграничения;
		//	Сумма = ПараметрыПечати.СуммаОграничения/10000;
		//Иначе
			Сумма = ПараметрыПечати.СуммаОграничения;
		//	СуммаДо = ПараметрыПечати.СуммаОграничения*10000;
		//КонецЕсли; 
		ОбластьШапка2Правая.Параметры.Сумма = Сумма;
		//ОбластьШапка2Правая.Параметры.СуммаДо = СуммаДо;
		ТабличныйДокумент.Присоединить(ОбластьШапка2Правая);
	Иначе
		Если флОплатаГосПошлины Тогда
			СтруктураПлатежа = ПараметрыПечати.ГоспошлинаПлатеж1;
			ЗаполнитьЗначенияСвойств(ОбластьШапка2Левая.Параметры, СтруктураПлатежа);
			//Если ТекущаяДата() < Дата(2016, 7, 1) Тогда
			//	СуммаДо = СтруктураПлатежа.Сумма;
			//	Сумма = СтруктураПлатежа.Сумма/10000;
			//Иначе
				Сумма = СтруктураПлатежа.Сумма;
			//	СуммаДо = СтруктураПлатежа.Сумма*10000;
			//КонецЕсли; 
			ОбластьШапка2Левая.Параметры.Сумма = Сумма;
			//ОбластьШапка2Левая.Параметры.СуммаДо = СуммаДо;
			ТабличныйДокумент.Вывести(ОбластьШапка2Левая);
			
		ИначеЕсли флОплатаГосРегистрацияОграничение Тогда
			//СуммыПлатежей = ПараметрыПечати.СуммаОграничения;
			//ЗаполнитьЗначенияСвойств(ОбластьШапка2Правая.Параметры, СуммыПлатежей);
			//Если ТекущаяДата() < Дата(2016, 7, 1) Тогда
			//	СуммаДо = ПараметрыПечати.СуммаОграничения;
			//	Сумма = ПараметрыПечати.СуммаОграничения/10000;
			//Иначе
				Сумма = ПараметрыПечати.СуммаОграничения;
			//	СуммаДо = ПараметрыПечати.СуммаОграничения*10000;
			//КонецЕсли; 
			ОбластьШапка2Правая.Параметры.Сумма = Сумма;
			//ОбластьШапка2Правая.Параметры.СуммаДо = СуммаДо;
			ТабличныйДокумент.Вывести(ОбластьШапка2Правая);
		КонецЕсли;	
	КонецЕсли;

	//ТабличныйДокумент.Показать();

	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, МассивОбъектов);
	
	Возврат ТабличныйДокумент;

КонецФункции // ПечатьИнформацииДляОплатыДоговора()

Функция ВставитьПробелыВСчет(СчетИБАН)
	КодИБАН = "";
	Для й = 0 По 6 Цикл
		КодИБАН = КодИБАН + Сред(СчетИБАН, 4*й+1, 4)+" ";
	КонецЦикла; 
	Возврат КодИБАН;
КонецФункции	

Функция ПечатьИнформацииДляОплатыДоговораЮрЛица(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	флОплатаГосПошлины = ПараметрыПечати.флОплатаГосПошлины; 
	флОплатаГосРегистрация = ПараметрыПечати.флОплатаГосРегистрация; 

	// Создаем табличный документ и устанавливаем имя параметров печати
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_ИнформацияДляОплатыДоговораЮрЛица";
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	// Запомним номер строки с которой начали выводить текущий документ
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
	Макет = ПолучитьМакет("ДляОплатыДоговораЮрЛица");

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		//|	ЭтапыДоговоров.СтоимостьСНДС КАК Сумма,
		//|	ЭтапыДоговоров.ВидРабот.Наименование КАК НаименованиеПлатежа,
		//|	ВнутренниеДокументы.Ссылка,
		|	ВнутренниеДокументы.ДатаРегистрации,
		|	ВнутренниеДокументы.Корреспондент,
		|	ВнутренниеДокументы.Корреспондент.Наименование КАК Плательщик,
		//|	ВнутренниеДокументы.Корреспондент.ФизЛицо КАК ФизЛицо,
		|	ВнутренниеДокументы.РегистрационныйНомер
		|ИЗ
		//|	Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
		//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВнутренниеДокументы КАК ВнутренниеДокументы
		//|		ПО ЭтапыДоговоров.Владелец = ВнутренниеДокументы.Ссылка
		|		Справочник.ВнутренниеДокументы КАК ВнутренниеДокументы
		|ГДЕ
		|	ВнутренниеДокументы.Ссылка В(&МассивОбъектов)";
		//|	И НЕ ЭтапыДоговоров.ПометкаУдаления
		//|
		//|УПОРЯДОЧИТЬ ПО
		//|	ЭтапыДоговоров.НомерЭтапа";

	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);

	Результат = Запрос.Выполнить().Выгрузить();

	// Плательщик
	ДоговорПодряда = СокрЛП(Результат[0].РегистрационныйНомер)+" от "+Формат(Результат[0].ДатаРегистрации, "ДЛФ=D");
	НомерДоговора = СокрЛП(Результат[0].РегистрационныйНомер);
	ДоговорПодрядаБрест = Лев(НомерДоговора, СтрДлина(НомерДоговора)-3)+
		", Год: "+Прав(НомерДоговора,2) + ", СМЕТА: №1";
	АдресПлательщика = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Результат[0].Корреспондент, Справочники.ВидыКонтактнойИнформации.ЮридическийАдресКорреспондента);
	Плательщик = Результат[0].Плательщик;
	ДанныеПечати = Новый Структура("ДоговорПодряда, Плательщик, АдресПлательщика",
	ДоговорПодряда, Плательщик, АдресПлательщика);
	
	// Получатели
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Корреспонденты.ПолноеНаименование КАК Получатель,
		|	Корреспонденты.Ссылка,
		|	Корреспонденты.ИНН КАК ПолучательУНН,
		|	Корреспонденты.ОсновнойБанковскийСчет.НомерСчета КАК ПолучательСчет,
		|	Корреспонденты.ОсновнойБанковскийСчет.Банк.Код КАК ПолучательМФО,
		//|	Корреспонденты.ОсновнойБанковскийСчет.Банк.Адрес КАК ПолучательАдрес,
		|	Корреспонденты.ОсновнойБанковскийСчет.Банк.Наименование КАК ПолучательБанк
		|ИЗ
		|	Справочник.Корреспонденты КАК Корреспонденты
		|ГДЕ
		|	Корреспонденты.Ссылка В (&МассивСсылка)";

	МассивСсылка = Новый Массив;
	Если флОплатаГосПошлины Тогда
		МассивСсылка.Добавить(ПараметрыПечати.ПолучательГосПошлины);
	КонецЕсли; 
	Если флОплатаГосРегистрация Тогда
		МассивСсылка.Добавить(ПараметрыПечати.ПолучательГосРегистрации);
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("МассивСсылка", МассивСсылка);

	Результат = Запрос.Выполнить();

	Выборка = Результат.Выбрать();

	СтрПолучательГосПошлины = Новый Структура;
	СтрПолучательГосРегистрации = Новый Структура;
	Пока Выборка.Следующий() Цикл
		Если флОплатаГосПошлины Тогда
			Если Выборка.Ссылка = ПараметрыПечати.ПолучательГосПошлины Тогда
				СтрПолучательГосПошлины.Вставить("Получатель", Выборка.Получатель);
				СтрПолучательГосПошлины.Вставить("ПолучательУНН", Выборка.ПолучательУНН);
				СтрПолучательГосПошлины.Вставить("ПолучательБанк", СокрЛП(Выборка.ПолучательБанк));
				СтрПолучательГосПошлины.Вставить("ПолучательСчет", Выборка.ПолучательСчет);
				СтрПолучательГосПошлины.Вставить("ПолучательМФО", Выборка.ПолучательМФО);
			КонецЕсли; 
		КонецЕсли; 
		Если флОплатаГосРегистрация Тогда
			Если Выборка.Ссылка = ПараметрыПечати.ПолучательГосРегистрации Тогда
				СтрПолучательГосРегистрации.Вставить("Получатель", Выборка.Получатель);
				СтрПолучательГосРегистрации.Вставить("ПолучательУНН", Выборка.ПолучательУНН);
				СтрПолучательГосРегистрации.Вставить("ПолучательБанк", СокрЛП(Выборка.ПолучательБанк));
				СтрПолучательГосРегистрации.Вставить("ПолучательСчет", Выборка.ПолучательСчет);
				СтрПолучательГосРегистрации.Вставить("ПолучательМФО", Выборка.ПолучательМФО);
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
	
	Если флОплатаГосПошлины Тогда
		ОбластьШапка2 = Макет.ПолучитьОбласть("Шапка2");
		
		ЗаполнитьЗначенияСвойств(ОбластьШапка2.Параметры, ДанныеПечати);
		ЗаполнитьЗначенияСвойств(ОбластьШапка2.Параметры, СтрПолучательГосПошлины);
		ЗаполнитьЗначенияСвойств(ОбластьШапка2.Параметры, ПараметрыПечати);
	КонецЕсли; 
	
	Если флОплатаГосРегистрация Тогда
		ОбластьШапка1 = Макет.ПолучитьОбласть("Шапка1");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьВсего = Макет.ПолучитьОбласть("Всего");
		
		ЗаполнитьЗначенияСвойств(ОбластьШапка1.Параметры, ДанныеПечати);
		ЗаполнитьЗначенияСвойств(ОбластьШапка1.Параметры, СтрПолучательГосРегистрации);
		ЗаполнитьЗначенияСвойств(ОбластьШапка1.Параметры, ПараметрыПечати);
	КонецЕсли; 
	
	Если флОплатаГосРегистрация Тогда
		ТабличныйДокумент.Вывести(ОбластьШапка1);
		
		Всего = 0;
		НомерПП = 0;
			
		КоличествоПлатежей = ПараметрыПечати.КоличествоПлатежейГосРегистрации;
		
		СтруктураПлатежа = "";
		Для ы = 1 По КоличествоПлатежей Цикл
			Если ПараметрыПечати.Свойство("Платеж"+ы, СтруктураПлатежа) Тогда
				ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, СтруктураПлатежа);
				ТабличныйДокумент.Вывести(ОбластьСтрока);
				
				Всего = Всего + СтруктураПлатежа.Сумма;
			КонецЕсли; 
		КонецЦикла; 
		
		ОбластьВсего.Параметры.Всего = Всего;
		ТабличныйДокумент.Вывести(ОбластьВсего);
	КонецЕсли;
		
	Если флОплатаГосПошлины Тогда
		СтруктураПлатежа = ПараметрыПечати.ГоспошлинаПлатеж1;
		ЗаполнитьЗначенияСвойств(ОбластьШапка2.Параметры, СтруктураПлатежа);
		ОбластьШапка2.Параметры.Сумма = СтруктураПлатежа.Сумма;
		ОбластьШапка2.Параметры.Всего = СтруктураПлатежа.Сумма;
		ТабличныйДокумент.Вывести(ОбластьШапка2);
	КонецЕсли;	

	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, МассивОбъектов);
	
	Возврат ТабличныйДокумент;

КонецФункции // ПечатьИнформацииДляОплатыДоговораДляЮрЛица()
