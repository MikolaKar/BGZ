&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	EMailАдресаПолучателейОтчета = КонтрольЖурналаРегистрации.ПолучитьАдресатовПолученияОтчетаПоЖурналуРегистрации();
	
КонецПроцедуры

// Обработчик нажатия на кнопку "Ок"
// Пытается сохранить введенную строку почтовых адресов и закрывает форму
// если сохранение прошло удачно
//
&НаКлиенте
Процедура СохранитьАдресВыполнить()
	
	Перем СообщениеОбОшибке;
	
	Результат = СохранитьEMailАдресаПолучателейОтчета(EMailАдресаПолучателейОтчета, СообщениеОбОшибке);
	
	Если Не Результат Тогда
		Если Не ПустаяСтрока(СообщениеОбОшибке) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СообщениеОбОшибке, , "EMailАдресаПолучателейОтчета");
		КонецЕсли;
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

// Служебная функция - выполняет попытку сохранения строки почтовых адресов.
// Строка не сохраняется если формат почтовых адресов задан не верно.
//
&НаСервереБезКонтекста
Функция СохранитьEMailАдресаПолучателейОтчета(EMailАдресаПолучателейОтчета, СообщениеОбОшибке = "")
	
	Если ЗначениеЗаполнено(EMailАдресаПолучателейОтчета) Тогда
		Попытка
			ОбщегоНазначенияКлиентСервер.РазобратьСтрокуСПочтовымиАдресами(EMailАдресаПолучателейОтчета);
		Исключение
			СообщениеОбОшибке = НСтр("ru = 'Не верно задан формат почтового адреса'");
			Возврат Ложь;
		КонецПопытки;
	КонецЕсли;
	
	Попытка
		КонтрольЖурналаРегистрации.УстановитьАдресатовПолученияОтчетаПоЖурналуРегистрации(EMailАдресаПолучателейОтчета);
	Исключение
		ОшибкаИнфо = ИнформацияОбОшибке();
		Если ОшибкаИнфо.Причина = Неопределено Тогда
			СообщениеОбОшибке =ОшибкаИнфо.Описание;
		Иначе
			СообщениеОбОшибке = ОшибкаИнфо.Причина.Описание;
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке);
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции
