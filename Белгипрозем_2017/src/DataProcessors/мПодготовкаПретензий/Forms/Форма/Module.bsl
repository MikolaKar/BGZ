
&НаКлиенте
Перем Док, ОбщийДок;

&НаКлиенте
Перем WordApp;

&НаКлиенте
Перем Селекция, НачалоЗакладки, Поиск;


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДнейПросрочки = 20; // По умолчанию
	Валюта = Справочники.Валюты.НайтиПоКоду("933");
	Тема = "О погашении задолженности";
	ДатаОстатков = ТекущаяДата();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	-РасчетыСПокупателямиОстатки.СуммаОстаток КАК Долг,
		|	РасчетыСПокупателямиОстатки.Договор КАК Договор,
		|	РасчетыСПокупателямиОстатки.Корреспондент КАК Корреспондент,
		|	РасчетыСПокупателямиОстатки.ЭтапДоговора КАК ЭтапДоговора
		|ПОМЕСТИТЬ Долги
		|ИЗ
		|	РегистрНакопления.РасчетыСПокупателями.Остатки(&ДатаСреза, ) КАК РасчетыСПокупателямиОстатки
		//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.мУсловияДоговоров.СрезПоследних КАК мУсловияДоговоровСрезПоследних
		//|		ПО РасчетыСПокупателямиОстатки.ЭтапДоговора = мУсловияДоговоровСрезПоследних.ЭтапДоговора
		|ГДЕ
		|	РасчетыСПокупателямиОстатки.СуммаОстаток < 0
		//|	И НЕ мУсловияДоговоровСрезПоследних.УчетДатыПредоплаты
		|	И РасчетыСПокупателямиОстатки.Договор.ВидДокумента = &ВидДоговора
		|	И РасчетыСПокупателямиОстатки.Корреспондент = &Корреспондент
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетыСПокупателямиОстатки.Договор,
		|	РасчетыСПокупателямиОстатки.Корреспондент,
		|	РасчетыСПокупателямиОстатки.ЭтапДоговора,
		|	-РасчетыСПокупателямиОстатки.СуммаОстаток
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(мСметнаяСтоимость.Период) КАК Период,
		|	мСметнаяСтоимость.ЭтапДоговора КАК ЭтапДоговора
		|ПОМЕСТИТЬ МаксДаты
		|ИЗ
		|	РегистрСведений.мСметнаяСтоимость КАК мСметнаяСтоимость
		|ГДЕ
		|	мСметнаяСтоимость.ЭтапДоговора В
		|			(ВЫБРАТЬ
		|				Долги.ЭтапДоговора
		|			ИЗ
		|				Долги КАК Долги)
		|
		|СГРУППИРОВАТЬ ПО
		|	мСметнаяСтоимость.ЭтапДоговора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	мСметнаяСтоимость.ЭтапДоговора КАК ЭтапДоговора,
		|	ВЫБОР
		|		КОГДА мСметнаяСтоимость.Период >= &ДатаДеноминации
		|			ТОГДА мСметнаяСтоимость.Сумма
		|		ИНАЧЕ ВЫРАЗИТЬ(мСметнаяСтоимость.Сумма / 10000 КАК ЧИСЛО(15, 2))
		|	КОНЕЦ КАК Цена
		|ПОМЕСТИТЬ Цены
		|ИЗ
		|	МаксДаты КАК МаксДаты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.мСметнаяСтоимость КАК мСметнаяСтоимость
		|		ПО МаксДаты.ЭтапДоговора = мСметнаяСтоимость.ЭтапДоговора
		|			И МаксДаты.Период = мСметнаяСтоимость.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСПокупателями.ЭтапДоговора КАК ЭтапДоговора,
		|	ВЫБОР
		|		КОГДА РасчетыСПокупателями.Период > &ДатаДеноминации
		|			ТОГДА РасчетыСПокупателями.Сумма
		|		КОГДА РасчетыСПокупателями.Период < &ДатаДеноминации
		|			ТОГДА ВЫРАЗИТЬ(РасчетыСПокупателями.Сумма / 10000 КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаАкта,
		|	РасчетыСПокупателями.НомерДокумента КАК НомерАкта,
		|	РасчетыСПокупателями.Период КАК ДатаАкта
		|ПОМЕСТИТЬ Акты
		|ИЗ
		|	РегистрНакопления.РасчетыСПокупателями КАК РасчетыСПокупателями
		|ГДЕ
		|	РасчетыСПокупателями.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И РасчетыСПокупателями.ЭтапДоговора В
		|			(ВЫБРАТЬ
		|				Долги.ЭтапДоговора
		|			ИЗ
		|				Долги КАК Долги)
		|	И РасчетыСПокупателями.Период <> &ДатаДеноминации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Акты.ЭтапДоговора КАК ЭтапДоговора,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА Акты.ДатаАкта <> &ДатаДеноминации
		|				ТОГДА Акты.ДатаАкта
		|			ИНАЧЕ &ПустаяДата
		|		КОНЕЦ) КАК ДатаПоследнегоАкта,
		|	СУММА(Акты.СуммаАкта) КАК Заактировано
		|ПОМЕСТИТЬ ИтогиАктов
		|ИЗ
		|	Акты КАК Акты
		|
		|СГРУППИРОВАТЬ ПО
		|	Акты.ЭтапДоговора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСПокупателямиОбороты.ЭтапДоговора КАК ЭтапДоговора,
		|	СУММА(ВЫБОР
		|			КОГДА РасчетыСПокупателямиОбороты.Период > &ДатаДеноминации
		|				ТОГДА РасчетыСПокупателямиОбороты.СуммаПриход
		|			КОГДА РасчетыСПокупателямиОбороты.Период < &ДатаДеноминации
		|				ТОГДА ВЫРАЗИТЬ(РасчетыСПокупателямиОбороты.СуммаПриход / 10000 КАК ЧИСЛО(15, 2))
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Оплата
		|ПОМЕСТИТЬ Оплаты
		|ИЗ
		|	РегистрНакопления.РасчетыСПокупателями.Обороты(
		|			,
		|			,
		|			День,
		|			ЭтапДоговора В
		|				(ВЫБРАТЬ
		|					Долги.ЭтапДоговора
		|				ИЗ
		|					Долги КАК Долги)) КАК РасчетыСПокупателямиОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетыСПокупателямиОбороты.ЭтапДоговора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Акты.ЭтапДоговора КАК ЭтапДоговора,
		|	Акты.СуммаАкта КАК СуммаАкта,
		|	Акты.НомерАкта КАК НомерАкта,
		|	Акты.ДатаАкта КАК ДатаАкта,
		|	ИтогиАктов.ДатаПоследнегоАкта КАК ДатаПоследнегоАкта,
		|	ИтогиАктов.Заактировано КАК Заактировано
		|ПОМЕСТИТЬ АктыСИтогами
		|ИЗ
		|	Акты КАК Акты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ИтогиАктов КАК ИтогиАктов
		|		ПО Акты.ЭтапДоговора = ИтогиАктов.ЭтапДоговора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Цены.Цена КАК Цена,
		|	АктыСИтогами.Заактировано КАК Заактировано,
		|	ЕСТЬNULL(Оплаты.Оплата, 0) КАК Оплата,
		|	Долги.Долг КАК Долг,
		|	АктыСИтогами.СуммаАкта КАК СуммаАкта,
		|	АктыСИтогами.НомерАкта КАК НомерАкта,
		|	АктыСИтогами.ДатаАкта КАК ДатаАкта,
		|	АктыСИтогами.ДатаПоследнегоАкта КАК ДатаПоследнегоАкта,
		|	Долги.Договор КАК Договор,
		|	Долги.ЭтапДоговора КАК ЭтапДоговора,
		|	Долги.Корреспондент КАК Корреспондент,
		|	Долги.ЭтапДоговора.ВидРабот.Наименование КАК ВидРаботНаименование,
		|	КорреспондентыКонтактнаяИнформация.Представление КАК Адрес,
		|	Долги.Договор.ДатаРегистрации КАК ДатаДоговора,
		|	Долги.Договор.РегистрационныйНомер КАК НомерДоговора,
		|	СвязиДокументов.Документ КАК Акт,
		|	ВЫРАЗИТЬ(Долги.Корреспондент.ПолноеНаименование КАК СТРОКА(1024)) КАК ПолучательПолноеНаименование
		|ИЗ
		|	Долги КАК Долги
		|		ЛЕВОЕ СОЕДИНЕНИЕ Цены КАК Цены
		|		ПО Долги.ЭтапДоговора = Цены.ЭтапДоговора
		|		ЛЕВОЕ СОЕДИНЕНИЕ Оплаты КАК Оплаты
		|		ПО Долги.ЭтапДоговора = Оплаты.ЭтапДоговора
		|		ЛЕВОЕ СОЕДИНЕНИЕ АктыСИтогами КАК АктыСИтогами
		|		ПО Долги.ЭтапДоговора = АктыСИтогами.ЭтапДоговора
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
		|		ПО Долги.Корреспондент = КорреспондентыКонтактнаяИнформация.Ссылка
		|			И (КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойинформации.ЮридическийАдресКорреспондента))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиДокументов КАК СвязиДокументов
		|		ПО (АктыСИтогами.ЭтапДоговора.Владелец = СвязиДокументов.СвязанныйДокумент)
		|	И СвязиДокументов.ТипСвязи = &ТипСвязи
		|	И СвязиДокументов.Документ.ВидДокумента = &ВидДокумента
		|	И СвязиДокументов.Документ.РегистрационныйНомер = АктыСИтогами.НомерАкта
		|ГДЕ
		|	РАЗНОСТЬДАТ(АктыСИтогами.ДатаПоследнегоАкта, &ДатаСреза, ДЕНЬ) > &ДнейПросрочки
		|	И Цены.Цена = АктыСИтогами.Заактировано
		|
		|УПОРЯДОЧИТЬ ПО
		|	Договор,
		|	ЭтапДоговора";
	
	Запрос.УстановитьПараметр("ДатаСреза", КонецДня(ДатаОстатков));
	Запрос.УстановитьПараметр("ДнейПросрочки", ДнейПросрочки);
	Запрос.УстановитьПараметр("ДатаДеноминации", Дата(2016, 7, 1));
	Запрос.УстановитьПараметр("ПустаяДата", Дата(1, 1, 1));
	Запрос.УстановитьПараметр("ТипСвязи", Справочники.ТипыСвязей.ОтноситсяКДоговору);
	Запрос.УстановитьПараметр("ВидДокумента", Справочники.ВидыВнутреннихДокументов.АктВыполненныхРабот);
	Если Не ЗначениеЗаполнено(ВидДокумента) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И РасчетыСПокупателямиОстатки.Договор.ВидДокумента = &ВидДоговора", "");
	Иначе	
		Запрос.УстановитьПараметр("ВидДокумента", ВидДокумента);
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И РасчетыСПокупателямиОстатки.Корреспондент = &Корреспондент", "");
	Иначе	
	    Запрос.УстановитьПараметр("Корреспондент", Контрагент);
	КонецЕсли; 
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Договоры.Очистить();
	Письма.Очистить();
	
	Пока Выборка.Следующий() Цикл
		Стр = Договоры.Добавить();
		ЗаполнитьЗначенияСвойств(Стр, Выборка);
	КонецЦикла;
	
	Тз = Договоры.Выгрузить();
	Тз.Свернуть("Корреспондент, Адрес", "Цена, Оплата, Долг, Заактировано");
	Тз.Сортировать("Корреспондент");
	
	Для каждого Стр Из Тз Цикл
		НовСтр = Письма.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
		
		// Подсчет количества листов приложений
		Отбор = Новый Структура("Корреспондент", Стр.Корреспондент);
		ИскСтроки = Договоры.НайтиСтроки(Отбор);
		НовСтр.Листов = ИскСтроки.Количество();
	КонецЦикла; 
	
	МассивКорреспондентов = Тз.ВыгрузитьКолонку("Корреспондент");
	ПолучитьПретензии(МассивКорреспондентов);
КонецПроцедуры

&НаСервере
Функция ПолучитьПретензии(МассивКорреспондентов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсходящиеДокументыПолучатели.Ссылка КАК ИсхПисьмо,
		|	Файлы.Ссылка КАК КарточкаФайла,
		|	ИсходящиеДокументыПолучатели.Получатель КАК Корреспондент,
		|	Файлы.ТекущаяВерсияПутьКФайлу как ТекущаяВерсияПутьКФайлу,
		|	Файлы.ТекущаяВерсияТом.ПолныйПутьWindows как ТекущаяВерсияТом
		|ИЗ
		|	Справочник.ИсходящиеДокументы.Получатели КАК ИсходящиеДокументыПолучатели
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Файлы КАК Файлы
		|		ПО ИсходящиеДокументыПолучатели.Ссылка = Файлы.ВладелецФайла
		|ГДЕ
		|	ИсходящиеДокументыПолучатели.Ссылка.ВидДокумента = &Претензия
		|	И ИсходящиеДокументыПолучатели.Получатель В(&МассивКорреспондентов)
		|	И ИсходящиеДокументыПолучатели.Ссылка.ДатаРегистрации >= &ДатаРегистрации
		|	И НЕ ИсходящиеДокументыПолучатели.Ссылка.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ДатаРегистрации", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("МассивКорреспондентов", МассивКорреспондентов);
	Запрос.УстановитьПараметр("Претензия", Справочники.ВидыИсходящихДокументов.Претензия);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Отбор = Новый Структура("Корреспондент", Выборка.Корреспондент);
		ИскСтроки = Письма.НайтиСтроки(Отбор);
		Если ИскСтроки.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(ИскСтроки[0], Выборка);
		КонецЕсли; 
	КонецЦикла;
КонецФункции
 
&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПисьмаПриАктивизацииСтроки(Элемент)
	ТекДанные = Элементы.Письма.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый ФиксированнаяСтруктура("Корреспондент", ТекДанные.Корреспондент);
	Элементы.Договоры.ОтборСтрок = Отбор;
КонецПроцедуры

&НаКлиенте
Процедура ПометитьПисьма(Команда)
	Для каждого Письмо Из Письма Цикл
		Письмо.Пометка = Истина;	
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометкиПисьма(Команда)
	Для каждого Письмо Из Письма Цикл
		Письмо.Пометка = Ложь;	
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДоговоры(Команда)
	Отбор = Новый ФиксированнаяСтруктура("Корреспондент", Неопределено);
	Элементы.Договоры.ОтборСтрок = Отбор;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьИсходящиеПисьма()
	WordApp = Новый COMОбъект("Word.Application");
	
	Подготовил = ПользователиКлиентСервер.ТекущийПользователь();
	
	Всего = 0;
	Для каждого Стр Из Письма Цикл
		Если Стр.Пометка Тогда
			Всего = Всего + 1;
		КонецЕсли;
	КонецЦикла;
	
  	Индикатор = мРазноеКлиент.ПолучитьИндикаторПроцесса(Всего);
	
	ТекущийПодписант = Неопределено; // чтоб не получать для каждого письма должность и ФИО
	Сч = 0;
	
	Для каждого Стр Из Письма Цикл
		Если Не Стр.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		Сч = Сч+1;
		Индикатор.ПредставлениеПроцесса = "Формирование исходящих писем "+Сч+" из "+Всего+"...";
		мРазноеКлиент.ОбработатьИндикатор(Индикатор, Сч);
		
		ДанныеДляПисьма = Стр.ДанныеДляПисьма;
		
		СоздатьИсходящееПисьмо(ДанныеДляПисьма, Стр.ИсхПисьмо);
		
		Если ЗначениеЗаполнено(ДанныеДляПисьма.ИсхПисьмо) Тогда
			
			Стр.ИсхПисьмо = ДанныеДляПисьма.ИсхПисьмо;
			Если ЗначениеЗаполнено(Стр.КарточкаФайла) Тогда
				УдалитьКарточку(Стр.КарточкаФайла);
			КонецЕсли; 
			Стр.КарточкаФайла = СоздатьПечатнуюФормуПисьма(ДанныеДляПисьма);
			
			ПараметрыКарточки = ПолучитьПараметрыКарточки(Стр.КарточкаФайла);
			Стр.ТекущаяВерсияТом = ПараметрыКарточки.ТекущаяВерсияТом ;
			Стр.ТекущаяВерсияПутьКФайлу = ПараметрыКарточки.ТекущаяВерсияПутьКФайлу;
			
		Иначе	
			Индекс = Сч - 1;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Для "+Стр.Корреспондент+" исх. письмо не создано!";
			Сообщение.Поле = "Письма["+Индекс+"].ИсхПисьмо";
			Сообщение.Сообщить(); 
		КонецЕсли; 
	КонецЦикла; 
	
	WordApp.Quit();	
	WordApp = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПисьма(Команда)
	ОчиститьСообщения();
	
	ЕстьПисьмаДляОтправки = Ложь;
	Для Каждого Строка Из Письма Цикл
		Если Строка.Пометка Тогда
			ЕстьПисьмаДляОтправки = Истина;
			Прервать;
		КонецЕсли; 
	КонецЦикла;
	
	// Создание исх. документов
	Если ЕстьПисьмаДляОтправки Тогда
		СобратьДанныеДляПисем();
		СоздатьИсходящиеПисьма();
	Иначе
		Сообщить("Нет отмеченных писем для отправки!");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Функция СобратьДанныеДляПисем() 
	Всего = 0;
	Для каждого Стр Из Письма Цикл
		Если Стр.Пометка Тогда
			Всего = Всего + 1;
		КонецЕсли;
	КонецЦикла;
	
  	Индикатор = мРазноеКлиент.ПолучитьИндикаторПроцесса(Всего);

	Сч = 0;
	
	Для каждого Стр Из Письма Цикл
		Если Не Стр.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		Сч = Сч+1;
		Индикатор.ПредставлениеПроцесса = "Получение доп. данных для писем "+Сч+" из "+Всего+"...";
		мРазноеКлиент.ОбработатьИндикатор(Индикатор, Сч);
		
		Отбор = Новый Структура("Корреспондент", Стр.Корреспондент);
		ИскСтроки = Договоры.НайтиСтроки(Отбор);
		
		Данные = Новый Структура;
		
		СтрокаДоговоров = "";
		СтрокаАктов = "";
		СтрокаВидовРабот = "";
		КоличествоДоговоров = 0;
		СписокДоговоров = Новый СписокЗначений;
		//СписокАктов = Новый СписокЗначений;
		
		Для каждого ИскСтр Из ИскСтроки Цикл
			Дог = "от " + Формат(ИскСтр.ДатаДоговора, "ДФ=dd.MM.yyyy") + " № " + ИскСтр.НомерДоговора;
			Акт = "от " + Формат(ИскСтр.ДатаАкта, "ДФ=dd.MM.yyyy") + " № " + ИскСтр.НомерАкта;
			ВидРабот = ИскСтр.ВидРаботНаименование;
			
			Если СтрНайти(СтрокаДоговоров, Дог) = 0 Тогда
				СтрокаДоговоров = СтрокаДоговоров + ?(СтрокаДоговоров = "", "", ", ") + Дог;
				КоличествоДоговоров = КоличествоДоговоров + 1;
				СписокДоговоров.Добавить(ИскСтр.Договор);
			КонецЕсли; 
			Если СтрНайти(СтрокаАктов, Акт) = 0 Тогда
				СтрокаАктов = СтрокаАктов + ?(СтрокаАктов = "", "", ", ") + Акт;
				//СписокАктов.Добавить(ИскСтр.Акт);
			КонецЕсли; 
			Если СтрНайти(СтрокаВидовРабот, ВидРабот) = 0 Тогда
				СтрокаВидовРабот = СтрокаВидовРабот + ?(СтрокаВидовРабот = "", "", ", ") + ВидРабот;
			КонецЕсли; 
		КонецЦикла; 
		
		Данные.Вставить("СтрокаДоговоров", СтрокаДоговоров);
		Данные.Вставить("СтрокаАктов", СтрокаАктов);
		Данные.Вставить("СтрокаВидовРабот", СтрокаВидовРабот);
		Данные.Вставить("КоличествоДоговоров", КоличествоДоговоров);
		Данные.Вставить("Корреспондент", Стр.Корреспондент);
		Данные.Вставить("Адрес", Стр.Адрес);
		Данные.Вставить("Цена", Стр.Цена);
		Данные.Вставить("Долг", Стр.Долг);
		Данные.Вставить("Оплата", Стр.Оплата);
		Данные.Вставить("Листов", Стр.Листов);
		Данные.Вставить("СписокДоговоров", СписокДоговоров);
		//Данные.Вставить("СписокАктов", СписокАктов);
		Данные.Вставить("ПолучательПолноеНаименование", ИскСтр.ПолучательПолноеНаименование);
		
		Стр.ДанныеДляПисьма = Данные;
	КонецЦикла;
КонецФункции

&НаСервере
Функция СоздатьИсходящееПисьмо(ДанныеДляПисьма, ИсхПисьмо)
	
	Если ЗначениеЗаполнено(ИсхПисьмо) Тогда
		ИсхДок = ИсхПисьмо.ПолучитьОбъект();
	Иначе
		ИсхДок = Справочники.ИсходящиеДокументы.СоздатьЭлемент();
	КонецЕсли; 
	ИсхДок.ВидДокумента = Справочники.ВидыИсходящихДокументов.Претензия;
	ИсхДок.ДатаСоздания = ТекущаяДата();
	ИсхДок.НоменклатураДел = НоменклатураДел;
	ИсхДок.Подготовил = Подготовил;
    ИсхДок.Подписал = ПодписалПисьмо;
	ИсхДок.Валюта = Валюта;
	ИсхДок.ВопросДеятельности = ВопросДеятельности;
	ИсхДок.ГрифДоступа = Справочники.ГрифыДоступа.НайтиПоНаименованию("Общий");
	ИсхДок.Организация = Организация;
	//ИсхДок.Подразделение = ДанныеДляПисьма.Подразделение;
	ИсхДок.Заголовок = "Претензия по дог. " + ДанныеДляПисьма.СтрокаДоговоров;
	ИсхДок.ЛистовВПриложениях = ДанныеДляПисьма.Листов;
	ИсхДок.КоличествоПриложений = 1;
	ИсхДок.Получатель = ДанныеДляПисьма.Корреспондент;
	//ИсхДок.Адресат = ДанныеДляПисьма.Адресат;
	
	// Получатель
	Если ЗначениеЗаполнено(ИсхПисьмо) Тогда
	Иначе
		СтрокаПолучателя = ИсхДок.Получатели.Добавить();
		СтрокаПолучателя.Получатель = ДанныеДляПисьма.Корреспондент;
		//СтрокаПолучателя.Адресат = ДанныеДляПисьма.Адресат;
		СтрокаПолучателя.СпособОтправки = Справочники.СпособыДоставки.НайтиПоНаименованию("Почта с уведомлением");
	КонецЕсли; 
	
	// Регистрация и запись
	Если ЗначениеЗаполнено(ИсхПисьмо) Тогда
		ИсхДок.Записать();
	Иначе
		Зарегистрировать(ИсхДок);
	КонецЕсли; 
	
 	Если ЗначениеЗаполнено(ИсхДок.Ссылка) Тогда
		// создание связей
		Для каждого Стр Из ДанныеДляПисьма.СписокДоговоров Цикл
			СвязиДокументов.СоздатьСвязь(Стр.Значение, ИсхДок.Ссылка, Справочники.ТипыСвязей.ПерепискаПоДоговору);
		КонецЦикла;
	КонецЕсли; 
	
	ДанныеДляПисьма.Вставить("ИсхПисьмо", ИсхДок.Ссылка);
	ДанныеДляПисьма.Вставить("РегистрационныйНомер", ИсхДок.РегистрационныйНомер);
	ДанныеДляПисьма.Вставить("ДатаРегистрации", ИсхДок.ДатаРегистрации);
	
	Возврат ДанныеДляПисьма;
КонецФункции 

&НаСервере
Процедура Зарегистрировать(ИсхДок) 
	Нумератор = Нумерация.ПолучитьНумераторДокумента(ИсхДок);
	
	Если ЗначениеЗаполнено(Нумератор) Тогда // автоматическая нумерация
		
		ДатаРегистрации = ТекущаяДата();
		ТекущийПользователь = Пользователи.ТекущийПользователь();
		
		ИсхДок.ДатаРегистрации = ДатаРегистрации;
		
		// сформируем текущий номер
		СтруктураПараметров = НумерацияКлиентСервер.ПолучитьПараметрыНумерации(ИсхДок);
		Нумерация.СформироватьЧисловойНомерДокумента(СтруктураПараметров, ИсхДок.ЧисловойНомер);
		
		ОписанияОшибок = Новый СписокЗначений;
		СтруктураПараметров = НумерацияКлиентСервер.ПолучитьПараметрыНумерации(ИсхДок);
		Нумерация.СформироватьСтроковыйНомерДокумента(СтруктураПараметров, ИсхДок.РегистрационныйНомер, ОписанияОшибок);
		
		ИсхДок.Зарегистрировал = ТекущийПользователь;
		ИсхДок.Записать();
		
		Делопроизводство.ЗаписатьСостояниеДокумента(
		ИсхДок.Ссылка, 
		ДатаРегистрации, 
		Перечисления.СостоянияДокументов.Зарегистрирован, 
		ТекущийПользователь);
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Функция СоздатьПечатнуюФормуПисьма(ДанныеДляПисьма)
	ИсхПисьмо = ДанныеДляПисьма.ИсхПисьмо;
	СтрокаДоговоров = ДанныеДляПисьма.СтрокаДоговоров;
	СтрокаАктов = ДанныеДляПисьма.СтрокаАктов;
	СтрокаВидовРабот = ДанныеДляПисьма.СтрокаВидовРабот;
	Получатель = ДанныеДляПисьма.Корреспондент;
	ДатаРег = ДанныеДляПисьма.ДатаРегистрации;
	РегНомер = ДанныеДляПисьма.РегистрационныйНомер;
	Листов = ДанныеДляПисьма.Листов;
	КоличествоДоговоров = ДанныеДляПисьма.КоличествоДоговоров;
	Адрес = ДанныеДляПисьма.Адрес;
	//Приложений = ДанныеДляПисьма.Приложений;
	
	ИнициализироватьДокументWord();
	
	// Заполнение письма
	мРазноеКлиент.Заменить(Поиск, "/ДатаРег/", Формат(ДатаРег, "ДЛФ = D"));  
	мРазноеКлиент.Заменить(Поиск, "/РегНомер/", РегНомер);  
	мРазноеКлиент.Заменить(Поиск, "/Тема/", Тема);  

	// замена окончаний
	Если КоличествоДоговоров > 1 Тогда
		мРазноеКлиент.Заменить(Поиск, "/а/", "ов");  
		мРазноеКлиент.Заменить(Поиск, "/ого/", "ых");  
		мРазноеКлиент.Заменить(Поиск, "/ому/", "ым");  
		мРазноеКлиент.Заменить(Поиск, "/у/", "ам");  
		мРазноеКлиент.Заменить(Поиск, "/ом/", "ами");  
		мРазноеКлиент.Заменить(Поиск, "/и/", "и");  
		мРазноеКлиент.Заменить(Поиск, "/ы/", "ы");  
		мРазноеКлиент.Заменить(Поиск, "/й/", "е");  
		мРазноеКлиент.Заменить(Поиск, "/я/", "и");  
		мРазноеКлиент.Заменить(Поиск, "/е/", "ю");  
	Иначе
		мРазноеКлиент.Заменить(Поиск, "/а/", "а");  
		мРазноеКлиент.Заменить(Поиск, "/ого/", "ого");  
		мРазноеКлиент.Заменить(Поиск, "/ому/", "ому");  
		мРазноеКлиент.Заменить(Поиск, "/у/", "у");  
		мРазноеКлиент.Заменить(Поиск, "/ом/", "ом");  
		мРазноеКлиент.Заменить(Поиск, "/и/", "");  
		мРазноеКлиент.Заменить(Поиск, "/ы/", "");  
		мРазноеКлиент.Заменить(Поиск, "/й/", "й");  
		мРазноеКлиент.Заменить(Поиск, "/я/", "я");  
		мРазноеКлиент.Заменить(Поиск, "/е/", "е");  
	КонецЕсли; 
	
	мРазноеКлиент.Заменить(Поиск, "/СтрокаДоговоров/", СтрокаДоговоров);  
	мРазноеКлиент.Заменить(Поиск, "/СтрокаАктов/", СтрокаАктов);  
	мРазноеКлиент.Заменить(Поиск, "/ВидыРабот/", СтрокаВидовРабот);
	
	Цена = мРаботаСДоговорами.СуммаЧисломИПрописью(ДанныеДляПисьма.Цена, Валюта);
	мРазноеКлиент.Заменить(Поиск, "/Цена/", Цена);  
	Оплата = мРаботаСДоговорами.СуммаЧисломИПрописью(ДанныеДляПисьма.Оплата, Валюта);
	мРазноеКлиент.Заменить(Поиск, "/Оплата/", Оплата);  
	Долг = мРаботаСДоговорами.СуммаЧисломИПрописью(ДанныеДляПисьма.Долг, Валюта);
	мРазноеКлиент.Заменить(Поиск, "/Долг/", Долг);  
	
	Корреспондент = ДанныеДляПисьма.ПолучательПолноеНаименование;
	мРазноеКлиент.Заменить(Поиск, "/Корреспондент/", Корреспондент); 
	
	мРазноеКлиент.Заменить(Поиск, "/ПочтовыйАдрес/", Адрес); 
	мРазноеКлиент.Заменить(Поиск, "/Листов/", Листов); 
	//мРазноеКлиент.Заменить(Поиск, "/КолвоПриложений/", 1); 
	
	Если ТекущийПодписант <> ПодписалПисьмо Тогда
		ТекущийПодписант = ПодписалПисьмо;
		ПолучитьДолжностьИФИОПодписал(ТекущийПодписант);
	КонецЕсли; 
	
	мРазноеКлиент.Заменить(Поиск, "/ДолжностьПодписал/", ДолжностьПодписал); 
	мРазноеКлиент.Заменить(Поиск, "/ФИОПодписал/", ФИОПодписал);
	
	// Строка исполнителя
	//МестоДефисаВСтроке = Найти(РегНомер, "-");
	//КодПодразделения = Лев(РегНомер, МестоДефисаВСтроке - 1);
	
	ПервыйПробел = СтрНайти(Подготовил, " ");
	Если ПервыйПробел > 1 Тогда
		ФамилияПодготовил = Лев(Подготовил, ПервыйПробел - 1);
	Иначе	
	    ФамилияПодготовил = Подготовил;
	КонецЕсли; 
	
	СтрокаИсполнитель = "" + ФамилияПодготовил + ": " + 
		УправлениеКонтактнойИнформацией.ПолучитьКонтактнуюИнформацияОбъекта(Подготовил, ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонПользователя"));
	мРазноеКлиент.Заменить(Поиск, "/СтрокаИсполнитель/", СтрокаИсполнитель); 
	мРазноеКлиент.Заменить(Поиск, "/ДатаИсполнитель/", Формат(ДатаРег, "ДЛФ = D")); 
	
	КарточкаФайла = ВывестиДокумент(ИсхПисьмо, РегНомер);
	
	Возврат КарточкаФайла;
КонецФункции 

&НаКлиенте
Процедура ИнициализироватьДокументWord() 

	ПутьКФайлуНаДиске = ПолучитьИмяВременногоФайла("docx");

	Макет = ПолучитьМакетСервер();
	//временныйПуть = КаталогВременныхФайлов();
	//Если ЗначениеЗаполнено(АктВыполненныхРабот) Тогда
	//	ПутьКФайлуНаДиске = "Акт "+ПолучитьРегНомерАкта(АктВыполненныхРабот)+".docx";
	//Иначе
	//	ПутьКФайлуНаДиске = "Акт "+НомерДоговора+"_"+СтрЭтапа.НомерЭтапа+".docx";
	//КонецЕсли; 
	//ПутьКФайлуНаДиске = СтрЗаменить(ПутьКФайлуНаДиске, "/", "_");
	//ПутьКФайлуНаДиске = СтрЗаменить(ПутьКФайлуНаДиске, "\", "_");
	//ПутьКФайлуНаДиске = временныйПуть + ПутьКФайлуНаДиске;
	Макет.Записать(ПутьКФайлуНаДиске);
	
	Док = WordApp.Documents.ADD(ПутьКФайлуНаДиске);
	
	Селекция = WordApp.Selection;
	
	Поиск = Док.Content.Find;
	Поиск.ClearFormatting();
	Поиск.Replacement.ClearFormatting();
КонецПроцедуры

&НаСервере
Функция ПолучитьМакетСервер()
	Город = мРазное.ПолучитьГородБазы();
	Если Город = "Прилуки" Тогда
		Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет("ПФ_DOCX_Претензия_Прилуки");
	Иначе
		Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет("ПФ_DOCX_Претензия");
	КонецЕсли; 
КонецФункции

&НаКлиенте
Процедура ПолучитьДолжностьИФИОПодписал(Пользователь)
	Если ЗначениеЗаполнено(Пользователь) Тогда
		Должность = РаботаСПользователями.ПолучитьДолжность(Пользователь);
		Если ЗначениеЗаполнено(Должность) Тогда
			ДолжностьПодписал = Должность;
		Иначе
			Сообщить("Не заполнена должность у " + Пользователь, СтатусСообщения.ОченьВажное);
			ДолжностьПодписал = "_______________________";
		КонецЕсли; 
		ФИОПодписал = ПолучитьФИОПодписал(Пользователь);
	Иначе	
		ДолжностьПодписал = "_______________________";
		ФИОПодписал = "_______________________";
	КонецЕсли; 
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ПолучитьФИОПодписал(Пользователь) 
	Возврат Пользователь.ПредставлениеВДокументах;
КонецФункции

&НаСервереБезКонтекста
Функция УдалитьКарточку(КарточкаФайла)
	КарточкаОбъект = КарточкаФайла.ПолучитьОбъект();
	КарточкаОбъект.УстановитьПометкуУдаления(Истина, Истина);
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПараметрыКарточки(КарточкаФайла) 
	ПараметрыКарточки = Новый Структура();
	ПараметрыКарточки.Вставить("ТекущаяВерсияТом", КарточкаФайла.ТекущаяВерсияТом.ПолныйПутьWindows);
	ПараметрыКарточки.Вставить("ТекущаяВерсияПутьКФайлу", КарточкаФайла.ТекущаяВерсияПутьКФайлу);
	Возврат ПараметрыКарточки;
КонецФункции

&НаКлиенте
Функция ВывестиДокумент(ИсхПисьмо, СтрокаАкт) 
	Док.SaveAs(ПутьКФайлуНаДиске);                        
	Док.Saved = Истина;
	Док.Close(); 
	
	ИмяСоздаваемогоФайла = "Претензия";	
	КарточкаФайла = РаботаСФайламиКлиент.СоздатьДокументНаОсновеФайла(
	ПутьКФайлуНаДиске, 
	ИсхПисьмо, 
	ЭтаФорма, Истина, ИмяСоздаваемогоФайла, , , ,);
	
	УдалитьФайлы(ПутьКФайлуНаДиске);	
	
	Возврат КарточкаФайла;
КонецФункции 

&НаКлиенте
Процедура ПечатьПисем(Команда)
	ОчиститьСообщения();
	Всего = 0;
	Для каждого Письмо Из Письма Цикл
		Если Письмо.Пометка Тогда
			Всего = Всего + 1;
		КонецЕсли; 	
	КонецЦикла; 
	
	Если Всего = 0 Тогда
		Сообщить("Нет выделенных писем для печати!");
		Возврат;
	КонецЕсли; 
	
	WordApp = Новый COMОбъект("Word.Application");
  	Индикатор = мРазноеКлиент.ПолучитьИндикаторПроцесса(Всего);
	Сч=0;
	Для каждого Письмо Из Письма Цикл
		
		ОбработкаПрерыванияПользователя();
		
		Если Письмо.Пометка Тогда
			
			Сч = Сч + 1;
			Индикатор.ПредставлениеПроцесса = "Подготовка к печати "+Сч+" из "+Всего+"...";
			мРазноеКлиент.ОбработатьИндикатор(Индикатор, Сч);
			
			ПутьКФайлуНаДиске = Письмо.ТекущаяВерсияТом + Письмо.ТекущаяВерсияПутьКФайлу;
			Если Сч = 1 Тогда
				Док = WordApp.Documents.ADD(ПутьКФайлуНаДиске);
				Контекст = Док.Content;
				Контекст.InsertParagraphAfter();
			Иначе
				Док.Range(Контекст.End - 1, Контекст.End).InsertFile(ПутьКФайлуНаДиске, "", Ложь, Ложь);
				Контекст.InsertParagraphAfter();
			КонецЕсли;
			
			Если Сч < Всего Тогда
				// Вставка разрыва страницы
				ПозицияОкончанияДокумента = Док.Range().End;
				Док.Range(ПозицияОкончанияДокумента-1, ПозицияОкончанияДокумента-1).InsertBreak();
			КонецЕсли; 
		КонецЕсли; 	
    КонецЦикла; 
    
	ПутьКФайлуНаДиске1 = ПолучитьИмяВременногоФайла("docx");
	
	Док.SaveAs(ПутьКФайлуНаДиске1);                        
	Док.Saved = Истина;
	Док.Close(); 
	WordApp.Quit();	
	WordApp = Неопределено;
	
	ЗапуститьПриложение(ПутьКФайлуНаДиске1,, , ); 
КонецПроцедуры



