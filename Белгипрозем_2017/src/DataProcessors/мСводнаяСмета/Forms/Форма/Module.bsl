#Область ОбработчикиСобытийФормы



#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаСервере
Процедура ШаблонСметыПриИзмененииНаСервере()
	Стадии = РеквизитФормыВЗначение("СтадииРабот", Тип("ТаблицаЗначений"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА мШаблоныСметСтадииРабот.Использовать
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Использовать,
		|	мШаблоныСметСтадииРабот.СтадияРабот,
		|	мШаблоныСметСтадииРабот.Процент,
		|	мШаблоныСметСтадииРабот.ПараметрОбъекта КАК Параметр,
		|	мШаблоныСметСтадииРабот.СтадияРабот.Приоритет КАК Приоритет,
		|	мШаблоныСметСтадииРабот.ПараметрОбъекта.ЕдиницаИзмерения КАК ЕдИзм
		|ИЗ
		|	Справочник.мШаблоныСмет.СтадииРабот КАК мШаблоныСметСтадииРабот
		|ГДЕ
		|	мШаблоныСметСтадииРабот.Ссылка = &ШаблонСметы
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет";
	
	Запрос.УстановитьПараметр("ШаблонСметы", ШаблонСметы);
	
	Стадии = Запрос.Выполнить().Выгрузить();
	
	ЗначениеВРеквизитФормы(Стадии, "СтадииРабот");
	
	ЗаполнитьСтадииДляРасчета();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтадииДляРасчета()
	СтадииДляРасчета.Очистить();
	
	Ст1 = ПланыВидовХарактеристик.ПараметрыОбъектов.ГрафИзмененияЕГРНИ;
	Ст2 = ПланыВидовХарактеристик.ПараметрыОбъектов.ГрафИзмененияПоКоординатамДо30;
	Ст3 = ПланыВидовХарактеристик.ПараметрыОбъектов.ГрафИзмененияПоКоординатамСвыше30;
	Ст4 = ПланыВидовХарактеристик.ПараметрыОбъектов.ГрафИзмененияПоПланКартМатериалу;
	Ст5 = ПланыВидовХарактеристик.ПараметрыОбъектов.ВнесениеАтрибутивныхИзменений;
	
	Для каждого Стр Из СтадииРабот Цикл
		Если Стр.Параметр = Ст1 ИЛИ
			Стр.Параметр = Ст2 ИЛИ
			Стр.Параметр = Ст3 ИЛИ
			Стр.Параметр = Ст4 	Тогда
			СтадииДляРасчета.Добавить(Стр.СтадияРабот);		
		ИначеЕсли Стр.Параметр = Ст5 Тогда
			ВнесениеАтрибутивныхИзменений = Стр.СтадияРабот;
		КонецЕсли; 	
	КонецЦикла; 
КонецПроцедуры
  

&НаКлиенте
Процедура ШаблонСметыПриИзменении(Элемент)
	ШаблонСметыПриИзмененииНаСервере();
	
	ЗаполнитьОбъемы();
	
КонецПроцедуры

&НаСервере
Процедура ЭтапДоговораПриИзмененииНаСервере()
	Объекты = РеквизитФормыВЗначение("ОбъектыРабот", Тип("ТаблицаЗначений"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	мЭтапыДоговоровОбъектыРабот.ОбъектРабот КАК ОбъектРабот,
		|	мЭтапыДоговоровОбъектыРабот.Смета КАК Смета,
		|	ИСТИНА КАК Использовать,
		|	мЭтапыДоговоровОбъектыРабот.ОбъектРабот.Масштаб КАК Масштаб,
		|	мЭтапыДоговоровОбъектыРабот.Ссылка.ДатаРегистрации КАК ДатаРегистрации,
		|	мЭтапыДоговоровОбъектыРабот.Ссылка.СтавкаНДС КАК СтавкаНДС
		|ИЗ
		|	Справочник.мЭтапыДоговоров.ОбъектыРабот КАК мЭтапыДоговоровОбъектыРабот
		|ГДЕ
		|	мЭтапыДоговоровОбъектыРабот.Ссылка = &ЭтапДоговора";
	
	Запрос.УстановитьПараметр("ЭтапДоговора", ЭтапДоговора);
	
	Объекты = Запрос.Выполнить().Выгрузить();
	Если Объекты.Количество() > 0 Тогда
		ДатаРегистрации = Объекты[0].ДатаРегистрации;
		СтавкаНДС = Объекты[0].СтавкаНДС;
	Иначе
		ДатаРегистрации = ЭтапДоговора.ДатаРегистрации;
		СтавкаНДС = ЭтапДоговора.СтавкаНДС;
	КонецЕсли; 
	
	// Заполнить СписокОбъектов
	МассивОбъектов = Объекты.ВыгрузитьКолонку("ОбъектРабот");
	СписокОбъектов.ЗагрузитьЗначения(МассивОбъектов);
	
	// Заполнить Свод
	Свод.Очистить();
	Для каждого Стр Из Объекты Цикл
	    СтрСвод = Свод.Добавить();
		СтрСвод.ОбъектРабот = Стр.ОбъектРабот;
		СтрСвод.Использовать = Истина;
	КонецЦикла; 
	
	ЗначениеВРеквизитФормы(Объекты, "ОбъектыРабот");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапДоговораПриИзменении(Элемент)
	ЭтапДоговораПриИзмененииНаСервере();
	
	ЗаполнитьОбъемы();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОбъемы()
	ПолучитьЦены();	
	
	Объемы.Очистить();
	
	Для каждого СтрСтадии Из СтадииРабот Цикл
		Для каждого СтрОбъекта Из ОбъектыРабот Цикл
			
			// Получить цену
			Цена = 0;
			Отбор = Новый Структура("Параметр, Масштаб", СтрСтадии.Параметр, СтрОбъекта.Масштаб); 	
			ИскСтроки = Цены.НайтиСтроки(Отбор);
			Если ИскСтроки.Количество() = 0 Тогда
				// Поиск без масштаба
				Отбор = Новый Структура("Параметр", СтрСтадии.Параметр); 	
				ИскСтроки = Цены.НайтиСтроки(Отбор);
				Если ИскСтроки.Количество() = 0 Тогда
					// Цены нет
					Сообщить("Нет цены для " + СтрСтадии.Параметр);
				Иначе
					// есть цена по параметру
					Цена = ИскСтроки[0].Цена;
				КонецЕсли; 
			Иначе
				// есть цена по масштабу
				Цена = ИскСтроки[0].Цена;
			КонецЕсли;
			
			Стр = Объемы.Добавить();
			Стр.СтадияРабот = СтрСтадии.СтадияРабот;
			Стр.ЕдИзм = СтрСтадии.ЕдИзм;
			Стр.ОбъектРабот = СтрОбъекта.ОбъектРабот;
			Стр.Цена = Цена;
			Стр.Использовать = СтрСтадии.Использовать И СтрОбъекта.Использовать;
		КонецЦикла; 
	КонецЦикла; 
	
	ОбъектРабот = СписокОбъектов.Получить(0).Значение;
	ДоступностьКнопокНавигации();
	ПоказатьОбъемыПоОбъекту();
КонецПроцедуры

&НаСервере
Процедура ПолучитьЦены()
	Стадии = РеквизитФормыВЗначение("СтадииРабот", Тип("ТаблицаЗначений"));
	МассивПараметров = Стадии.ВыгрузитьКолонку("Параметр");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	мЦеныДляСметСрезПоследних.ПараметрОбъекта КАК Параметр,
		|	мЦеныДляСметСрезПоследних.Масштаб,
		|	мЦеныДляСметСрезПоследних.Цена
		|ИЗ
		|	РегистрСведений.мЦеныДляСмет.СрезПоследних(&ДатаСреза, ПараметрОбъекта В (&МассивПараметров)) КАК мЦеныДляСметСрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаСреза", ЭтапДоговора.ДатаРегистрации);
	Запрос.УстановитьПараметр("МассивПараметров", МассивПараметров);
	
	Тарифы = РеквизитФормыВЗначение("Цены", Тип("ТаблицаЗначений"));
	
	Тарифы = Запрос.Выполнить().Выгрузить();
	
	ЗначениеВРеквизитФормы(Тарифы, "Цены");
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОбъемыПоОбъекту()
	Отбор = Новый ФиксированнаяСтруктура("ОбъектРабот", ОбъектРабот);
	Элементы.Объемы.ОтборСтрок = Отбор;
КонецПроцедуры
 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Объемы
&НаКлиенте
Процедура СтадииРаботИспользоватьПриИзменении(Элемент)
	ТекДанные = Элементы.СтадииРабот.ТекущиеДанные;
	
	// Не даем установить неопределено
	Если ТекДанные.Использовать = 2 Тогда
		ТекДанные.Использовать = 0;
	КонецЕсли; 
	
	// Изменить флажки в Объемах
	ВыбСтадия = ТекДанные.СтадияРабот;
	Отбор = Новый Структура("СтадияРабот", ВыбСтадия);
	ИскСтроки = Объемы.НайтиСтроки(Отбор);
	Для каждого Стр Из ИскСтроки Цикл
		Использовать = ?(ТекДанные.Использовать=0, Ложь, Истина);
		Если Стр.Использовать <> Использовать Тогда
			Стр.Использовать = Использовать;
			
			// Пересчет итогов
			Если Стр.Стоимость <> 0 Тогда
				РассчитатьИтогиПоОбъекту(Стр.ОбъектРабот);	
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Объемы
&НаКлиенте
Процедура ОбъемыОбъемПриИзменении(Элемент)
	ТекДанные = Элементы.Объемы.ТекущиеДанные;
	ТекДанные.Стоимость = Окр(ТекДанные.Цена * ТекДанные.Объем, 2);
	
	// Проверить на участие в расчете 
	ВСписке = СтадииДляРасчета.НайтиПоЗначению(ТекДанные.СтадияРабот);
	Если ВСписке <> Неопределено Тогда
		ОбъемДляРасчета = 0;
		Отбор = Новый Структура("ОбъектРабот", ОбъектРабот);
		ИскСтроки = Объемы.НайтиСтроки(Отбор);
		Для каждого Стр Из ИскСтроки Цикл
			Если Стр.Использовать Тогда
				ВСписке = СтадииДляРасчета.НайтиПоЗначению(Стр.СтадияРабот);
				Если ВСписке = Неопределено Тогда
					Продолжить;
				КонецЕсли; 		

				ОбъемДляРасчета = ОбъемДляРасчета + Стр.Объем;	
			КонецЕсли; 		
		КонецЦикла;
		
		РезультатРасчета = Окр(ОбъемДляРасчета / 100 * 3, 2);
		
		// Запись результата и пересчет стоимости
		Для каждого Стр Из ИскСтроки Цикл
			Если Стр.Использовать Тогда
				Если Стр.СтадияРабот = ВнесениеАтрибутивныхИзменений Тогда
					Стр.Объем = РезультатРасчета;
					Стр.Стоимость = Окр(Стр.Цена * Стр.Объем, 2);
				КонецЕсли; 		
			КонецЕсли; 		
		КонецЦикла;
	КонецЕсли; 
	
	РассчитатьИтогиПоОбъекту(ТекДанные.ОбъектРабот);
КонецПроцедуры
 
&НаКлиенте
Процедура РассчитатьИтогиПоОбъекту(ВыбОбъект)
	// Итоги считаются по объекту
	// Суммы по объектам попадают в общие итоги
	ИтогоСтоимостьПоОбъекту = 0;
	Отбор = Новый Структура("ОбъектРабот", ОбъектРабот);
	ИскСтроки = Объемы.НайтиСтроки(Отбор);
	Для каждого Стр Из ИскСтроки Цикл
		Если Стр.Использовать Тогда
			ИтогоСтоимостьПоОбъекту = ИтогоСтоимостьПоОбъекту + Стр.Стоимость;	
		КонецЕсли; 		
	КонецЦикла; 
	
	ПроцентНДС = ЗначениеСтавкиНДС(СтавкаНДС);
	ИтогоНДСПоОбъекту = Окр(ИтогоСтоимостьПоОбъекту * ПроцентНДС/100, 2);
	ИтогоСтоимостьСНДСПоОбъекту = ИтогоСтоимостьПоОбъекту + ИтогоНДСПоОбъекту;
	
	// Запись итогов по объекту
	Отбор = Новый Структура("ОбъектРабот", ОбъектРабот);
	ИскСтроки = Свод.НайтиСтроки(Отбор);
	Если ИскСтроки.Количество() > 0 Тогда
		ИскСтроки[0].Стоимость = ИтогоСтоимостьПоОбъекту;
		ИскСтроки[0].НДС = ИтогоНДСПоОбъекту;
		ИскСтроки[0].СтоимостьСНДС = ИтогоСтоимостьСНДСПоОбъекту;
	КонецЕсли;
	
	РассчитатьИтоги();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьИтоги()
	ИтогоСтоимость = 0;
	ИтогоНДС = 0;
	ИтогоСтоимостьСНДС = 0;
	Для каждого Стр Из Свод Цикл
		Если Стр.Использовать Тогда
			ИтогоСтоимость = ИтогоСтоимость + Стр.Стоимость;	
			ИтогоНДС = ИтогоНДС + Стр.НДС;	
			ИтогоСтоимостьСНДС = ИтогоСтоимостьСНДС + Стр.СтоимостьСНДС;	
		КонецЕсли; 		
	КонецЦикла; 	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначениеСтавкиНДС(СтавкаНДС)
	Возврат СтавкаНДС.Ставка;	
КонецФункции

&НаКлиенте
Процедура ОбъемыИспользоватьПриИзменении(Элемент)
	ТекДанные = Элементы.Объемы.ТекущиеДанные;
	
	// Пересчет итогов
	Если ТекДанные.Стоимость <> 0 Тогда
		РассчитатьИтогиПоОбъекту(ТекДанные.ОбъектРабот);	
	КонецЕсли;
	
	// Изменить флажок в Стадиях
	ВыбСтадия = ТекДанные.СтадияРабот;
	Отбор = Новый Структура("СтадияРабот", ВыбСтадия);
	ИскСтроки = Объемы.НайтиСтроки(Отбор);
	ЕстьЛожь = Ложь;
	ЕстьИстина = Ложь;
	Для каждого Стр Из ИскСтроки Цикл
		ЕстьЛожь = ?(Стр.Использовать, ЕстьЛожь, Истина); 
		ЕстьИстина = ?(Стр.Использовать, Истина, ЕстьИстина); 
	КонецЦикла; 
	
	Если ЕстьЛожь и ЕстьИстина Тогда
		// 3-е состояние
		Состояние = 2;
	ИначеЕсли ЕстьЛожь и НЕ ЕстьИстина Тогда
		// 0
		Состояние = 0;
	Иначе	
		// 1
		Состояние = 1;
	КонецЕсли;
	ИскСтроки = СтадииРабот.НайтиСтроки(Отбор);
	Если ИскСтроки.Количество() > 0 Тогда
		ИскСтроки[0].Использовать = Состояние;
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура СледующийОбъект(Команда)
	ВыбЭлемент = СписокОбъектов.НайтиПоЗначению(ОбъектРабот);
	Индекс = СписокОбъектов.Индекс(ВыбЭлемент);
	Индекс = Индекс + 1;
	ВыбЭлемент = СписокОбъектов.Получить(Индекс);
	ОбъектРабот = ВыбЭлемент.Значение;
	ДоступностьКнопокНавигации();
	ПоказатьОбъемыПоОбъекту();
	РассчитатьИтогиПоОбъекту(ОбъектРабот);
КонецПроцедуры

&НаКлиенте
Процедура ПредыдущийОбъект(Команда)
	ВыбЭлемент = СписокОбъектов.НайтиПоЗначению(ОбъектРабот);
	Индекс = СписокОбъектов.Индекс(ВыбЭлемент);
	Индекс = Индекс - 1;
	ВыбЭлемент = СписокОбъектов.Получить(Индекс);
	ОбъектРабот = ВыбЭлемент.Значение;
	ДоступностьКнопокНавигации();
	ПоказатьОбъемыПоОбъекту();
	РассчитатьИтогиПоОбъекту(ОбъектРабот);
КонецПроцедуры

&НаКлиенте
Процедура ДоступностьКнопокНавигации()
	ВыбЭлемент = СписокОбъектов.НайтиПоЗначению(ОбъектРабот);
	Индекс = СписокОбъектов.Индекс(ВыбЭлемент);
	
	Элементы.ПредыдущийОбъект.Доступность = Истина;
	Элементы.СледующийОбъект.Доступность = Истина;
	
	Если Индекс = 0 Тогда
		Элементы.ПредыдущийОбъект.Доступность = Ложь;
	ИначеЕсли Индекс = СписокОбъектов.Количество() - 1 Тогда
		Элементы.СледующийОбъект.Доступность = Ложь;
	КонецЕсли; 
			
КонецПроцедуры

&НаКлиенте
Процедура ОбъектРаботНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ВыбЭлемент = СписокОбъектов.НайтиПоЗначению(ОбъектРабот);

	ВыбЭлемент = СписокОбъектов.ВыбратьЭлемент("Выберите объект", ВыбЭлемент);
	
	Если ВыбЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если ВыбЭлемент = Неопределено Тогда 
		Сообщить("Не выбран объект работ.");
	Иначе
		ОбъектРабот = ВыбЭлемент.Значение;
		ПоказатьОбъемыПоОбъекту();
		РассчитатьИтогиПоОбъекту(ОбъектРабот);
	КонецЕсли;	
	
	ДоступностьКнопокНавигации();
	
КонецПроцедуры





#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти
