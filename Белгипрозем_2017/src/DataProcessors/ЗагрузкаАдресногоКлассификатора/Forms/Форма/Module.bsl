
&НаКлиенте
Процедура ФайлСОАТОНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = ФайлСОАТО;
	Фильтр = "(*.xls)|*.xls";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		
		ФайлСОАТО = ДиалогОткрытияФайла.ПолноеИмяФайла;
		
	Иначе
		Текст = "ru = ""Файл не выбран!""";
		Предупреждение(НСтр(Текст));
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура КаталогФайловНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = "Выберите каталог";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		КаталогФайлов = ДиалогОткрытияФайла.Каталог;
	Иначе
		Текст = "ru = ""Каталог не выбран!""; en = ""File(s) not selected!""";
		Предупреждение(НСтр(Текст));
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСОАТОНаСервере(лФайл)
    ВременныйФайл = ПолучитьИмяВременногоФайла("xls");
    лДвоичДанные = ПолучитьИзВременногоХранилища(лФайл);
    лДвоичДанные.Записать(ВременныйФайл);
    
    Соединение = ПодключитьсяКЕксел(ВременныйФайл);
    Если Соединение = Неопределено Тогда
        Возврат;
	КонецЕсли;
	
	Лист = Соединение["Листы"][0];
    ВсегоКолонок = Лист.Cells(1,1).SpecialCells(11).Column;
    ВсегоСтрок = Лист.Cells(1,1).SpecialCells(11).Row;

    Область = Лист.Range(Лист.Cells(1,1), Лист.Cells(ВсегоСтрок,ВсегоКолонок));
    Данные = Область.Value.Выгрузить();
	
	АдресныеСведения = Новый ТаблицаЗначений;
	АдресныеСведения.Колонки.Добавить("Код");
	АдресныеСведения.Колонки.Добавить("КодАдресногоОбъектаВКоде");
	АдресныеСведения.Колонки.Добавить("Наименование");
	АдресныеСведения.Колонки.Добавить("АльтернативныеНазвания");
	АдресныеСведения.Колонки.Добавить("Сокращение");
	АдресныеСведения.Колонки.Добавить("Индекс");
	АдресныеСведения.Колонки.Добавить("ТипАдресногоЭлемента");
	АдресныеСведения.Колонки.Добавить("КодРайонаВКоде");
	АдресныеСведения.Колонки.Добавить("КодГородаВКоде");
	АдресныеСведения.Колонки.Добавить("КодНаселенногоПунктаВКоде");
	АдресныеСведения.Колонки.Добавить("КодУлицыВКоде");
	АдресныеСведения.Колонки.Добавить("ПризнакАктуальности");
	АдресныеСведения.Колонки.Добавить("СОАТО");
	
	ИндексПоКоду = АдресныеСведения.Индексы.Добавить("Код");
	
	Для й = 1 По ВсегоСтрок-1 Цикл
	
		СОАТО = Данные[0][й];
	    Категория = Данные[1][й];
		Название = Данные[2][й];
		
		Если Не ЗначениеЗаполнено(Категория) Тогда
			Продолжить;
		КонецЕсли; 
		Если Лев(СОАТО, 1) = "9" Тогда
			Продолжить;
		КонецЕсли; 
		
        Код = СОАТО + "0000000000";
		Если Категория = "обл." Тогда
            // Создаем область
			НоваяСтрока = АдресныеСведения.Добавить();
			НоваяСтрока.Код = Число(Лев(Код, 1)+"0000000000000000000");
			
			НоваяСтрока.ТипАдресногоЭлемента      = 1;
			НоваяСтрока.КодАдресногоОбъектаВКоде  = Число(Сред(Код, 1, 1));
			НоваяСтрока.КодРайонаВКоде            = 0;
			НоваяСтрока.КодГородаВКоде            = 0; // Сельсовет
			НоваяСтрока.КодНаселенногоПунктаВКоде = 0;
			НоваяСтрока.КодУлицыВКоде             = 0;
			НоваяСтрока.ПризнакАктуальности       = 0;
			НоваяСтрока.Наименование = Название;
			НоваяСтрока.Сокращение   = Категория;
			НоваяСтрока.СОАТО = СОАТО;
			
		ИначеЕсли Категория = "р-н" Тогда
            // Создаем район
			Если Сред(Код, 2, 1)= "2" Тогда 
				// Есть район
            	ПолныйКодРайона = Сред(Код, 1, 4) + "0000000000000000";
			Иначе
				// Это район города - для адрессного классификатора не нужен
				Продолжить;
			//ИначеЕсли Сред(Код, 5, 1)= "3" Тогда
			//	ПолныйКодРайона = Сред(Код, 1, 7) + "0000000000000";
			КонецЕсли; 
			
			//ПолныйКодРайона = Сред(Код, 1, 4) + "0000000000000000";
			НоваяСтрока = АдресныеСведения.Добавить();
			НоваяСтрока.Код = Число(ПолныйКодРайона);
			
			НоваяСтрока.ТипАдресногоЭлемента      = 2;
			НоваяСтрока.КодАдресногоОбъектаВКоде  = Число(Сред(Код, 1, 1));
			НоваяСтрока.КодРайонаВКоде            = Число(Сред(Код, 2, 3));
			НоваяСтрока.КодГородаВКоде            = 0; // Сельсовет
			НоваяСтрока.КодНаселенногоПунктаВКоде = 0;
			НоваяСтрока.КодУлицыВКоде             = 0;
			НоваяСтрока.ПризнакАктуальности       = 0;
			
			НоваяСтрока.Наименование = Название;
			НоваяСтрока.Сокращение   = Категория;
			НоваяСтрока.СОАТО = СОАТО;
			
		ИначеЕсли Категория = "с/с" Тогда
            // Создаем Сельсовет
            ПолныйКодСельсовета = Сред(Код, 1, 7) + "0000000000000";
			НоваяСтрока = АдресныеСведения.Добавить();
			НоваяСтрока.Код = Число(ПолныйКодСельсовета);
			
			НоваяСтрока.ТипАдресногоЭлемента      = 3;
			НоваяСтрока.КодАдресногоОбъектаВКоде  = Число(Сред(Код, 1, 1));
			НоваяСтрока.КодРайонаВКоде            = Число(Сред(Код, 2, 3));
            НоваяСтрока.КодГородаВКоде            = Число(Сред(Код, 5, 3)); // Сельсовет берем с видом
			НоваяСтрока.КодНаселенногоПунктаВКоде = 0;
			НоваяСтрока.КодУлицыВКоде             = 0;
			НоваяСтрока.ПризнакАктуальности       = 0;
			НоваяСтрока.СОАТО = СОАТО;
			
			НоваяСтрока.Наименование = Название;
			Если Сред(Код, 5, 1)= "8" Тогда
				// Запись сокращения только для сельсоветов. Поселковые советы сокращения не имеют. Код = "7".
				НоваяСтрока.Сокращение   = Категория;
			КонецЕсли;
		Иначе
            // Создаем населенный пункт
                // Собираем полный код
            ПолныйКодНаселенногоПункта = Сред(Код, 1, 1); // Область
			
			Если Сред(Код, 2, 1)= "2" Тогда 
				// Есть район
				ПолныйКодНаселенногоПункта = ПолныйКодНаселенногоПункта + Сред(Код, 2, 3);
				ЕстьРайон = Истина;
			//ИначеЕсли Сред(Код, 5, 1)= "3" Тогда 
			//	// Есть район
			//	ПолныйКодНаселенногоПункта = ПолныйКодНаселенногоПункта + Сред(Код, 2, 3);
			//	ЕстьРайон = Истина;
			Иначе
				ПолныйКодНаселенногоПункта = ПолныйКодНаселенногоПункта + "000";
				ЕстьРайон = Ложь;
			КонецЕсли; 
			
			Если Сред(Код, 5, 1)= "7" или Сред(Код, 5, 1)= "8" Тогда 
				// Есть Сельсовет
				ПолныйКодНаселенногоПункта = ПолныйКодНаселенногоПункта + Сред(Код, 5, 3);
				ЕстьСельсовет = Истина;
			Иначе
				ПолныйКодНаселенногоПункта = ПолныйКодНаселенногоПункта + "000";
				ЕстьСельсовет = Ложь;
			КонецЕсли; 
			
			Если Сред(Код, 2, 1)= "4" Тогда
				Если Сред(Код, 5, 1)= "5" Тогда
					// Населенный Пункт в 6-7 разрядах, и город к которому он относится в 3-4
					КодНаселенногоПунктаВКоде = Число(Сред(Код, 6, 2));       
				ИначеЕсли Сред(Код, 5, 1)= "6" Тогда
					// Населенный Пункт в 6-7 разрядах, и город к которому он относится в 3-4
					КодНаселенногоПунктаВКоде = Число(Сред(Код, 6, 2));       
				Иначе
					// Населенный Пункт в 3-4 разрядах
					КодНаселенногоПунктаВКоде = Число(Сред(Код, 3, 2));       
					//НадоУчестьРайон = Ложь;
				КонецЕсли;
			ИначеЕсли Сред(Код, 5, 1)= "5" Тогда
				// Населенный Пункт в 6-7 разрядах
				КодНаселенногоПунктаВКоде = Число(Сред(Код, 6, 2));       
			Иначе
				Если Сред(Код, 1, 1)="5" Тогда
					// Это Минск
					КодНаселенногоПунктаВКоде = 1;
					ЕстьРайон = Ложь;
				Иначе	
					// Населенный Пункт в 8-10 разрядах
					КодНаселенногоПунктаВКоде = Число(Сред(Код, 8, 3));       
				КонецЕсли; 
			КонецЕсли; 
			
			Если ЕстьРайон Тогда
				// райцентр
				КодНаселенногоПунктаВКоде = Число(Сред(Код, 2, 3))+КодНаселенногоПунктаВКоде;
			КонецЕсли; 

			ЛидирующиеНули = "";
			Если КодНаселенногоПунктаВКоде < 10 Тогда
				ЛидирующиеНули = "00";
			ИначеЕсли КодНаселенногоПунктаВКоде < 100 Тогда
				ЛидирующиеНули = "0";	
			КонецЕсли; 
			ПолныйКодНаселенногоПункта = ПолныйКодНаселенногоПункта + ЛидирующиеНули + КодНаселенногоПунктаВКоде;
			ПолныйКодНаселенногоПункта = ПолныйКодНаселенногоПункта + "0000000000";
			
			НоваяСтрока = АдресныеСведения.Добавить();
			
			НоваяСтрока.ТипАдресногоЭлемента      = 4;
			НоваяСтрока.КодАдресногоОбъектаВКоде  = Число(Сред(Код, 1, 1));
			НоваяСтрока.КодРайонаВКоде            = ?(ЕстьРайон, Число(Сред(Код, 2, 3)), 0);
			НоваяСтрока.КодГородаВКоде            = ?(ЕстьСельсовет, Число(Сред(Код, 5, 3)), 0); // Сельсовет берем с видом
			
			НоваяСтрока.КодНаселенногоПунктаВКоде = КодНаселенногоПунктаВКоде;
			
			НоваяСтрока.Код = Число(ПолныйКодНаселенногоПункта);
			
			НоваяСтрока.КодУлицыВКоде             = 0;
			НоваяСтрока.ПризнакАктуальности       = 0;
			
			// СОАТО запоминаем только для Населенных пунктов, что бы потом их можно было найти для загрузки улиц
			НоваяСтрока.СОАТО = СОАТО;
			
			НоваяСтрока.Наименование = Название;
			
			ТипНаселенногоПункта = Категория;
			//Если Прав(ТипНаселенногоПункта,1) <> "." Тогда
			//	Если ТипНаселенногоПункта <> "кп" Тогда
			//		ТипНаселенногоПункта = ТипНаселенногоПункта + ".";
			//	КонецЕсли;
			//КонецЕсли;
			НоваяСтрока.Сокращение   = ТипНаселенногоПункта;
		КонецЕсли; 
	КонецЦикла; 
	
	АдресАдресныеСведения = ПоместитьВоВременноеХранилище(АдресныеСведения, Новый УникальныйИдентификатор);
	
	//НаборАдресныхСведений = РегистрыСведений.АдресныйКлассификатор.СоздатьНаборЗаписей();
	//НаборАдресныхСведений.Загрузить(АдресныеСведения);
	//НаборАдресныхСведений.Записать();
	
    ОтключитьсяОтЕксел(Соединение);    
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьУлицыНаСервере(лФайл, ТипыЭлементовУлиц)
    ВременныйФайл = ПолучитьИмяВременногоФайла("xlsx");
    лДвоичДанные = ПолучитьИзВременногоХранилища(лФайл);
    лДвоичДанные.Записать(ВременныйФайл);
	
 	АдресныеСведения = ПолучитьИзВременногоХранилища(АдресАдресныеСведения);
   
    Соединение = ПодключитьсяКЕксел(ВременныйФайл);
    Если Соединение = Неопределено Тогда
        Возврат;
	КонецЕсли;
	
	Лист = Соединение["Листы"][0];
    ВсегоКолонок = Лист.Cells(1,1).SpecialCells(11).Column;
    ВсегоСтрок = Лист.Cells(1,1).SpecialCells(11).Row;

    Область = Лист.Range(Лист.Cells(1,1), Лист.Cells(ВсегоСтрок,ВсегоКолонок));
    Данные = Область.Value.Выгрузить();
	
	Для й = 1 По ВсегоСтрок-1 Цикл
	
		СОАТО = Формат(Данные[0][й], "ЧГ=0");
		Если СтрДлина(СОАТО) < 10 Тогда
			Продолжить;
		КонецЕсли; 
		//Если Лев(СОАТО, 1) = "5" Тогда
		//	ДатаАннулирования = Данные[9][й];
		//	Если ЗначениеЗаполнено(ДатаАннулирования) Тогда
		//		Продолжить;
		//	КонецЕсли; 
		//	
		//	КодТипа = Данные[3][й];
		//	Ид = Данные[5][й];
		//	Название = Данные[6][й];
		//Иначе
			ДатаАннулирования = Данные[12][й];
			Если ЗначениеЗаполнено(ДатаАннулирования) Тогда
				Продолжить;
			КонецЕсли; 
			
			КодТипа = Данные[6][й];
			Ид = Данные[8][й];
			Название = Данные[9][й];
		//КонецЕсли; 
		
		Код = Число(СОАТО)*10000000000 + Число(Ид)*100000;
		
		СтрокаНаселенногоПункта = АдресныеСведения.Найти(СОАТО, "СОАТО");
		
		Если СтрокаНаселенногоПункта<>Неопределено Тогда
			НоваяСтрока = АдресныеСведения.Добавить();
			НоваяСтрока.Код = СтрокаНаселенногоПункта.Код + Число(Ид)*100000;
			
			НоваяСтрока.ТипАдресногоЭлемента      = 5;
			НоваяСтрока.КодАдресногоОбъектаВКоде  = СтрокаНаселенногоПункта.КодАдресногоОбъектаВКоде;
			НоваяСтрока.КодРайонаВКоде            = СтрокаНаселенногоПункта.КодРайонаВКоде;
			НоваяСтрока.КодГородаВКоде            = СтрокаНаселенногоПункта.КодГородаВКоде; // Сельсовет
			НоваяСтрока.КодНаселенногоПунктаВКоде = СтрокаНаселенногоПункта.КодНаселенногоПунктаВКоде;
			НоваяСтрока.КодУлицыВКоде             = Число(Ид);
			НоваяСтрока.ПризнакАктуальности       = 0;
			
			НоваяСтрока.Наименование = СокрЛП(Название);
			НоваяСтрока.Сокращение   = ТипыЭлементовУлиц.Получить(КодТипа);
				
		КонецЕсли;
	КонецЦикла; 
	АдресАдресныеСведения = ПоместитьВоВременноеХранилище(АдресныеСведения, Новый УникальныйИдентификатор);
	
	
    ОтключитьсяОтЕксел(Соединение);    
КонецПроцедуры

&НаСервере
Процедура ЗаписатьКлассификатор()
 	АдресныеСведения = ПолучитьИзВременногоХранилища(АдресАдресныеСведения);
	
	НаборАдресныхСведений = РегистрыСведений.АдресныйКлассификатор.СоздатьНаборЗаписей();
	НаборАдресныхСведений.Загрузить(АдресныеСведения);
	НаборАдресныхСведений.Записать();
КонецПроцедуры
 

&НаКлиенте
Процедура ЗагрузитьСОАТО(Команда)
	Если Не ЗначениеЗаполнено(ФайлСОАТО) Тогда
		Сообщить("Укажите файл СОАТО!");
		Возврат;
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(ФайлУлиц) Тогда
		Сообщить("Укажите файл улиц!");
		Возврат;
	КонецЕсли; 	
	
    лДвоичДанные = Новый ДвоичныеДанные(ФайлСОАТО);
    лФайл = ПоместитьВоВременноеХранилище(лДвоичДанные);    
	ЗагрузитьСОАТОНаСервере(лФайл);
	
	ПоказатьОповещениеПользователя("Файл СОАТО загружен!",,,);
	
	ТипыЭлементовУлиц = ПолучитьТипыЭлементовУлиц();
	// Читаем файл улиц
	
	ПоказатьОповещениеПользователя("Чтение "+ФайлУлиц+"...");
	лДвоичДанные = Новый ДвоичныеДанные(ФайлУлиц);
	лФайл = ПоместитьВоВременноеХранилище(лДвоичДанные);    
	ЗагрузитьУлицыНаСервере(лФайл, ТипыЭлементовУлиц);
	ПоказатьОповещениеПользователя("Файл "+ФайлУлиц+" загружен!",,,);
	
	//ФайлыУлиц = НайтиФайлы(КаталогФайлов, "*.xlsx");
	//Для каждого ТекФайл Из ФайлыУлиц Цикл
	//	ПоказатьОповещениеПользователя("Чтение "+ТекФайл.Имя+"...");
	//	лДвоичДанные = Новый ДвоичныеДанные(ТекФайл.ПолноеИмя);
	//	лФайл = ПоместитьВоВременноеХранилище(лДвоичДанные);    
	//	ЗагрузитьУлицыНаСервере(лФайл, ТипыЭлементовУлиц);
	//	ПоказатьОповещениеПользователя("Файл "+ТекФайл.Имя+" загружен!",,,);
	//КонецЦикла;
	
	ЗаписатьКлассификатор();
	ПоказатьОповещениеПользователя("Классификатор загружен!",,,);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТипыЭлементовУлиц()
	ТипыЭлементовУлиц = Новый Соответствие;
	Макет = РегистрыСведений.АдресныйКлассификатор.ПолучитьМакет("ТипыЭлементовУличноДорожнойСети");	
	Для й=2 По Макет.ВысотаТаблицы Цикл
		ТипыЭлементовУлиц.Вставить(Число(Макет.Область("R"+й+"C4").Текст), Макет.Область("R"+й+"C2").Текст); 
	КонецЦикла; 
	Возврат ТипыЭлементовУлиц;
КонецФункции
 
&НаСервере
Процедура ОчиститьНаСервере()
	НаборАдресныхСведений = РегистрыСведений.АдресныйКлассификатор.СоздатьНаборЗаписей();
	НаборАдресныхСведений.Записать();
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	ОчиститьНаСервере();
КонецПроцедуры

&НаСервере
Функция ПодключитьсяКЕксел(ИмяФайла) 
//Поключимся к Excel через OLE, откроем файл и вернем список страниц
    //ИмяФайла = Полный путь к файлу Excel
    Соотв = Новый Соответствие;
    Попытка 
        Листы = Новый Массив;
        Excel = Новый COMОбъект("Excel.Application");
        Соотв.Вставить("Соединение",Excel);
        ExcelФайл = Excel.WorkBooks.Open (ИмяФайла);
        Соотв.Вставить("ExcelФайл",ExcelФайл);
        Для Сч = 1 По ExcelФайл.Sheets.Count Цикл
            Листы.Добавить(ExcelФайл.Sheets(Сч));
        КонецЦикла;
        Соотв.Вставить("Листы",Листы);
        лРезультат = Соотв;
    Исключение
        Сообщить("Ошибка создания обьекта Microsoft Excel" + ОписаниеОшибки());
        лРезультат = Неопределено;
    КонецПопытки;
    
    Возврат лРезультат;
КонецФункции

&НаСервере
Процедура ОтключитьсяОтЕксел(Соответствие)
    Попытка
        Соответствие["Соединение"].DisplayAlerts = 0;
        Соответствие["ExcelФайл"].Close();
        Соответствие["Соединение"].DisplayAlerts = 1;
        Соответствие["Соединение"].Quit(); 
        Соответствие["Соединение"] = Неопределено;        
    Исключение
        Сообщить("Не удалось отключиться от Excel - "+ОписаниеОшибки());
    КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ФайлУлицНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = ФайлСОАТО;
	Фильтр = "(*.xls)|*.xls|(*.xlsx)|*.xlsx";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		
		ФайлУлиц = ДиалогОткрытияФайла.ПолноеИмяФайла;
		
	Иначе
		Текст = "ru = ""Файл не выбран!""";
		Предупреждение(НСтр(Текст));
	КонецЕсли; 
КонецПроцедуры

//&НаСервере
//Процедура Загрузить2НаСервере(пФайл)
//    лФайл = ПолучитьИмяВременногоФайла("xlsx");
//    лДвоичДанные = ПолучитьИзВременногоХранилища(пФайл);
//    лДвоичДанные.Записать(лФайл);
//    
//    Соединение = ПоключитьсяКExcelСервер(Объект.ИмяФайла);
//    Если Соединение = Неопределено Тогда
//        Возврат;
//    КонецЕсли;
//    /// Обработка Excel
//    ОтключатьсяОтExcelСервер(Соединение);    
//КонецПроцедуры

//&НаКлиенте
//Процедура Загрузить2(Команда)
//    лДвоичДанные = Новый ДвоичныеДанные(Объект.ИмяФайла);
//    лФайл = ПоместитьВоВременноеХранилище(лДвоичДанные);    
//    Загрузить2НаСервере(лФайл);
//КонецПроцедуры

