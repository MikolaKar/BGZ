#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСписокДокументов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСписокДокументовДляОтправкиПоСВД" Тогда
		ЗаполнитьСписокДокументов();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы



#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДокументы

&НаКлиенте
Процедура ДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбраннаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле = Элементы.ДокументыОтправить Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если Поле = Элементы.ДокументыСостояние И Элементы.Документы.ТекущиеДанные.Состояние = 2 Тогда
		ОткрытьФорму("Справочник.ПравилаОтправкиСообщенийСВД.ФормаСписка");
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура("Ключ", Элементы.Документы.ТекущиеДанные.Ссылка);
	ОткрытьФорму("Справочник.ИсходящиеДокументы.ФормаОбъекта", ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПриАктивизацииСтроки(Элемент)
	
	Если Элементы.Документы.ТекущиеДанные = Неопределено Тогда
		Файлы.Очистить();
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ОбработчикДокументыПриАктивизацииСтроки", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыФайлы

&НаКлиенте
Процедура ФайлыОтправитьПриИзменении(Элемент)
	
	ФайлыОтправитьПриИзмененииНаСервере(
		Элементы.Файлы.ТекущиеДанные.Ссылка,
		Элементы.Документы.ТекущиеДанные.Ссылка,
		Элементы.Документы.ТекущиеДанные.Получатель,
		Элементы.Файлы.ТекущиеДанные.Отправить);
	
КонецПроцедуры

&НаСервере
Процедура ФайлыОтправитьПриИзмененииНаСервере(Файл, Документ, Получатель, Отправить)
	
	Запись = РегистрыСведений.ФайлыДокументовГотовыхКОтправкеПОСВД.СоздатьМенеджерЗаписи();
	Запись.Документ = Документ;
	Запись.Файл = Файл;
	Запись.Получатель = Получатель;
	
	Если Отправить Тогда
		Запись.Записать();
	Иначе
		Запись.Прочитать();
		Запись.Удалить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отправить(Команда)
	
	ТекстСообщения = НСтр("ru = 'Идет отправка документов по СВД...'");
	Состояние(ТекстСообщения);
	
	ДокументыНеВыбраны = Истина;
	ВозниклиОшибки = Ложь;
	
	КоличествоОтправленных = ОтправитьСервер(ДокументыНеВыбраны, ВозниклиОшибки);
	
	Если ДокументыНеВыбраны Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Отметьте хотя бы один документ.'"));
		Возврат;
	КонецЕсли;
	
	Если ВозниклиОшибки Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'При отправке некоторых документов возникли ошибки.
                                       |Их можно посмотреть в журнале регистрации.'"));
	КонецЕсли;
	
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Отправка документов по СВД завершена. Отправлено документов: %1.'"),
			КоличествоОтправленных);
	Состояние(ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокДокументов(Команда)
	
	ЗаполнитьСписокДокументов();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокДокументов()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсходящиеДокументы.Ссылка,
		|	ИсходящиеДокументы.Наименование КАК Наименование,
		|	ИсходящиеДокументы.ВидДокумента,
		|	ИсходящиеДокументы.ПодписанЭП,
		|	ИсходящиеДокументы.Организация КАК Отправитель,
		|	ИсходящиеДокументыПолучатели.Получатель КАК Получатель,
		|	ПОДСТРОКА(ИсходящиеДокументы.Содержание, 0, 1000) КАК Содержание
		|ИЗ
		|	Справочник.ИсходящиеДокументы.Получатели КАК ИсходящиеДокументыПолучатели
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсходящиеДокументы КАК ИсходящиеДокументы
		|		ПО (ИсходящиеДокументы.Ссылка = ИсходящиеДокументыПолучатели.Ссылка)
		|ГДЕ
		|	ИсходящиеДокументы.ГотовКОтправке = ИСТИНА
		|	И ИсходящиеДокументы.ПометкаУдаления = ЛОЖЬ
		|	И ИсходящиеДокументыПолучатели.СпособОтправки = ЗНАЧЕНИЕ(Справочник.СпособыДоставки.СВД)
		|	И ИсходящиеДокументыПолучатели.Отправлен = ЛОЖЬ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование";
	
	ТаблицаДокументов = РеквизитФормыВЗначение("Документы");
	ТаблицаДокументов.Очистить();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Состояние = СКорреспондентомНастроенОбменПоСВД(Выборка.Отправитель, Выборка.Получатель, Выборка.ВидДокумента);
			
		Если Не Состояние.НастроенОбменПоСВД Тогда
			НоваяСтрока.Состояние = 2;
			НоваяСтрока.СостояниеТекст = НСтр("ru = 'Не настроен обмен.'");
		ИначеЕсли Состояние.ТребуетсяПодписьЭП И Не Выборка.ПодписанЭП Тогда
			НоваяСтрока.Состояние = 1;
			НоваяСтрока.СостояниеТекст = НСтр("ru = 'Не подписан ЭП уполномеченного сотрудника.'")
		Иначе
			НоваяСтрока.Состояние = 0;
			НоваяСтрока.СостояниеТекст = НСтр("ru = 'Готов к отправке.'");
		КонецЕсли;
		
	КонецЦикла;
	
	ЭтаФорма.ЗначениеВРеквизитФормы(ТаблицаДокументов, "Документы");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СКорреспондентомНастроенОбменПоСВД(Организация, Корреспондент, ВидДокумента)
	
	Результат = Новый Структура("НастроенОбменПоСВД, ТребуетсяПодписьЭП", Ложь, Ложь);
	Настройка = РаботаССВД.НайтиПравилоОтправкиСообщенийСВД(Организация, Корреспондент, ВидДокумента);
	Если Настройка <> Неопределено Тогда
		Если Настройка.Транспорт.ФорматСообщения = Справочники.ФорматыСообщенийСВД.ОператорЭДО1СТакском Тогда
			Результат.НастроенОбменПоСВД = Истина;
			Если ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронныеПодписи") Тогда
				Результат.ТребуетсяПодписьЭП = Истина;
			КонецЕсли;
		Иначе
			МенеджерЗаписиРегистра = РегистрыСведений.УчастникиСВД.СоздатьМенеджерЗаписи();
			МенеджерЗаписиРегистра.Адресат = Корреспондент;
			МенеджерЗаписиРегистра.Транспорт = Настройка.Транспорт;
			МенеджерЗаписиРегистра.Прочитать();
			Если МенеджерЗаписиРегистра.Выбран() Тогда
				Результат.НастроенОбменПоСВД = Истина;
				Если ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронныеПодписи")
					И Настройка.Транспорт.ФорматСообщения = Справочники.ФорматыСообщенийСВД.Сообщение1СДокументооборот Тогда
					Результат.ТребуетсяПодписьЭП = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ОтправитьСервер(ДокументыНеВыбраныВозврат = Истина, ВозниклиОшибкиВозврат = Ложь)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаДокументов = РеквизитФормыВЗначение("Документы");
	КоличествоОтправленных = 0;
	
	Для Каждого ДанныеСтроки Из ТаблицаДокументов Цикл
		
		Если Не ДанныеСтроки.Отправить
			Или ДанныеСтроки.Отправить И ДанныеСтроки.Состояние <> 0 Тогда
			
			Продолжить;
		КонецЕсли;
		
		ДокументыНеВыбраныВозврат = Ложь;
		
		Документ = ДанныеСтроки.Ссылка;
		Получатель = ДанныеСтроки.Получатель;
		
		Получатели = Новый Массив;
		Получатели.Добавить(Получатель);
		
		ФайлыКОтправке = Новый Массив;
		
		ЗапросФайлов = Новый Запрос;
		ЗапросФайлов.Текст =
			"ВЫБРАТЬ
			|	Файлы.Файл
			|ИЗ
			|	РегистрСведений.ФайлыДокументовГотовыхКОтправкеПОСВД КАК Файлы
			|ГДЕ
			|	Файлы.Документ = &Документ
			|	И Файлы.Получатель = &Получатель";
		ЗапросФайлов.Параметры.Вставить("Документ", Документ);
		ЗапросФайлов.Параметры.Вставить("Получатель", Получатель);
		ВыборкаФайлов = ЗапросФайлов.Выполнить().Выбрать();
		
		Пока ВыборкаФайлов.Следующий() Цикл
			ФайлыКОтправке.Добавить(ВыборкаФайлов.Файл);
		КонецЦикла;
		
		// Отправка документа
		НачатьТранзакцию();
		Попытка
			
			ДатаПримененияФормата = Константы.ДатаНачалаПримененияНовогоФорматаСМДО.Получить();
			Дата = ТекущаяДата(); 
			//Мисофт+
			Если Дата >= ДатаПримененияФормата Тогда
				
				ОтправкаПроизведена = РаботаССВД.ОтправитьПоСВД21(Документ, Документ.ВидДокумента, Получатель, ФайлыКОтправке);
				
				Если ОтправкаПроизведена Тогда
					
					НаборЗаписей = РегистрыСведений.ФайлыДокументовГотовыхКОтправкеПОСВД.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.Документ.Установить(Документ);
					НаборЗаписей.Отбор.Получатель.Установить(Получатель);
					НаборЗаписей.Записать();
					
					ОбработанныйДокумент = Документ.ПолучитьОбъект();
					ЗаблокироватьДанныеДляРедактирования(Документ);
					ОбработанныйДокумент.ГотовКОтправке = Ложь;
					ОбработанныйДокумент.ДополнительныеСвойства.Вставить("ЗаписьПодписанногоОбъекта", Истина); // чтобы прошла запись ранее подписанного объекта
					ОбработанныйДокумент.Записать();
					РазблокироватьДанныеДляРедактирования(Документ);
					
					КоличествоОтправленных = КоличествоОтправленных + 1;
					
				КонецЕсли;
				
				ЗафиксироватьТранзакцию();
				
			Иначе
				//Мисофт-
				ОтправкаПроизведена = РаботаССВД.ОтправитьПоСВД(Документ, Получатели, ФайлыКОтправке);
				
				Если ОтправкаПроизведена Тогда
					
					НаборЗаписей = РегистрыСведений.ФайлыДокументовГотовыхКОтправкеПОСВД.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.Документ.Установить(Документ);
					НаборЗаписей.Отбор.Получатель.Установить(Получатель);
					НаборЗаписей.Записать();
					
					ОбработанныйДокумент = Документ.ПолучитьОбъект();
					ЗаблокироватьДанныеДляРедактирования(Документ);
					ОбработанныйДокумент.ГотовКОтправке = Ложь;
					ОбработанныйДокумент.ДополнительныеСвойства.Вставить("ЗаписьПодписанногоОбъекта", Истина); // чтобы прошла запись ранее подписанного объекта
					ОбработанныйДокумент.Записать();
					РазблокироватьДанныеДляРедактирования(Документ);
					
					КоличествоОтправленных = КоличествоОтправленных + 1;
					
				КонецЕсли;
				
				ЗафиксироватьТранзакцию();
			КонецЕсли;
		Исключение
			
			ОтменитьТранзакцию();
			Инфо = ИнформацияОбОшибке();
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Отправка документа по СВД'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,,
				Документ,
				ПодробноеПредставлениеОшибки(Инфо));
			ВозниклиОшибкиВозврат = Истина;
			
		КонецПопытки;
		
	КонецЦикла;
	
	ЗаполнитьСписокДокументов();
	
	Возврат КоличествоОтправленных;
	
КонецФункции

&НаКлиенте
Процедура ОбработчикДокументыПриАктивизацииСтроки()
	
	Документ = Элементы.Документы.ТекущиеДанные.Ссылка;
	Получатель = Элементы.Документы.ТекущиеДанные.Получатель;
	Если ТекущийДокумент = Документ И ТекущийПолучатель = Получатель Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийДокумент = Документ;
	ТекущийПолучатель = Получатель;
	
	ЗаполнитьСписокФайлов(ТекущийДокумент, ТекущийПолучатель);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокФайлов(Документ = Неопределено, Получатель = Неопределено)
	
	Если Не ЗначениеЗаполнено(Документ) И Не ЗначениеЗаполнено(Получатель) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Файлы.Ссылка,
		|	ВЫБОР
		|		КОГДА ФайлыКОтправке.Файл ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Отправить,
		|	Файлы.Наименование КАК Наименование,
		|	ПОДСТРОКА(Файлы.Описание, 0, 140) КАК Описание,
		|	ВЫБОР
		|		КОГДА Файлы.ПометкаУдаления
		|			ТОГДА Файлы.ИндексКартинки + 1
		|		ИНАЧЕ Файлы.ИндексКартинки
		|	КОНЕЦ КАК ИндексКартинки,
		|	ВЫБОР
		|		КОГДА КешИнформацииОбОбъектах.СтатусЭП = ЗНАЧЕНИЕ(Перечисление.СтатусПроверкиЭП.ПодписиНет)
		|			ТОГДА 0
		|		КОГДА КешИнформацииОбОбъектах.СтатусЭП = ЗНАЧЕНИЕ(Перечисление.СтатусПроверкиЭП.ПодписьНеПроверена)
		|			ТОГДА 1
		|		КОГДА КешИнформацииОбОбъектах.СтатусЭП = ЗНАЧЕНИЕ(Перечисление.СтатусПроверкиЭП.ПодписьДействительна)
		|			ТОГДА 2
		|		КОГДА КешИнформацииОбОбъектах.СтатусЭП = ЗНАЧЕНИЕ(Перечисление.СтатусПроверкиЭП.ПодписьНедействительна)
		|			ТОГДА 3
		|		ИНАЧЕ ВЫБОР
		|				КОГДА Файлы.ПодписанЭП
		|					ТОГДА 1
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК СтатусПроверкиЭП,
		|	Файлы.Зашифрован
		|ИЗ
		|	Справочник.Файлы КАК Файлы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФайлыДокументовГотовыхКОтправкеПоСВД КАК ФайлыКОтправке
		|		ПО (ФайлыКОтправке.Документ = Файлы.ВладелецФайла)
		|			И (ФайлыКОтправке.Получатель = &Получатель)
		|			И (ФайлыКОтправке.Файл = Файлы.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КешИнформацииОбОбъектах КАК КешИнформацииОбОбъектах
		|		ПО Файлы.Ссылка = КешИнформацииОбОбъектах.Объект
		|ГДЕ
		|	Файлы.ВладелецФайла = &ВладелецФайла
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование";
		
	Запрос.Параметры.Вставить("ВладелецФайла", Документ);
	Запрос.Параметры.Вставить("Получатель", Получатель);
	
	ТаблицаФайлов = РеквизитФормыВЗначение("Файлы");
	ТаблицаФайлов.Очистить();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаФайлов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
	ЭтаФорма.ЗначениеВРеквизитФормы(ТаблицаФайлов, "Файлы");
	
КонецПроцедуры

#КонецОбласти

