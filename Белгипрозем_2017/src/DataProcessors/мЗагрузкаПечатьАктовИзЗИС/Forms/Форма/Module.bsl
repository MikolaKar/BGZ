
&НаКлиенте
Перем Док;

&НаКлиенте
Перем WordApp;

&НаКлиенте
Перем Селекция, НачалоЗакладки;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Актирование") Тогда
		Актирование = Параметры.Актирование;	
	КонецЕсли; 
	Организация = РаботаСОрганизациями.ПолучитьОрганизациюПоУмолчанию();
	Копий = 2;
	ВалютаДоговора = Константы.ОсновнаяВалюта.Получить();
    Если ЗначениеЗаполнено(Подписал1) Тогда
        Должность1 = РаботаСПользователями.ПолучитьДолжность(Подписал1);    
    КонецЕсли; 
    Если ЗначениеЗаполнено(Подписал2) Тогда
        Должность2 = РаботаСПользователями.ПолучитьДолжность(Подписал2);    
	КонецЕсли; 
	ЮрЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
	ФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьАкты(Команда)
	ОчиститьСообщения();
	
	Если Не ЗначениеЗаполнено(Актирование) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru = 'Укажите документ актирования.'"), ,
		"Актирование");
		Возврат;
	КонецЕсли; 
	
	ДатаАктов = НачалоМесяца(ПолучитьДатуАктирования(Актирование));

	ПоказатьОповещениеПользователя("Чтение файла...");
	
	ЗаполнитьДоговорыЗИС();
	ЗаполнитьЦены();
	ЗаполнитьРайоныПоСотрудникам();
	
	ПрочитатьФайлВДанныеФайла();
	
	ОчиститьАкты();
	
	ТекДог = "";
	
	// Загрузка дерева
	Сч=0;
	ВсегоСтрок = ДанныеФайла.Количество();
	
	Для каждого Стр Из ДанныеФайла Цикл
		Сч = Сч+1;
		Состояние("Загрузка данных: " + Формат(Сч) + " из " + Формат(ВсегоСтрок), Окр(Сч/ВсегоСтрок*100));
		ОбработкаПрерыванияПользователя();
 		
		Договор = Стр.Договор;		
		
		Отбор = Новый Структура("Договор", Договор); 
		ИскСтроки = ДоговорыЗИС.НайтиСтроки(Отбор);
		
		Если ТекДог <> Договор Тогда
			
			НовДог = АктыИзФайла.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НовДог, ИскСтроки[0]);
			НовДог.Пометка = Истина;
			
			СтрокиДог = НовДог.ПолучитьЭлементы();
			НовСтр = СтрокиДог.Добавить();
			
			ТекДог = Договор;
		Иначе
			НовСтр = СтрокиДог.Добавить();
		КонецЕсли; 
		
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
		НовСтр.Пометка = Истина;
		НовСтр.Договор = ИскСтроки[0].Договор;
    КонецЦикла;

	ДозаполнитьТаблицу();

КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайлВДанныеФайла()
	
	// Структура файла
	// 1 - номер участка
	// 2 - код заказчика
	// 3 - номер договора владельца участка
	// 4 - дата договора владельца участка
	// 5 - наименование владельца участка
	// 6 - вид лица 1-юр, 2-физ, 3-аукцион
	// 7 - дата выдачи справки
	// 8 - район
	
	МассивКолонок = Новый Массив(8);
	
	ДанныеФайла.Очистить();
	
	XLSОбъект = Новый COMОбъект("Excel.Application");
	XLSОбъект.Visible       = Ложь;
	XLSОбъект.DisplayAlerts = Ложь;

    Попытка
        Book = XLSОбъект.Workbooks.Open(ПутьКФайлу, , Истина);
    Исключение
        Сообщить ("Проблемы с подключением к Excel");
        Возврат;
	КонецПопытки;
	
	МассивВидЛиц = Новый Массив;
	МассивВидЛиц.Добавить(Истина);
	МассивВидЛиц.Добавить(Ложь);
	МассивВидЛиц.Добавить(Истина);
	МассивВидЛиц.Добавить(Истина);
	
    Лист = Book.Sheets(1);
    КолвоСтрок   = Лист.Cells(1,1).SpecialCells(11).Row;
	ВсегоКолонок = Лист.Cells(1,1).SpecialCells(11).Column;
	
	// для контроля колонок в файле
	ИменаКолонок = Новый Соответствие;
	ИменаКолонок.Вставить("OBJECTID","OBJECTID");
	ИменаКолонок.Вставить("Orgname","Orgname");
	ИменаКолонок.Вставить("Dogovor","Dogovor");
	ИменаКолонок.Вставить("Data_dogovor","Data_dogovor");
	ИменаКолонок.Вставить("Username1","Username1");
	ИменаКолонок.Вставить("Usertype1","Usertype1");
	ИменаКолонок.Вставить("Data_control","Data_control");
	ИменаКолонок.Вставить("Rayon","Rayon");
	
	// Определение колонок для загрузки
	Для й=1 По ВсегоКолонок Цикл
		ИмяКолонки = Лист.Cells(1, й).Value;
		Если ИмяКолонки = "OBJECTID" Тогда
			МассивКолонок[0] = й;
		ИначеЕсли ИмяКолонки = "Orgname" Тогда
			МассивКолонок[1] = й;	
		ИначеЕсли ИмяКолонки = "Dogovor" Тогда
			МассивКолонок[2] = й;	
		ИначеЕсли ИмяКолонки = "Data_dogovor" Тогда
			МассивКолонок[3] = й;	
		ИначеЕсли ИмяКолонки = "Username1" Тогда
			МассивКолонок[4] = й;	
		ИначеЕсли ИмяКолонки = "Usertype1" Тогда
			МассивКолонок[5] = й;	
		ИначеЕсли ИмяКолонки = "Data_control" Тогда
			МассивКолонок[6] = й;	
		ИначеЕсли ИмяКолонки = "Rayon" Тогда
			МассивКолонок[7] = й;	
		КонецЕсли;
		ИменаКолонок.Удалить(ИмяКолонки);
	КонецЦикла; 
	
	Если ИменаКолонок.Количество() > 0 Тогда
		ТекстСообщения = "В файле нет колонки: ";
		Для каждого Имя Из ИменаКолонок Цикл
			ТекстСообщения = ТекстСообщения + Имя.Значение + ", ";
		КонецЦикла;  
		ПозПоследнейЗПТ = СтрНайти(ТекстСообщения, ",", НаправлениеПоиска.СКонца, ,1);
		ТекстСообщения = Лев(ТекстСообщения, ПозПоследнейЗПТ-1);
		
		Сообщить(ТекстСообщения);
	КонецЕсли; 
	
	НачСтрока = 2;
	КонСтрока = КолвоСтрок;
	ВсегоСтрок = КонСтрока-НачСтрока+1;
	
	Сообщено = Новый Соответствие;
	
	ТекКодЗаказчика = "";
	
    Для НомерСтроки = НачСтрока По КонСтрока Цикл

		#Если Клиент Тогда
			Если НомерСтроки%10 = 0 Тогда
				Состояние("Чтение файла: " + Формат(НомерСтроки) + " из " + Формат(ВсегоСтрок), Окр((НомерСтроки-1)/ВсегоСтрок*100));
			КонецЕсли; 
			ОбработкаПрерыванияПользователя();
		#КонецЕсли
		
		ДатаВыдачи = Лист.Cells(НомерСтроки, МассивКолонок[6]).Value;
		
		Если Не ЗначениеЗаполнено(ДатаВыдачи) Тогда
			ДатаВыдачи = КонецМесяца(ДатаАктов);
			//Сообщить("Нет даты справки в строке "+НомерСтроки); 
			//Продолжить;
		КонецЕсли; 
		
		// Контроль периода загрузки
		Если НомерСтроки = НачСтрока Тогда
			Если НачалоМесяца(ДатаВыдачи) <> ДатаАктов Тогда
				Сообщить("Дата выдачи справки в файле "+ДатаВыдачи+" не соответствует дате периода загрузки"+ДатаАктов+"!");
				//Возврат;
			КонецЕсли; 
		КонецЕсли; 
		
		КодЗаказчика = Лист.Cells(НомерСтроки, МассивКолонок[1]).Value;
		Если Число(КодЗаказчика) < 3 Тогда
			// Это наша организация
			Продолжить;
		КонецЕсли; 
		
		Договор = Неопределено;
		Отбор = Новый Структура("КодЗИС", Число(КодЗаказчика)); 
		ИскСтроки = ДоговорыЗИС.НайтиСтроки(Отбор);
		Если ИскСтроки.Количество() = 0 Тогда
			Если Сообщено[Строка(КодЗаказчика)] = Неопределено Тогда
				Сообщено[Строка(КодЗаказчика)] = Строка(КодЗаказчика);
				Сообщить("Не найден договор для заказчика с кодом в ЗИС "+ КодЗаказчика);
				Сообщить("  Данные не загружены. Добавьте код заказчика в Договоры ЗИС.");
			КонецЕсли; 
			Продолжить;
		Иначе
			Договор = ИскСтроки[0].Договор;
		КонецЕсли;
		
		НовСтр = ДанныеФайла.Добавить();
		НовСтр.НомерУчастка = Формат(Лист.Cells(НомерСтроки, МассивКолонок[0]).Value, "ЧДЦ=; ЧГ=0");
		НовСтр.КодЗаказчика = КодЗаказчика;
		НовСтр.ДатаВыдачи = ДатаВыдачи;
		НовСтр.Договор = Договор;
		НовСтр.Наименование = СокрЛП(Лист.Cells(НомерСтроки, МассивКолонок[4]).Value);
		ВидЛица = Лист.Cells(НомерСтроки, МассивКолонок[5]).Value;
		Если Не ЗначениеЗаполнено(ВидЛица) Тогда
			Сообщить("Не указан вид лица в строке "+НомерСтроки+". "+НовСтр.Наименование+" Считаем как физлицо."); 
			ВидЛица = 2;
		КонецЕсли; 
		НовСтр.ЭтоЮрЛицо = МассивВидЛиц[ВидЛица-1];
		НовСтр.ЮрФизЛицо = ?(ВидЛица = 2, ФизЛицо, ЮрЛицо);
		НовСтр.ДоговорЗаказчика = Строка(Лист.Cells(НомерСтроки, МассивКолонок[2]).Value) + " от " + Формат(Лист.Cells(НомерСтроки, МассивКолонок[3]).Value, "ДЛФ=D"); 
		НовСтр.РайонУчастка = СокрЛП(СтрЗаменить(Лист.Cells(НомерСтроки, МассивКолонок[7]).Value, " р-н", ""));
    КонецЦикла;

	ДанныеФайла.Сортировать("Договор, КодЗаказчика, Наименование, НомерУчастка");
	
    XLSОбъект.Application.Quit();
КонецПроцедуры
 
&НаСервере
Процедура ЗаполнитьДоговорыЗИС()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	мДоговорыЗИС.КодЗИС КАК КодЗИС,
		|	мДоговорыЗИС.Договор,
		|	мДоговорыЗИС.Договор.Корреспондент КАК Заказчик,
		|	мДоговорыЗИС.Договор.РегистрационныйНомер КАК НомерДоговора,
		|	мДоговорыЗИС.ИспользуетГеопортал
		|ИЗ
		|	РегистрСведений.мДоговорыЗИС КАК мДоговорыЗИС
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодЗИС";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	ДоговорыЗИС.Загрузить(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРайоныПоСотрудникам()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	мРайоныПоСотрудникам.Месторасположение КАК РайонУчастка,
		|	мРайоныПоСотрудникам.Сотрудник КАК Исполнитель
		|ИЗ
		|	РегистрСведений.мРайоныПоСотрудникам КАК мРайоныПоСотрудникам";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	РайоныПоСотрудникам.Загрузить(Результат);
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьЦены()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	мПрейскурантЗИССрезПоследних.Цена,
		|	мПрейскурантЗИССрезПоследних.ЮрФизЛицо
		|ИЗ
		|	РегистрСведений.мПрейскурантЗИС.СрезПоследних(&ДатаСреза, ) КАК мПрейскурантЗИССрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаСреза", ДатаАктов);
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
			ЦенаДляФизЛиц = Выборка.Цена;
		Иначе	
			ЦенаДляЮрЛиц = Выборка.Цена;
		КонецЕсли; 
	КонецЦикла; 
	
КонецФункции 

&НаКлиенте
Функция ДатаИзЗначения(ЗначениеДаты)
	ГодДаты = Число(Лев(ЗначениеДаты, 4));
	МесяцДень = Сред(ЗначениеДаты, 6);
	ПозРазделителя = СтрНайти(МесяцДень, "-");
	МесяцДаты = Число(Лев(МесяцДень, ПозРазделителя-1));
	ЧислоДаты = Число(Сред(МесяцДень, ПозРазделителя+1));
	ИскДата = Дата(ГодДаты, МесяцДаты, ЧислоДаты);
	Возврат ИскДата;
КонецФункции

&НаКлиенте
Процедура ДозаполнитьТаблицу()
	ПоказатьОповещениеПользователя("Заполнение дополнительных данных...");
	
	ЗаполнитьТаблицуЭтапов();
	ЗаполнитьТаблицуНормВремени();
	
	СтавкаНДС = ПредопределенноеЗначение("Справочник.мСтавкиНДС.НДС_20");
	
	Договоры = АктыИзФайла.ПолучитьЭлементы();
	Для каждого Стр Из Договоры Цикл
		// Заполнение этапа
		Отбор = Новый Структура("Договор", Стр.Договор);
		ИскСтроки = ТаблицаЭтапов.НайтиСтроки(Отбор);
		Если ИскСтроки.Количество() > 0 Тогда
			Стр.ЭтапДоговора = ИскСтроки[0].ЭтапДоговора;
			Стр.НомерЭтапа = ИскСтроки[0].НомерЭтапаДоговора;
			Стр.ДатаЭтапа = КонецМесяца(ИскСтроки[0].ДатаЭтапа);
		КонецЕсли;
		
		СтрНормаВремени = НормыВремени.НайтиСтроки(Отбор);
		
		// Заполнение стоимости
		Строки = Стр.ПолучитьЭлементы();
		Для каждого Строка Из Строки Цикл
			Если Строка.ЭтоЮрЛицо Тогда
				Строка.Цена = ЦенаДляЮрЛиц;
				Если СтрНормаВремени.Количество() > 0 Тогда
					Строка.Количество = СтрНормаВремени[0].НормаВремениЮЛ;
				КонецЕсли; 
			Иначе	
				Строка.Цена = ЦенаДляФизЛиц;
				Если СтрНормаВремени.Количество() > 0 Тогда
					Строка.Количество = СтрНормаВремени[0].НормаВремениФЛ;
				КонецЕсли; 
			КонецЕсли; 
			Строка.СтавкаНДС = СтавкаНДС;
			Строка.Сумма = Строка.Цена * Строка.Количество;
			Строка.НДС = Окр(Строка.Сумма * ПолучитьЗначениеСтавкиНДС(Строка.СтавкаНДС)/100, 2);
		    Строка.Всего = Строка.Сумма + Строка.НДС;
			Строка.Заказчик = Стр.Заказчик;
			Строка.ЭтапДоговора = Стр.ЭтапДоговора;
			Строка.НомерЭтапа = Стр.НомерЭтапа;
			Строка.ДатаЭтапа = Стр.ДатаЭтапа;
			
			// Исполнитель
			ОтборИсп = Новый Структура("РайонУчастка", Строка.РайонУчастка);
			ИскСтрокиИсп = РайоныПоСотрудникам.НайтиСтроки(ОтборИсп);
			Если ИскСтрокиИсп.Количество() > 0 Тогда
				Строка.Исполнитель = ИскСтрокиИсп[0].Исполнитель;
			Иначе	
			    Сообщить("Не найден исполнитель для района: "+ Строка.РайонУчастка);
			КонецЕсли; 
			
			Стр.Сумма = Стр.Сумма + Строка.Сумма;
			Стр.НДС = Стр.НДС + Строка.НДС;
			Стр.Всего = Стр.Всего + Строка.Всего;
			Стр.СтавкаНДС = СтавкаНДС;
		КонецЦикла; 
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНормВремени()
	МассивДоговоров = Новый Массив;
	Договоры = АктыИзФайла.ПолучитьЭлементы();
	Для каждого Стр Из Договоры Цикл
		МассивДоговоров.Добавить(Стр.Договор);
	КонецЦикла;
	
	НормыВремени.Очистить();
	
	ТЗ = РегистрыСведений.мНормыВремениЗИС.НормыВремениЗИСДляДоговоров(МассивДоговоров, ПериодРегистрации.ДатаНачала);
	
	Для каждого Стр Из Тз Цикл
		НовСтр = НормыВремени.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
	КонецЦикла; 
КонецПроцедуры
 
// Заполняет ТаблицуЭтапов для получения в последующем
//  этапов, либо существующих в базе, либо, которые надо создать.
//  Если нет даты этапа, то такой этап должен быть создан с номером равным номеру в таблице
&НаСервере
Процедура ЗаполнитьТаблицуЭтапов()
	
	МассивДоговоров = Новый Массив;
	Договоры = АктыИзФайла.ПолучитьЭлементы();
	Для каждого Стр Из Договоры Цикл
		МассивДоговоров.Добавить(Стр.Договор);
	КонецЦикла; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(мЭтапыДоговоров.НомерЭтапа) КАК НомерЭтапа,
		|	мЭтапыДоговоров.Владелец КАК Договор
		|ПОМЕСТИТЬ МаксЭтапы
		|ИЗ
		|	Справочник.мЭтапыДоговоров КАК мЭтапыДоговоров
		|ГДЕ
		|	мЭтапыДоговоров.Владелец В(&МассивДоговоров)
		|	И мЭтапыДоговоров.ДатаРегистрации < &НачалоПериода
		|	И НЕ мЭтапыДоговоров.ПометкаУдаления
		|	И мЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0)
		|
		|СГРУППИРОВАТЬ ПО
		|	мЭтапыДоговоров.Владелец
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(мЭтапыДоговоров.НомерЭтапа) КАК НомерЭтапа,
		|	мЭтапыДоговоров.ДатаРегистрации КАК ДатаРегистрации,
		|	мЭтапыДоговоров.Ссылка КАК ПредЭтапДоговора,
		|	мЭтапыДоговоров.Владелец КАК Договор
		|ПОМЕСТИТЬ ПредЭтапы
		|ИЗ
		|	МаксЭтапы КАК МаксЭтапы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.мЭтапыДоговоров КАК мЭтапыДоговоров
		|		ПО МаксЭтапы.Договор = мЭтапыДоговоров.Владелец
		|			И МаксЭтапы.НомерЭтапа = мЭтапыДоговоров.НомерЭтапа
		|ГДЕ
		|	мЭтапыДоговоров.Владелец В(&МассивДоговоров)
		|	И мЭтапыДоговоров.ДатаРегистрации < &НачалоПериода
		|	И НЕ мЭтапыДоговоров.ПометкаУдаления
		|	И мЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0)
		|
		|СГРУППИРОВАТЬ ПО
		|	мЭтапыДоговоров.Владелец,
		|	мЭтапыДоговоров.ДатаРегистрации,
		|	мЭтапыДоговоров.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	мЭтапыДоговоров.НомерЭтапа КАК НомерЭтапа,
		|	мЭтапыДоговоров.ДатаРегистрации КАК ДатаРегистрации,
		|	мЭтапыДоговоров.Владелец КАК Договор,
		|	мЭтапыДоговоров.Ссылка КАК ЭтапДоговора
		|ПОМЕСТИТЬ ТекЭтапы
		|ИЗ
		|	Справочник.мЭтапыДоговоров КАК мЭтапыДоговоров
		|ГДЕ
		|	мЭтапыДоговоров.Владелец В(&МассивДоговоров)
		|	И мЭтапыДоговоров.ДатаРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
		|	И НЕ мЭтапыДоговоров.ПометкаУдаления
		|	И мЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПредЭтапы.НомерЭтапа КАК НомерЭтапаДоговора,
		|	ПредЭтапы.ДатаРегистрации КАК ДатаРегистрации,
		|	ПредЭтапы.ПредЭтапДоговора КАК ПредЭтапДоговора,
		|	ПредЭтапы.Договор КАК Договор,
		|	NULL КАК ТекЭтапДоговора
		|ИЗ
		|	ПредЭтапы КАК ПредЭтапы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТекЭтапы.НомерЭтапа,
		|	ТекЭтапы.ДатаРегистрации,
		|	NULL,
		|	ТекЭтапы.Договор,
		|	ТекЭтапы.ЭтапДоговора
		|ИЗ
		|	ТекЭтапы КАК ТекЭтапы
		|
		|УПОРЯДОЧИТЬ ПО
		|	Договор";
	
	Запрос.УстановитьПараметр("МассивДоговоров", МассивДоговоров);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ДатаАктов));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ДатаАктов));
	
	Результат = Запрос.Выполнить();
	
	ТаблицаЭтапов.Очистить();
	ВремТаблицаЭтапов.Очистить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Отбор = Новый Структура("Договор", Выборка.Договор);
		Если ЗначениеЗаполнено(Выборка.ТекЭтапДоговора) Тогда
			// этап в этом месяце есть - берем его
			Стр = ТаблицаЭтапов.Добавить();
			Стр.Договор = Выборка.Договор;
			Стр.ЭтапДоговора = Выборка.ТекЭтапДоговора;
			Стр.ДатаЭтапа = Выборка.ДатаРегистрации;
			Стр.НомерЭтапаДоговора = Выборка.НомерЭтапаДоговора;
			
			// очистка от этого договора ВремТаблицаЭтапов
		    ИскСтроки = ВремТаблицаЭтапов.НайтиСтроки(Отбор);
			Если ИскСтроки.Количество() > 0 Тогда
				Для каждого ИскСтр Из ИскСтроки Цикл
					ВремТаблицаЭтапов.Удалить(ИскСтр);
				КонецЦикла; 
			КонецЕсли; 
		Иначе
			// Этап еще не был создан - заносим во временную таблицу последний
			Стр = ВремТаблицаЭтапов.Добавить();
			Стр.Договор = Выборка.Договор;
			Стр.ЭтапДоговора = Выборка.ТекЭтапДоговора;
			Стр.ДатаЭтапа = Выборка.ДатаРегистрации;
			Стр.НомерЭтапаДоговора = Выборка.НомерЭтапаДоговора;
		КонецЕсли; 
	КонецЦикла;
	
	// По оставшимся во ВремТаблицаЭтапов - добавляем записи в ТаблицуЭтапов
	Для каждого Стр Из ВремТаблицаЭтапов Цикл
		НовСтр = ТаблицаЭтапов.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
		НовСтр.ЭтапДоговора = Неопределено;
		Если ЗначениеЗаполнено(НовСтр.НомерЭтапаДоговора) Тогда
			НовСтр.НомерЭтапаДоговора = НовСтр.НомерЭтапаДоговора + 1;
		Иначе
			НовСтр.НомерЭтапаДоговора = 0;
		КонецЕсли; 
		НовСтр.ДатаЭтапа = Дата(1,1,1); 
	КонецЦикла; 
	//ЗначениеВДанныеФормы(ТаблицаЭтапов, ТаблицаЭтапов);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗначениеСтавкиНДС(СтавкаНДС)
	Возврат СтавкаНДС.Ставка;	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьАкты(Команда)
	Если Не ЗначениеЗаполнено(Актирование) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru = 'Укажите документ актирования.'"), ,
		"Актирование");
		Возврат;
	КонецЕсли;
	
	Если ДокНеПуст() Тогда
		Ответ = Вопрос("Табличные части документа будут очищены! Продолжать?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 
    КонецЕсли; 
    
	ПоказатьОповещениеПользователя("Идет загрузка актов... Подождите...");
	
	ДатаАктов = НачалоМесяца(ПолучитьДатуАктирования(Актирование));
	
	ЗагрузитьАктыНаСервере();

	//Оповестить("Акты загружены");
	ПоказатьОповещениеПользователя("Акты загружены...");
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьАктыНаСервере()
	
	// Создать Этапы договоров
	СписокЭтапов = СоздатьЭтапыДоговоров();
	ТзАкты = ПолучитьАктыДляАктирования(СписокЭтапов);
	
	// Получение итогов Объемов работ по исполнителям
	ТзИсп = Новый ТаблицаЗначений;
	ТзИсп.Колонки.Добавить("Исполнитель");
	ТзИсп.Колонки.Добавить("ЭтапДоговора");
	//ТзИсп.Колонки.Добавить("НомерАкта");
	ТзИсп.Колонки.Добавить("ОбъемРабот");
	
	Договоры = АктыИзФайла.ПолучитьЭлементы();
	Для каждого СтрДог Из Договоры Цикл
		Если СтрДог.Пометка <> 1 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокиДог = СтрДог.ПолучитьЭлементы();
		Для каждого Стр Из СтрокиДог Цикл
			НовСтр = ТзИсп.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, Стр);
			НовСтр.ЭтапДоговора = СтрДог.ЭтапДоговора;
			НовСтр.ОбъемРабот = Стр.Всего - Стр.НДС;
		КонецЦикла; 
	КонецЦикла;
	ТзИсп.Свернуть("Исполнитель, ЭтапДоговора", "ОбъемРабот");
	
	Док = Актирование.ПолучитьОбъект();
	Док.Акты.Очистить();
	Док.Зарплата.Очистить();
	
	Договоры = АктыИзФайла.ПолучитьЭлементы();
	Для каждого Стр Из Договоры Цикл
		Если Стр.Пометка <> 1 Тогда
			Продолжить;
		КонецЕсли;
		
		// Получение Акта вып. работ
		НомерАкта = ""+Стр.НомерДоговора+"/"+Стр.НомерЭтапа;
		
		Отбор = Новый Структура("НомерАкта", НомерАкта); 
		ИскСтроки = ТзАкты.НайтиСтроки(Отбор);
		Если ИскСтроки.Количество() = 0 Тогда
			Акт = ПроверитьСоздатьАктВыпРабот(Стр, НомерАкта);
			
			// Добавим инфу по созданному акту в ТзАкты, понадобится для получения НормативаЗП
			ТекЭтап = Стр.ЭтапДоговора;
			_ТзАкты = ПолучитьАктыДляАктирования(ТекЭтап);
			Если _ТзАкты.Количество() > 0 Тогда
				НовСтр = ТзАкты.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, _ТзАкты[0]); 
			КонецЕсли; 
		Иначе
			// Акт есть, надо проверить, не изменился ли он?
			АктВыпРабот = ИскСтроки[0].Акт;
			ЕстьЭСЧФ = Ложь;
			Если ИскСтроки[0].ЕстьЭСЧФ и ЗначениеЗаполнено(ИскСтроки[0].СтатусСФ) 
				и ИскСтроки[0].СтатусСФ <> Перечисления.мСтатусыСФ.Аннулирован 
				и ИскСтроки[0].СтатусСФ <> Перечисления.мСтатусыСФ.Подготовлен1С Тогда
			    ЕстьЭСЧФ = Истина;
			КонецЕсли; 
			СуммаНДС = ИскСтроки[0].СуммаНДС;
			Акт = ПроверитьСоздатьАктВыпРабот(Стр, НомерАкта, АктВыпРабот, ЕстьЭСЧФ, СуммаНДС);
		КонецЕсли; 
		
		НовАкт = Док.Акты.Добавить();
		НовАкт.Договор = Стр.Договор;
		НовАкт.ЭтапДоговора = Стр.ЭтапДоговора;
		НовАкт.НомерАкта = НомерАкта;
		НовАкт.ДатаАкта = КонецМесяца(ДатаАктов);
		НовАкт.Сумма = Стр.Всего;
		НовАкт.НДС = Стр.НДС;
		НовАкт.Акт = Акт;
		
		Исполнители = Стр.ЭтапДоговора.Исполнители;
		Если Исполнители.Количество() > 0 Тогда
			Для каждого Исп Из Исполнители Цикл
				
				НовЗП = Док.Зарплата.Добавить();
				НовЗП.ЭтапДоговора = Стр.ЭтапДоговора;
				НовЗП.Исполнитель = Исп.Исполнитель;
				НовЗП.КТУ = Исп.КТУ;
				
				ОтборАкта = Новый Структура("ЭтапДоговора", Стр.ЭтапДоговора);
				ИскСтрАкта = ТзАкты.НайтиСтроки(ОтборАкта);
				Если ИскСтрАкта.Количество() > 0 Тогда
					ДанныеДляНорматива = Новый Структура("ВидЗаказчика, ЦельПредоставления, ДопУсловие, Исполнитель, ВидРабот");
					ЗаполнитьЗначенияСвойств(ДанныеДляНорматива, ИскСтрАкта[0]);
					ДанныеДляНорматива.Вставить("Исполнитель", Исп.Исполнитель);
					ДанныеДляНорматива.Вставить("Дата", Док.Дата);
					
					НовЗП.Норматив = мРаботаСДоговорами.ПолучитьНормативЗП(ДанныеДляНорматива);
				КонецЕсли; 
				
				Если НовЗП.Норматив = 0 Тогда
					Сообщить("Не найден норматив ЗП для " + Исп.Исполнитель+" номер акта: " + НомерАкта);
					Сообщить("  Норматив ЗП для " + Исп.Исполнитель+" установлен 1");
					НовЗП.Норматив = 1;
				КонецЕсли; 
				
				НовЗП.Коэффициент = 1;
				
				ОтборИсп = Новый Структура("Исполнитель, ЭтапДоговора", Исп.Исполнитель, Стр.ЭтапДоговора);
				ИскИсп = ТзИсп.НайтиСтроки(ОтборИсп);
				Если ИскИсп.Количество() > 0 Тогда
					НовЗП.ОбъемРабот = ИскИсп[0].ОбъемРабот;
				КонецЕсли; 
				
				НовЗП.Начислено = Окр(НовЗП.ОбъемРабот * НовЗП.Норматив * НовЗП.Коэффициент, 2);

				//Если ЗначениеЗаполнено(Стр.ЭтапДоговора.Подразделение) Тогда
				//	НовЗП.Подразделение = Стр.ЭтапДоговора.Подразделение;
				//Иначе
					НовЗП.Подразделение = РаботаСПользователями.ПолучитьПодразделение(Исп.Исполнитель);
				//КонецЕсли; 
				НовЗП.НомерАкта = НовАкт.НомерАкта;
				НовЗП.БазовоеНачисление = НовЗП.Начислено;
			КонецЦикла; 
		КонецЕсли; 
	КонецЦикла; 
	Док.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры

&НаСервере
Функция СоздатьЭтапыДоговоров()
	СписокЭтапов = Новый СписокЗначений;
	Договоры = АктыИзФайла.ПолучитьЭлементы();
	Для каждого Стр Из Договоры Цикл
		Если Стр.Пометка <> 1 Тогда
			Продолжить;
		КонецЕсли;
		
		Стр.ЭтапДоговора = СоздатьЭтапДоговора(Стр);
		СписокЭтапов.Добавить(Стр.ЭтапДоговора);
	КонецЦикла;
	Возврат СписокЭтапов;
КонецФункции
 
&НаСервере
Функция СоздатьЭтапДоговора(Стр)
	НачатьТранзакцию();
	Если ЗначениеЗаполнено(Стр.ЭтапДоговора) и Не Стр.ЭтапДоговора.ПометкаУдаления и Стр.ЭтапДоговора.ДатаИсключенИзДоговора=Дата(1,1,1,0,0,0) Тогда
	    Этап = Стр.ЭтапДоговора.ПолучитьОбъект();
	Иначе
		Этап = Справочники.мЭтапыДоговоров.СоздатьЭлемент();
		Этап.УстановитьНовыйКод();
	КонецЕсли; 
	Этап.Наименование = "" + Строка(Стр.НомерЭтапа) + " " + ВидРабот;
	Этап.Владелец = Стр.Договор;
	Этап.Договор = Стр.Договор;
	Этап.НомерЭтапа = Число(Стр.НомерЭтапа);
	Этап.ВидРабот = ВидРабот;
	Этап.Подразделение = Подразделение;
	Этап.СтавкаНДС = Стр.СтавкаНДС;
	Этап.СуммаНДС = Стр.НДС;
	Этап.СтоимостьСНДС = Стр.Всего;
	Этап.Стоимость = Стр.Сумма;
	Этап.ДатаРегистрации = НачалоМесяца(ДатаАктов);
	Этап.ДатаПоследнейЗаписи = НачалоМесяца(ДатаАктов);
	Этап.ЗапретИзмененияПлановогоСрока = Истина;
    
    Этап.Исполнители.Очистить();
    Этап.ЗИС.Очистить();
    
	ЗаполнитьТаблицыЭтапа(Этап, Стр);
	
	// Подразделение этапа = подразделение первого исполнителя
	Если Этап.Исполнители.Количество() > 0 Тогда
		Этап.Подразделение = РаботаСПользователями.ПолучитьПодразделение(Этап.Исполнители[0].Исполнитель);	
	КонецЕсли; 
	
	Этап.ОбменДанными.Загрузка = Истина;
	Этап.Записать();
	
	// Создание сметной стоимости
	ПараметрыЭтапа = мРаботаСДоговорами.ПодготовитьПараметрыУчетаДоговоров();
	мРаботаСДоговорами.ЗаполнитьПараметрыУчетаДоговоровИзЭтапа(ПараметрыЭтапа, Этап);
	ПараметрыЭтапа.Вставить("НеИзменятьЭтап", Истина);
	
	// если УчетДоговора уже есть с датой = ДатаПоследнейЗаписи,
	//  то новый создавать не надо, а надо перезаписать существующий
	ПустойДок = Документы.УчетДоговоров.ПустаяСсылка();
	Результат = мРаботаСДоговорами.ПолучитьПоследнийУчетДоговоров(ПустойДок, Этап.Ссылка, Этап.ДатаПоследнейЗаписи);
	ПоследнийДокумент = Результат.ПоследнийДокумент;
	
	Отказ = Ложь;
	Если ЗначениеЗаполнено(ПоследнийДокумент) Тогда
		мРаботаСДоговорами.ИзменитьУчетДоговоров(Этап.Ссылка, Этап.ДатаПоследнейЗаписи, Отказ, ПараметрыЭтапа);
	Иначе
		мРаботаСДоговорами.ЗаписатьНовыйУчетДоговоров(Этап.Ссылка, Этап.ДатаПоследнейЗаписи, Отказ, ПараметрыЭтапа);
	КонецЕсли; 
	
	ЗафиксироватьТранзакцию();
	
	Возврат Этап.Ссылка;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицыЭтапа(Этап, Стр)
	Строки = Стр.ПолучитьЭлементы();
	Для каждого Стр Из Строки Цикл
	
		Если Стр.Пометка <> 1 Тогда
			Продолжить;
		КонецЕсли;
		
		ОтборИсп = Новый Структура("Исполнитель", Стр.Исполнитель);
		ИскИсп = Этап.Исполнители.НайтиСтроки(ОтборИсп);
		Если ИскИсп.Количество() = 0 Тогда
			Исполнители = Этап.Исполнители.Добавить();
			Исполнители.Исполнитель = Стр.Исполнитель;
			Исполнители.КТУ = 1;
		КонецЕсли; 
	
		НовСтр = Этап.ЗИС.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
		
		Если Стр.КодЗаказчика = "60" Тогда 
			//РУП "Минское областное агентство по государственной регистрации и земельному кадастру"
		    НовСтр.Наименование = Стр.Наименование + Символы.ПС + Стр.ДоговорЗаказчика;
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьАктыДляАктирования(СписокЭтапов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	мСвязиЭСЧФ.ЭСЧФ КАК ЭСЧФ,
		|	МАКСИМУМ(мСвязиЭСЧФ.ЭСЧФ.Дата) КАК ЭСЧФДата,
		|	МАКСИМУМ(мСвязиЭСЧФ.ЭСЧФ._01_НомерСЧ) КАК ЭСЧФНомер,
		|	мСвязиЭСЧФ.ДокументРеализации КАК ДокументРеализации
		|ПОМЕСТИТЬ ЭСЧФы
		|ИЗ
		|	РегистрСведений.мСвязиЭСЧФ КАК мСвязиЭСЧФ
		|ГДЕ
		|	мСвязиЭСЧФ.ДокументРеализации.ЭтапДоговора В(&СписокЭтапов)
		|
		|СГРУППИРОВАТЬ ПО
		|	мСвязиЭСЧФ.ДокументРеализации,
		|	мСвязиЭСЧФ.ЭСЧФ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументРеализации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВнутренниеДокументы.Ссылка КАК Акт,
		|	ВнутренниеДокументы.ЭтапДоговора КАК ЭтапДоговора,
		|	ВнутренниеДокументы.ЭтапДоговора.Владелец КАК Договор,
		|	ВнутренниеДокументы.Сумма,
		|	ВнутренниеДокументы.Корреспондент КАК Корреспондент,
		|	ВнутренниеДокументы.РегистрационныйНомер КАК НомерАкта
		|ПОМЕСТИТЬ Акты
		|ИЗ
		|	Справочник.ВнутренниеДокументы КАК ВнутренниеДокументы
		|ГДЕ
		|	ВнутренниеДокументы.ВидДокумента = &ВидДокумента
		|	И ВнутренниеДокументы.ЭтапДоговора В(&СписокЭтапов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорреспондентыДополнительныеРеквизиты.Значение КАК ВидЗаказчика,
		|	КорреспондентыДополнительныеРеквизиты.Ссылка КАК Корреспондент
		|ПОМЕСТИТЬ ВидыЗаказчиков
		|ИЗ
		|	Справочник.Корреспонденты.ДополнительныеРеквизиты КАК КорреспондентыДополнительныеРеквизиты
		|ГДЕ
		|	КорреспондентыДополнительныеРеквизиты.Ссылка В
		|			(ВЫБРАТЬ
		|				Акты.Корреспондент
		|			ИЗ
		|				Акты КАК Акты)
		|	И ВЫБОР
		|			КОГДА КорреспондентыДополнительныеРеквизиты.Ссылка.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
		|				ТОГДА КорреспондентыДополнительныеРеквизиты.Свойство.Наименование ПОДОБНО ""Вид заказчика физ. лицо""
		|			ИНАЧЕ КорреспондентыДополнительныеРеквизиты.Свойство.Наименование ПОДОБНО ""Вид заказчика юр. лицо""
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВнутренниеДокументыДополнительныеРеквизиты.Значение КАК ЦельФизЛицо,
		|	ВнутренниеДокументыДополнительныеРеквизиты.Ссылка КАК Договор
		|ПОМЕСТИТЬ ЦелиФизЛиц
		|ИЗ
		|	Справочник.ВнутренниеДокументы.ДополнительныеРеквизиты КАК ВнутренниеДокументыДополнительныеРеквизиты
		|ГДЕ
		|	ВнутренниеДокументыДополнительныеРеквизиты.Ссылка В
		|			(ВЫБРАТЬ
		|				Акты.Договор
		|			ИЗ
		|				Акты КАК Акты)
		|	И ВнутренниеДокументыДополнительныеРеквизиты.Свойство.Наименование ПОДОБНО ""Цель предоставления зем. участка физлицам""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Акты.ЭтапДоговора КАК ЭтапДоговора,
		|	ВЫБОР
		|		КОГДА Акты.Корреспондент.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
		|			ТОГДА ЦелиФизЛиц.ЦельФизЛицо
		|		ИНАЧЕ Акты.ЭтапДоговора.КарточкаОбъектаРабот.ЦельПредоставления
		|	КОНЕЦ КАК Цель
		|ПОМЕСТИТЬ Цели
		|ИЗ
		|	Акты КАК Акты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЦелиФизЛиц КАК ЦелиФизЛиц
		|		ПО Акты.Договор = ЦелиФизЛиц.Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Акты.Акт КАК Акт,
		|	Акты.Сумма,
		|	Акты.НомерАкта КАК НомерАкта,
		|	мРеквизитыАктовВыполненныхРабот.СуммаНДС КАК СуммаНДС,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЭСЧФы.ЭСЧФ, ЛОЖЬ) = ЛОЖЬ
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьЭСЧФ,
		|	ЭСЧФы.ЭСЧФ.СтатусСФ КАК СтатусСФ,
		|	Цели.Цель КАК Цель,
        |   Акты.ЭтапДоговора КАК ЭтапДоговора,
        |   Акты.ЭтапДоговора.ДопУсловиеНормативаЗП КАК ДопУсловиеНормативаЗП,
        |   Акты.ЭтапДоговора.ВидРабот КАК ВидРабот,
		|	ВидыЗаказчиков.ВидЗаказчика КАК ВидЗаказчика
		|ИЗ
		|	Акты КАК Акты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.мРеквизитыАктовВыполненныхРабот КАК мРеквизитыАктовВыполненныхРабот
		|		ПО (мРеквизитыАктовВыполненныхРабот.Владелец = Акты.Акт)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыЗаказчиков КАК ВидыЗаказчиков
		|		ПО Акты.Корреспондент = ВидыЗаказчиков.Корреспондент
		|		ЛЕВОЕ СОЕДИНЕНИЕ Цели КАК Цели
		|		ПО Акты.ЭтапДоговора = Цели.ЭтапДоговора
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЭСЧФы КАК ЭСЧФы
		|		ПО (ЭСЧФы.ДокументРеализации = Акты.Акт)";
	
	Запрос.УстановитьПараметр("ВидДокумента", Справочники.ВидыВнутреннихДокументов.АктВыполненныхРабот);
	Запрос.УстановитьПараметр("СписокЭтапов", СписокЭтапов);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
КонецФункции

&НаСервере
Функция ПроверитьСоздатьАктВыпРабот(Стр, НомерАкта, АктВыпРабот=Неопределено, ЕстьЭСЧФ=Неопределено, СуммаНДС=0)
	НачатьТранзакцию();
	Если ЗначениеЗаполнено(АктВыпРабот) Тогда
		Если ЕстьЭСЧФ = Истина Тогда
			Если АктВыпРабот.Сумма <> Стр.Всего ИЛИ СуммаНДС <> Стр.НДС Тогда
				Сообщить("Проверьте акт "+Стр.НомерАкта+" - был ЭСЧФ!");
			КонецЕсли; 	
		КонецЕсли; 
		Акт = АктВыпРабот.ПолучитьОбъект();
	Иначе
		Акт = Справочники.ВнутренниеДокументы.СоздатьЭлемент();
	КонецЕсли;
	Договор = Стр.Договор;
	ЭтапДоговора = Стр.ЭтапДоговора;
	Акт.ДатаРегистрации = КонецМесяца(ДатаАктов);
	Акт.РегистрационныйНомер = НомерАкта;
	Акт.Папка = Справочники.ПапкиВнутреннихДокументов.мАктыВыполненныхРабот;
	Акт.ВидДокумента = Справочники.ВидыВнутреннихДокументов.АктВыполненныхРабот;
	Акт.Заголовок = "Акт выполненных работ " + НомерАкта + " " + Формат(ДатаАктов, "ДЛФ=D");;
	Акт.ГрифДоступа = Договор.ГрифДоступа;
	Акт.Организация = Договор.Организация;
	Акт.ВопросДеятельности = Договор.ВопросДеятельности;
	Акт.ЭтапДоговора = ЭтапДоговора;
	Акт.Подготовил = Пользователи.ТекущийПользователь();
	Акт.Утвердил = Договор.Утвердил;
	Акт.Корреспондент = Договор.Корреспондент;
	Акт.КонтактноеЛицо = Договор.КонтактноеЛицо;
	Акт.ПодписалОтКорреспондента = Договор.ПодписалОтКорреспондента;
	Акт.ДатаСоздания = ТекущаяДатаСеанса();
	Акт.Валюта = Константы.ОсновнаяВалюта.Получить();
	Акт.Сумма = Стр.Всего;
	
	Если ЗначениеЗаполнено(Акт.Корреспондент) Тогда 
		Строка = Акт.Корреспонденты.Добавить();
		Строка.Корреспондент = Акт.Корреспондент;
		Строка.КонтактноеЛицо = Акт.КонтактноеЛицо;
		Строка.ПодписалОтКорреспондента = Акт.ПодписалОтКорреспондента;		
	КонецЕсли;
	
	ДопРеквизиты = Акт.ДополнительныеСвойства;
	ДопРеквизиты.Вставить("ЭтапДоговора", ЭтапДоговора);
	ДопРеквизиты.Вставить("СтавкаНДС", ЭтапДоговора.СтавкаНДС);
	ДопРеквизиты.Вставить("Сумма", Стр.Всего);
	ДопРеквизиты.Вставить("СуммаНДС", Стр.НДС);
	ДопРеквизиты.Вставить("ОсвобождениеОтНДС", ЭтапДоговора.ОсвобождениеОтНДС);
	ДопРеквизиты.Вставить("СостояниеАкта", Перечисления.мСостоянияАктовВыполненныхРабот.Подготовлен);
	ДопРеквизиты.Вставить("ВидАкта", Перечисления.мВидыАктовВыполненныхРабот.Обычный);
	
	Акт.Записать();
	
	ЗафиксироватьТранзакцию();
	
	Возврат Акт.Ссылка;
КонецФункции

&НаСервере
Функция ПолучитьНомераАктов()
	СписокНомеров = Новый СписокЗначений;
	Договоры = АктыИзФайла.ПолучитьЭлементы();
	Для каждого Стр Из Договоры Цикл
		Если Стр.Пометка Тогда
			СписокНомеров.Добавить(Стр.НомерАкта);
		КонецЕсли; 
	КонецЦикла; 
	Возврат СписокНомеров;
КонецФункции

&НаСервере
Функция ПолучитьУслугу(КодТарифа, ЦенаПрейскуранта)
	Отбор = Новый Структура("КодТарифа", КодТарифа);
	ИскСтроки = Прейскурант.НайтиСтроки(Отбор);
	Если ИскСтроки.Количество() > 0 Тогда
		ЦенаПрейскуранта = ИскСтроки[0].Цена;
		Возврат ИскСтроки[0].Услуга;
	КонецЕсли; 
	Возврат Неопределено;
КонецФункции
 
&НаСервере
Функция ПолучитьНомерЭтапа(НомерАкта)
	Поз = СтрНайти(НомерАкта, "/", НаправлениеПоиска.СКонца,,1);
	Возврат Число(Сред(НомерАкта, Поз+1));
КонецФункции

&НаСервере
Функция ПолучитьПолучателя(ТзДог, Договор, Стр)
	НаименованиеОбъекта = ""+Стр.Фамилия+" "+Стр.Имя+" "+Стр.Отчество;
	
	Отбор = Новый Структура("Договор, ОбъектРаботНаименование", Договор, НаименованиеОбъекта); 
	
	ИскСтроки = ТзДог.НайтиСтроки(Отбор);
	Если ИскСтроки.Количество() = 0 Тогда
		НовОбъект = Справочники.мОбъектыРабот.СоздатьЭлемент();
		НовОбъект.Владелец = Договор.Корреспондент;
		НовОбъект.Наименование = НаименованиеОбъекта;
		НовОбъект.ПолноеНаименование = НаименованиеОбъекта;
		НовОбъект.Записать();
		Получатель = НовОбъект.Ссылка;
		
		// Добавить в ТзДог 
		НовСтр = ТзДог.Добавить();
		НовСтр.Договор = Договор;
		НовСтр.ОбъектРаботНаименование = НаименованиеОбъекта;
		НовСтр.ОбъектРабот = Получатель;
	Иначе	
		Получатель = ИскСтроки[0].ОбъектРабот;	
	КонецЕсли; 
	
	Возврат Получатель;
КонецФункции

&НаСервере
Функция ПолучитьДанныеДляАктирования() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	мЭтапыДоговоров.Ссылка КАК ЭтапДоговора,
	|	мЭтапыДоговоров.Подразделение КАК Подразделение,
	|	мЭтапыДоговоров.Исполнители.(
	|		Исполнитель,
	|		КТУ
	|	) КАК Исполнители,
	|	мЭтапыДоговоров.Владелец КАК Договор,
	|	мЭтапыДоговоров.Владелец.РегистрационныйНомер КАК РегистрационныйНомер,
	|	мЭтапыДоговоров.ОбъектРабот.Наименование КАК ОбъектРаботНаименование,
	|	мЭтапыДоговоров.ОбъектРабот КАК ОбъектРабот,
	|	мЭтапыДоговоров.НомерЭтапа
	|ИЗ
	|	Справочник.мЭтапыДоговоров КАК мЭтапыДоговоров
	|ГДЕ
	|	мЭтапыДоговоров.Владелец.РегистрационныйНомер В(&СписокНомеровДоговоров)
	|	И НЕ мЭтапыДоговоров.ПометкаУдаления
	|	И мЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0)";
	
	СписокНомеровДоговоров = ПолучитьСписокНомеровДоговоров();
	Запрос.УстановитьПараметр("СписокНомеровДоговоров", СписокНомеровДоговоров);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
КонецФункции

&НаСервере
Функция ПолучитьСписокНомеровДоговоров()
	СписокНомеров = Новый СписокЗначений;
	Договоры = АктыИзФайла.ПолучитьЭлементы();
	Для каждого Стр Из Договоры Цикл
		Если Стр.Пометка Тогда
			СписокНомеров.Добавить(Стр.НомерДоговора);
		КонецЕсли; 
	КонецЦикла; 
	Возврат СписокНомеров;
КонецФункции

&НаСервере
Функция ДокНеПуст() 
	Если Актирование.Акты.Количество() = 0 и 
		Актирование.Зарплата.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли; 
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ПометитьВсе(Команда)
	ПометитьЭлементы(АктыИзФайла, 1);
	ПересчитатьИтогиПоДоговорам();
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	ПометитьЭлементы(АктыИзФайла, 0);
	ПересчитатьИтогиПоДоговорам();
КонецПроцедуры

&НаКлиенте
Процедура ПометитьЭлементы(ТекЭл, Флаг)
	Строки = ТекЭл.ПолучитьЭлементы();
	Для каждого Эл Из Строки Цикл
		Эл.Пометка = Флаг;
		ПометитьЭлементы(Эл, Флаг);
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура АктыПометкаПриИзменении(Элемент)
	ТекДанные = Элементы.Акты.ТекущиеДанные;
	Если ТекДанные.Пометка = 2 Тогда
		ТекДанные.Пометка = 0;	
	КонецЕсли; 
	ТекЭлемент = АктыИзФайла.НайтиПоИдентификатору(ТекДанные.ПолучитьИдентификатор());
	
	ПометитьЭлементы(ТекЭлемент, ТекДанные.Пометка);
	
	Родитель = ТекЭлемент.ПолучитьРодителя();
	Пока Родитель <> Неопределено Цикл
		Родитель.Пометка = ?(УстановленноДляВсех(ТекЭлемент), ТекЭлемент.Пометка, 2);
		Родитель = Родитель.ПолучитьРодителя();
	КонецЦикла;
	
	ПересчитатьИтогоПоДоговору(ТекДанные.Договор);
	
КонецПроцедуры

&НаКлиенте
Функция УстановленноДляВсех(ТекЭлемент)
	Родитель = ТекЭлемент.ПолучитьРодителя();
	Строки = Родитель.ПолучитьЭлементы();
	Для Каждого Стр Из Строки Цикл
		Если Стр.Пометка <> ТекЭлемент.Пометка Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ОчиститьАкты()
	Договоры = АктыИзФайла.ПолучитьЭлементы();
	
	й = Договоры.Количество()-1;
	Пока й >= 0 Цикл
		Договоры.Удалить(й);
		й = й-1;
	КонецЦикла; 	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Заголовок = "Открыть файл с данными";
	ДиалогВыбораФайла.Фильтр    = "Файлы Excel (*.xls)|*.xls|Файлы Excel (*.xlsx)|*.xlsx";
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ПутьКФайлу = ДиалогВыбораФайла.ПолноеИмяФайла;
	КонецЕсли;
КонецПроцедуры

#Область Печать

&НаКлиенте
Процедура ПечатьАктов(Команда)
	ОчиститьСообщения();
	Всего = 0;
	Для каждого Акт Из АктыДляПечати Цикл
		Если Акт.Пометка Тогда
			Всего = Всего + 1;
		КонецЕсли; 	
	КонецЦикла; 
	
	Если Всего = 0 Тогда
		Сообщить("Нет отмеченных актов для печати!");
		Возврат;
	КонецЕсли; 
	
	// Вывод готовых печатных форм
	WordApp = Новый COMОбъект("Word.Application");
	
	Индикатор = мРазноеКлиент.ПолучитьИндикаторПроцесса(Всего);
	Сч=0;
	Для каждого Акт Из АктыДляПечати Цикл
		
		ОбработкаПрерыванияПользователя();
		
		Если Акт.Пометка Тогда
			
			Сч = Сч + 1;
			Индикатор.ПредставлениеПроцесса = "Подготовка к печати... "+Сч+" из "+Всего+"...";
			мРазноеКлиент.ОбработатьИндикатор(Индикатор, Сч);
			//Процент = Окр(Сч/Всего*100,0);
			//Состояние("Подготовка к печати...", Процент, ""+Сч+" из "+Всего);
			
			ПутьКФайлуНаДиске = ПолучитьПутьКФайлу(Акт.КарточкаФайла);
			Если Сч = 1 Тогда
				Док = WordApp.Documents.ADD(ПутьКФайлуНаДиске);
				//Док.Range(ПозицияОкончанияДокумента-1, ПозицияОкончанияДокумента-1).InsertBreak(2);
                Контекст = Док.Content;
                Контекст.InsertParagraphAfter();
			Иначе
				Док.Range(Контекст.End - 1, Контекст.End).InsertFile(ПутьКФайлуНаДиске, "", Ложь, Ложь);
				//Док.Range(ПозицияОкончанияДокумента-1, ПозицияОкончанияДокумента-1).InsertBreak(2);
				Контекст.InsertParagraphAfter();
			КонецЕсли;
			
			Если Сч < Всего Тогда
				// Вставка разрыва раздела с новой страницы страницы
				ПозицияОкончанияДокумента = Док.Range().End;
				Док.Range(ПозицияОкончанияДокумента-1, ПозицияОкончанияДокумента-1).InsertBreak(2);
			КонецЕсли; 
		КонецЕсли; 	
	КонецЦикла; 
	
	ПутьКФайлуНаДиске1 = ПолучитьИмяВременногоФайла("docx");
	
	Док.SaveAs(ПутьКФайлуНаДиске1);//(ПутьКФайлуНаДиске)                        
	Док.Saved = Истина;
	
	Если ПечатьСразуНаПринтер Тогда
		Если Копий > 0 Тогда
			Док.PrintOut(,,,,,,,Копий);
		Иначе 
			Док.PrintOut();
		КонецЕсли;
		
		Док.Close(); 
	Иначе
		// Открытие на просмотр файла
		ЗапуститьПриложение(ПутьКФайлуНаДиске1, , , ); 
		//Док.Close(); 
	КонецЕсли; 
	
	WordApp.Quit();	
	WordApp = Неопределено;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПутьКФайлу(КарточкаФайла)
	Возврат "" + КарточкаФайла.ТекущаяВерсияТом.ПолныйПутьWindows + КарточкаФайла.ТекущаяВерсияПутьКФайлу;	
КонецФункции

&НаКлиенте
Процедура СоздатьПечатныеФормы(Команда)
	СоздатьПечатныеФормыАктов();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПечатныеФормыАктов()
	Всего = 0;
	Для каждого Акт Из АктыДляПечати Цикл
		Если Акт.Пометка Тогда
			Всего = Всего + 1;
			Если Всего = 1 Тогда
				СтруктураНашихРеквизитов = мРаботаСДоговорами.ПолучитьНашиРеквизиты(Акт.Договор, Истина);
			КонецЕсли; 
		КонецЕсли; 	
	КонецЦикла;
	
	ЗаполнитьДанныеДляПечатиАктов();
	ГородПодразделения	= мРазное.ПолучитьГородПодразделения();
  	Индикатор = мРазноеКлиент.ПолучитьИндикаторПроцесса(Всего);
	Сч = 0;
    WordApp = Новый COMОбъект("Word.Application");
	
	Для каждого Акт Из АктыДляПечати Цикл
		
		Если Не Акт.Пометка Тогда
			Продолжить;
        КонецЕсли; 	
        
		Сч = Сч+1;
		Индикатор.ПредставлениеПроцесса = "Формирование печатных форм "+Сч+" из "+Всего+"...";
		мРазноеКлиент.ОбработатьИндикатор(Индикатор, Сч);
			
		Макет = ПолучитьМакетСервер();
		временныйПуть = КаталогВременныхФайлов();
		ПутьКФайлуНаДиске = "Акт "+Акт.НомерАкта+".docx";
		ПутьКФайлуНаДиске = СтрЗаменить(ПутьКФайлуНаДиске, "/", "_");
		ПутьКФайлуНаДиске = СтрЗаменить(ПутьКФайлуНаДиске, "\", "_");
		ПутьКФайлуНаДиске = временныйПуть + ПутьКФайлуНаДиске;
		Макет.Записать(ПутьКФайлуНаДиске);
		
		Док = WordApp.Documents.ADD(ПутьКФайлуНаДиске);
		
		Селекция = WordApp.Selection;
        
        //Поиск = Селекция.Find;
        Поиск = Док.Content.Find;
		Поиск.ClearFormatting();
		Поиск.Replacement.ClearFormatting();
		
		// Шапка документа
        Для каждого Реквизит Из СтруктураНашихРеквизитов Цикл
			//Если Реквизит.Ключ = "НашРасчетныйСчет" Тогда
			//мРазноеКлиент.Заменить(Поиск, Реквизит.Ключ, "3012163150010 в ЗАО ""МТБанк"", МФО 117");  
			//Иначе
    			мРазноеКлиент.Заменить(Поиск, Реквизит.Ключ, Реквизит.Значение);  
			//КонецЕсли; 
		КонецЦикла; 
		
		Отбор = Новый Структура("Акт", Акт.Акт);
		ИскСтроки = Корреспонденты.НайтиСтроки(Отбор);
		Если ИскСтроки.Количество() = 0 Тогда
			Сообщить("Ошибка при заполнении корресспондента в акте " + Акт.Акт+"! Печатная форма не сформирована!");
			Продолжить;
		КонецЕсли; 
		
		ДанныеКорр = ИскСтроки[0];
		мРазноеКлиент.Заменить(Поиск, "%Заказчик%", ДанныеКорр.ПолноеНаименование);  
		мРазноеКлиент.Заменить(Поиск, "%Адрес%", ДанныеКорр.Адрес); 
		Если ЗначениеЗаполнено(ДанныеКорр.НомерСчета) Тогда
			РасчетныйСчет = ДанныеКорр.НомерСчета + " " + ДанныеКорр.Банк + ", МФО "+ДанныеКорр.КодБанка;
		Иначе
			РасчетныйСчет = "_________________ " + "_________________, " + ", МФО ________ ";
		КонецЕсли; 
		//Если ЗначениеЗаполнено(ДанныеКорр.НомерСчета) Тогда
		//	РасчетныйСчет = ДанныеКорр.НомерСчета + " " + ДанныеКорр.Банк + ", "+ДанныеКорр.БанкАдрес + ", МФО "+ДанныеКорр.КодБанка;
		//Иначе
		//	РасчетныйСчет = "_________________ " + "_________________, "+"_________________ " + ", МФО ________ ";
		//КонецЕсли; 
		мРазноеКлиент.Заменить(Поиск, "%РасчетныйСчет%", РасчетныйСчет); 
        Если ЗначениеЗаполнено(ДанныеКорр.УНП) Тогда
            мРазноеКлиент.Заменить(Поиск, "[УНП %УНП%,]", "УНП %УНП%,");
            мРазноеКлиент.Заменить(Поиск, "%УНП%", ДанныеКорр.УНП);
        Иначе
            мРазноеКлиент.Заменить(Поиск, "[УНП %УНП%,]", "");
        КонецЕсли;
       Если ЗначениеЗаполнено(ДанныеКорр.ОКПО) Тогда
            мРазноеКлиент.Заменить(Поиск, "[ОКПО %ОКПО%,]", "ОКПО %ОКПО%,");
            мРазноеКлиент.Заменить(Поиск, "%ОКПО%", ДанныеКорр.ОКПО);
        Иначе
            мРазноеКлиент.Заменить(Поиск, "[ОКПО %ОКПО%,]", "");
        КонецЕсли;
		  
		мРазноеКлиент.Заменить(Поиск, "%ОКПО%", ДанныеКорр.ОКПО);  
		мРазноеКлиент.Заменить(Поиск, "%Телефон%", ДанныеКорр.Телефон);  
		
		// Заполнение акта
		РегНомер = Акт.НомерДоговора;
		ДатаРег = Формат(Акт.ДатаДоговора,"ДЛФ=D");
		НомерАкта = Акт.НомерАкта;
		ДатаАкта = Акт.ДатаАкта;
		ОтчетныйПериод = Формат(Акт.ДатаАкта,"ДФ=""ММMM yyyy 'г.'""");
		
		Если ЗначениеЗаполнено(ДатаАкта) Тогда
			ДатаАкта = Формат(ДатаАкта, "ДЛФ=DD");
		Иначе	
			ДатаАкта = "«_____»_____________201___г.";
		КонецЕсли; 
		
		мРазноеКлиент.Заменить(Поиск, "НомерДатаДоговора", РегНомер+" от "+ДатаРег);  
		мРазноеКлиент.Заменить(Поиск, "НомерАкта", НомерАкта); 
		мРазноеКлиент.Заменить(Поиск, "%Город", ГородПодразделения); 
		мРазноеКлиент.Заменить(Поиск, "%ДатаАкта%", ДатаАкта);  
		мРазноеКлиент.Заменить(Поиск, "%ОтчетныйПериод%", ОтчетныйПериод);  
		
		// Вставка штрихкода
		ДанныеОШтрихкоде = ШтрихкодированиеСервер.ПолучитьДанныеДляВставкиШтрихкодаВОбъект(Акт.Акт, Ложь, Истина);
		Если ДанныеОШтрихкоде <> Неопределено
			И ДанныеОШтрихкоде.Свойство("ДвоичныеДанныеИзображения") Тогда
			
			// Запись картинки штрихкода во временный файл
			ВременныйФайлКартинки = ПолучитьИмяВременногоФайла("png");
			ДанныеОШтрихкоде.ДвоичныеДанныеИзображения.Записать(ВременныйФайлКартинки);
			
			Док.Bookmarks("Штрихкод").Range.Select();
			Селекция = WordApp.Selection; // активная (выделенная) область 
			Рисунок = Селекция.InlineShapes.AddPicture(ВременныйФайлКартинки, Ложь, Истина);
			
			// Чтобы установить обтекание текста, конвертируем рисунок в фигуру
			Shape = Рисунок.ConvertToShape();
			Shape.WrapFormat.Type = 0; // по контуру...
			
			УдалитьФайлы(ВременныйФайлКартинки);
		КонецЕсли;
		
		// Строки таблицы
		//НачалоЗакладки = Док.Bookmarks("СтрокаТаблицы").Start;
		//КонецЗакладки = Док.Bookmarks("СтрокаТаблицы").End;
		//Селекция.Start = НачалоЗакладки;
		//Селекция.End = КонецЗакладки;
		//Селекция.Cut();
		
		ФорматЦен = "ЧДЦ=2; ЧРД=.; ЧГ=3,0";
		Отбор = Новый Структура("Акт", Акт.Акт);
		ИскСтроки = Услуги.НайтиСтроки(Отбор);
		КолвоСтрок = ИскСтроки.Количество();
		МассивСтрок = ПолучитьМассивСтрок(КолвоСтрок);
		МаксНомерСтраницы = МассивСтрок.Количество();
		НомерСтраницы = ?(МаксНомерСтраницы > 0, 1, 0);
		НомерТаблицы = 4;
		НомерСтрокиТекТаблицы = 0;
		Если КолвоСтрок > 0 Тогда
			
			СтоимостьИтого = 0;
			СуммаНДСИтого = 0;
			СтоимостьСНДСИтого = 0;
			СтавкаНДС = "";
            
			Таб = Док.Tables(4);
			
			Для й=0 По ИскСтроки.Количество()-1 Цикл
				
				НомерСтрокиТекТаблицы = НомерСтрокиТекТаблицы + 1;
				
				Если й > 0 Тогда
					Таб.Rows.Add();
				КонецЕсли;
				
				НомерПодпункта = й+1;
				Таб.Cell(НомерСтрокиТекТаблицы,1).Range.Text = НомерПодпункта;
				Таб.Cell(НомерСтрокиТекТаблицы,2).Range.Text = Строка(ИскСтроки[й].Землепользователь);
				Таб.Cell(НомерСтрокиТекТаблицы,3).Range.Text = ИскСтроки[й].НомерУчастка;
				Таб.Cell(НомерСтрокиТекТаблицы,4).Range.Text = Формат(ИскСтроки[й].ДатаВыдачи, "ДФ=dd.MM.yy");
				Таб.Cell(НомерСтрокиТекТаблицы,5).Range.Text = Формат(ИскСтроки[й].Цена, ФорматЦен);
				Таб.Cell(НомерСтрокиТекТаблицы,6).Range.Text = ИскСтроки[й].Количество;
				Таб.Cell(НомерСтрокиТекТаблицы,7).Range.Text = Формат(ИскСтроки[й].Сумма, ФорматЦен);
				Таб.Cell(НомерСтрокиТекТаблицы,8).Range.Text = ИскСтроки[й].СтавкаНДС;
				Таб.Cell(НомерСтрокиТекТаблицы,9).Range.Text = Формат(ИскСтроки[й].НДС, ФорматЦен);
				Таб.Cell(НомерСтрокиТекТаблицы,10).Range.Text = Формат(ИскСтроки[й].Всего, ФорматЦен);
				
				Если НомерСтраницы > 0 И й = МассивСтрок[МаксНомерСтраницы-1]+1  Тогда
				//Если НомерСтраницы > 0 И НомерСтраницы = МаксНомерСтраницы-1 И й = МассивСтрок[МаксНомерСтраницы-1]  Тогда
					// Вставка разрыва страницы
					//Таб.Rows.Range.InsertBreak();
					Селекция.Start = Таб.Rows(НомерСтрокиТекТаблицы).Range.Start;
					Селекция.End = Таб.Rows(НомерСтрокиТекТаблицы).Range.End;
					Селекция.SplitTable();
					Док.Range(Селекция.End+1, Селекция.End+1).InsertBreak();
					НомерСтраницы = НомерСтраницы + 1;
					
					НомерТаблицы = НомерТаблицы + 1;
					Таб = Док.Tables(НомерТаблицы);
					НомерСтрокиТекТаблицы = 1; // Одна строка уже оторвана

				КонецЕсли; 
				Если ИскСтроки[й].НДС > 0 Тогда
					СтавкаНДС = ИскСтроки[й].СтавкаНДС; 
				КонецЕсли; 
				
				СтоимостьИтого = СтоимостьИтого + ИскСтроки[й].Сумма;
				СуммаНДСИтого = СуммаНДСИтого + ИскСтроки[й].НДС;
				СтоимостьСНДСИтого = СтоимостьСНДСИтого + ИскСтроки[й].Всего;
				//й=й-1;
			КонецЦикла;
			// Всего
			мРазноеКлиент.Заменить(Поиск, "%СтоимостьИтого%", Формат(СтоимостьИтого, ФорматЦен)); 
			мРазноеКлиент.Заменить(Поиск, "%СуммаНДСИтого%", Формат(СуммаНДСИтого, ФорматЦен)); 
			мРазноеКлиент.Заменить(Поиск, "%СтоимостьСНДСИтого%", Формат(СтоимостьСНДСИтого, ФорматЦен)); 
		КонецЕсли; 
		
		// Стоимость Акта
		СтоимостьАкта = мРаботаСДоговорами.СуммаЧисломИПрописью(СтоимостьСНДСИтого, ВалютаДоговора);
		Если СуммаНДСИтого > 0 Тогда
			СуммаНДСПрописьюПолная = мРаботаСДоговорами.СуммаЧисломИПрописью(СуммаНДСИтого, ВалютаДоговора);
			СтоимостьАкта = СтоимостьАкта + ", в том числе НДС по ставке " + СтавкаНДС +"% в сумме " + СуммаНДСПрописьюПолная;
		КонецЕсли;
		мРазноеКлиент.Заменить(Поиск,"СтоимостьАкта", СтоимостьАкта); 
		
		// Подписи
		мРазноеКлиент.Заменить(Поиск, "%ПодписалДолжность", ПолучитьНаименованиеДолжности(Должность1)+Символы.ВК);
		мРазноеКлиент.Заменить(Поиск, "%МестоПодписи", ""+Символы.ВК+"_________________ ");
		мРазноеКлиент.Заменить(Поиск, "%ПодписалКратко", ПолучитьПодписантаКратко(Подписал1)+Символы.ВК);
		мРазноеКлиент.Заменить(Поиск, "%(подпись)ФИО", "         (подпись)                               (Ф.И.О.)"+Символы.ВК+"М.П.");
		мРазноеКлиент.Заменить(Поиск, "ПодписалДоверенность", "");
		//мРазноеКлиент.Заменить(Поиск, "ПодписалДоверенность", ""+Символы.ВК);
		мРазноеКлиент.Заменить(Поиск, "ДолжностьИсполнителя", ПолучитьНаименованиеДолжности(Должность2));
		мРазноеКлиент.Заменить(Поиск, "ИсполнительКратко", ПолучитьПодписантаКратко(Подписал2));
		
		мРазноеКлиент.Заменить(Поиск, "ДолжностьКорр", "_________________ "+Символы.ВК);
		мРазноеКлиент.Заменить(Поиск, "КорреспондентКратко", " _________________");
			
		Док.SaveAs(ПутьКФайлуНаДиске);//(ПутьКФайлуНаДиске)                        
		Док.Saved = Истина;
		
		Если СохранятьВАктах Тогда
			Док.Close(); 
            //WordApp.Visible = Ложь; 
			
			//Сохранить в договор
			КарточкаФайла = РаботаСФайламиКлиент.СоздатьДокументНаОсновеФайла(ПутьКФайлуНаДиске, Акт.Договор, ЭтаФорма, Истина, , , , ,);
			Акт.КарточкаФайла = КарточкаФайла;
			
			Если ЗначениеЗаполнено(Акт.Акт) Тогда
				// Сохранить в Акт вып работ
				РаботаСФайламиКлиент.СоздатьДокументНаОсновеФайла(ПутьКФайлуНаДиске, Акт.Акт, ЭтаФорма, Истина, , , , ,);
			КонецЕсли; 
			
			//// Открытие файла на редактирование из карточки в списке файлов договора
			//КомандыРаботыСФайламиКлиент.Редактировать(КарточкаФайла);
		Иначе
			Если ПечатьСразуНаПринтер Тогда
				Если Копий > 0 Тогда
					Док.PrintOut(,,,,,,,Копий);
				Иначе 
					Док.PrintOut();
				КонецЕсли;
				
				Док.Close(); 
			Иначе
				// Открытие на просмотр файла
				ЗапуститьПриложение(ПутьКФайлуНаДиске, , , ); 
			КонецЕсли; 
			
            //WordApp.Quit();	
            //WordApp = Неопределено;
			
		КонецЕсли; 
	КонецЦикла;
    WordApp.Quit();	
    WordApp = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьМассивСтрок(КолвоСтрок)
	МассивСтрок = Новый Массив;
	СтрокНаСтранице = 50;
	МинСтрокПервая = 20;
	МаксСтрокПервая = 36;
	МаксСтрокПоследняя = 31;
	
	Если КолвоСтрок < МинСтрокПервая Тогда
		// все на одной странице
		Возврат МассивСтрок;
		
	ИначеЕсли КолвоСтрок <= МаксСтрокПервая Тогда
		// на вторую надо перенести одну последнюю строку
		МассивСтрок.Добавить(КолвоСтрок-1);
		Возврат МассивСтрок;
	КонецЕсли; 
	
	// Две уже есть
	НомерСтраницы = 2;
	
	// переходим ко второй странице
	МассивСтрок.Добавить(МаксСтрокПервая);
	
	Пока 1=1 Цикл
	
		МаксНомерНаСтранице = МаксСтрокПервая + (НомерСтраницы-1)*СтрокНаСтранице;
		Если МаксНомерНаСтранице < КолвоСтрок Тогда
			// страница заполняется полностью и остается еще что-то на следующую
			МассивСтрок.Добавить(МаксНомерНаСтранице);
	    	НомерСтраницы = НомерСтраницы+1;
		Иначе
			// страница последняя, но не заполнена до конца, поместятся ли все строки на ней?
			МаксНомерПоследней = МаксСтрокПервая + МаксСтрокПоследняя + (НомерСтраницы-2)*СтрокНаСтранице;  
			Если МаксНомерПоследней <= КолвоСтрок Тогда
				// не влазит, надо еще одну страницу добавить с одной строкой
				МассивСтрок.Добавить(КолвоСтрок-1);
				НомерСтраницы = НомерСтраницы+1;
			КонецЕсли; 
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат МассивСтрок;
КонецФункции
 

&НаСервереБезКонтекста
Функция ПолучитьНаименованиеДолжности(Должность)
	Возврат Должность.Наименование;	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПодписантаКратко(Подписал)
	Возврат Подписал.ПредставлениеВДокументах;	
КонецФункции
 
&НаСервере
Процедура ЗаполнитьДанныеДляПечатиАктов()
	СписокЭтапов = ПолучитьСписокЭтапов();
	СписокКорр = ПолучитьСписокКорр();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
        |   мЭтапыДоговоровЗИС.Ссылка КАК ЭтапДоговора,
        |   мЭтапыДоговоровЗИС.НомерСтроки КАК НомерСтроки,
        |   мЭтапыДоговоровЗИС.Наименование КАК Землепользователь,
        |   мЭтапыДоговоровЗИС.НомерУчастка,
        |   мЭтапыДоговоровЗИС.ДатаВыдачи,
        |   мЭтапыДоговоровЗИС.Цена,
        |   мЭтапыДоговоровЗИС.Количество,
        |   мЭтапыДоговоровЗИС.Сумма,
        |   мЭтапыДоговоровЗИС.НДС,
        |   мЭтапыДоговоровЗИС.Всего,
        |   мЭтапыДоговоровЗИС.СтавкаНДС.Наименование КАК СтавкаНДС
        |ИЗ
        |   Справочник.мЭтапыДоговоров.ЗИС КАК мЭтапыДоговоровЗИС
        |ГДЕ
        |   мЭтапыДоговоровЗИС.Ссылка В(&СписокЭтапов)
        |   И НЕ мЭтапыДоговоровЗИС.Ссылка.ПометкаУдаления
        |
        |УПОРЯДОЧИТЬ ПО
        |   НомерСтроки
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   Корреспонденты.Ссылка КАК Корреспондент,
        |   Корреспонденты.Наименование,
        |   Корреспонденты.ПолноеНаименование,
        |   Корреспонденты.ИНН,
        |   Корреспонденты.КодПоОКПО,
        |   Корреспонденты.ОсновнойБанковскийСчет.НомерСчета,
        |   Корреспонденты.ОсновнойБанковскийСчет.СчетИБАН,
        |   Корреспонденты.ОсновнойБанковскийСчет.Банк.Код,
        |   Корреспонденты.ОсновнойБанковскийСчет.Банк.БИК,
        |   Корреспонденты.ОсновнойБанковскийСчет.Банк.Наименование,
        |   Корреспонденты.ОсновнойБанковскийСчет.Банк.Адрес
        |ПОМЕСТИТЬ Заказчики
        |ИЗ
        |   Справочник.Корреспонденты КАК Корреспонденты
        |ГДЕ
        |   Корреспонденты.Ссылка В(&СписокКорр)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   КорреспондентыКонтактнаяИнформация.Представление КАК Адрес,
        |   КорреспондентыКонтактнаяИнформация.Ссылка КАК Корреспондент
        |ПОМЕСТИТЬ тАдрес
        |ИЗ
        |   Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
        |ГДЕ
        |   КорреспондентыКонтактнаяИнформация.Ссылка В(&СписокКорр)
        |   И КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮридическийАдресКорреспондента)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   КорреспондентыКонтактнаяИнформация.Представление КАК Телефон,
        |   КорреспондентыКонтактнаяИнформация.Ссылка КАК Корреспондент
        |ПОМЕСТИТЬ тТелефон
        |ИЗ
        |   Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
        |ГДЕ
        |   КорреспондентыКонтактнаяИнформация.Ссылка В(&СписокКорр)
        |   И КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКорреспондента)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   ЕСТЬNULL(тАдрес.Адрес, ""__________________"") КАК Адрес,
        |   ЕСТЬNULL(тТелефон.Телефон, ""__________________"") КАК Телефон,
        |   Заказчики.Корреспондент как Корреспондент,
        |   Заказчики.Наименование КАК Наименование,
        |   Заказчики.ПолноеНаименование КАК ПолноеНаименование,
        |   Заказчики.ИНН КАК УНП,
        |   Заказчики.КодПоОКПО КАК ОКПО,
		//|   Заказчики.ОсновнойБанковскийСчетНомерСчета КАК НомерСчета,
        |   Заказчики.ОсновнойБанковскийСчетСчетИБАН КАК НомерСчета,
		//|   Заказчики.ОсновнойБанковскийСчетБанкКод КАК КодБанка,
         |   Заказчики.ОсновнойБанковскийСчетБанкБИК КАК КодБанка,
       |   Заказчики.ОсновнойБанковскийСчетБанкНаименование КАК Банк,
        |   Заказчики.ОсновнойБанковскийСчетБанкАдрес КАК БанкАдрес
        |ИЗ
        |   Заказчики КАК Заказчики
        |       ЛЕВОЕ СОЕДИНЕНИЕ тАдрес КАК тАдрес
        |       ПО Заказчики.Корреспондент = тАдрес.Корреспондент
        |       ЛЕВОЕ СОЕДИНЕНИЕ тТелефон КАК тТелефон
        |       ПО Заказчики.Корреспондент = тТелефон.Корреспондент";

	Запрос.УстановитьПараметр("СписокЭтапов", СписокЭтапов);
 	Запрос.УстановитьПараметр("СписокКорр", СписокКорр);

	Результат = Запрос.ВыполнитьПакет();
	
	// Заполнение таблиц формы данными для печати в актах
	
	// Услуги
	Выборка = Результат[0].Выбрать();
	
	Услуги.Очистить();

	Пока Выборка.Следующий() Цикл
		Отбор = Новый Структура("ЭтапДоговора", Выборка.ЭтапДоговора);
		ИскСтроки = АктыДляПечати.НайтиСтроки(Отбор);
		Если ИскСтроки.Количество() > 0 Тогда
			Услуга = Услуги.Добавить();
			ЗаполнитьЗначенияСвойств(Услуга, Выборка);
			Услуга.Акт = ИскСтроки[0].Акт;
		КонецЕсли; 
	КонецЦикла;
	
	// Корреспонденты
 	Выборка = Результат[4].Выбрать();
	
	Корреспонденты.Очистить();

	Пока Выборка.Следующий() Цикл
		Отбор = Новый Структура("Корреспондент", Выборка.Корреспондент);
		ИскСтроки = АктыДляПечати.НайтиСтроки(Отбор);
		Если ИскСтроки.Количество() > 0 Тогда
			Стр = Корреспонденты.Добавить();
			ЗаполнитьЗначенияСвойств(Стр, Выборка);
			Стр.Акт = ИскСтроки[0].Акт;
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры 

&НаСервере
Функция ПолучитьСписокЭтапов()
	Сп = новый СписокЗначений;
	Для каждого Акт Из АктыДляПечати Цикл
		Если Акт.Пометка Тогда
			Сп.Добавить(Акт.ЭтапДоговора);
		КонецЕсли; 
	КонецЦикла; 
	Возврат Сп;
КонецФункции

&НаСервере
Функция ПолучитьСписокКорр()
	Сп = новый СписокЗначений;
	Для каждого Акт Из АктыДляПечати Цикл
		Если Акт.Пометка Тогда
			Сп.Добавить(Акт.Корреспондент);
		КонецЕсли; 
	КонецЦикла; 
	Возврат Сп;
КонецФункции

&НаСервере
Функция ПолучитьМакетСервер()
	Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет("ПФ_DOCX_АктЗИС");
КонецФункции

&НаСервере
Функция ПолучитьЧисловойНомерДоговора(НомерАкта)
	Поз = СтрНайти(НомерАкта, "-");
	Если Поз > 0 Тогда
		Возврат Число(Лев(НомерАкта, Поз-1));
	КонецЕсли; 
	Возврат 0;
КонецФункции

#КонецОбласти 


&НаКлиенте
Процедура ПериодРегистрацииПриИзменении(Элемент)
	ЗаполнитьАкты();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАкты()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВнутренниеДокументы.Ссылка КАК Акт,
		|	ВнутренниеДокументы.ДатаРегистрации КАК ДатаАкта,
		|	ВнутренниеДокументы.Корреспондент КАК Корреспондент,
		|	ВнутренниеДокументы.ЭтапДоговора.Владелец КАК Договор,
		|	ВнутренниеДокументы.ЭтапДоговора.Владелец.ДатаРегистрации КАК ДатаДоговора,
		|	ВнутренниеДокументы.ЭтапДоговора.Владелец.РегистрационныйНомер КАК НомерДоговора,
		|	ВнутренниеДокументы.ЭтапДоговора КАК ЭтапДоговора,
		|	ВнутренниеДокументы.Сумма КАК Всего,
		|	ГОД(ВнутренниеДокументы.ЭтапДоговора.Владелец.ДатаРегистрации) КАК ГодДоговора,
		|	ВнутренниеДокументы.РегистрационныйНомер КАК НомерАкта
		|ПОМЕСТИТЬ Акты
		|ИЗ
		|	Справочник.ВнутренниеДокументы КАК ВнутренниеДокументы
		|ГДЕ
		|	ВнутренниеДокументы.ДатаРегистрации МЕЖДУ &Дата1 И &Дата2
		|	И НЕ ВнутренниеДокументы.ПометкаУдаления
		|	И ВнутренниеДокументы.ЭтапДоговора.Владелец.ВидДокумента = &ВидДокумента
		|	И ВнутренниеДокументы.ВидДокумента = &ВидДокументаАкт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(Файлы.ТекущаяВерсияДатаМодификацииФайла) КАК ТекущаяВерсияДатаМодификацииФайла,
		|	Файлы.ВладелецФайла КАК Акт
		|ПОМЕСТИТЬ ТабФайлы
		|ИЗ
		|	Справочник.Файлы КАК Файлы
		|ГДЕ
		|	Файлы.ВладелецФайла В
		|			(ВЫБРАТЬ
		|				Акты.Акт
		|			ИЗ
		|				Акты КАК Акты)
		|	И НЕ Файлы.ПометкаУдаления
		|	И Файлы.ТекущаяВерсияРасширение = ""docx""
		|
		|СГРУППИРОВАТЬ ПО
		|	Файлы.ВладелецФайла
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Акты.Акт КАК Акт,
		|	Акты.ДатаАкта КАК ДатаАкта,
		|	Акты.Корреспондент КАК Корреспондент,
		|	Акты.Договор КАК Договор,
		|	Акты.ДатаДоговора КАК ДатаДоговора,
		|	Акты.НомерДоговора КАК НомерДоговора,
		|	Акты.ЭтапДоговора КАК ЭтапДоговора,
		|	Акты.Всего КАК Всего,
		|	Акты.ГодДоговора КАК ГодДоговора,
		|	Акты.НомерАкта КАК НомерАкта,
		|	Файлы.Ссылка КАК КарточкаФайла,
		|	ИСТИНА КАК Пометка
		|ИЗ
		|	Акты КАК Акты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Файлы КАК Файлы
		|			ЛЕВОЕ СОЕДИНЕНИЕ ТабФайлы КАК ТабФайлы
		|			ПО Файлы.ВладелецФайла = ТабФайлы.Акт
		|				И Файлы.ТекущаяВерсияДатаМодификацииФайла = ТабФайлы.ТекущаяВерсияДатаМодификацииФайла
		|		ПО Акты.Акт = Файлы.ВладелецФайла
		|			И (Файлы.ВладелецФайла = ТабФайлы.Акт)
		|			И (Файлы.ТекущаяВерсияДатаМодификацииФайла = ТабФайлы.ТекущаяВерсияДатаМодификацииФайла)";
	
	Запрос.УстановитьПараметр("ВидДокумента", Справочники.ВидыВнутреннихДокументов.ДоговорВнесениеЗИС);
	Запрос.УстановитьПараметр("ВидДокументаАкт", Справочники.ВидыВнутреннихДокументов.АктВыполненныхРабот);
	Запрос.УстановитьПараметр("Дата1", ПериодРегистрации.ДатаНачала);
	Запрос.УстановитьПараметр("Дата2", ПериодРегистрации.ДатаОкончания);
	
	Результат = Запрос.Выполнить().Выгрузить();
	АктыДляПечати.Загрузить(Результат);
	Для каждого Стр Из АктыДляПечати Цикл
		Стр.ДляСортировки = Стр.ГодДоговора*1000000 + ПолучитьЧисловойНомерДоговора(Стр.НомерАкта);
	КонецЦикла; 
	АктыДляПечати.Сортировать("ДляСортировки");		
КонецПроцедуры

#Область ОбработчикиФормы
&НаКлиенте
Процедура Подписал1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВидДокумента = ПредопределенноеЗначение("Справочник.ВидыВнутреннихДокументов.АктВыполненныхРабот");
	Подписал1 = РаботаСПользователямиКлиент.ПолучитьПодписанта(Организация, ВидДокумента);
	Должность1 = РаботаСПользователями.ПолучитьДолжность(Подписал1);
КонецПроцедуры

&НаКлиенте
Процедура Подписал1ПриИзменении(Элемент)
	Должность1 = РаботаСПользователями.ПолучитьДолжность(Подписал1);
КонецПроцедуры

&НаКлиенте
Процедура Подписал1ИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
    ВидДокумента = ПредопределенноеЗначение("Справочник.ВидыВнутреннихДокументов.АктВыполненныхРабот");
	Подписал1 = РаботаСПользователямиКлиент.ПолучитьПодписанта(Организация, ВидДокумента, Текст);
КонецПроцедуры

&НаКлиенте
Процедура Подписал2ПриИзменении(Элемент)
	Должность2 = РаботаСПользователями.ПолучитьДолжность(Подписал2);
КонецПроцедуры
 
&НаКлиенте
Процедура ПометитьВсеАкты(Команда)
	Для каждого Стр Из АктыДляПечати Цикл
		Стр.Пометка = Истина;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометкиАкты(Команда)
	Для каждого Стр Из АктыДляПечати Цикл
		Стр.Пометка = Ложь;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(ПериодРегистрации) Тогда
		ЗаполнитьАкты();	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура АктированиеПриИзменении(Элемент)
	ДатаАктов = ПолучитьДатуАктирования(Актирование);
КонецПроцедуры
	

&НаСервереБезКонтекста
Функция ПолучитьДатуАктирования(Актирование)
	Возврат Актирование.Дата;	
КонецФункции

&НаКлиенте
Процедура АктыЭтоЮрЛицоПриИзменении(Элемент)
	ТекДанные = Элементы.Акты.ТекущиеДанные;
	Если ЦенаДляЮрЛиц = 0 или ЦенаДляФизЛиц = 0 Тогда
		ЗаполнитьЦены();	
	КонецЕсли; 
	Если ТекДанные.ЭтоЮрЛицо Тогда
		ТекДанные.Цена = ЦенаДляЮрЛиц;
		ТекДанные.ЮрФизЛицо = ЮрЛицо;
	Иначе
		ТекДанные.Цена = ЦенаДляФизЛиц;	
		ТекДанные.ЮрФизЛицо = ФизЛицо;
	КонецЕсли; 
	РассчитатьСумму();
	РассчитатьНДС();
	РассчитатьВсего();
КонецПроцедуры

&НаКлиенте
Процедура АктыЦенаПриИзменении(Элемент)
	РассчитатьСумму();
	РассчитатьНДС();
	РассчитатьВсего();
КонецПроцедуры

&НаКлиенте
Процедура АктыКоличествоПриИзменении(Элемент)
	РассчитатьСумму();
	РассчитатьНДС();
	РассчитатьВсего();
КонецПроцедуры

&НаКлиенте
Процедура АктыСуммаПриИзменении(Элемент)
	РассчитатьНДС();
	РассчитатьВсего();
КонецПроцедуры

&НаКлиенте
Процедура АктыСтавкаНДСПриИзменении(Элемент)
	РассчитатьНДС();
	РассчитатьВсего();
КонецПроцедуры

&НаКлиенте
Процедура АктыНДСПриИзменении(Элемент)
	РассчитатьВсего();
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСумму()
	ТекДанные = Элементы.Акты.ТекущиеДанные;
	ТекДанные.Сумма = ТекДанные.Цена * ТекДанные.Количество;
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьНДС()
	ТекДанные = Элементы.Акты.ТекущиеДанные;
	ТекДанные.НДС = Окр(ТекДанные.Сумма * ПолучитьЗначениеСтавкиНДС(ТекДанные.СтавкаНДС)/100, 2);
КонецПроцедуры
 
&НаКлиенте
Процедура РассчитатьВсего()
	ТекДанные = Элементы.Акты.ТекущиеДанные;
	ТекДанные.Всего = ТекДанные.Сумма + ТекДанные.НДС;
	ПересчитатьИтогоПоДоговору(ТекДанные.Договор);
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьИтогоПоДоговору(Договор)
	//ТекДанные = Элементы.Акты.ТекущиеДанные;
	Если ЗначениеЗаполнено(Договор) Тогда
		Договоры = АктыИзФайла.ПолучитьЭлементы();
		Для каждого Стр Из Договоры Цикл
			Если Стр.Договор = Договор Тогда
				Стр.Сумма = 0;
				Стр.НДС = 0;
				Стр.Всего = 0;
				Строки = Стр.ПолучитьЭлементы();
				Для каждого Строка Из Строки Цикл
					Если Строка.Пометка = 1 Тогда
						Стр.Сумма = Стр.Сумма + Строка.Сумма;
						Стр.НДС = Стр.НДС + Строка.НДС;
						Стр.Всего = Стр.Всего + Строка.Всего;
					КонецЕсли; 
				КонецЦикла; 
				Прервать;	
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьИтогиПоДоговорам()
	ЭлементыДерева = АктыИзФайла.ПолучитьЭлементы();
	Для каждого Эл Из ЭлементыДерева Цикл
		ПересчитатьИтогоПоДоговору(Эл.Договор);
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница.Имя = "СтраницаПечати" Тогда
		Если ЗначениеЗаполнено(ПериодРегистрации) Тогда
			Если АктыДляПечати.Количество() = 0 Тогда
				ЗаполнитьАкты();
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры
#КонецОбласти
 


