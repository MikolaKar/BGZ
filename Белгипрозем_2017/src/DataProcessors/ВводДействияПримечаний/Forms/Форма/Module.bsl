&НаСервере
Функция ПоместитьДелаВоВременноеХранилище()

    //Возврат ПоместитьВоВременноеХранилище(Объект.ДелаХраненияДокументов.Выгрузить(,"ДелоХраненияДокументов"), УникальныйИдентификатор);
	
КонецФункции


&НаСервереБезКонтекста
Функция ПолучитьСписокПримечаний(ГруппаПримечаний)
       //{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
    // Данный фрагмент построен конструктором.
    // При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   ВложенныйЗапрос.Ссылка КАК Примечание
        |ИЗ
        |   (ВЫБРАТЬ
        |       ПримечанияСборника.Ссылка КАК Ссылка
        |   ИЗ
        |       Справочник.ПримечанияСборника КАК ПримечанияСборника
        |   ГДЕ
        |       ПримечанияСборника.Родитель В ИЕРАРХИИ(&Группа)
        |       И ПримечанияСборника.ЭтоГруппа = ЛОЖЬ) КАК ВложенныйЗапрос";

    Запрос.УстановитьПараметр("Группа", ГруппаПримечаний);

    Результат = Запрос.Выполнить().Выгрузить();

    //ВыборкаДетальныеЗаписи = Результат.Выбрать();

    //Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
    //    // Вставить обработку выборки ВыборкаДетальныеЗаписи
    //КонецЦикла;
    Возврат Результат;
КонецФункции // ПолучитьСписокПримечаний(ЭлементМассива)()


&НаКлиенте
Процедура ДобавитьСтрокуВыделенные(ЭлементМассива,ПараметрыОтбора)
    Если Выбранные.НайтиСтроки(ПараметрыОтбора).Количество() > 0 Тогда
        
        ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
        НСтр("ru = 'Примечание ""%1"" уже выбрано!'"),
        Строка(ЭлементМассива));
        //ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
        //	НСтр("ru = 'Примечание ""%1"" уже выбрано!'"),
        //	Строка(ВыбранноеЗначение));
        
        Предупреждение(ТекстСообщения);
        
    Иначе
        НоваяСтрока = Выбранные.Добавить();
        НоваяСтрока.Примечание = ЭлементМассива;
        Элементы.Выбранные.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
    КонецЕсли;
КонецПроцедуры // ДобавитьСтрокуВыделенные()


&НаКлиенте
Процедура ВыборПримечания(ВыбранноеЗначение)
	Для каждого ЭлементМассива Из ВыбранноеЗначение Цикл
    
        
        Если ЭлементМассива.ЭтоГруппа Тогда
        
            ТаблицаПримечаний = ПолучитьСписокПримечаний(ЭлементМассива);
            
            Для каждого СтрокаТаблицаПримечаний Из ТаблицаПримечаний Цикл
                ПараметрыОтбора = Новый Структура("Примечание", СтрокаТаблицаПримечаний.Примечание);
                ДобавитьСтрокуВыделенные(СтрокаТаблицаПримечаний.Примечание,ПараметрыОтбора);
            КонецЦикла; 
        Иначе
            ПараметрыОтбора = Новый Структура("Примечание", ЭлементМассива);
            ДобавитьСтрокуВыделенные(ЭлементМассива,ПараметрыОтбора);	
        КонецЕсли; 
        
        //ПараметрыОтбора = Новый Структура("Примечание", ВыбранноеЗначение);
    КонецЦикла; 
	
КонецПроцедуры	

&НаКлиенте
Процедура Включить(Команда)
	
	ТекущийВыбор = Элементы.ПримечанияСборника.ВыделенныеСтроки;
	Если ТекущийВыбор <> Неопределено Тогда 
		ВыборПримечания(ТекущийВыбор);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Исключить(Команда)
	
	ТекущаяСтрока = Элементы.Выбранные.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	СтрокаПоИдентификатору = Выбранные.НайтиПоИдентификатору(ТекущаяСтрока);
	Выбранные.Удалить(СтрокаПоИдентификатору);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	ВыборПримечания(ПараметрыПеретаскивания.Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ПоместитьДелаВоВременноеХранилище();
	ОповеститьОВыборе(АдресВременногоХранилища);
	
КонецПроцедуры

&НаКлиенте
Процедура ПримечанияСборникаВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыборПримечания(Значение);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВыбранные(СтруктураПередачи)
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   ДействиеПримечанийСрезПоследних.Примечание
        |ИЗ
        |   РегистрСведений.ДействиеПримечаний.СрезПоследних(&НачПериода, ) КАК ДействиеПримечанийСрезПоследних
        |ГДЕ
        |   ДействиеПримечанийСрезПоследних.СборникРабот = &ВыбВидРабот
        |
        |УПОРЯДОЧИТЬ ПО
        |   ДействиеПримечанийСрезПоследних.Примечание.СсылкаНаСборник";

    Запрос.УстановитьПараметр("ВыбВидРабот", СтруктураПередачи.ВидРабот);
    Запрос.УстановитьПараметр("НачПериода", СтруктураПередачи.ДатаНачала);

    Результат = Запрос.Выполнить();

    ВыборкаДетальныеЗаписи = Результат.Выбрать();

    Выбранные.Очистить();
    
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = Выбранные.Добавить();
		НоваяСтрока.Примечание = ВыборкаДетальныеЗаписи.Примечание;
		Элементы.Выбранные.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
    КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВидРаботПриИзменении(Элемент)
    СтруктураПередачи = Новый Структура("ДатаНачала,ВидРабот",ДатаНачала, ВидРабот); 
    ЗаполнитьВыбранные(СтруктураПередачи);
КонецПроцедуры

&НаКлиенте
Процедура ПримечанияСборникаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    СтандартнаяОбработка = Ложь;
    ВыборПримечания(ВыбраннаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
    СтруктураПередачи = Новый Структура("ДатаНачала,ВидРабот",ДатаНачала, ВидРабот); 
    ЗаписатьНаСервере(СтруктураПередачи);
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере(СтруктураПередачи)
    
	НаборЗаписей = РегистрыСведений.ДействиеПримечаний.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(СтруктураПередачи.ДатаНачала);
	НаборЗаписей.Отбор.СборникРабот.Установить(СтруктураПередачи.ВидРабот);

    НаборЗаписей.Записать();
    
    Для каждого СтрокаПримечания Из Выбранные Цикл
 		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Период = СтруктураПередачи.ДатаНачала;
		НоваяЗапись.СборникРабот = СтруктураПередачи.ВидРабот;
		НоваяЗапись.Примечание = СтрокаПримечания.Примечание;
    КонецЦикла;
   
	НаборЗаписей.Записать();

КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
    СтруктураПередачи = Новый Структура("ДатаНачала,ВидРабот",ДатаНачала, ВидРабот); 
    ЗаполнитьВыбранные(СтруктураПередачи);
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВсе(Команда)
    Выбранные.Очистить();
КонецПроцедуры
