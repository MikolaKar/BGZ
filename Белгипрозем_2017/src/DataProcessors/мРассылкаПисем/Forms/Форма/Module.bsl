&НаКлиенте
Перем Док;

&НаКлиенте
Перем WordApp;

&НаКлиенте
Перем Селекция, НачалоЗакладки, Поиск;

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
	ПосчитатьВсегоОтмеченных();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	мЭтапыДоговоров.Владелец.Корреспондент КАК Корреспондент,
		|	мЭтапыДоговоров.Владелец КАК Договор,
		|	СУММА(ВЫБОР
		|			КОГДА РасчетыСПокупателямиОбороты.СуммаПриход > 0
		|				ТОГДА ВЫБОР
		|						КОГДА РасчетыСПокупателямиОбороты.Период < &ДатаДеноминации
		|							ТОГДА ВЫРАЗИТЬ(РасчетыСПокупателямиОбороты.СуммаПриход / 10000 КАК ЧИСЛО(19, 2))
		|						КОГДА РасчетыСПокупателямиОбороты.Период < &ДатаПослеДеноминации
		|							ТОГДА 0
		|						ИНАЧЕ РасчетыСПокупателямиОбороты.СуммаПриход
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Оплата,
		|	СУММА(ВЫБОР
		|			КОГДА РасчетыСПокупателямиОбороты.Период < &ДатаДеноминации
		|				ТОГДА ВЫРАЗИТЬ(РасчетыСПокупателямиОбороты.СуммаРасход / 10000 КАК ЧИСЛО(19, 2))
		|			КОГДА РасчетыСПокупателямиОбороты.Период < &ДатаПослеДеноминации
		|				ТОГДА 0
		|			ИНАЧЕ РасчетыСПокупателямиОбороты.СуммаРасход
		|		КОНЕЦ) КАК Заактировано,
		|	ВЫБОР
		|		КОГДА мЭтапыДоговоров.ДатаПоследнейЗаписи < &ДатаДеноминации
		|			ТОГДА ВЫРАЗИТЬ(мЭтапыДоговоров.СтоимостьСНДС / 10000 КАК ЧИСЛО(19, 2))
		|		ИНАЧЕ мЭтапыДоговоров.СтоимостьСНДС
		|	КОНЕЦ КАК Стоимость
		|ПОМЕСТИТЬ Этапы
		|ИЗ
		|	Справочник.мЭтапыДоговоров КАК мЭтапыДоговоров
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПокупателями.Обороты(, , День, ) КАК РасчетыСПокупателямиОбороты
		|		ПО (РасчетыСПокупателямиОбороты.ЭтапДоговора = мЭтапыДоговоров.Ссылка)
		|ГДЕ
		|	НЕ мЭтапыДоговоров.ПометкаУдаления
		|	И мЭтапыДоговоров.Владелец.Корреспондент.ЮрФизЛицо <> &ЮрФизЛицо
		|	И НЕ мЭтапыДоговоров.Владелец.НеДействует
		|	И мЭтапыДоговоров.ВидРабот <> &ВидРабот
		|
		|СГРУППИРОВАТЬ ПО
		|	мЭтапыДоговоров.Владелец.Корреспондент,
		|	мЭтапыДоговоров.Владелец,
		|	мЭтапыДоговоров.СтоимостьСНДС,
		|	мЭтапыДоговоров.ДатаПоследнейЗаписи
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР
		|			КОГДА РасчетыСПокупателямиОбороты.СуммаПриход > 0
		|				ТОГДА ВЫБОР
		|						КОГДА РасчетыСПокупателямиОбороты.Период < &ДатаДеноминации
		|							ТОГДА ВЫРАЗИТЬ(РасчетыСПокупателямиОбороты.СуммаПриход / 10000 КАК ЧИСЛО(19, 2))
		|						КОГДА РасчетыСПокупателямиОбороты.Период < &ДатаПослеДеноминации
		|							ТОГДА 0
		|						ИНАЧЕ РасчетыСПокупателямиОбороты.СуммаПриход
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ)+0.05 < ВЫБОР
		|		КОГДА мЭтапыДоговоров.ДатаПоследнейЗаписи < &ДатаДеноминации
		|			ТОГДА ВЫРАЗИТЬ(мЭтапыДоговоров.СтоимостьСНДС / 10000 КАК ЧИСЛО(19, 2))
		|		ИНАЧЕ мЭтапыДоговоров.СтоимостьСНДС
		|	КОНЕЦ И
		|	(мЭтапыДоговоров.Владелец.ДатаРегистрации >= &ДатаРегистрации
		|		ИЛИ СУММА(ВЫБОР
		|				КОГДА РасчетыСПокупателямиОбороты.Период < &ДатаДеноминации
		|					ТОГДА ВЫРАЗИТЬ(РасчетыСПокупателямиОбороты.СуммаРасход / 10000 КАК ЧИСЛО(19, 2))
		|				КОГДА РасчетыСПокупателямиОбороты.Период < &ДатаПослеДеноминации
		|					ТОГДА 0
		|				ИНАЧЕ РасчетыСПокупателямиОбороты.СуммаРасход
		|			КОНЕЦ) > СУММА(ВЫБОР
		|				КОГДА РасчетыСПокупателямиОбороты.Период < &ДатаДеноминации
		|					ТОГДА ВЫРАЗИТЬ(РасчетыСПокупателямиОбороты.СуммаПриход / 10000 КАК ЧИСЛО(19, 2))
		|				КОГДА РасчетыСПокупателямиОбороты.Период < &ДатаПослеДеноминации
		|					ТОГДА 0
		|				ИНАЧЕ РасчетыСПокупателямиОбороты.СуммаПриход
		|			КОНЕЦ)+0.05)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорреспондентыКонтактнаяИнформация.Представление КАК ЮридическийАдрес,
		|	КорреспондентыКонтактнаяИнформация.Ссылка КАК Корреспондент
		|ПОМЕСТИТЬ ЮрАдреса
		|ИЗ
		|	Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
		|ГДЕ
		|	КорреспондентыКонтактнаяИнформация.Ссылка В
		|			(ВЫБРАТЬ
		|				Этапы.Корреспондент
		|			ИЗ
		|				Этапы КАК Этапы)
		|	И КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮридическийАдресКорреспондента)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорреспондентыКонтактнаяИнформация.Представление КАК ПочтовыйАдрес,
		|	КорреспондентыКонтактнаяИнформация.Ссылка КАК Корреспондент
		|ПОМЕСТИТЬ ПочтовыеАдреса
		|ИЗ
		|	Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
		|ГДЕ
		|	КорреспондентыКонтактнаяИнформация.Ссылка В
		|			(ВЫБРАТЬ
		|				Этапы.Корреспондент
		|			ИЗ
		|				Этапы КАК Этапы)
		|	И КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ПочтовыйАдресКорреспондента)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Этапы.Корреспондент КАК Корреспондент,
		|	СУММА(Этапы.Оплата) КАК Оплата,
		|	СУММА(Этапы.Стоимость) КАК Стоимость,
		|	СУММА(Этапы.Заактировано) КАК Заактировано,
		|	ЕСТЬNULL(ЮрАдреса.ЮридическийАдрес, """") КАК ЮридическийАдрес,
		|	ЕСТЬNULL(ПочтовыеАдреса.ПочтовыйАдрес, """") КАК ПочтовыйАдрес,
		|	Этапы.Договор КАК Договор
		|ПОМЕСТИТЬ Корр
		|ИЗ
		|	Этапы КАК Этапы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЮрАдреса КАК ЮрАдреса
		|		ПО Этапы.Корреспондент = ЮрАдреса.Корреспондент
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПочтовыеАдреса КАК ПочтовыеАдреса
		|		ПО Этапы.Корреспондент = ПочтовыеАдреса.Корреспондент
		|ГДЕ
		|	(ЕСТЬNULL(ПочтовыеАдреса.ПочтовыйАдрес, """") <> """"
		|			ИЛИ ЕСТЬNULL(ЮрАдреса.ЮридическийАдрес, """") <> """")
		|
		|СГРУППИРОВАТЬ ПО
		|	Этапы.Корреспондент,
		|	ЕСТЬNULL(ЮрАдреса.ЮридическийАдрес, """"),
		|	ЕСТЬNULL(ПочтовыеАдреса.ПочтовыйАдрес, """"),
		|	Этапы.Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Корр.Корреспондент КАК Корреспондент,
		|	ВЫБОР
		|		КОГДА Корр.ПочтовыйАдрес = """"
		|			ТОГДА Корр.ЮридическийАдрес
		|		ИНАЧЕ Корр.ПочтовыйАдрес
		|	КОНЕЦ КАК Адрес,
		|	Корр.Стоимость КАК Стоимость,
		|	Корр.Оплата КАК Оплата,
		|	Корр.Заактировано КАК Заактировано,
		|	Корр.Договор КАК Договор,
		|	ВЫРАЗИТЬ(Корр.Корреспондент.ПолноеНаименование КАК СТРОКА(1000)) КАК ПолноеНаименование
		|ИЗ
		|	Корр КАК Корр
		|
		|УПОРЯДОЧИТЬ ПО
		|	Корр.Корреспондент.Наименование
		|ИТОГИ
		|	СУММА(Стоимость),
		|	СУММА(Оплата),
		|	СУММА(Заактировано)
		|ПО
		|	Корреспондент";
		
	ВидРабот = Справочники.мВидыРаботЮрЛица.НайтиПоНаименованию("Оказание услуг по обращению за государственной регистрацией");
	Запрос.УстановитьПараметр("ВидРабот", ВидРабот);
	Запрос.УстановитьПараметр("ДатаДеноминации", Дата(2016, 7, 1));
	Запрос.УстановитьПараметр("ДатаПослеДеноминации", Дата(2016, 7, 2));
	Запрос.УстановитьПараметр("ДатаРегистрации", Дата(2015, 1, 1));
	Запрос.УстановитьПараметр("ЮрФизЛицо", Перечисления.ЮрФизЛицо.ФизЛицо);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Письма.Очистить();
	
	ВыборкаКорреспондент = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СписокКорр = Новый СписокЗначений; // для запроса исх писем
	
	Пока ВыборкаКорреспондент.Следующий() Цикл
		НовСтр = Письма.Добавить();
		НовСтр.Корреспондент = ВыборкаКорреспондент.Корреспондент;
		НовСтр.Пометка = Истина;
		
		СписокКорр.Добавить(ВыборкаКорреспондент.Корреспондент);
	
		ВыборкаДетальныеЗаписи = ВыборкаКорреспондент.Выбрать();
	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НовСтр.Адрес = ВыборкаДетальныеЗаписи.Адрес;
			НовСтр.Имя = ВыборкаДетальныеЗаписи.ПолноеНаименование;
			НовСтр.Договор = ВыборкаДетальныеЗаписи.Договор;
			Прервать;
		КонецЦикла;
	КонецЦикла;
	
	// Заполнение исх писем, если они есть
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсходящиеДокументыПолучатели.Ссылка.Ссылка КАК ИсхПисьмо,
		|	ИсходящиеДокументыПолучатели.Получатель КАК Корреспондент
		|ПОМЕСТИТЬ Письма
		|ИЗ
		|	Справочник.ИсходящиеДокументы.Получатели КАК ИсходящиеДокументыПолучатели
		|ГДЕ
		|	ИсходящиеДокументыПолучатели.Получатель В(&СписокКорр)
		|	И ИсходящиеДокументыПолучатели.Ссылка.Комментарий ПОДОБНО &Комментарий
		|	И НЕ ИсходящиеДокументыПолучатели.Ссылка.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Файлы.Ссылка КАК КарточкаФайла,
		|	ВЫРАЗИТЬ(Файлы.ТекущаяВерсияТом.ПолныйПутьWindows КАК СТРОКА(1000)) КАК ТекущаяВерсияТом,
		|	ВЫРАЗИТЬ(Файлы.ТекущаяВерсияПутьКФайлу КАК СТРОКА(1000)) КАК ТекущаяВерсияПутьКФайлу,
		|	Файлы.ВладелецФайла КАК ИсхПисьмо
		|ПОМЕСТИТЬ Файлы
		|ИЗ
		|	Справочник.Файлы КАК Файлы
		|ГДЕ
		|	Файлы.ВладелецФайла В
		|			(ВЫБРАТЬ
		|				Письма.ИсхПисьмо
		|			ИЗ
		|				Письма КАК Письма)
		|	И Файлы.ТекущаяВерсияРасширение = ""docx""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Письма.Корреспондент КАК Корреспондент,
		|	Письма.ИсхПисьмо КАК ИсхПисьмо,
		|	Файлы.ТекущаяВерсияТом КАК ТекущаяВерсияТом,
		|	Файлы.ТекущаяВерсияПутьКФайлу КАК ТекущаяВерсияПутьКФайлу,
		|	Файлы.КарточкаФайла КАК КарточкаФайла,
		|	Письма.ИсхПисьмо.РегистрационныйНомер КАК РегНомер
		|ИЗ
		|	Письма КАК Письма
		|		ЛЕВОЕ СОЕДИНЕНИЕ Файлы КАК Файлы
		|		ПО Письма.ИсхПисьмо = Файлы.ИсхПисьмо";
	
	Запрос.УстановитьПараметр("Комментарий", Комментарий);
	Запрос.УстановитьПараметр("СписокКорр", СписокКорр);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для каждого Письмо Из Письма Цикл
		Отбор = Новый Структура("Корреспондент", Письмо.Корреспондент);
		ИскСтроки = Результат.НайтиСтроки(Отбор);
		Если ИскСтроки.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(Письмо, ИскСтроки[0]);
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры
 
&НаКлиенте
Процедура СнятьПометкиПисьма(Команда)
	Для каждого Письмо Из Письма Цикл
		Письмо.Пометка = Ложь;	
	КонецЦикла; 
	ПосчитатьВсегоОтмеченных();
КонецПроцедуры

&НаКлиенте
Процедура ПометитьВсеПисьма(Команда)
	Для каждого Письмо Из Письма Цикл
		Письмо.Пометка = Истина;	
	КонецЦикла; 
	ПосчитатьВсегоОтмеченных();
КонецПроцедуры

&НаКлиенте
Процедура Отметить50(Команда)
	ВсегоПисем = Письма.Количество();
	МаксИндекс = Мин(ВсегоПисем, 50)-1;
	Для й = 0 По МаксИндекс Цикл
		Письма[й].Пометка = Истина;	
	КонецЦикла; 
	ПосчитатьВсегоОтмеченных();
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	ОчиститьСообщения();
	//Всего = 0;
	//Для каждого Письмо Из Письма Цикл
	//	Если Письмо.Пометка Тогда
	//		Всего = Всего + 1;
	//	КонецЕсли; 	
	//КонецЦикла; 
	ПосчитатьВсегоОтмеченных();
	
	Если Всего = 0 Тогда
		Сообщить("Нет выделенных писем для печати!");
		Возврат;
	КонецЕсли; 
	
	WordApp = Новый COMОбъект("Word.Application");
  	Индикатор = мРазноеКлиент.ПолучитьИндикаторПроцесса(Всего);
	Сч=0;
	Для каждого Письмо Из Письма Цикл
		
		ОбработкаПрерыванияПользователя();
		
		Если Письмо.Пометка Тогда
			
			Сч = Сч + 1;
			Индикатор.ПредставлениеПроцесса = "Подготовка к печати "+Сч+" из "+Всего+"...";
			мРазноеКлиент.ОбработатьИндикатор(Индикатор, Сч);
			
			ПутьКФайлуНаДиске = Письмо.ТекущаяВерсияТом + Письмо.ТекущаяВерсияПутьКФайлу;
            //ПутьКФайлуНаДиске = ПолучитьПутьКФайлу(Письмо.КарточкаФайла);
			Если Сч = 1 Тогда
				Док = WordApp.Documents.ADD(ПутьКФайлуНаДиске);
				Контекст = Док.Content;
				Контекст.InsertParagraphAfter();
			Иначе
				Док.Range(Контекст.End - 1, Контекст.End).InsertFile(ПутьКФайлуНаДиске, "", Ложь, Ложь);
				Контекст.InsertParagraphAfter();
			КонецЕсли;
			
			Если Сч < Всего Тогда
				// Вставка разрыва страницы
				ПозицияОкончанияДокумента = Док.Range().End;
				Док.Range(ПозицияОкончанияДокумента-1, ПозицияОкончанияДокумента-1).InsertBreak();
			КонецЕсли; 
		КонецЕсли; 	
    КонецЦикла; 
    
	ПутьКФайлуНаДиске1 = ПолучитьИмяВременногоФайла("docx");
	
	Док.SaveAs(ПутьКФайлуНаДиске1);//(ПутьКФайлуНаДиске)                        
	Док.Saved = Истина;
	Док.Close(); 
	WordApp.Quit();	
	WordApp = Неопределено;
	
	ЗапуститьПриложение(ПутьКФайлуНаДиске1,, , ); 
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПисьма(Команда)
	ОчиститьСообщения();
	WordApp = Новый COMОбъект("Word.Application");
	
	
	//Всего = 0;
	//Для каждого Стр Из Письма Цикл
	//	Если Стр.Пометка Тогда
	//		Всего = Всего + 1;
	//	КонецЕсли;
	//КонецЦикла;
	ПосчитатьВсегоОтмеченных();
	
  	Индикатор = мРазноеКлиент.ПолучитьИндикаторПроцесса(Всего);
	Сч = 0;
	
	Для каждого Стр Из Письма Цикл
		
		Если Не Стр.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		Сч = Сч+1;
		Индикатор.ПредставлениеПроцесса = "Формирование исходящих писем "+Сч+" из "+Всего+"...";
		мРазноеКлиент.ОбработатьИндикатор(Индикатор, Сч);
		
		Если Не ЗначениеЗаполнено(Стр.ИсхПисьмо) Тогда
			Стр.ИсхПисьмо = СоздатьИсходящееПисьмо(Стр.Корреспондент, Стр.Договор);
			Стр.РегНомер = ПолучитьРегистрационныйНомерИсхДок(Стр.ИсхПисьмо);
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(Стр.ИсхПисьмо) Тогда
			
			Стр.КарточкаФайла = СоздатьПечатнуюФормуПисьма(Стр);
			
			ПараметрыКарточки = ПолучитьПараметрыКарточки(Стр.КарточкаФайла);
			Стр.ТекущаяВерсияТом = ПараметрыКарточки.ТекущаяВерсияТом ;
			Стр.ТекущаяВерсияПутьКФайлу = ПараметрыКарточки.ТекущаяВерсияПутьКФайлу;
			//
			//Стр.Имя = ДанныеДляПисьма.Получатель;
			//Стр.Адрес = ДанныеДляПисьма.ПочтовыйАдрес;
		Иначе	
			//Сообщить("Для "+Стр.Акт+" исх. письмо не создано!", СтатусСообщения.ОченьВажное);
			Индекс = Сч - 1;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Для "+Стр.Корреспондент+" исх. письмо не создано!";
			Сообщение.Поле = "Письма["+Индекс+"].ИсхПисьмо";
			Сообщение.Сообщить(); 
		КонецЕсли; 
	КонецЦикла; 
	
	WordApp.Quit();	
	WordApp = Неопределено;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПараметрыКарточки(КарточкаФайла) 
	ПараметрыКарточки = Новый Структура();
	ПараметрыКарточки.Вставить("ТекущаяВерсияТом", КарточкаФайла.ТекущаяВерсияТом.ПолныйПутьWindows);
	ПараметрыКарточки.Вставить("ТекущаяВерсияПутьКФайлу", КарточкаФайла.ТекущаяВерсияПутьКФайлу);
	Возврат ПараметрыКарточки;
КонецФункции

&НаСервере
Функция СоздатьИсходящееПисьмо(Корреспондент, Договор)
	
	ИсхДок = Справочники.ИсходящиеДокументы.СоздатьЭлемент();
	ИсхДок.ВидДокумента = ВидИсхДок;
	ИсхДок.ДатаСоздания = ДатаРегистрации;
	ИсхДок.НоменклатураДел = НоменклатураДел;
	ИсхДок.Подготовил = Подготовил;
    ИсхДок.Подписал = ПодписалПисьмо;
	ИсхДок.ВопросДеятельности = ВопросДеятельности;
	ИсхДок.ГрифДоступа = ГрифДоступа;
	ИсхДок.Организация = Организация;
	ИсхДок.Подразделение = Подразделение;
	ИсхДок.Заголовок = ЗаголовокПисьма;
	ИсхДок.Наименование = ЗаголовокПисьма;
	ИсхДок.Содержание = Содержание;
	ИсхДок.Комментарий = Комментарий;
	////ИсхДок.ЛистовВПриложениях = ДанныеДляПисьма.Листов;
	////ИсхДок.КоличествоПриложений = ДанныеДляПисьма.Приложений;
	
	// Получатель
	СтрокаПолучателя = ИсхДок.Получатели.Добавить();
	СтрокаПолучателя.Получатель = Корреспондент;
	СтрокаПолучателя.Адресат = "";
	СтрокаПолучателя.СпособОтправки = СпособОтправки;
	
	// Регистрация и запись
	Зарегистрировать(ИсхДок);
	
	// Связь
	ТипСвязи = Справочники.ТипыСвязей.ПредметПереписки;
	СвязиДокументов.СоздатьСвязь(ИсхДок.Ссылка, Договор, ТипСвязи, Подготовил, ДатаРегистрации); 
	
	Возврат ИсхДок.Ссылка;
КонецФункции 

&НаСервере
Процедура Зарегистрировать(ИсхДок) 
	Нумератор = Нумерация.ПолучитьНумераторДокумента(ИсхДок);
	
	Если ЗначениеЗаполнено(Нумератор) Тогда // автоматическая нумерация
		
		//ДатаРегистрации = ТекущаяДата();
		//ТекущийПользователь = Пользователи.ТекущийПользователь();
		
		ИсхДок.ДатаРегистрации = ДатаРегистрации;
		
		// сформируем текущий номер
		СтруктураПараметров = НумерацияКлиентСервер.ПолучитьПараметрыНумерации(ИсхДок);
		Нумерация.СформироватьЧисловойНомерДокумента(СтруктураПараметров, ИсхДок.ЧисловойНомер);
		
		ОписанияОшибок = Новый СписокЗначений;
		СтруктураПараметров = НумерацияКлиентСервер.ПолучитьПараметрыНумерации(ИсхДок);
		Нумерация.СформироватьСтроковыйНомерДокумента(СтруктураПараметров, ИсхДок.РегистрационныйНомер, ОписанияОшибок);
		
		ИсхДок.Зарегистрировал = Подготовил;
		ИсхДок.Записать();
		
		Делопроизводство.ЗаписатьСостояниеДокумента(
		ИсхДок.Ссылка, 
		ДатаРегистрации, 
		Перечисления.СостоянияДокументов.Зарегистрирован, 
		Подготовил);
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Функция СоздатьПечатнуюФормуПисьма(Стр)
	Получатель = Стр.Корреспондент;
	ДатаРег = ДатаРегистрации;
	РегНомер = Стр.РегНомер;
	
	ИнициализироватьДокументWord();
	
	// Заполнение письма
	мРазноеКлиент.Заменить(Поиск, "/ДатаРег/", Формат(ДатаРег, "ДЛФ = D"));  
	мРазноеКлиент.Заменить(Поиск, "/РегНомер/", РегНомер);  
	мРазноеКлиент.Заменить(Поиск, "/Тема/", Тема);
	
	_Содержание = СтрЗаменить(Содержание, Символы.ПС, Символы.ПС+Символы.ВК+Символы.Таб);
	мРазноеКлиент.Заменить(Поиск, "/Содержание/", _Содержание);  
	
	//Если мРаботаСДоговорами.ЭтоФизЛицо(Получатель) Тогда
	//	Корреспондент = ДанныеДляПисьма.ПолучательНаименование;
	//	ВидАдреса = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ДомашнийАдресФизическогоЛица");
	//Иначе
	//	Корреспондент = ДанныеДляПисьма.ПолучательПолноеНаименование;
	//	ВидАдреса = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ПочтовыйАдресКорреспондента");
	//КонецЕсли;	
	мРазноеКлиент.Заменить(Поиск, "/Корреспондент/", Стр.Имя); 
	
	//ПочтовыйАдрес = УправлениеКонтактнойИнформацией.ПолучитьКонтактнуюИнформацияОбъекта(Получатель, ВидАдреса);	
	мРазноеКлиент.Заменить(Поиск, "/ПочтовыйАдрес/", Стр.Адрес); 
	//мРазноеКлиент.Заменить(Поиск, "/КолвоЛистов/", Листов); 
	//мРазноеКлиент.Заменить(Поиск, "/КолвоПриложений/", Приложений); 
	
	//ПолучитьДолжностьИФИОПодписал(ДанныеДляПисьма.Подписал);
	мРазноеКлиент.Заменить(Поиск, "/ДолжностьПодписал/", ДолжностьДляПечати); 
	мРазноеКлиент.Заменить(Поиск, "/ФИОПодписал/", ПодписалДляПечати);
	
	//ДанныеДляПисьма.Вставить("ПочтовыйАдрес", ПочтовыйАдрес);
	
	// Строка исполнителя
	МестоДефисаВСтроке = Найти(РегНомер, "-");
	КодПодразделения = Лев(РегНомер, МестоДефисаВСтроке - 1);
	
	ПервыйПробел = Найти(Подготовил, " ");
	ФамилияПодготовил = Лев(Подготовил, ПервыйПробел - 1);
	
	СтрокаИсполнитель = КодПодразделения+ " " + 
		ФамилияПодготовил + ": " + 
		УправлениеКонтактнойИнформацией.ПолучитьКонтактнуюИнформацияОбъекта(Подготовил, ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонПользователя"));
	мРазноеКлиент.Заменить(Поиск, "/СтрокаИсполнитель/", СтрокаИсполнитель); 
	мРазноеКлиент.Заменить(Поиск, "/ДатаИсполнитель/", Формат(ДатаРег, "ДЛФ = D")); 
	
	ДанныеОШтрихкоде = ШтрихкодированиеСервер.ПолучитьДанныеДляВставкиШтрихкодаВОбъект(Стр.ИсхПисьмо, Ложь, Истина);
	Если ДанныеОШтрихкоде <> Неопределено
		И ДанныеОШтрихкоде.Свойство("ДвоичныеДанныеИзображения") Тогда
		
		// Запись картинки штрихкода во временный файл
		ВременныйФайлКартинки = ПолучитьИмяВременногоФайла("png");
		ДанныеОШтрихкоде.ДвоичныеДанныеИзображения.Записать(ВременныйФайлКартинки);
		
		Док.Bookmarks("Штрихкод").Range.Select();
		Селекция = WordApp.Selection; // активная (выделенная) область 
		Рисунок = Селекция.InlineShapes.AddPicture(ВременныйФайлКартинки, Ложь, Истина);
		
		// Чтобы установить обтекание текста, конвертируем рисунок в фигуру
		Shape = Рисунок.ConvertToShape();
		Shape.WrapFormat.Type = 0; // по контуру...
		
		УдалитьФайлы(ВременныйФайлКартинки);
	//Иначе
	//	// Печатать штрихкод не надо
	//	мРазноеКлиент.Заменить(Поиск, "%Штрихкод%", "");
	КонецЕсли;
	
	КарточкаФайла = ВывестиДокумент(Стр.ИсхПисьмо, РегНомер);
    //КарточкаФайла = ВывестиДокумент(ИсхПисьмо, СтрокаАкт);
	Возврат КарточкаФайла;
КонецФункции 

&НаКлиенте
Процедура ИнициализироватьДокументWord() 

	ПутьКФайлуНаДиске = ПолучитьИмяВременногоФайла("docx");
	ПутьКШаблону = ПолучитьПутьКШаблону(ШаблонПисьма); 
	
	ФайлШаблона = Новый ДвоичныеДанные(ПутьКШаблону);
	ФайлШаблона.Записать(ПутьКФайлуНаДиске);
	
	Док = WordApp.Documents.ADD(ПутьКФайлуНаДиске);
	
	Селекция = WordApp.Selection;
	
	Поиск = Док.Content.Find;
	Поиск.ClearFormatting();
	Поиск.Replacement.ClearFormatting();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Подготовил = ПользователиКлиентСервер.ТекущийПользователь();
КонецПроцедуры

&НаКлиенте
Процедура ПодписалПисьмоПриИзменении(Элемент)
	ПолучитьДолжностьИФИОПодписал(ПодписалПисьмо);
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДолжностьИФИОПодписал(Пользователь)
	Если ЗначениеЗаполнено(Пользователь) Тогда
		ПодписалДолжность = РаботаСПользователями.ПолучитьДолжность(Пользователь);
		Если ЗначениеЗаполнено(ПодписалДолжность) Тогда
			ДолжностьДляПечати = ПодписалДолжность;
		Иначе
			Сообщить("Не заполнена должность у " + Пользователь, СтатусСообщения.ОченьВажное);
			ДолжностьДляПечати = "_______________________";
		КонецЕсли; 
		ПодписалДляПечати = ПолучитьФИОПодписал(Пользователь);
	Иначе	
		ДолжностьДляПечати = "_______________________";
		ПодписалДляПечати = "_______________________";
	КонецЕсли; 
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ПолучитьФИОПодписал(Пользователь) 
	Возврат Пользователь.ПредставлениеВДокументах;
КонецФункции

&НаКлиенте
Процедура ПодписалДолжностьПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ПодписалДолжность) Тогда
		ДолжностьДляПечати = ПодписалДолжность;
	Иначе
		ДолжностьДляПечати = "_______________________";
	КонецЕсли; 
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПутьКШаблону(ШаблонПисьма) 
	Возврат ШаблонПисьма.ТекущаяВерсияТом.ПолныйПутьWindows + ШаблонПисьма.ТекущаяВерсияПутьКФайлу;
КонецФункции

&НаКлиенте
Функция ВывестиДокумент(ИсхПисьмо, РегНомер) 
	WordApp.Visible = Ложь; 
	
	Док.SaveAs(ПутьКФайлуНаДиске);//(ПутьКФайлуНаДиске)                        
	Док.Saved = Истина;
	Док.Close(); 
	
	ИмяСоздаваемогоФайла = СформироватьИмяФайла(РегНомер);
	
	КарточкаФайла = РаботаСФайламиКлиент.СоздатьДокументНаОсновеФайла(
	ПутьКФайлуНаДиске, 
	ИсхПисьмо, 
	ЭтаФорма, Истина, ИмяСоздаваемогоФайла, , , ,);
	
	УдалитьФайлы(ПутьКФайлуНаДиске);	
	
	Возврат КарточкаФайла;
КонецФункции 

&НаКлиенте
Функция СформироватьИмяФайла(РегНомер) 
	ИмяФайла = СтрЗаменить(РегНомер, "/", "_");
	ИмяФайла = СтрЗаменить(ИмяФайла, "\", "_");
	ИмяФайла = СтрЗаменить(ИмяФайла, ".", "_");
	ИмяФайла = ""+ПолучитьНаименованиеВидИсхДок(ВидИсхДок)+" "+СокрЛП(ИмяФайла)+".docx";
	Возврат ИмяФайла;
КонецФункции 

&НаСервереБезКонтекста
Функция ПолучитьНаименованиеВидИсхДок(ВидИсхДок)
	Возврат ВидИсхДок.Наименование;
КонецФункции

&НаКлиенте
Процедура ШаблонПисьмаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПапкаШаблонов = ПолучитьСсылкуНаПапкуФайлов("Исходящие письма");
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВладелецФайла", ПапкаШаблонов);
	
	ОткрытьФорму("Справочник.Файлы.Форма.ФормаВыбораФайлаВПапках",
		ПараметрыФормы, 
		Элемент,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСсылкуНаПапкуФайлов(ИмяПапки)
	Возврат Справочники.ПапкиФайлов.НайтиПоНаименованию(ИмяПапки);	
КонецФункции

&НаКлиенте
Процедура ПисьмаПометкаПриИзменении(Элемент)
	ПосчитатьВсегоОтмеченных();
КонецПроцедуры

&НаКлиенте
Функция ПосчитатьВсегоОтмеченных()
	Всего = 0;
	ОбщееКоличество = 0;
	Для каждого Стр Из Письма Цикл
		ОбщееКоличество = ОбщееКоличество + 1;
		Если Стр.Пометка Тогда
			Всего = Всего + 1;
		КонецЕсли;
	КонецЦикла;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРегистрационныйНомерИсхДок(ИсхПисьмо)
	Возврат ИсхПисьмо.РегистрационныйНомер;	
КонецФункции
 
