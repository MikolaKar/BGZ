&НаКлиенте
Перем Док;

&НаКлиенте
Перем WordApp;

&НаКлиенте
Перем Селекция, НачалоЗакладки;

&НаКлиенте
Процедура Печать(Команда)
	ОчиститьСообщения();
	УстановитьДлинуСтрок();
	
	ЕстьОшибки = ПроверитьДанныеПисем();
	Если ЕстьОшибки Тогда
		Сообщить("Есть ошибки в данных, которые надо устранить до печати файла!");
		Возврат;
	КонецЕсли; 
	
	Всего = 0;
	Для каждого Уведомление Из Письма Цикл
		Если Уведомление.Пометка Тогда
			Всего = Всего + 1;
		КонецЕсли; 	
	КонецЦикла; 
	
	Если Всего = 0 Тогда
		Сообщить("Нет выделенных писем для печати уведомлений!");
		Возврат;
	КонецЕсли; 
	
	//Сохранение шаблона на диске
	Макет = ПолучитьМакетУведомления("Уведомление");
	
	СчСтр = 0; // счетчик уведомлений на странице
	Сч = 0; // общий счетчик уведомлений
 	Индикатор = мРазноеКлиент.ПолучитьИндикаторПроцесса(Всего);
	
	ИмяПоУмолчанию = СформироватьСтрокуСимволов(ДлинаСтрокиИмя); 
	Адрес1ПоУмолчанию = СформироватьСтрокуСимволов(ДлинаСтрокиАдрес1);
	Адрес2ПоУмолчанию = СформироватьСтрокуСимволов(ДлинаСтрокиАдрес2);
	
	СписокВременныхФайлов.Очистить();
	
	WordApp = Новый COMОбъект("Word.Application");
	
	Для каждого Уведомление Из Письма Цикл
		
		ОбработкаПрерыванияПользователя();
		
		Если Уведомление.Пометка Тогда
			
			Сч = Сч + 1;
			СчСтр = СчСтр + 1;
			
			Если СчСтр = 1 Тогда
				// открытие файла
				ПутьКФайлуНаДиске = ПолучитьИмяВременногоФайла("docx");
				Макет.Записать(ПутьКФайлуНаДиске);
				
				Док = WordApp.Documents.ADD(ПутьКФайлуНаДиске);
				
				Селекция = WordApp.Selection;
				
				//Док.Content.Find.ClearFormatting();
				//Док.Content.Find.Replacement.ClearFormatting();
				
				Контекст = Док.Content;
				Контекст.Select();
				ДлинаШаблона = Селекция.End;
				
				СписокВременныхФайлов.Добавить(ПутьКФайлуНаДиске);			
			КонецЕсли; 
			
			Индикатор.ПредставлениеПроцесса = "Подготовка к печати "+Сч+" из "+Всего+"...";
			мРазноеКлиент.ОбработатьИндикатор(Индикатор, Сч);
			//Процент = Окр(Сч/Всего*100,0);
			//Состояние("Подготовка к печати...", Процент, ""+Сч+" из "+Всего);
			
			// Заполнение уведомления
			Заменить(Док, "%НомераАктов"+СчСтр+"%", "");
			ВставитьШтрихКод(Уведомление, СчСтр);
			
			//ДлинаИмени = СтрДлина(СокрЛП(Уведомление.Имя));
			//Если ДлинаИмени <= ДлинаСтрокиИмя Тогда
				Имя = СокрЛП(Уведомление.Имя); 
			//Иначе
			//	// Проверяем, может краткое подойдет
			//	Если СтрДлина(Уведомление.КраткоеИмя) <= ДлинаСтрокиИмя Тогда
			//		Имя = СокрЛП(Уведомление.КраткоеИмя); 
			//	Иначе
			//		Имя = Лев(СокрЛП(Уведомление.КраткоеИмя), ДлинаСтрокиИмя);
			//	КонецЕсли; 
			//КонецЕсли; 
			Заменить(Док, "%Имя"+СчСтр+"%", Имя); 
			
			Адрес = СокрЛП(Уведомление.Адрес);
			ДлинаАдреса = СтрДлина(Адрес);
			
			Если ДлинаАдреса <= ДлинаСтрокиАдрес1 Тогда
				// Адрес одной строкой
			    Адрес1 = Адрес;
				Адрес2 = Адрес2ПоУмолчанию;
				
			Иначе
			    Адрес1 = Лев(Адрес, ДлинаСтрокиАдрес1);
				// Адрес в 2 строки
				//Определим макс длину строки 1
				ПозицияПробела = 0;
				КолвоПробелов = СтрЧислоВхождений(Адрес, " ");
				Адрес_1 = "";
				Адрес_2 = "";
				
				Для ц=1 По КолвоПробелов Цикл
					ПозицияПробела = СтрНайти(Адрес, " ", НаправлениеПоиска.СКонца, , ц);
					Если ПозицияПробела <= ДлинаСтрокиАдрес1 Тогда
						Адрес_1 = Лев(Адрес, ПозицияПробела-1);
						Адрес_2 = Сред(Адрес, ПозицияПробела+1);
						Прервать;
					КонецЕсли; 
				КонецЦикла; 
				
				Адрес1 = Адрес_1;
				
				Если СтрДлина(Адрес_2) <= ДлинаСтрокиАдрес2 Тогда
					Адрес2 = Адрес_2;
				Иначе
					// обрубаем
					Адрес2 = Лев(Адрес_2, ДлинаСтрокиАдрес2);
				КонецЕсли; 
			КонецЕсли; 
			
			Заменить(Док, "%Адрес"+СчСтр+"_1%", Адрес1); 
			Заменить(Док, "%Адрес"+СчСтр+"_2%", Адрес2); 
			
			Если СчСтр = 4 Тогда
				Если Сч <= Всего Тогда
					// Запись файла
					Док.SaveAs(ПутьКФайлуНаДиске);                        
					Док.Saved = Истина;
					Док.Close();
				КонецЕсли; 
				
				СчСтр = 0;
			Иначе
				// если общий список закончился, а на странице остались незаполненные уведомления
				Если Сч = Всего Тогда
					Для ы = СчСтр+1 По 4 Цикл
						Заменить(Док, "%НомераАктов"+ы+"%", "");
						Заменить(Док, "%Имя"+ы+"%", ИмяПоУмолчанию); 
						Заменить(Док, "%Адрес"+ы+"_1%", Адрес1ПоУмолчанию); 
						Заменить(Док, "%Адрес"+ы+"_2%", Адрес2ПоУмолчанию);
						Заменить(Док, "ШтрихКод"+ы, "");
					КонецЦикла;
					// Запись файла
					Док.SaveAs(ПутьКФайлуНаДиске);//(ПутьКФайлуНаДиске)                        
					Док.Saved = Истина;
					Док.Close();
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла; 
	
	// Вывод на печать
	//WordApp = Новый COMОбъект("Word.Application");
	Сч=0;
	ВсегоФайлов = СписокВременныхФайлов.Количество();
 	Индикатор = мРазноеКлиент.ПолучитьИндикаторПроцесса(ВсегоФайлов);
	
	Для й=0 По ВсегоФайлов-1 Цикл
		ОбработкаПрерыванияПользователя();
		
		Сч = й+1;
		Индикатор.ПредставлениеПроцесса = "Формирование файла для печати "+Сч+" из "+ВсегоФайлов+"...";
		мРазноеКлиент.ОбработатьИндикатор(Индикатор, Сч);
		//Состояние("Формирование файла для печати...", Окр((й+1)/ВсегоФайлов*100,0), ""+Сч+" из "+Всего);
		
		ПутьКФайлуНаДиске = СписокВременныхФайлов[й].Значение;
		Если й = 0 Тогда
			Док = WordApp.Documents.ADD(ПутьКФайлуНаДиске);
			Контекст = Док.Content;
			Контекст.InsertParagraphAfter();
		Иначе
			Док.Range(Док.Content.End-1, Док.Content.End).InsertFile(ПутьКФайлуНаДиске, "", Ложь, Ложь);
			//Док.Range(Контекст.End - 1, Контекст.End).InsertFile(ПутьКФайлуНаДиске, "", Ложь, Ложь);
			//Контекст.InsertParagraphAfter();
		КонецЕсли;
	КонецЦикла; 
	
	ПутьКФайлуНаДиске = ПолучитьИмяВременногоФайла("docx");
	
	Док.SaveAs(ПутьКФайлуНаДиске);//(ПутьКФайлуНаДиске)                        
	Док.Saved = Истина;
	Док.Close(); 
	WordApp.Quit();	
	WordApp = Неопределено;
	
	// Удаление временных файлов
	ВсегоФайлов = СписокВременныхФайлов.Количество();
 	Индикатор = мРазноеКлиент.ПолучитьИндикаторПроцесса(ВсегоФайлов);
	Для й=0 По ВсегоФайлов-1 Цикл
		Сч = й+1;
		Индикатор.ПредставлениеПроцесса = "Удаление временных файлов "+Сч+" из "+ВсегоФайлов+"...";
		мРазноеКлиент.ОбработатьИндикатор(Индикатор, Сч);
		//Состояние("Удаление временных файлов...", Окр((й+1)/ВсегоФайлов*100,0));
		УдалитьФайлы(СписокВременныхФайлов[й].Значение);
	КонецЦикла; 
	
	ЗапуститьПриложение(ПутьКФайлуНаДиске,, , ); 
КонецПроцедуры

&НаСервере
Функция ПолучитьМакетУведомления(ИмяМакета) 
	Возврат ПолучитьОбщийМакет(ИмяМакета);
КонецФункции

&НаКлиенте
Процедура ВставитьШтрихкод(Уведомление, Номер) 
	ДанныеОШтрихкоде = ШтрихкодированиеСервер.ПолучитьДанныеДляВставкиШтрихкодаВОбъект(Уведомление.ИсхПисьмо, Ложь, Истина);
	Если ДанныеОШтрихкоде <> Неопределено
		И ДанныеОШтрихкоде.Свойство("ДвоичныеДанныеИзображения") Тогда
		
		// Запись картинки штрихкода во временный файл
		ВременныйФайлКартинки = ПолучитьИмяВременногоФайла("png");
		ДанныеОШтрихкоде.ДвоичныеДанныеИзображения.Записать(ВременныйФайлКартинки);
		
		//Док.Bookmarks("Штрихкод"+Номер).Range.Select();
		////Нач = ТекНачалоШК.Получить(Номер-1);
		////Кон = ТекКонецШК.Получить(Номер-1);
		СтрокаПоиска = "ШтрихКод"+Номер;
		СтрокаЗамены = " ";
		////Док.Content.Find.Execute(СтрокаПоиска,  Ложь, Истина, Ложь, , , Истина, , Ложь, , 0);
		////Результат = Док.Content.Find.Execute(СтрокаПоиска,  ,  Ложь, Истина, Ложь, , , Истина, , Ложь, , 1);
		////Результат = Док.Content.Find.Execute(СтрокаПоиска,  ,  , , , , , , , , , ,,,);
		//Старт = Макс(0, Док.Content.End - ДлинаШаблона);
		Селекция.Start = 0;
		Селекция.End = ДлинаШаблона;
		//Селекция.End = Док.Content.End;
		//WordApp.Selection.Find.ClearFormatting();
		////Результат = Док.Content.Find.Execute(СтрокаПоиска,,  Ложь, Истина, Ложь, , , Истина, , Ложь, СтрокаЗамены, 2);
		Результат = WordApp.Selection.Find.Execute(СтрокаПоиска);
		////Результат = Селекция.Find.Execute(СтрокаПоиска,  ,  , , , , , , , , , ,,,);
		//
		////Селекция.End = Кон;
		////Селекция.Start = Номер*100;
		////Селекция.End = 6 + Номер*100;
		SelPic = WordApp.Selection; // активная (выделенная) область 
		Рисунок = SelPic.InlineShapes.AddPicture(ВременныйФайлКартинки, Ложь, Истина);
		
		//// Чтобы установить обтекание текста, конвертируем рисунок в фигуру
		//Shape = Рисунок.ConvertToShape();
		//Shape.WrapFormat.Type = 0; // по контуру...
		
		// Убираем строку
		//Заменить(Док, "ШтрихКод"+Номер, "");
		
		УдалитьФайлы(ВременныйФайлКартинки);
	КонецЕсли;
КонецПроцедуры 

&НаКлиенте
Функция СформироватьСтрокуСимволов(Длина) 
	СтрокаСимволов = "";
	Для й=1 По Длина Цикл
		СтрокаСимволов = СтрокаСимволов + "_";
	КонецЦикла; 
	Возврат СтрокаСимволов;
КонецФункции

&НаКлиенте
Функция ПроверитьДанныеПисем() 
	
	ЕстьОшибки = Ложь;
	УстановитьДлинуСтрок();
	ДлинаСтрокиАдрес = ДлинаСтрокиАдрес1+ДлинаСтрокиАдрес2;
	
	ВсегоСтрок = Письма.Количество();
	
	Сч = 0;
	Для каждого Стр Из Письма Цикл
		Сч = Сч+1;
	
		Процент = Окр(Сч/ВсегоСтрок*100,0);
		Состояние("Проверка таблицы...",Процент);
		
		Если Не Стр.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Стр.Адрес) Тогда
			Индекс = Сч - 1;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Нет адреса у "+Стр.Корреспондент+"!";
			Сообщение.Поле = "Письма["+Индекс+"].Адрес";
			Сообщение.Сообщить();
			ЕстьОшибки = Истина;
			Стр.Пометка = Ложь;
			
		ИначеЕсли СтрДлина(Стр.Адрес) > ДлинаСтрокиАдрес Тогда
			Индекс = Сч - 1;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Длинный адрес у "+Стр.Корреспондент+"! Сократите до "+ДлинаСтрокиАдрес+" символов.";
			Сообщение.Поле = "Письма["+Индекс+"].Адрес";
			Сообщение.Сообщить(); 
			ЕстьОшибки = Истина;
			Стр.Пометка = Ложь;
		КонецЕсли; 
		
		Если СтрДлина(Стр.Имя) > ДлинаСтрокиИмя И СтрДлина(Стр.КраткоеИмя) > ДлинаСтрокиИмя Тогда
			Индекс = Сч - 1;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "У "+Стр.Корреспондент+" длинное название! Сократите до "+ДлинаСтрокиИмя+" символов.";
			Сообщение.Поле = "Письма["+Индекс+"].КраткоеИмя";
			Сообщение.Сообщить(); 
			ЕстьОшибки = Истина;
			Стр.Пометка = Ложь;
		КонецЕсли;
		
	КонецЦикла; 
	
	Если Не ЕстьОшибки Тогда
		ПоказатьОповещениеПользователя("Ошибок в данных нет!");	
	КонецЕсли; 
	
	Возврат ЕстьОшибки;
КонецФункции 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ИсхПисьма") Тогда
		
		УстановитьДлинуСтрок();
		
		Письма.Очистить();
		Для каждого ИсхПисьмо Из Параметры.ИсхПисьма Цикл
			НовСтр = Письма.Добавить();
			НовСтр.ИсхПисьмо = ИсхПисьмо;
			
			Получатель = НовСтр.ИсхПисьмо.Получатели[0].Получатель;
			
			Если мРаботаСДоговорами.ЭтоФизЛицо(Получатель) Тогда
				ВидАдреса = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ДомашнийАдресФизическогоЛица");
			Иначе
				ВидАдреса = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ПочтовыйАдресКорреспондента");
			КонецЕсли;	
			
			НовСтр.Адрес = УправлениеКонтактнойИнформацией.ПолучитьКонтактнуюИнформацияОбъекта(Получатель, ВидАдреса);
			НовСтр.Корреспондент = Получатель;
			НовСтр.ПолноеИмя = Получатель.ПолноеНаименование;
			Если СтрДлина(НовСтр.ПолноеИмя) <= ДлинаСтрокиИмя Тогда
				НовСтр.Имя = Получатель.ПолноеНаименование;
			Иначе	
				НовСтр.Имя = Получатель.Наименование;
			КонецЕсли; 
			
			НовСтр.Пометка = Истина;
			Если СтрДлина(НовСтр.Имя) > ДлинаСтрокиИмя Тогда
				НовСтр.Пометка = Ложь;
			КонецЕсли;
			
			Если СтрДлина(НовСтр.Адрес) > ДлинаСтрокиАдрес1+ДлинаСтрокиАдрес2 Тогда
				НовСтр.Пометка = Ложь;
			КонецЕсли;
 		КонецЦикла;
		
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура УстановитьДлинуСтрок() 
	ДлинаСтрокиИмя = 63;
	ДлинаСтрокиАдрес1 = 50;
	ДлинаСтрокиАдрес2 = 70;
КонецПроцедуры 

&НаКлиенте                                                   
Процедура Заменить(Док, ИмяЗакладки, Значение)
	Док.Content.Find.Execute(ИмяЗакладки,  Ложь, Истина, Ложь, , , Истина, , Ложь, Значение, 2);
КонецПроцедуры

