// Интерфейс для запуска логики обработки
//
// Параметры
// МассивОбъектов - Массив - массив ссылок на объекты печати
// КоллекцияПечатныхФорм - ТаблицаЗначений - таблица содержащая информацию по печатным формам
// ОбъектыПечати - СписокЗначений - ссылки на объекты печати
// ПараметрыВывода - Структура - дополнительные параметры вывода (печать покомплектно и др.)
//
&НаСервере
Процедура Печать(МассивОбъектов,
                ПараметрыПечати,
				КоллекцияПечатныхФорм,
				ОбъектыПечати,
				ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Ложь;
	Если мРазное.ПолучитьГородБазы() = "Гродно" Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"РаспискаГродно", "РаспискаГродно",
		ГродноСформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати));		
	Иначе
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РаспискаМинск") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РаспискаМинск", "РаспискаМинск",
			СформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати));
			
		ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РаспискаБрест") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РаспискаБрест", "РаспискаБрест",
			СформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати));	
			
		ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РаспискаПрилуки") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РаспискаПрилуки", "РаспискаПрилуки",
			СформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати));	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати)
	
	//Сообщить("Ок");
 	УстановитьПривилегированныйРежим(Истина);
	
	ТабДок = Новый ТабличныйДокумент;
    Если Константы.М_Минск.Получить() Тогда
    	Макет = Обработки.мПечатьРаспискиВПолучении.ПолучитьМакет("РаспискаМинск");
		
    ИначеЕсли Константы.М_Брест.Получить() Тогда
    	Макет = Обработки.мПечатьРаспискиВПолучении.ПолучитьМакет("РаспискаБрест");
		
    ИначеЕсли Константы.М_Прилуки.Получить() Тогда
    	Макет = Обработки.мПечатьРаспискиВПолучении.ПолучитьМакет("РаспискаПрилуки");
	КонецЕсли; 
	
#Область ЗапросТекст	
    Запрос = Новый Запрос;
	Запрос.Текст = 
"ВЫБРАТЬ
|	ИсходящиеДокументыПолучатели.Ссылка КАК ИсхДокумент,
|	ИсходящиеДокументыПолучатели.Получатель,
|	ВЫРАЗИТЬ(СвязиДокументов.СвязанныйДокумент КАК Справочник.ВнутренниеДокументы) КАК ДокОснование,
|	ВЫРАЗИТЬ(СвязиДокументов.СвязанныйДокумент КАК Справочник.ВнутренниеДокументы).Корреспондент КАК Заказчик,
|	ВЫРАЗИТЬ(СвязиДокументов.СвязанныйДокумент КАК Справочник.ВнутренниеДокументы).ВидДокумента.ЯвляетсяКомплектомДокументов КАК ЭтоКомплект,
|	ИсходящиеДокументыПолучатели.Ссылка.Организация КАК Организация
|ПОМЕСТИТЬ ДокиОснования
|ИЗ
|	Справочник.ИсходящиеДокументы.Получатели КАК ИсходящиеДокументыПолучатели
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиДокументов КАК СвязиДокументов
|		ПО ИсходящиеДокументыПолучатели.Ссылка = СвязиДокументов.Документ
|ГДЕ
|	ИсходящиеДокументыПолучатели.НомерСтроки = 1
|	И ИсходящиеДокументыПолучатели.Ссылка В(&МассивОбъектов)
|	И СвязиДокументов.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ПредметПереписки)
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ЖурналПередачиДокументовСрезПоследних.Пользователь.Ссылка КАК Получил,
|	ДокиОснования.ИсхДокумент
|ПОМЕСТИТЬ ЖурналПередачи
|ИЗ
|	ДокиОснования КАК ДокиОснования
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналПередачиДокументов.СрезПоследних(
|				,
|				ВЫРАЗИТЬ(Документ.Ссылка КАК Справочник.ВнутренниеДокументы) В
|					(ВЫБРАТЬ
|						ДокиОснования.ДокОснование
|					ИЗ
|						ДокиОснования КАК ДокиОснования)) КАК ЖурналПередачиДокументовСрезПоследних
|		ПО ДокиОснования.ИсхДокумент = ЖурналПередачиДокументовСрезПоследних.Документ
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ДокиОснования.Получатель,
|	КорреспондентыКонтактнаяИнформация.Представление КАК Адрес,
|	ДокиОснования.ИсхДокумент
|ПОМЕСТИТЬ Адреса
|ИЗ
|	ДокиОснования КАК ДокиОснования
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
|		ПО ДокиОснования.Получатель = КорреспондентыКонтактнаяИнформация.Ссылка
|ГДЕ
|	КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ПочтовыйАдресКорреспондента)
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ДокиОснования.Получатель,
|	Адреса.Адрес,
|	ДокиОснования.ИсхДокумент.Ответственный.ПредставлениеВДокументах КАК ФИООтветственный,
|	СведенияОПользователях.Подразделение КАК ОтделОтветственный,
|	СведенияОПользователях.Должность КАК ДолжностьОтветственный,
|	ДокиОснования.ИсхДокумент,
|	ЖурналПередачиДокументовСрезПоследних.Пользователь.ПредставлениеВДокументах КАК Получил,
|	СведенияОПользователях1.Должность КАК ДолжностьПолучил
|ПОМЕСТИТЬ ИсхИнфо
|ИЗ
|	ДокиОснования КАК ДокиОснования
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПользователях КАК СведенияОПользователях
|		ПО ДокиОснования.ИсхДокумент.Ответственный = СведенияОПользователях.Пользователь
|		ЛЕВОЕ СОЕДИНЕНИЕ Адреса КАК Адреса
|		ПО ДокиОснования.Получатель = Адреса.Получатель
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналПередачиДокументов.СрезПоследних КАК ЖурналПередачиДокументовСрезПоследних
|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПользователях КАК СведенияОПользователях1
|			ПО ЖурналПередачиДокументовСрезПоследних.Пользователь.Ссылка = СведенияОПользователях1.Пользователь
|		ПО ДокиОснования.ИсхДокумент = ЖурналПередачиДокументовСрезПоследних.Документ
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ДокиОснования.ИсхДокумент,
|	ДокиОснования.ДокОснование,
|	ВЫРАЗИТЬ(СвязиДокументов.СвязанныйДокумент КАК Справочник.ВнутренниеДокументы) КАК ДелаКомплекта,
|	ВЫРАЗИТЬ(СвязиДокументов.СвязанныйДокумент КАК Справочник.ВнутренниеДокументы).РегистрационныйНомер КАК НомерДелаКомплекта,
|	ВЫРАЗИТЬ(СвязиДокументов.СвязанныйДокумент КАК Справочник.ВнутренниеДокументы).ДатаРегистрации КАК ДатаДелаКомплекта
|ПОМЕСТИТЬ ДелаКомплектов
|ИЗ
|	ДокиОснования КАК ДокиОснования
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиДокументов КАК СвязиДокументов
|		ПО ДокиОснования.ДокОснование = СвязиДокументов.Документ
|ГДЕ
|	СвязиДокументов.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.Содержит)
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ДелаКомплектов.ДелаКомплекта,
|	ВЫРАЗИТЬ(СвязиДокументов.СвязанныйДокумент КАК Справочник.ВнутренниеДокументы) КАК Договор,
|	ВЫРАЗИТЬ(СвязиДокументов.СвязанныйДокумент КАК Справочник.ВнутренниеДокументы).ДатаРегистрации КАК ДатаДоговораДелаКомплекта,
|	ВЫРАЗИТЬ(СвязиДокументов.СвязанныйДокумент КАК Справочник.ВнутренниеДокументы).РегистрационныйНомер КАК НомерДоговораДелаКомплекта
|ПОМЕСТИТЬ ДоговораКомплектов
|ИЗ
|	ДелаКомплектов КАК ДелаКомплектов
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиДокументов КАК СвязиДокументов
|		ПО ДелаКомплектов.ДелаКомплекта = СвязиДокументов.Документ
|ГДЕ
|	СвязиДокументов.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ОтноситсяКДоговору)
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ВЫБОР
|		КОГДА ДокиОснования.ЭтоКомплект
|			ТОГДА """"
|		ИНАЧЕ ДокиОснования.ДокОснование
|	КОНЕЦ КАК Дело,
|	ДокиОснования.ИсхДокумент,
|	ВЫРАЗИТЬ(СвязиДокументов.СвязанныйДокумент КАК Справочник.ВнутренниеДокументы) КАК Договор,
|	ВЫРАЗИТЬ(СвязиДокументов.СвязанныйДокумент КАК Справочник.ВнутренниеДокументы).ДатаРегистрации КАК ДатаДоговора,
|	ВЫРАЗИТЬ(СвязиДокументов.СвязанныйДокумент КАК Справочник.ВнутренниеДокументы).РегистрационныйНомер КАК НомерДоговора,
|	ВЫБОР
|		КОГДА ДокиОснования.ЭтоКомплект
|			ТОГДА """"
|		ИНАЧЕ ДокиОснования.ДокОснование.ДатаРегистрации
|	КОНЕЦ КАК ДатаДела,
|	ВЫБОР
|		КОГДА ДокиОснования.ЭтоКомплект
|			ТОГДА """"
|		ИНАЧЕ ДокиОснования.ДокОснование.РегистрационныйНомер
|	КОНЕЦ КАК НомерДела
|ПОМЕСТИТЬ ДоговораДел
|ИЗ
|	ДокиОснования КАК ДокиОснования
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиДокументов КАК СвязиДокументов
|		ПО ДокиОснования.ДокОснование = СвязиДокументов.Документ
|ГДЕ
|	СвязиДокументов.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ОтноситсяКДоговору)
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ДокиОснования.ИсхДокумент КАК Расписка,
|	ДокиОснования.Получатель,
|	ДокиОснования.Заказчик.Наименование КАК Заказчик,
|	ДокиОснования.Организация КАК Организация,
|	ДелаКомплектов.ДелаКомплекта КАК ДелоКомплекта,
|	ДоговораКомплектов.Договор КАК ДоговорКомплекта,
|	ДоговораДел.Дело,
|	ДоговораДел.Договор КАК Договор,
|	ИсхИнфо.Адрес,
|	ИсхИнфо.ФИООтветственный,
|	ИсхИнфо.ОтделОтветственный,
|	ИсхИнфо.ДолжностьОтветственный,
|	ИсхИнфо.Получил,
|	ИсхИнфо.ДолжностьПолучил,
|	ИсхИнфо.ИсхДокумент.ГрифДоступа КАК ГрифДоступа,
|	ДоговораДел.ДатаДоговора,
|	ДоговораДел.НомерДоговора,
|	ДоговораДел.ДатаДела,
|	ДоговораДел.НомерДела,
|	ДоговораКомплектов.ДатаДоговораДелаКомплекта,
|	ДоговораКомплектов.НомерДоговораДелаКомплекта,
|	ДелаКомплектов.НомерДелаКомплекта,
|	ДелаКомплектов.ДатаДелаКомплекта,
|	ДокиОснования.ЭтоКомплект,
|	ДокиОснования.ИсхДокумент.РегистрационныйНомер КАК НомерРасписки,
|	ДокиОснования.ИсхДокумент.ДатаРегистрации КАК ДатаРасписки,
|	ДелаКомплектов.ДелаКомплекта.Заголовок КАК ЗаголовокДелаКомплекта,
|	ДоговораДел.Дело.Заголовок КАК ЗаголовокДела,
|	Штрихкоды.Код КАК Штрихкод
|ИЗ
|	ДокиОснования КАК ДокиОснования
|		ЛЕВОЕ СОЕДИНЕНИЕ ДелаКомплектов КАК ДелаКомплектов
|			ЛЕВОЕ СОЕДИНЕНИЕ ДоговораКомплектов КАК ДоговораКомплектов
|			ПО ДелаКомплектов.ДелаКомплекта = ДоговораКомплектов.ДелаКомплекта
|		ПО ДокиОснования.ИсхДокумент = ДелаКомплектов.ИсхДокумент
|		ЛЕВОЕ СОЕДИНЕНИЕ ДоговораДел КАК ДоговораДел
|		ПО ДокиОснования.ДокОснование = ДоговораДел.Дело
|		ЛЕВОЕ СОЕДИНЕНИЕ ИсхИнфо КАК ИсхИнфо
|		ПО ДокиОснования.ИсхДокумент = ИсхИнфо.ИсхДокумент
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
|		ПО (Штрихкоды.Владелец = ДокиОснования.ИсхДокумент)
|ИТОГИ ПО
|	Расписка";
#КонецОбласти

	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);

	Результат = Запрос.Выполнить();

	Расписки = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьДело = Макет.ПолучитьОбласть("Дело");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	БорисовскийФилиал = Справочники.Организации.БорисовскийФилиал;
    
    Пока Расписки.Следующий() Цикл
        
		
        // Шапка
        Дела = Расписки.Выбрать();
        Сч = 0;
        ГрифДоступа = "";
        НомерРасписки = "";
        Получатель = "";
        Адрес = "";
        
        // Для подвала
        Должность = "";
        Подразделение = "";
        Начальник = "";
        ДолжностьПолучил = "";
        Получил = "";
                
        Пока Дела.Следующий() Цикл
            Сч = Сч+1;
			Если Сч = 1 Тогда
				ЭтоФилиалБорисов = Ложь;
				Если Дела.Организация = БорисовскийФилиал Тогда
					ОбластьШапка = Макет.ПолучитьОбласть("ШапкаБорисов");
					ЭтоФилиалБорисов = Истина;
				КонецЕсли; 
				Если Дела.ЭтоКомплект Тогда
                    ТекстРасписки = "в получении результатов работ по договорам-подрядов №" +
                        СокрЛП(Дела.НомерДоговораДелаКомплекта)+" от "+Формат(Дела.ДатаДоговораДелаКомплекта, "ДЛФ=D");
                Иначе
                    ТекстРасписки = "в получении результата работ по договору-подряда №" + 
                        СокрЛП(Дела.НомерДоговора)+" от "+Формат(Дела.ДатаДоговора, "ДЛФ=D");
                КонецЕсли; 
                
                НомерРасписки = "Р А С П И С К А   № " + СокрЛП(Дела.НомерРасписки) + " от " + Формат(Дела.ДатаРасписки, "ДЛФ=D");
                Получатель = Дела.Получатель;
                Адрес = Дела.Адрес;
                
				КартинкаШтрихкода = ШтрихкодированиеСервер.ПолучитьКартинкуШтрихкода(Дела.ШтрихКод, 1, , Истина);
				
				Если Дела.ГрифДоступа.Наименование = "ДСП" Тогда
                    ГрифДоступа = "ДЛЯ СЛУЖЕБНОГО ПОЛЬЗОВАНИЯ";
                КонецЕсли; 
                
                // Для подвала
                Должность = Дела.ДолжностьОтветственный;
                Подразделение = Дела.ОтделОтветственный;
                Начальник = Дела.ФИООтветственный;
                ДолжностьПолучил = Дела.ДолжностьПолучил;
                Получил = Дела.Получил;
                
            КонецЕсли; 
            
            // Список договоров
            Если ЗначениеЗаполнено(Дела.НомерДоговораДелаКомплекта) Тогда
                ТекстРасписки = ТекстРасписки + ", №"+СокрЛП(Дела.НомерДоговораДелаКомплекта)+" от "+Формат(Дела.ДатаДоговораДелаКомплекта, "ДЛФ=D");
            КонецЕсли; 
		КонецЦикла;
		
		//Штрихкод
		Если КартинкаШтрихкода <> Неопределено Тогда
			
			Если ЭтоФилиалБорисов Тогда
				Рисунок = ОбластьШапка.Область("ШтрихКодБ");
			Иначе
				Рисунок = ОбластьШапка.Область("ШтрихКод");
			КонецЕсли; 
			Рисунок.Картинка = КартинкаШтрихкода;
			
		КонецЕсли;
      
        ОбластьШапка.Параметры.ГрифДоступа = ГрифДоступа;
        ОбластьШапка.Параметры.НомерРасписки = НомерРасписки;
        ОбластьШапка.Параметры.ТекстРасписки = ТекстРасписки;
        ОбластьШапка.Параметры.Получатель = Получатель;
        ОбластьШапка.Параметры.Адрес = Адрес;
    	ТабДок.Вывести(ОбластьШапка);
        
        // Дела
        Дела.Сбросить();
        
        НомерПП = 0;
        Пока Дела.Следующий() Цикл
            Если Дела.ЭтоКомплект Тогда
                Наименование = СокрЛП(Дела.ЗаголовокДелаКомплекта);
                НомерДела = Дела.НомерДелаКомплекта;
                ДатаДела = Формат(Дела.ДатаДелаКомплекта, "ДЛФ=D");
            Иначе
                Наименование = СокрЛП(Дела.ЗаголовокДела);
                НомерДела = Дела.НомерДела;
                ДатаДела = Формат(Дела.ДатаДела, "ДЛФ=D");
           КонецЕсли;
            
			//Если ЗначениеЗаполнено(ГрифДоступа) Тогда
			//    ГрифДоступаДела = "ДСП";
			//Иначе
			//    ГрифДоступаДела = "";
			//КонецЕсли; 
            НомерПП = НомерПП + 1;
            
            ОбластьДело.Параметры.НомерПП = НомерПП;
            ОбластьДело.Параметры.Наименование = Наименование;
            ОбластьДело.Параметры.Заказчик = Дела.Заказчик;
            //ОбластьДело.Параметры.ГрифДоступаДела = ГрифДоступаДела;
            ОбластьДело.Параметры.НомерДела = НомерДела;
            ОбластьДело.Параметры.ДатаДела = ДатаДела;
            ТабДок.Вывести(ОбластьДело);
        КонецЦикла; 
        
        // Подвал
        ОбластьПодвал.Параметры.Должность = Должность;
        ОбластьПодвал.Параметры.Подразделение = Подразделение;
        ОбластьПодвал.Параметры.Начальник = Начальник;
        ОбластьПодвал.Параметры.ДолжностьПолучил = ДолжностьПолучил;
        ОбластьПодвал.Параметры.Получил = Получил;
    	ТабДок.Вывести(ОбластьПодвал);
        
        ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		ТабДок.АвтоМасштаб = Истина;
		ТабДок.КоличествоЭкземпляров = 2;
	КонецЦикла;
    ОбъектыПечати.Добавить(ТабДок, "РаспискаВПолучении");
    
 	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
    КонецЕсли;
    
   Возврат ТабДок;
КонецФункции

&НаСервере
Функция ГродноСформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати)
	
	//Сообщить("Ок");
 	УстановитьПривилегированныйРежим(Истина);
	ТабДок = Новый ТабличныйДокумент;
	Макет = Обработки.мПечатьРаспискиВПолучении.ПолучитьМакет("РаспискаГродно");
	
#Область ЗапросТекст	
    Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|   ИсходящиеДокументыПолучатели.Ссылка КАК ИсхДокумент,
	|   ИсходящиеДокументыПолучатели.Получатель,
	|   СвязиДокументов.СвязанныйДокумент КАК ДокОснование,
	|   СвязиДокументов.СвязанныйДокумент.ВидДокумента.ЯвляетсяКомплектомДокументов КАК ЭтоКомплект
	|ПОМЕСТИТЬ ДокиОснования
	|ИЗ
	|   Справочник.ИсходящиеДокументы.Получатели КАК ИсходящиеДокументыПолучатели
	|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиДокументов КАК СвязиДокументов
	|       ПО ИсходящиеДокументыПолучатели.Ссылка = СвязиДокументов.Документ
	|ГДЕ
	|   ИсходящиеДокументыПолучатели.НомерСтроки = 1
	|   И ИсходящиеДокументыПолучатели.Ссылка В(&МассивОбъектов)
	|   И СвязиДокументов.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ПредметПереписки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|   ЖурналПередачиДокументовСрезПоследних.Пользователь.Ссылка КАК Получил,
	|   ДокиОснования.ИсхДокумент
	|ПОМЕСТИТЬ ЖурналПередачи
	|ИЗ
	|   ДокиОснования КАК ДокиОснования
	|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналПередачиДокументов.СрезПоследних(
	|               ,
	|               ВЫРАЗИТЬ(Документ.Ссылка КАК Справочник.ВнутренниеДокументы) В
	|                   (ВЫБРАТЬ
	|                       ДокиОснования.ДокОснование
	|                   ИЗ
	|                       ДокиОснования КАК ДокиОснования)) КАК ЖурналПередачиДокументовСрезПоследних
	|       ПО ДокиОснования.ИсхДокумент = ЖурналПередачиДокументовСрезПоследних.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|   ДокиОснования.Получатель,
	|   КорреспондентыКонтактнаяИнформация.Представление КАК Адрес,
	|   ДокиОснования.ИсхДокумент
	|ПОМЕСТИТЬ Адреса
	|ИЗ
	|   ДокиОснования КАК ДокиОснования
	|       ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
	|       ПО ДокиОснования.Получатель = КорреспондентыКонтактнаяИнформация.Ссылка
	|ГДЕ
	|   КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ПочтовыйАдресКорреспондента)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|   ДокиОснования.Получатель,
	|   Адреса.Адрес,
	|   ДокиОснования.ИсхДокумент.Ответственный.ПредставлениеВДокументах КАК ФИООтветственный,
	|   СведенияОПользователях.Подразделение КАК ОтделОтветственный,
	|   СведенияОПользователях.Должность КАК ДолжностьОтветственный,
	|   ДокиОснования.ИсхДокумент,
	|   ЖурналПередачиДокументовСрезПоследних.Пользователь.ПредставлениеВДокументах КАК Получил,
	|   СведенияОПользователях1.Должность КАК ДолжностьПолучил
	|ПОМЕСТИТЬ ИсхИнфо
	|ИЗ
	|   ДокиОснования КАК ДокиОснования
	|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПользователях КАК СведенияОПользователях
	|       ПО ДокиОснования.ИсхДокумент.Ответственный = СведенияОПользователях.Пользователь
	|       ЛЕВОЕ СОЕДИНЕНИЕ Адреса КАК Адреса
	|       ПО ДокиОснования.Получатель = Адреса.Получатель
	|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналПередачиДокументов.СрезПоследних КАК ЖурналПередачиДокументовСрезПоследних
	|           ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПользователях КАК СведенияОПользователях1
	|           ПО ЖурналПередачиДокументовСрезПоследних.Пользователь.Ссылка = СведенияОПользователях1.Пользователь
	|       ПО ДокиОснования.ИсхДокумент = ЖурналПередачиДокументовСрезПоследних.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|   ДокиОснования.ИсхДокумент,
	|   ДокиОснования.ДокОснование,
	|   СвязиДокументов.СвязанныйДокумент КАК ДелаКомплекта,
	|   СвязиДокументов.СвязанныйДокумент.РегистрационныйНомер КАК НомерДелаКомплекта,
	|   СвязиДокументов.СвязанныйДокумент.ДатаРегистрации КАК ДатаДелаКомплекта
	|ПОМЕСТИТЬ ДелаКомплектов
	|ИЗ
	|   ДокиОснования КАК ДокиОснования
	|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиДокументов КАК СвязиДокументов
	|       ПО ДокиОснования.ДокОснование = СвязиДокументов.Документ
	|ГДЕ
	|   СвязиДокументов.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.Содержит)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|   ДелаКомплектов.ДелаКомплекта,
	|   СвязиДокументов.СвязанныйДокумент КАК Договор,
	|   СвязиДокументов.СвязанныйДокумент.ДатаРегистрации КАК ДатаДоговораДелаКомплекта,
	|   СвязиДокументов.СвязанныйДокумент.РегистрационныйНомер КАК НомерДоговораДелаКомплекта
	|ПОМЕСТИТЬ ДоговораКомплектов
	|ИЗ
	|   ДелаКомплектов КАК ДелаКомплектов
	|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиДокументов КАК СвязиДокументов
	|       ПО ДелаКомплектов.ДелаКомплекта = СвязиДокументов.Документ
	|ГДЕ
	|   СвязиДокументов.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ОтноситсяКДоговору)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|   ВЫБОР
	|       КОГДА ДокиОснования.ЭтоКомплект
	|           ТОГДА """"
	|       ИНАЧЕ ДокиОснования.ДокОснование
	|   КОНЕЦ КАК Дело,
	|   ДокиОснования.ИсхДокумент,
	|   СвязиДокументов.СвязанныйДокумент КАК Договор,
	|   СвязиДокументов.СвязанныйДокумент.ДатаРегистрации КАК ДатаДоговора,
	|   СвязиДокументов.СвязанныйДокумент.РегистрационныйНомер КАК НомерДоговора,
	|   ВЫБОР
	|       КОГДА ДокиОснования.ЭтоКомплект
	|           ТОГДА """"
	|       ИНАЧЕ ДокиОснования.ДокОснование.ДатаРегистрации
	|   КОНЕЦ КАК ДатаДела,
	|   ВЫБОР
	|       КОГДА ДокиОснования.ЭтоКомплект
	|           ТОГДА """"
	|       ИНАЧЕ ДокиОснования.ДокОснование.РегистрационныйНомер
	|   КОНЕЦ КАК НомерДела
	|ПОМЕСТИТЬ ДоговораДел
	|ИЗ
	|   ДокиОснования КАК ДокиОснования
	|       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвязиДокументов КАК СвязиДокументов
	|       ПО ДокиОснования.ДокОснование = СвязиДокументов.Документ
	|ГДЕ
	|   СвязиДокументов.ТипСвязи = ЗНАЧЕНИЕ(Справочник.ТипыСвязей.ОтноситсяКДоговору)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|   ДокиОснования.ИсхДокумент КАК Расписка,
	|   ДокиОснования.Получатель,
	|   ДелаКомплектов.ДелаКомплекта КАК ДелоКомплекта,
	|   ДоговораКомплектов.Договор КАК ДоговорКомплекта,
	|   ДоговораДел.Дело,
	|   ДоговораДел.Договор КАК Договор,
	|   ИсхИнфо.Адрес,
	|   ИсхИнфо.ФИООтветственный,
	|   ИсхИнфо.ОтделОтветственный,
	|   ИсхИнфо.ДолжностьОтветственный,
	|   ИсхИнфо.Получил,
	|   ИсхИнфо.ДолжностьПолучил,
	|   ИсхИнфо.ИсхДокумент.ГрифДоступа КАК ГрифДоступа,
	|   ДоговораДел.ДатаДоговора,
	|   ДоговораДел.НомерДоговора,
	|   ДоговораДел.ДатаДела,
	|   ДоговораДел.НомерДела,
	|   ДоговораКомплектов.ДатаДоговораДелаКомплекта,
	|   ДоговораКомплектов.НомерДоговораДелаКомплекта,
	|   ДелаКомплектов.НомерДелаКомплекта,
	|   ДелаКомплектов.ДатаДелаКомплекта,
	|   ДокиОснования.ЭтоКомплект,
	|   ДокиОснования.ИсхДокумент.РегистрационныйНомер КАК НомерРасписки,
	|   ДокиОснования.ИсхДокумент.ДатаРегистрации КАК ДатаРасписки,
	|   ДелаКомплектов.ДелаКомплекта.Заголовок КАК ЗаголовокДелаКомплекта,
	|   ДоговораДел.Дело.Заголовок КАК ЗаголовокДела
	|ИЗ
	|   ДокиОснования КАК ДокиОснования
	|       ЛЕВОЕ СОЕДИНЕНИЕ ДелаКомплектов КАК ДелаКомплектов
	|           ЛЕВОЕ СОЕДИНЕНИЕ ДоговораКомплектов КАК ДоговораКомплектов
	|           ПО ДелаКомплектов.ДелаКомплекта = ДоговораКомплектов.ДелаКомплекта
	|       ПО ДокиОснования.ИсхДокумент = ДелаКомплектов.ИсхДокумент
	|       ЛЕВОЕ СОЕДИНЕНИЕ ДоговораДел КАК ДоговораДел
	|       ПО ДокиОснования.ДокОснование = ДоговораДел.Дело
	|       ЛЕВОЕ СОЕДИНЕНИЕ ИсхИнфо КАК ИсхИнфо
	|       ПО ДокиОснования.ИсхДокумент = ИсхИнфо.ИсхДокумент
	|ИТОГИ ПО
	|   Расписка";
#КонецОбласти
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);

	Результат = Запрос.Выполнить();

	Расписки = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьДело = Макет.ПолучитьОбласть("Дело");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
    
    Пока Расписки.Следующий() Цикл
        
        // Шапка
        Дела = Расписки.Выбрать();
        Сч = 0;
        Получатель = "";
        Адрес = "";
		НомерДатаДоговора = "";
        
        // Для подвала
        СпособОтправки = "";
                
        Пока Дела.Следующий() Цикл
            Сч = Сч+1;
            Если Сч = 1 Тогда
				Если Дела.ЭтоКомплект Тогда
				    НомерДатаДоговора = "Договоры-подряда №" +
				        СокрЛП(Дела.НомерДоговораДелаКомплекта)+" от "+Формат(Дела.ДатаДоговораДелаКомплекта, "ДЛФ=D");
				Иначе
				    НомерДатаДоговора = "Договор-подряда №" + 
				        СокрЛП(Дела.НомерДоговора)+" от "+Формат(Дела.ДатаДоговора, "ДЛФ=D");
				КонецЕсли; 
				
				Если Дела.Получатель.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
					Получатель = Дела.Получатель.ПолноеНаименование;
					Адрес = УправлениеКонтактнойИнформацией.ПолучитьКонтактнуюИнформацияОбъекта(Дела.Получатель, Справочники.ВидыКонтактнойИнформации.ДомашнийАдресФизическогоЛица);
				Иначе
					Получатель = Дела.Получатель.ПолноеНаименование;
					Адрес = Гр_ПравилаАвтозаполненияШаблонов.ПолучитьЮридическийАдрес(Дела.Получатель);
				КонецЕсли;
                Если Дела.ГрифДоступа.Наименование = "ДСП" Тогда
                    ГрифДоступа = "ДЛЯ СЛУЖЕБНОГО ПОЛЬЗОВАНИЯ";
                КонецЕсли; 
                
                // Для подвала
				//СпособОтправки = Дела.Расписка;

            КонецЕсли; 
            
            // Список договоров
            Если ЗначениеЗаполнено(Дела.НомерДоговораДелаКомплекта) Тогда
                НомерДатаДоговора = НомерДатаДоговора + ", №"+СокрЛП(Дела.НомерДоговораДелаКомплекта)+" от "+Формат(Дела.ДатаДоговораДелаКомплекта, "ДЛФ=D");
            КонецЕсли; 
        КонецЦикла; 
        
        ОбластьШапка.Параметры.Заказчик = Получатель;
        ОбластьШапка.Параметры.АдресЗаказчика = Адрес;
        ОбластьШапка.Параметры.НомерДатаДоговора = НомерДатаДоговора;
    	ТабДок.Вывести(ОбластьШапка);
        
        // Дела
        Дела.Сбросить();
        
        НомерПП = 0;
        Пока Дела.Следующий() Цикл
            Если Дела.ЭтоКомплект Тогда
                Наименование = СокрЛП(Дела.ЗаголовокДелаКомплекта);
                НомерДела = Дела.НомерДелаКомплекта;
                ДатаДела = Формат(Дела.ДатаДелаКомплекта, "ДЛФ=D");
            Иначе
                Наименование = СокрЛП(Дела.ЗаголовокДела);
                НомерДела = Дела.НомерДела;
                ДатаДела = Формат(Дела.ДатаДела, "ДЛФ=D");
           КонецЕсли;
            
            Если ЗначениеЗаполнено(ГрифДоступа) Тогда
                ГрифДоступаДела = "ДСП";
            Иначе
                ГрифДоступаДела = "";
            КонецЕсли; 
            НомерПП = НомерПП + 1;
            
            ОбластьДело.Параметры.Номер = НомерПП;
            ОбластьДело.Параметры.Наименование = Наименование;
            ОбластьДело.Параметры.Гриф = ГрифДоступаДела;
            ОбластьДело.Параметры.НомерДела = НомерДела;
            ОбластьДело.Параметры.ДатаДела = ДатаДела;
            ТабДок.Вывести(ОбластьДело);
        КонецЦикла; 
        
        // Подвал
		ОбластьПодвал.Параметры.Способ = "почта";
		//ОбластьПодвал.Параметры.Подразделение = Подразделение;
		//ОбластьПодвал.Параметры.Начальник = Начальник;
		//ОбластьПодвал.Параметры.ДолжностьПолучил = ДолжностьПолучил;
		//ОбластьПодвал.Параметры.Получил = Получил;
		ТабДок.АвтоМасштаб = Истина;
    	ТабДок.Вывести(ОбластьПодвал);
        
        ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
    ОбъектыПечати.Добавить(ТабДок, "РаспискаВПолучении");
    
 	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
    КонецЕсли;
    
   Возврат ТабДок;
КонецФункции

