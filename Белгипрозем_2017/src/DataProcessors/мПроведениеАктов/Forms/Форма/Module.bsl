
&НаКлиенте
Процедура Загрузить(Команда)
	ЗагрузитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНаСервере() 
	
	НеПроверен = Справочники.мЗамечанияПроверкиАктов.НеПроверен;
	
	ЗаполнитьДокументыАктирования();
	
	Выборка = ВыбратьАктыПоПодразделениям();
	
	Пока Выборка.Следующий() Цикл
		
		// Поиск дока
		Отбор = Новый Структура("Подразделение", Выборка.Подразделение);
		ИскСтроки = ДокументыАктирования.НайтиСтроки(Отбор);
		
		// Заполнение шапки документа
		Если ИскСтроки.Количество() = 0 Тогда
			Док = Документы.мАктирование.СоздатьДокумент();
			Док.Дата = Период.ДатаНачала;
			Док.УстановитьНовыйНомер();
			Док.Подразделение = Выборка.Подразделение;
			Док.Организация = Выборка.Организация;
			Док.Ответственный = Пользователи.ТекущийПользователь();
		Иначе
			Док = ИскСтроки[0].Документ.ПолучитьОбъект();		
		КонецЕсли; 
		
		РезультатПроверки = Новый Соответствие;
		Док.ДополнительныеСвойства.Вставить("РезультатПроверки", РезультатПроверки);
		
		ЗаполнитьАкты(Док, Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией));
		
		// Записать и провести док
		Док.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАкты(Док, Выборка)
	Пока Выборка.Следующий() Цикл
		Стр = Док.Акты.Добавить();
		ЗаполнитьЗначенияСвойств(Стр, Выборка);
		
		ОбъемРаботКРаспределению = Стр.Сумма - Стр.НДС - Стр.СуммаПрочих;
		
		ЗаполнитьЗарплату(Док, Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией), ОбъемРаботКРаспределению);
		
		РезультатПроверки = Док.ДополнительныеСвойства.РезультатПроверки;
        РезультатПроверки.Вставить(Стр.Акт, НеПроверен);
        Док.ДополнительныеСвойства.Вставить("РезультатПроверки", РезультатПроверки);
    КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗарплату(Док, Выборка, ОбъемРаботКРаспределению)
	// Сначала Заполнить и распределить в ТЗ, а затем добавить ТЗ в документ
	Тз = СоздатьТзЗарплаты();
	
	КолвоИсполнителейДляРаспределения = 0;	
    СуммаДляРаспределения = ОбъемРаботКРаспределению;
	
	Пока Выборка.Следующий() Цикл
		Стр = Тз.Добавить();
		ЗаполнитьЗначенияСвойств(Стр, Выборка);
		
		// Заполнить нормативы
		ДанныеДляНорматива = Новый Структура("ВидЗаказчика, ЦельПредоставления, ДопУсловие, Исполнитель, ВидРабот");
		ЗаполнитьЗначенияСвойств(ДанныеДляНорматива, Выборка);
		ДанныеДляНорматива.Вставить("Дата", Период.ДатаНачала);
		
		Стр.Норматив = мРаботаСДоговорами.ПолучитьНормативЗП(ДанныеДляНорматива);
		Стр.Коэффициент = 1;  // по умолчанию
		Стр.Подразделение = Выборка.ПодразделениеИсполнителя;
		
		Если Стр.НеОсновноеПодразделение Тогда
			
			// Изменение суммы объема работ для неосновных
			//  с 01.02.2017 составляет 50% от суммы в смете
			Если Док.Дата >= Дата(2017, 2, 1) Тогда
				Стр.ОбъемРабот = Окр(Стр.ОбъемРабот/2, 2); 
			КонецЕсли; 
			
            // уменьшаем сумму к распределению на объем, отданный другим подразделениям
    	    СуммаДляРаспределения = СуммаДляРаспределения - Стр.ОбъемРабот;
		Иначе
            КолвоИсполнителейДляРаспределения = КолвоИсполнителейДляРаспределения + 1;
            Стр.ОбъемРабот = 0; 
        КонецЕсли; 
	КонецЦикла;
	
	// Распределение в ТЗ
    ОсталосьРаспределить = СуммаДляРаспределения;
    ОсталосьРаспределитьКТУ = 1;
    НомерПП = 0;
	
	Для каждого Стр Из Тз Цикл
		Стр.Начислено = Окр(Стр.ОбъемРабот * Стр.Норматив * Стр.Коэффициент, 2);
		Стр.БазовоеНачисление = Окр(Стр.ОбъемРабот * Стр.Норматив, 2);
		
		Если Стр.НеОсновноеПодразделение Тогда
            Продолжить;
		КонецЕсли;
		
        НомерПП = НомерПП + 1;
		
		// Определение объема и КТУ
        Если НомерПП = КолвоИсполнителейДляРаспределения Тогда
            Стр.ОбъемРабот = ОсталосьРаспределить;
			Стр.КТУ = ОсталосьРаспределитьКТУ;
		Иначе
			// пропорционально
			Если КолвоИсполнителейДляРаспределения > 0 Тогда
				Стр.ОбъемРабот = Окр(СуммаДляРаспределения / КолвоИсполнителейДляРаспределения, 2);
				Стр.КТУ = Окр(1 / КолвоИсполнителейДляРаспределения, 4);
			КонецЕсли; 
		КонецЕсли; 
		
		Стр.Начислено = Окр(Стр.ОбъемРабот * Стр.Норматив * Стр.Коэффициент, 2);
		Стр.БазовоеНачисление = Окр(Стр.ОбъемРабот * Стр.Норматив, 2);

		ОсталосьРаспределить = ОсталосьРаспределить - Стр.ОбъемРабот;
        ОсталосьРаспределитьКТУ = ОсталосьРаспределитьКТУ - Стр.КТУ;
		
	КонецЦикла; 
	
	// Добавление Тз в Актирование
	Для каждого Стр Из Тз Цикл
	
		НовСтр = Док.Зарплата.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
	
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Функция СоздатьТзЗарплаты()
	Тз = Новый ТаблицаЗначений;
	//Тз.Колонки.Добавить("НомерСтроки");
	Тз.Колонки.Добавить("ЭтапДоговора");
	Тз.Колонки.Добавить("Исполнитель");
	Тз.Колонки.Добавить("КТУ");
	Тз.Колонки.Добавить("Норматив");
	Тз.Колонки.Добавить("Коэффициент");
	Тз.Колонки.Добавить("ОбъемРабот");
	Тз.Колонки.Добавить("Начислено");
	Тз.Колонки.Добавить("ОбоснованиеКоэффициента");
	Тз.Колонки.Добавить("Подразделение");
	Тз.Колонки.Добавить("НомерАкта");
	Тз.Колонки.Добавить("НеОсновноеПодразделение");
	Тз.Колонки.Добавить("БазовоеНачисление");
	Возврат Тз;
КонецФункции

&НаСервере
Функция ВыбратьАктыПоПодразделениям()
	// Выбираются Акты:
	//  без пометки на удаление
	//  Зарегистрированные в указанном интервале
	//  незаактированные
	//  Корреспондент - юрлицо
	//  Оплата >= Сметной стоимости
	////////  Нужен плановый срок и он есть или он не нужен для вида работ
	//  Есть дата решения и она нужна или она не нужна
	//  Состояние договора = Подписан
	//  Состояние акта = Подписан или Вручен или ПодписанКопия
	//  Работы по этапу не приостановлены
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВнутренниеДокументы.Ссылка КАК ЮрАкт,
		|	мРеквизитыАктовВыполненныхРабот.СостояниеАкта КАК СостояниеАкта,
		|	мСостоянияДоговоровСрезПоследних.Состояние КАК СостояниеДоговора,
		|	ВнутренниеДокументы.ЭтапДоговора.СтоимостьСНДС КАК СметнаяСтоимость,
		|	ВнутренниеДокументы.ЭтапДоговора КАК ЭтапДоговора,
		|	ВнутренниеДокументы.ЭтапДоговора.Владелец КАК Договор,
		|	ВнутренниеДокументы.Ссылка.Корреспондент КАК Корреспондент,
		|	ВнутренниеДокументы.ЭтапДоговора.ВидРабот.НеРассчитыватьПлановыйСрок КАК НеРассчитыватьПлановыйСрок,
		|	ВнутренниеДокументы.ЭтапДоговора.ШаблонУсловийДоговора.УчетДатыПредоставленияРешения КАК УчетДатыПредоставленияРешения
		|ПОМЕСТИТЬ Акты
		|ИЗ
		|	Справочник.ВнутренниеДокументы КАК ВнутренниеДокументы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.УчетДоговоров.Обороты(&Дата1, &Дата2, Период, ) КАК УчетДоговоровОбороты
		|		ПО ВнутренниеДокументы.ЭтапДоговора = УчетДоговоровОбороты.ЭтапДоговора
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.мРеквизитыАктовВыполненныхРабот КАК мРеквизитыАктовВыполненныхРабот
		|		ПО (мРеквизитыАктовВыполненныхРабот.Владелец = ВнутренниеДокументы.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.мСостоянияДоговоров.СрезПоследних КАК мСостоянияДоговоровСрезПоследних
		|		ПО (мСостоянияДоговоровСрезПоследних.Договор = ВнутренниеДокументы.ЭтапДоговора.Владелец)
		|ГДЕ
		|	ВнутренниеДокументы.ВидДокумента = &ВидДокументаАкт
		|	И НЕ ВнутренниеДокументы.ПометкаУдаления
		|	И ВнутренниеДокументы.ДатаРегистрации МЕЖДУ &Дата1 И &Дата2
		|	И ВнутренниеДокументы.Корреспондент.ЮрФизЛицо <> &ФизЛицо
		|	И ЕСТЬNULL(УчетДоговоровОбороты.СуммаРасход, 0) = 0
		|	И ВнутренниеДокументы.ЭтапДоговора.Владелец.ВидДокумента = &ВидДоговора
		|	И (мРеквизитыАктовВыполненныхРабот.СостояниеАкта = &Подписан
		|			ИЛИ мРеквизитыАктовВыполненныхРабот.СостояниеАкта = &Вручен
		|			ИЛИ мРеквизитыАктовВыполненныхРабот.СостояниеАкта = &ПодписанКопия)
		|	И мСостоянияДоговоровСрезПоследних.Состояние = &ДоговорПодписан
		|	И ВнутренниеДокументы.ЭтапДоговора.Подразделение В ИЕРАРХИИ(&Подразделение)
		|	И (ВнутренниеДокументы.ЭтапДоговора.ШаблонУсловийДоговора.УчетДатыПредоставленияРешения
		|				И ВнутренниеДокументы.ЭтапДоговора.ДатаПредоставленияРешения > &ПустаяДата
		|			ИЛИ НЕ ВнутренниеДокументы.ЭтапДоговора.ШаблонУсловийДоговора.УчетДатыПредоставленияРешения)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	мДатыДоговоровСрезПоследних.Период,
		|	мДатыДоговоровСрезПоследних.ЭтапДоговора
		|ПОМЕСТИТЬ МаксСтоп
		|ИЗ
		|	РегистрСведений.мДатыДоговоров.СрезПоследних(
		|			,
		|			ЭтапДоговора В
		|					(ВЫБРАТЬ
		|						Акты.ЭтапДоговора
		|					ИЗ
		|						Акты КАК Акты)
		|				И ВидДатыДоговора = &Стоп) КАК мДатыДоговоровСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаксСтоп.ЭтапДоговора,
		|	мДатыДоговоровСрезПоследних.Дата
		|ПОМЕСТИТЬ Стоп
		|ИЗ
		|	МаксСтоп КАК МаксСтоп
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.мДатыДоговоров.СрезПоследних(
		|				,
		|				ЭтапДоговора В
		|						(ВЫБРАТЬ
		|							Акты.ЭтапДоговора
		|						ИЗ
		|							Акты КАК Акты)
		|					И ВидДатыДоговора = &Стоп) КАК мДатыДоговоровСрезПоследних
		|		ПО МаксСтоп.ЭтапДоговора = мДатыДоговоровСрезПоследних.ЭтапДоговора
		|			И МаксСтоп.Период = мДатыДоговоровСрезПоследних.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	мДатыДоговоровСрезПоследних.Период,
		|	мДатыДоговоровСрезПоследних.ЭтапДоговора
		|ПОМЕСТИТЬ МаксПуск
		|ИЗ
		|	РегистрСведений.мДатыДоговоров.СрезПоследних(
		|			,
		|			ЭтапДоговора В
		|					(ВЫБРАТЬ
		|						Акты.ЭтапДоговора
		|					ИЗ
		|						Акты КАК Акты)
		|				И ВидДатыДоговора = &Пуск) КАК мДатыДоговоровСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаксПуск.ЭтапДоговора,
		|	мДатыДоговоровСрезПоследних.Дата
		|ПОМЕСТИТЬ Пуск
		|ИЗ
		|	МаксПуск КАК МаксПуск
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.мДатыДоговоров.СрезПоследних(
		|				,
		|				ЭтапДоговора В
		|						(ВЫБРАТЬ
		|							Акты.ЭтапДоговора
		|						ИЗ
		|							Акты КАК Акты)
		|					И ВидДатыДоговора = &Пуск) КАК мДатыДоговоровСрезПоследних
		|		ПО МаксПуск.ЭтапДоговора = мДатыДоговоровСрезПоследних.ЭтапДоговора
		|			И МаксПуск.Период = мДатыДоговоровСрезПоследних.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА РасчетыСПокупателямиОбороты.Период < &ДатаДеноминации
		|				ТОГДА ВЫРАЗИТЬ(РасчетыСПокупателямиОбороты.СуммаПриход / 10000 КАК ЧИСЛО(17, 2))
		|			КОГДА РасчетыСПокупателямиОбороты.Период < &ДатаДеноминацииПосле
		|				ТОГДА 0
		|			ИНАЧЕ РасчетыСПокупателямиОбороты.СуммаПриход
		|		КОНЕЦ) КАК Оплата,
		|	РасчетыСПокупателямиОбороты.ЭтапДоговора КАК ЭтапДоговора
		|ПОМЕСТИТЬ Оплаты
		|ИЗ
		|	РегистрНакопления.РасчетыСПокупателями.Обороты(
		|			,
		|			,
		|			День,
		|			ЭтапДоговора В
		|				(ВЫБРАТЬ
		|					Акты.ЭтапДоговора
		|				ИЗ
		|					Акты КАК Акты)) КАК РасчетыСПокупателямиОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетыСПокупателямиОбороты.ЭтапДоговора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	мСметыОбъемРабот.Ссылка КАК Ссылка,
		|	СУММА(ВЫБОР
		|			КОГДА мСметыОбъемРабот.СтадияРабот.НеВходитВОбъемДляНачисленияЗП
		|				ТОГДА ВЫБОР
		|						КОГДА мСметыОбъемРабот.Ссылка.ДатаРасчетаСметы < &ДатаДеноминации
		|							ТОГДА ВЫРАЗИТЬ(мСметыОбъемРабот.Стоимость / 10000 КАК ЧИСЛО(17, 2))
		|						ИНАЧЕ мСметыОбъемРабот.Стоимость
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаПрочих,
		|	мСметыОбъемРабот.Ссылка.ЭтапДоговора КАК ЭтапДоговора,
		|	СУММА(ВЫБОР
		|			КОГДА мСметыОбъемРабот.СтадияРабот.Наименование = ""Внесение изменений в ЗИС""
		|				ТОГДА ВЫБОР
		|						КОГДА мСметыОбъемРабот.Ссылка.ДатаРасчетаСметы < &ДатаДеноминации
		|							ТОГДА ВЫРАЗИТЬ(мСметыОбъемРабот.Стоимость / 10000 КАК ЧИСЛО(17, 2))
		|						ИНАЧЕ мСметыОбъемРабот.Стоимость
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаЗИС
		|ПОМЕСТИТЬ Сметы
		|ИЗ
		|	Справочник.мСметы.ОбъемРабот КАК мСметыОбъемРабот
		|ГДЕ
		|	мСметыОбъемРабот.Ссылка В
		|			(ВЫБРАТЬ
		|				Акты.ЭтапДоговора.Смета
		|			ИЗ
		|				Акты КАК Акты)
		|
		|СГРУППИРОВАТЬ ПО
		|	мСметыОбъемРабот.Ссылка.ЭтапДоговора,
		|	мСметыОбъемРабот.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	мРайоныПоСотрудникам.Сотрудник КАК Сотрудник,
		|	СведенияОПользователях.Подразделение КАК Подразделение,
		|	Акты.ЭтапДоговора КАК ЭтапДоговора,
		|	Сметы.СуммаЗИС КАК СуммаЗИС,
		|	СведенияОПользователях.Должность.Квалификация КАК ДолжностьКвалификация
		|ПОМЕСТИТЬ НеОсновныеИсполнители
		|ИЗ
		|	РегистрСведений.мРайоныПоСотрудникам КАК мРайоныПоСотрудникам
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПользователях КАК СведенияОПользователях
		|		ПО мРайоныПоСотрудникам.Сотрудник = СведенияОПользователях.Пользователь,
		|	Акты КАК Акты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Сметы КАК Сметы
		|		ПО Акты.ЭтапДоговора.Смета = Сметы.Ссылка
		|ГДЕ
		|	Акты.ЭтапДоговора.Месторасположение ПОДОБНО ""%"" + мРайоныПоСотрудникам.Месторасположение + ""%""
		|	И Сметы.СуммаЗИС > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	мЭтапыДоговоровИсполнители.Исполнитель КАК Исполнитель,
		|	мЭтапыДоговоровИсполнители.КТУ КАК КТУ,
		|	мЭтапыДоговоровИсполнители.Ссылка КАК ЭтапДоговора,
		|	мЭтапыДоговоровИсполнители.Исполнитель.ТабельныйНомер КАК ТабельныйНомер,
		|	СведенияОПользователях.Подразделение КАК ПодразделениеИсполнителя,
		|	СведенияОПользователях.Должность.Квалификация КАК Квалификация
		|ПОМЕСТИТЬ ОсновныеИсполнители
		|ИЗ
		|	Справочник.мЭтапыДоговоров.Исполнители КАК мЭтапыДоговоровИсполнители
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПользователях КАК СведенияОПользователях
		|		ПО мЭтапыДоговоровИсполнители.Исполнитель = СведенияОПользователях.Пользователь
		|ГДЕ
		|	мЭтапыДоговоровИсполнители.Ссылка В
		|			(ВЫБРАТЬ
		|				Акты.ЭтапДоговора
		|			ИЗ
		|				Акты КАК Акты)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеИсполнители.ЭтапДоговора КАК ЭтапДоговора,
		|	0 КАК СуммаЗИС,
		|	ОсновныеИсполнители.Исполнитель КАК Исполнитель,
		|	ОсновныеИсполнители.КТУ КАК КТУ,
		|	ОсновныеИсполнители.ТабельныйНомер КАК ТабельныйНомер,
		|	ОсновныеИсполнители.ПодразделениеИсполнителя КАК ПодразделениеИсполнителя,
		|	ОсновныеИсполнители.Квалификация КАК Квалификация
		|ПОМЕСТИТЬ Исполнители
		|ИЗ
		|	ОсновныеИсполнители КАК ОсновныеИсполнители
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	НеОсновныеИсполнители.ЭтапДоговора,
		|	НеОсновныеИсполнители.СуммаЗИС,
		|	НеОсновныеИсполнители.Сотрудник,
		|	1,
		|	НеОсновныеИсполнители.Сотрудник.ТабельныйНомер,
		|	НеОсновныеИсполнители.Подразделение,
		|	НеОсновныеИсполнители.ДолжностьКвалификация
		|ИЗ
		|	НеОсновныеИсполнители КАК НеОсновныеИсполнители
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорреспондентыДополнительныеРеквизиты.Значение КАК ВидЗаказчика,
		|	КорреспондентыДополнительныеРеквизиты.Ссылка КАК Корреспондент
		|ПОМЕСТИТЬ ВидыЗаказчиков
		|ИЗ
		|	Справочник.Корреспонденты.ДополнительныеРеквизиты КАК КорреспондентыДополнительныеРеквизиты
		|ГДЕ
		|	КорреспондентыДополнительныеРеквизиты.Ссылка В
		|			(ВЫБРАТЬ
		|				Акты.Корреспондент
		|			ИЗ
		|				Акты КАК Акты)
		|	И ВЫБОР
		|			КОГДА КорреспондентыДополнительныеРеквизиты.Ссылка.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
		|				ТОГДА КорреспондентыДополнительныеРеквизиты.Свойство.Наименование ПОДОБНО ""Вид заказчика физ. лицо""
		|			ИНАЧЕ КорреспондентыДополнительныеРеквизиты.Свойство.Наименование ПОДОБНО ""Вид заказчика юр. лицо""
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВнутренниеДокументыДополнительныеРеквизиты.Значение КАК ЦельФизЛицо,
		|	ВнутренниеДокументыДополнительныеРеквизиты.Ссылка КАК Договор
		|ПОМЕСТИТЬ ЦелиФизЛиц
		|ИЗ
		|	Справочник.ВнутренниеДокументы.ДополнительныеРеквизиты КАК ВнутренниеДокументыДополнительныеРеквизиты
		|ГДЕ
		|	ВнутренниеДокументыДополнительныеРеквизиты.Ссылка В
		|			(ВЫБРАТЬ
		|				Акты.Договор
		|			ИЗ
		|				Акты КАК Акты)
		|	И ВнутренниеДокументыДополнительныеРеквизиты.Свойство.Наименование ПОДОБНО ""Цель предоставления зем. участка физлицам""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Акты.ЭтапДоговора КАК ЭтапДоговора,
		|	ВЫБОР
		|		КОГДА Акты.Корреспондент.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
		|			ТОГДА ЦелиФизЛиц.ЦельФизЛицо
		|		ИНАЧЕ Акты.ЭтапДоговора.КарточкаОбъектаРабот.ЦельПредоставления
		|	КОНЕЦ КАК Цель
		|ПОМЕСТИТЬ Цели
		|ИЗ
		|	Акты КАК Акты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЦелиФизЛиц КАК ЦелиФизЛиц
		|		ПО Акты.Договор = ЦелиФизЛиц.Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Акты.ЭтапДоговора.Подразделение.Родитель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			ТОГДА Акты.ЭтапДоговора.Подразделение
		|		ИНАЧЕ Акты.ЭтапДоговора.Подразделение.Родитель
		|	КОНЕЦ КАК Подразделение,
		|	Акты.ЮрАкт КАК Акт,
		|	Акты.Договор КАК Договор,
		|	Акты.ЭтапДоговора КАК ЭтапДоговора,
		|	Акты.ЮрАкт.РегистрационныйНомер КАК НомерАкта,
		|	Акты.ЮрАкт.ДатаРегистрации КАК ДатаАкта,
		|	Акты.ЮрАкт.Сумма КАК Сумма,
		|	мРеквизитыАктовВыполненныхРабот.СуммаНДС КАК НДС,
		|	Акты.Договор.Организация КАК Организация,
		|	Сметы.СуммаПрочих КАК СуммаПрочих,
		|	Исполнители.Исполнитель КАК Исполнитель,
		|	Исполнители.КТУ КАК КТУ,
		|	Исполнители.ТабельныйНомер КАК ТабельныйНомер,
		|	Исполнители.Квалификация КАК Квалификация,
		|	Исполнители.ПодразделениеИсполнителя КАК ПодразделениеИсполнителя,
		|	ВЫБОР
		|		КОГДА Исполнители.ПодразделениеИсполнителя <> Акты.ЭтапДоговора.Подразделение
		|				И Исполнители.ПодразделениеИсполнителя.Родитель <> Акты.ЭтапДоговора.Подразделение
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НеОсновноеПодразделение,
		|	ВидыЗаказчиков.ВидЗаказчика КАК ВидЗаказчика,
		|	Цели.Цель КАК Цель,
		|	Акты.ЭтапДоговора.ДопУсловиеНормативаЗП КАК ДопУсловиеНормативаЗП,
		|	Акты.ЭтапДоговора.ВидРабот КАК ВидРабот,
		|	ЕСТЬNULL(Сметы.СуммаЗИС, 0) КАК ОбъемРабот,
		|	ЕСТЬNULL(Стоп.Дата, &ПустаяДата) КАК СтопДата,
		|	ЕСТЬNULL(Пуск.Дата, &ПустаяДата) КАК ПускДата
		|ИЗ
		|	Акты КАК Акты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.мРеквизитыАктовВыполненныхРабот КАК мРеквизитыАктовВыполненныхРабот
		|		ПО Акты.ЮрАкт = мРеквизитыАктовВыполненныхРабот.Владелец
		|		ЛЕВОЕ СОЕДИНЕНИЕ Оплаты КАК Оплаты
		|		ПО Акты.ЭтапДоговора = Оплаты.ЭтапДоговора
		|		ЛЕВОЕ СОЕДИНЕНИЕ Сметы КАК Сметы
		|		ПО Акты.ЭтапДоговора = Сметы.ЭтапДоговора
		|		ЛЕВОЕ СОЕДИНЕНИЕ Исполнители КАК Исполнители
		|		ПО Акты.ЭтапДоговора = Исполнители.ЭтапДоговора
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыЗаказчиков КАК ВидыЗаказчиков
		|		ПО Акты.Корреспондент = ВидыЗаказчиков.Корреспондент
		|		ЛЕВОЕ СОЕДИНЕНИЕ Цели КАК Цели
		|		ПО Акты.ЭтапДоговора = Цели.ЭтапДоговора
		|		ЛЕВОЕ СОЕДИНЕНИЕ Пуск КАК Пуск
		|		ПО Акты.ЭтапДоговора = Пуск.ЭтапДоговора
		|		ЛЕВОЕ СОЕДИНЕНИЕ Стоп КАК Стоп
		|		ПО Акты.ЭтапДоговора = Стоп.ЭтапДоговора
		|ГДЕ
		|	ВЫБОР
		|			КОГДА Акты.ЭтапДоговора.ШаблонУсловийДоговора.УчетДатыПредоплаты
		|				ТОГДА ВЫБОР
		|						КОГДА Акты.ЭтапДоговора.ШаблонУсловийДоговора.ПроцентПредоплаты > 0
		|							ТОГДА ВЫБОР
		|									КОГДА ЕСТЬNULL(Оплаты.Оплата, 0) >= Акты.ЭтапДоговора.СтоимостьСНДС * Акты.ЭтапДоговора.ШаблонУсловийДоговора.ПроцентПредоплаты / 100
		|										ТОГДА ИСТИНА
		|									ИНАЧЕ ЛОЖЬ
		|								КОНЕЦ
		|						ИНАЧЕ ВЫБОР
		|								КОГДА ЕСТЬNULL(Оплаты.Оплата, 0) > 0
		|									ТОГДА ИСТИНА
		|								ИНАЧЕ ЛОЖЬ
		|							КОНЕЦ
		|					КОНЕЦ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И ЕСТЬNULL(Стоп.Дата, &ПустаяДата) <= ЕСТЬNULL(Пуск.Дата, &ПустаяДата)
		|ИТОГИ
		|	МАКСИМУМ(Договор),
		|	МАКСИМУМ(ЭтапДоговора),
		|	МАКСИМУМ(НДС),
		|	МАКСИМУМ(Организация),
		|	МАКСИМУМ(СуммаПрочих)
		|ПО
		|	Подразделение,
		|	Акт";
	
	Запрос.УстановитьПараметр("Пуск", Справочники.мВидыДатДоговоров.ДатаВозобновленияРабот);
	Запрос.УстановитьПараметр("Стоп", Справочники.мВидыДатДоговоров.ДатаПриостановленияРабот);
	Запрос.УстановитьПараметр("ВидДоговора", Справочники.ВидыВнутреннихДокументов.НайтиПоНаименованию("Договор с юр. лицами"));
	Запрос.УстановитьПараметр("ВидДокументаАкт", Справочники.ВидыВнутреннихДокументов.АктВыполненныхРабот);
	Запрос.УстановитьПараметр("Вручен", Перечисления.мСостоянияАктовВыполненныхРабот.ВрученЗаказчику);
	Запрос.УстановитьПараметр("ДатаДеноминации", Дата(2016, 7, 1));
	Запрос.УстановитьПараметр("ДатаДеноминацииПосле", Дата(2016, 7, 2));
	Запрос.УстановитьПараметр("Дата1", Период.ДатаНачала);
	Запрос.УстановитьПараметр("Дата2", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("ДоговорПодписан", Перечисления.мСостоянияДоговоров.Подписан);
	Запрос.УстановитьПараметр("Подписан", Перечисления.мСостоянияАктовВыполненныхРабот.ПодписанЗаказчиком);
	Запрос.УстановитьПараметр("ПодписанКопия", Перечисления.мСостоянияАктовВыполненныхРабот.ПодписанЗаказчикомКопия);
	Запрос.УстановитьПараметр("ПустаяДата", '00010101000000');
	Запрос.УстановитьПараметр("ФизЛицо", Перечисления.ЮрФизЛицо.ФизЛицо);
	Если ЗначениеЗаполнено(ОтборПодразделение) Тогда
		Запрос.УстановитьПараметр("Подразделение", ОтборПодразделение);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ВнутренниеДокументы.ЭтапДоговора.Подразделение В ИЕРАРХИИ (&Подразделение)", "");
	КонецЕсли; 
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Возврат Выборка;
КонецФункции

// Выбирает из базы в ДокументыАктирования существующие
//  документы актирования для последующего их заполнения
&НаСервере
Процедура ЗаполнитьДокументыАктирования()
	ДокументыАктирования.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	мАктирование.Ссылка КАК Документ,
		|	мАктирование.Подразделение
		|ИЗ
		|	Документ.мАктирование КАК мАктирование
		|ГДЕ
		|	мАктирование.Дата МЕЖДУ &Дата1 И &Дата2
		|	И мАктирование.Проведен
		|	И мАктирование.Подразделение В ИЕРАРХИИ (&Подразделение)";
	
	Запрос.УстановитьПараметр("Дата1", Период.ДатаНачала);
	Запрос.УстановитьПараметр("Дата2", Период.ДатаОкончания);
	Если ЗначениеЗаполнено(ОтборПодразделение) Тогда
		Запрос.УстановитьПараметр("Подразделение", ОтборПодразделение);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И мАктирование.Подразделение В ИЕРАРХИИ (&Подразделение)", "");
	КонецЕсли; 
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Пока Выборка.Следующий() Цикл
		Стр = ДокументыАктирования.Добавить();
		ЗаполнитьЗначенияСвойств(Стр, Выборка);
	КонецЦикла;
	
КонецПроцедуры
 
 