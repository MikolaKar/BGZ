//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИсходныйЗапросСписка = Список.ТекстЗапроса;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресВременногоХранилища", Параметры.АдресВременногоХранилища);
	ПараметрыФормы.Вставить("Организация", Параметры.Организация);
	ПараметрыФормы.Вставить("РежимВыбора", Параметры.РежимВыбора);
	ПараметрыФормы.Вставить("СостояниеНаДату", Параметры.СостояниеНаДату);
	ПараметрыФормы.Вставить("ДатаРегистрации", Параметры.ДатаРегистрации);

	Если Параметры.Свойство("НоменклатураДел") И ЗначениеЗаполнено(Параметры.НоменклатураДел) Тогда
		ПараметрыФормы.Вставить("НоменклатураДел", Параметры.НоменклатураДел);
	КонецЕсли;
	Если Параметры.Свойство("ВидДокумента") И ЗначениеЗаполнено(Параметры.ВидДокумента) Тогда
		ПараметрыФормы.Вставить("ВидДокумента", Параметры.ВидДокумента);
	КонецЕсли;
	Если Параметры.Свойство("Корреспондент") Тогда
		ПараметрыФормы.Вставить("Корреспондент", Параметры.Корреспондент);
	КонецЕсли;
	Если Параметры.Свойство("ВопросДеятельности") Тогда
		ПараметрыФормы.Вставить("ВопросДеятельности", Параметры.ВопросДеятельности);
	КонецЕсли;
	Если Параметры.Свойство("Подразделение") И ЗначениеЗаполнено(Параметры.Подразделение) Тогда
		ПараметрыФормы.Вставить("Подразделение", Параметры.Подразделение);
	КонецЕсли;

	Если Параметры.РежимВыбора = "ИзКарточкиДокумента" Тогда 
		
		ПервыйЗапуск = ХранилищеОбщихНастроек.Загрузить("ФормаВыбораДелаХраненияДокументов", "ПервыйЗапуск");
		Если ПервыйЗапуск = Неопределено Тогда
			ПоказыватьТолькоПодходящиеДела = Истина;
		Иначе
			ПоказыватьТолькоПодходящиеДела = ХранилищеОбщихНастроек.Загрузить("ФормаВыбораДелаХраненияДокументов", "ПоказыватьТолькоПодходящиеДела");
		КонецЕсли;
		Элементы.ПоказыватьТолькоПодходящиеДела.Видимость = Истина;
		
		Если ПоказыватьТолькоПодходящиеДела Тогда
			УстановитьНаСписокОтборПоНастройкам(Параметры);
		Иначе
			УстановитьНаСписокСтандартныйОтбор(Параметры);
		КонецЕсли;
				
	ИначеЕсли Параметры.РежимВыбора = "ИзПередачиДелВАрхив" 
		  Или Параметры.РежимВыбора = "ИзУничтоженияДел" Тогда 
		  
		Элементы.ПоказыватьТолькоПодходящиеДела.Видимость = Ложь;
		  
		Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса, 
		  	"РегистрСведений.СостоянияДелХраненияДокументов.СрезПоследних(", 
			"РегистрСведений.СостоянияДелХраненияДокументов.СрезПоследних(&Период");
		  
		Период = Новый Граница(Параметры.СостояниеНаДату, ВидГраницы.Исключая);
		Список.Параметры.УстановитьЗначениеПараметра("Период", Период);
			
		Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") И ЗначениеЗаполнено(Параметры.Организация) Тогда 
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Организация", Параметры.Организация);
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ДелоЗакрыто", Истина);
		
		Состояния = Новый Массив;
		Состояния.Добавить(Перечисления.СостоянияДелХраненияДокументов.ПустаяСсылка());
		Если Параметры.РежимВыбора = "ИзУничтоженияДел" Тогда 
			Состояния.Добавить(Перечисления.СостоянияДелХраненияДокументов.ПереданоВАрхив);
		КонецЕсли; 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Состояние", 
			Состояния,
			ВидСравненияКомпоновкиДанных.ВСписке); 
		
		АдресВременногоХранилища = Параметры.АдресВременногоХранилища;
		Если ЗначениеЗаполнено(АдресВременногоХранилища) Тогда 
			Выбранные.Загрузить( ПолучитьИзВременногоХранилища(АдресВременногоХранилища) );
			ОбновитьУсловноеОформление();
		КонецЕсли;	
			
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СохранитьНастройку();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПоказыватьТолькоПодходящиеДелаПриИзменении(Элемент)
	
	Если ПоказыватьТолькоПодходящиеДела Тогда
		УстановитьНаСписокОтборПоНастройкам(ПараметрыФормы);
	Иначе
		УстановитьНаСписокСтандартныйОтбор(ПараметрыФормы);
	КонецЕсли;
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ОбновитьУсловноеОформление()
	
	МассивВыбранных = Новый Массив;
	Для Каждого Строка Из Выбранные Цикл
		МассивВыбранных.Добавить(Строка.ДелоХраненияДокументов);
	КонецЦикла;	
	
	Если Список.УсловноеОформление.Элементы.Количество() > 0 Тогда 
		ЭлементОформления = Список.УсловноеОформление.Элементы[0];
	Иначе
		ЭлементОформления = Список.УсловноеОформление.Элементы.Добавить();
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЗакрытыеНеактуальныеЗаписи);
		ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.Использование = Истина;
	КонецЕсли;	
	
	ЭлементОформления.Отбор.Элементы[0].ПравоеЗначение = МассивВыбранных;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНаСписокОтборПоНастройкам(Параметры)
	
	Список.ТекстЗапроса = ИсходныйЗапросСписка;
	
	УстановитьНаСписокСтандартныйОтбор(Параметры);	
	
	Если Параметры.Свойство("НоменклатураДел") И ЗначениеЗаполнено(Параметры.НоменклатураДел) Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "НоменклатураДел", Параметры.НоменклатураДел);
	Иначе	
		
		ДелаДляВыбораПоВидуДок = Неопределено;
		Если Параметры.Свойство("ВидДокумента") И ЗначениеЗаполнено(Параметры.ВидДокумента) Тогда 
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	НДВидыДокументов.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ НДВидыДокументов
			|ИЗ
			|	Справочник.НоменклатураДел.ВидыДокументов КАК НДВидыДокументов
			|ГДЕ
			|	НДВидыДокументов.ВидДокумента В ИЕРАРХИИ(&ВидДокумента)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ДелаХраненияДокументов.Ссылка КАК Ссылка
			|ИЗ
			|	НДВидыДокументов КАК НДВидыДокументов
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
			|		ПО (ДелаХраненияДокументов.НоменклатураДел = НДВидыДокументов.Ссылка)
			|ГДЕ
			|	(НЕ ДелаХраненияДокументов.ПометкаУдаления)
			|	И (НЕ ДелаХраненияДокументов.ДелоЗакрыто)";
			
			Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") И ЗначениеЗаполнено(Параметры.Организация) Тогда 
				Запрос.Текст = Запрос.Текст + " И (Организация = &Организация) ";
				Запрос.УстановитьПараметр("Организация", Параметры.Организация);
			КонецЕсли;	
			
			Запрос.УстановитьПараметр("ВидДокумента", Параметры.ВидДокумента);
			ДелаДляВыбораПоВидуДок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			
		КонецЕсли;	
		
		
		ДелаДляВыбораПоКорр = Неопределено;
		Если Параметры.Свойство("Корреспондент") И ТипЗнч(Параметры.Корреспондент) = Тип("СправочникСсылка.Корреспонденты") И ЗначениеЗаполнено(Параметры.Корреспондент) Тогда 
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	НДКорреспонденты.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ НДКорреспонденты
			|ИЗ
			|	Справочник.НоменклатураДел.Корреспонденты КАК НДКорреспонденты
			|ГДЕ
			|	НДКорреспонденты.Корреспондент В ИЕРАРХИИ(&Корреспондент)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ДелаХраненияДокументов.Ссылка КАК Ссылка
			|ИЗ
			|	НДКорреспонденты КАК НДКорреспонденты
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
			|		ПО (ДелаХраненияДокументов.НоменклатураДел = НДКорреспонденты.Ссылка)
			|ГДЕ
			|	(НЕ ДелаХраненияДокументов.ПометкаУдаления)
			|	И (НЕ ДелаХраненияДокументов.ДелоЗакрыто)";
			
			Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") И ЗначениеЗаполнено(Параметры.Организация) Тогда 
				Запрос.Текст = Запрос.Текст + " И (Организация = &Организация) ";
				Запрос.УстановитьПараметр("Организация", Параметры.Организация);
			КонецЕсли;
			
			Запрос.УстановитьПараметр("Корреспондент", Параметры.Корреспондент);
			ДелаДляВыбораПоКорр = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			
		ИначеЕсли Параметры.Свойство("Корреспондент") И ТипЗнч(Параметры.Корреспондент) = Тип("Массив") И Параметры.Корреспондент.Количество() > 0 Тогда 
			
			Для Поз = 0 По Параметры.Корреспондент.ВГраница() Цикл
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				|	НДКорреспонденты.Ссылка КАК Ссылка
				|ПОМЕСТИТЬ НДКорреспонденты
				|ИЗ
				|	Справочник.НоменклатураДел.Корреспонденты КАК НДКорреспонденты
				|ГДЕ
				|	НДКорреспонденты.Корреспондент В ИЕРАРХИИ(&Корреспондент)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ДелаХраненияДокументов.Ссылка КАК Ссылка
				|ИЗ
				|	НДКорреспонденты КАК НДКорреспонденты
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
				|		ПО (ДелаХраненияДокументов.НоменклатураДел = НДКорреспонденты.Ссылка)
				|ГДЕ
				|	(НЕ ДелаХраненияДокументов.ПометкаУдаления)
				|	И (НЕ ДелаХраненияДокументов.ДелоЗакрыто)";
				
				Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") И ЗначениеЗаполнено(Параметры.Организация) Тогда 
					Запрос.Текст = Запрос.Текст + " И (Организация = &Организация) ";
					Запрос.УстановитьПараметр("Организация", Параметры.Организация);
				КонецЕсли;
				
				Запрос.УстановитьПараметр("Корреспондент", Параметры.Корреспондент[Поз]);
				врДелаДляВыбораПоКорр = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
				
				Если Поз = 0 Тогда 
					ДелаДляВыбораПоКорр = Новый Массив;
					Для Инд = 0 По врДелаДляВыбораПоКорр.ВГраница() Цикл
						ДелаДляВыбораПоКорр.Добавить(врДелаДляВыбораПоКорр[Инд]);
					КонецЦикла;	
				Иначе
					ВГраница = ДелаДляВыбораПоКорр.ВГраница();
					Для Инд = 0 По ВГраница Цикл
						Если врДелаДляВыбораПоКорр.Найти(ДелаДляВыбораПоКорр[ВГраница-Инд]) = Неопределено Тогда 
							ДелаДляВыбораПоКорр.Удалить(ВГраница-Инд);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;	
				
			КонецЦикла;
			
		КонецЕсли;
		
		
		ДелаДляВыбораПоВопрДеят = Неопределено;
		Если Параметры.Свойство("ВопросДеятельности") И ЗначениеЗаполнено(Параметры.ВопросДеятельности) Тогда 
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	НДВопросы.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ НДВопросы
			|ИЗ
			|	Справочник.НоменклатураДел.ВопросыДеятельности КАК НДВопросы
			|ГДЕ
			|	НДВопросы.ВопросДеятельности В ИЕРАРХИИ(&ВопросДеятельности)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ДелаХраненияДокументов.Ссылка КАК Ссылка
			|ИЗ
			|	НДВопросы КАК НДВопросы
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
			|		ПО (ДелаХраненияДокументов.НоменклатураДел = НДВопросы.Ссылка)
			|ГДЕ
			|	(НЕ ДелаХраненияДокументов.ПометкаУдаления)
			|	И (НЕ ДелаХраненияДокументов.ДелоЗакрыто)";
			
			Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") И ЗначениеЗаполнено(Параметры.Организация) Тогда 
				Запрос.Текст = Запрос.Текст + " И (Организация = &Организация) ";
				Запрос.УстановитьПараметр("Организация", Параметры.Организация);
			КонецЕсли;
			
			Запрос.УстановитьПараметр("ВопросДеятельности", Параметры.ВопросДеятельности);
			ДелаДляВыбораПоВопрДеят = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			
		КонецЕсли;
		
		
		Если ДелаДляВыбораПоВидуДок <> Неопределено Или ДелаДляВыбораПоКорр <> Неопределено Или ДелаДляВыбораПоВопрДеят <> Неопределено Тогда 
			
			Если ДелаДляВыбораПоВидуДок = Неопределено Тогда 
				ДелаДляВыбораПоВидуДок = Новый Массив;
			КонецЕсли;
			
			Если ДелаДляВыбораПоКорр = Неопределено Тогда 
				ДелаДляВыбораПоКорр = Новый Массив;
			КонецЕсли;
			
			Если ДелаДляВыбораПоВопрДеят = Неопределено Тогда 
				ДелаДляВыбораПоВопрДеят = Новый Массив;
			КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
				|	1 КАК Номер
				|ИЗ
				|	Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
				|ГДЕ
				|	ДелаХраненияДокументов.Ссылка В(&ДелаДляВыбораПоВидуДок)
				|	И ДелаХраненияДокументов.Ссылка В(&ДелаДляВыбораПоКорр)
				|	И ДелаХраненияДокументов.Ссылка В(&ДелаДляВыбораПоВопрДеят)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ ПЕРВЫЕ 1
				|	2
				|ИЗ
				|	Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
				|ГДЕ
				|	(ДелаХраненияДокументов.Ссылка В (&ДелаДляВыбораПоВидуДок)
				|				И ДелаХраненияДокументов.Ссылка В (&ДелаДляВыбораПоКорр)
				|				И 0 В
				|					(ВЫБРАТЬ
				|						КОЛИЧЕСТВО(*)
				|					ИЗ
				|						Справочник.НоменклатураДел.ВопросыДеятельности КАК ВопросыДеятельности
				|					ГДЕ
				|						ВопросыДеятельности.Ссылка = ДелаХраненияДокументов.НоменклатураДел)
				|			ИЛИ ДелаХраненияДокументов.Ссылка В (&ДелаДляВыбораПоВидуДок)
				|				И ДелаХраненияДокументов.Ссылка В (&ДелаДляВыбораПоВопрДеят)
				|				И 0 В
				|					(ВЫБРАТЬ
				|						КОЛИЧЕСТВО(*)
				|					ИЗ
				|						Справочник.НоменклатураДел.Корреспонденты КАК Корреспонденты
				|					ГДЕ
				|						Корреспонденты.Ссылка = ДелаХраненияДокументов.НоменклатураДел)
				|			ИЛИ ДелаХраненияДокументов.Ссылка В (&ДелаДляВыбораПоКорр)
				|				И ДелаХраненияДокументов.Ссылка В (&ДелаДляВыбораПоВопрДеят)
				|				И 0 В
				|					(ВЫБРАТЬ
				|						КОЛИЧЕСТВО(*)
				|					ИЗ
				|						Справочник.НоменклатураДел.ВидыДокументов КАК ВидыДокументов
				|					ГДЕ
				|						ВидыДокументов.Ссылка = ДелаХраненияДокументов.НоменклатураДел))
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ ПЕРВЫЕ 1
				|	3
				|ИЗ
				|	Справочник.ДелаХраненияДокументов КАК ДелаХраненияДокументов
				|ГДЕ
				|	(ДелаХраненияДокументов.Ссылка В (&ДелаДляВыбораПоВидуДок)
				|				И 0 В
				|					(ВЫБРАТЬ
				|						КОЛИЧЕСТВО(*)
				|					ИЗ
				|						Справочник.НоменклатураДел.Корреспонденты КАК Корреспонденты
				|					ГДЕ
				|						Корреспонденты.Ссылка = ДелаХраненияДокументов.НоменклатураДел)
				|				И 0 В
				|					(ВЫБРАТЬ
				|						КОЛИЧЕСТВО(*)
				|					ИЗ
				|						Справочник.НоменклатураДел.ВопросыДеятельности КАК ВопросыДеятельности
				|					ГДЕ
				|						ВопросыДеятельности.Ссылка = ДелаХраненияДокументов.НоменклатураДел)
				|			ИЛИ ДелаХраненияДокументов.Ссылка В (&ДелаДляВыбораПоКорр)
				|				И 0 В
				|					(ВЫБРАТЬ
				|						КОЛИЧЕСТВО(*)
				|					ИЗ
				|						Справочник.НоменклатураДел.ВидыДокументов КАК ВидыДокументов
				|					ГДЕ
				|						ВидыДокументов.Ссылка = ДелаХраненияДокументов.НоменклатураДел)
				|				И 0 В
				|					(ВЫБРАТЬ
				|						КОЛИЧЕСТВО(*)
				|					ИЗ
				|						Справочник.НоменклатураДел.ВопросыДеятельности КАК ВопросыДеятельности
				|					ГДЕ
				|						ВопросыДеятельности.Ссылка = ДелаХраненияДокументов.НоменклатураДел)
				|			ИЛИ ДелаХраненияДокументов.Ссылка В (&ДелаДляВыбораПоВопрДеят)
				|				И 0 В
				|					(ВЫБРАТЬ
				|						КОЛИЧЕСТВО(*)
				|					ИЗ
				|						Справочник.НоменклатураДел.ВидыДокументов КАК ВидыДокументов
				|					ГДЕ
				|						ВидыДокументов.Ссылка = ДелаХраненияДокументов.НоменклатураДел)
				|				И 0 В
				|					(ВЫБРАТЬ
				|						КОЛИЧЕСТВО(*)
				|					ИЗ
				|						Справочник.НоменклатураДел.Корреспонденты КАК Корреспонденты
				|					ГДЕ
				|						Корреспонденты.Ссылка = ДелаХраненияДокументов.НоменклатураДел))";
			
			Запрос.УстановитьПараметр("ДелаДляВыбораПоВопрДеят", ДелаДляВыбораПоВопрДеят);
			Запрос.УстановитьПараметр("ДелаДляВыбораПоВидуДок", ДелаДляВыбораПоВидуДок);
			Запрос.УстановитьПараметр("ДелаДляВыбораПоКорр", ДелаДляВыбораПоКорр);
			
			Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Номер");
			
			Если Результат.Найти(1) <> Неопределено Тогда 
				Список.ТекстЗапроса = Список.ТекстЗапроса + 
				" И СправочникДела.Ссылка В (&ДелаДляВыбораПоВидуДок) 
				| И СправочникДела.Ссылка В (&ДелаДляВыбораПоКорр) 
				| И СправочникДела.Ссылка В (&ДелаДляВыбораПоВопрДеят) ";
				
				Список.Параметры.УстановитьЗначениеПараметра("ДелаДляВыбораПоВопрДеят", ДелаДляВыбораПоВопрДеят);
				Список.Параметры.УстановитьЗначениеПараметра("ДелаДляВыбораПоВидуДок", ДелаДляВыбораПоВидуДок);
				Список.Параметры.УстановитьЗначениеПараметра("ДелаДляВыбораПоКорр", ДелаДляВыбораПоКорр);
				
			ИначеЕсли Результат.Найти(2) <> Неопределено Тогда 
				Список.ТекстЗапроса = Список.ТекстЗапроса + 
				"  И 	(СправочникДела.Ссылка В (&ДелаДляВыбораПоВидуДок)
				|			И СправочникДела.Ссылка В (&ДелаДляВыбораПоКорр)
				|				И 0 В
				|					(ВЫБРАТЬ
				|						КОЛИЧЕСТВО(*)
				|					ИЗ
				|						Справочник.НоменклатураДел.ВопросыДеятельности КАК ВопросыДеятельности
				|					ГДЕ
				|						ВопросыДеятельности.Ссылка = СправочникДела.НоменклатураДел)
				|			ИЛИ СправочникДела.Ссылка В (&ДелаДляВыбораПоВидуДок)
				|				И СправочникДела.Ссылка В (&ДелаДляВыбораПоВопрДеят)
				|				И 0 В
				|					(ВЫБРАТЬ
				|						КОЛИЧЕСТВО(*)
				|					ИЗ
				|						Справочник.НоменклатураДел.Корреспонденты КАК Корреспонденты
				|					ГДЕ
				|						Корреспонденты.Ссылка = СправочникДела.НоменклатураДел)
				|			ИЛИ СправочникДела.Ссылка В (&ДелаДляВыбораПоКорр)
				|				И СправочникДела.Ссылка В (&ДелаДляВыбораПоВопрДеят)
				|				И 0 В
				|					(ВЫБРАТЬ
				|						КОЛИЧЕСТВО(*)
				|					ИЗ
				|						Справочник.НоменклатураДел.ВидыДокументов КАК ВидыДокументов
				|					ГДЕ
				|						ВидыДокументов.Ссылка = СправочникДела.НоменклатураДел)) ";
				
				Список.Параметры.УстановитьЗначениеПараметра("ДелаДляВыбораПоВопрДеят", ДелаДляВыбораПоВопрДеят);
				Список.Параметры.УстановитьЗначениеПараметра("ДелаДляВыбораПоВидуДок", ДелаДляВыбораПоВидуДок);
				Список.Параметры.УстановитьЗначениеПараметра("ДелаДляВыбораПоКорр", ДелаДляВыбораПоКорр);
				
			ИначеЕсли Результат.Найти(3) <> Неопределено Тогда 	
				Список.ТекстЗапроса = Список.ТекстЗапроса + 
				"  И	(СправочникДела.Ссылка В (&ДелаДляВыбораПоВидуДок)
				|				И 0 В
				|					(ВЫБРАТЬ
				|						КОЛИЧЕСТВО(*)
				|					ИЗ
				|						Справочник.НоменклатураДел.Корреспонденты КАК Корреспонденты
				|					ГДЕ
				|						Корреспонденты.Ссылка = СправочникДела.НоменклатураДел)
				|				И 0 В
				|					(ВЫБРАТЬ
				|						КОЛИЧЕСТВО(*)
				|					ИЗ
				|						Справочник.НоменклатураДел.ВопросыДеятельности КАК ВопросыДеятельности
				|					ГДЕ
				|						ВопросыДеятельности.Ссылка = СправочникДела.НоменклатураДел)
				|			ИЛИ СправочникДела.Ссылка В (&ДелаДляВыбораПоКорр)
				|				И 0 В
				|					(ВЫБРАТЬ
				|						КОЛИЧЕСТВО(*)
				|					ИЗ
				|						Справочник.НоменклатураДел.ВидыДокументов КАК ВидыДокументов
				|					ГДЕ
				|						ВидыДокументов.Ссылка = СправочникДела.НоменклатураДел)
				|				И 0 В
				|					(ВЫБРАТЬ
				|						КОЛИЧЕСТВО(*)
				|					ИЗ
				|						Справочник.НоменклатураДел.ВопросыДеятельности КАК ВопросыДеятельности
				|					ГДЕ
				|						ВопросыДеятельности.Ссылка = СправочникДела.НоменклатураДел)
				|			ИЛИ СправочникДела.Ссылка В (&ДелаДляВыбораПоВопрДеят)
				|				И 0 В
				|					(ВЫБРАТЬ
				|						КОЛИЧЕСТВО(*)
				|					ИЗ
				|						Справочник.НоменклатураДел.ВидыДокументов КАК ВидыДокументов
				|					ГДЕ
				|						ВидыДокументов.Ссылка = СправочникДела.НоменклатураДел)
				|				И 0 В
				|					(ВЫБРАТЬ
				|						КОЛИЧЕСТВО(*)
				|					ИЗ
				|						Справочник.НоменклатураДел.Корреспонденты КАК Корреспонденты
				|					ГДЕ
				|						Корреспонденты.Ссылка = СправочникДела.НоменклатураДел)) ";
				
				Список.Параметры.УстановитьЗначениеПараметра("ДелаДляВыбораПоВопрДеят", ДелаДляВыбораПоВопрДеят);
				Список.Параметры.УстановитьЗначениеПараметра("ДелаДляВыбораПоВидуДок", ДелаДляВыбораПоВидуДок);
				Список.Параметры.УстановитьЗначениеПараметра("ДелаДляВыбораПоКорр", ДелаДляВыбораПоКорр);
				
			Иначе
				Список.ТекстЗапроса = Список.ТекстЗапроса + 
				"   И 0 В
				|			(ВЫБРАТЬ
				|				КОЛИЧЕСТВО(*)
				|			ИЗ
				|				Справочник.НоменклатураДел.ВидыДокументов КАК ВидыДокументов
				|			ГДЕ
				|				ВидыДокументов.Ссылка = СправочникДела.НоменклатураДел)
				|	И 0 В
				|			(ВЫБРАТЬ
				|				КОЛИЧЕСТВО(*)
				|			ИЗ
				|				Справочник.НоменклатураДел.Корреспонденты КАК Корреспонденты
				|			ГДЕ
				|				Корреспонденты.Ссылка = СправочникДела.НоменклатураДел) 
				|	И 0 В
				|			(ВЫБРАТЬ
				|				КОЛИЧЕСТВО(*)
				|			ИЗ
				|				Справочник.НоменклатураДел.ВопросыДеятельности КАК ВопросыДеятельности
				|			ГДЕ
				|				ВопросыДеятельности.Ссылка = СправочникДела.НоменклатураДел) ";
				
			КонецЕсли;	
			
		КонецЕсли;	
		
	КонецЕсли;

	
КонецПроцедуры

&НаСервере
Процедура УстановитьНаСписокСтандартныйОтбор(Параметры)
	
	Список.ТекстЗапроса = ИсходныйЗапросСписка;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") И ЗначениеЗаполнено(Параметры.Организация) Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Организация", Параметры.Организация);
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ДелоЗакрыто", Ложь);
	
	Список.ТекстЗапроса = Список.ТекстЗапроса + 
		" ГДЕ 
		| (&ДатаРегистрации >= НАЧАЛОПЕРИОДА(ДатаНачала, ДЕНЬ) ИЛИ ДатаНачала = ДАТАВРЕМЯ(1,1,1)) 
		| И
		| (&ДатаРегистрации <= КОНЕЦПЕРИОДА(ДатаОкончания, ДЕНЬ) ИЛИ ДатаОкончания = ДАТАВРЕМЯ(1,1,1)) 
		| ";
		
	Если ЗначениеЗаполнено(Параметры.ДатаРегистрации) Тогда 
		Список.Параметры.УстановитьЗначениеПараметра("ДатаРегистрации", Параметры.ДатаРегистрации);	
	Иначе	
		Список.Параметры.УстановитьЗначениеПараметра("ДатаРегистрации", ТекущаяДата());	
	КонецЕсли;	
	
	Если Параметры.Свойство("НоменклатураДел") И ЗначениеЗаполнено(Параметры.НоменклатураДел) Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "НоменклатураДел", Параметры.НоменклатураДел);
	КонецЕсли;
	
	Если Параметры.Свойство("Подразделение") И ЗначениеЗаполнено(Параметры.Подразделение) Тогда
		ПустоеИПодразделение = Делопроизводство.ПолучитьПодразделениеИПустуюСсылку(Параметры.Подразделение);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Подразделение",
			ПустоеИПодразделение,
			ВидСравненияКомпоновкиДанных.ВСписке);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройку()
	
	ХранилищеОбщихНастроек.Сохранить("ФормаВыбораДелаХраненияДокументов", "ПервыйЗапуск", Ложь);
	ХранилищеОбщихНастроек.Сохранить("ФормаВыбораДелаХраненияДокументов", "ПоказыватьТолькоПодходящиеДела", ПоказыватьТолькоПодходящиеДела);
	
КонецПроцедуры
