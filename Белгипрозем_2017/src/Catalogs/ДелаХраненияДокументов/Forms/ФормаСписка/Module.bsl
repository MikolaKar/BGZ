
&НаСервере
Процедура УстановитьОтборСписка(ПараметрыОтбора)
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда
		ПараметрыОтбора["Организация"] = Неопределено;
	КонецЕсли;
	
	Если ПараметрыОтбора["ПоказыватьДела"] = "Все"
	 Или ПараметрыОтбора["ПоказыватьДела"] = "Открытые"
	 Или ПараметрыОтбора["ПоказыватьДела"] = "Закрытые"
	 Или ПараметрыОтбора["ПоказыватьДела"] = "Переданные в архив"
	 Или ПараметрыОтбора["ПоказыватьДела"] = "Уничтоженные" Тогда 
	 
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
			"Состояние");
			
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
			"ДелоЗакрыто");	
			
	КонецЕсли;	
	
	Если ПараметрыОтбора["ПоказыватьДела"] = "Открытые" Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Состояние", 
			Перечисления.СостоянияДелХраненияДокументов.ПустаяСсылка());
			
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"ДелоЗакрыто", 
			Ложь);
			
	ИначеЕсли ПараметрыОтбора["ПоказыватьДела"] = "Закрытые" Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Состояние", 
			Перечисления.СостоянияДелХраненияДокументов.ПустаяСсылка());
			
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"ДелоЗакрыто", 
			Истина);		
			
	ИначеЕсли ПараметрыОтбора["ПоказыватьДела"] = "Переданные в архив" Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Состояние", 
			Перечисления.СостоянияДелХраненияДокументов.ПереданоВАрхив);
		
	ИначеЕсли ПараметрыОтбора["ПоказыватьДела"] = "Уничтоженные" Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Состояние", 
			Перечисления.СостоянияДелХраненияДокументов.Уничтожено);
		
	КонецЕсли;	
	
	// организация 
	Если Не ЗначениеЗаполнено(ПараметрыОтбора["Организация"]) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
			"Организация");
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Организация",
			ПараметрыОтбора["Организация"]);
	КонецЕсли;
		
	Если ЗначениеЗаполнено(ПараметрыОтбора["Подразделение"]) Тогда 
		
		МассивПодразделений = Делопроизводство.ПолучитьПодразделениеИРодителей(ПараметрыОтбора["Подразделение"]);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Подразделение",
			МассивПодразделений,
			ВидСравненияКомпоновкиДанных.ВСписке);
			
	Иначе 
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "Подразделение");	
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтбор()
	
	ПараметрыОтбора = Новый Соответствие();
	ПараметрыОтбора.Вставить("ПоказыватьДела", ПоказыватьДела);	
	ПараметрыОтбора.Вставить("Организация",    Организация);	
	ПараметрыОтбора.Вставить("Подразделение",  Подразделение);	
	УстановитьОтборСписка(ПараметрыОтбора);
	
КонецПроцедуры	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПоказыватьДела = "Открытые";
	Организация = РаботаСОрганизациями.ПолучитьОрганизациюПоУмолчанию();
	УстановитьОтбор();
	
	Если ЗначениеЗаполнено(Параметры.НоменклатураДел) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, 
			"НоменклатураДел", 
			Параметры.НоменклатураДел);
	КонецЕсли;
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УстановитьОтборСписка(Настройки);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьДелаПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереносДокументовДела(Команда)
	
	ПараметрыФормы = Новый Структура("ПеренестиИзДела", Элементы.Список.ТекущаяСтрока);
	Открытьформу("Справочник.ДелаХраненияДокументов.Форма.ФормаПереносаДокументовДела", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененаНоменклатураДел" Тогда 
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.Список);
  
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать