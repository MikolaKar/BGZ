#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает структуру полей Должности
//
// Возвращаемое значение:
//   Структура
//     Наименование
//
Функция ПолучитьСтруктуруДолжности() Экспорт
	
	ПараметрыДолжности = Новый Структура;
	ПараметрыДолжности.Вставить("Наименование");
	
	Возврат ПараметрыДолжности;
	
КонецФункции

// Создает и записывает в БД должность
//
// Параметры:
//   СтруктураДолжности - Структура - структура полей должности.
//
Функция СоздатьДолжность(СтруктураДолжности) Экспорт
	
	НоваяДолжность = СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(НоваяДолжность, СтруктураДолжности);
	НоваяДолжность.Записать();
	
	Возврат НоваяДолжность.Ссылка;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции_УправлениеДоступом

// Возвращает Истина, указывая тем самым, что этот объект сам заполняет права 
// доступа для файлов, владельцем которых является
Функция ЕстьМетодЗаполнитьПраваДоступаДляФайлов() Экспорт
	
	Возврат Истина;
	
КонецФункции

// Заполняет переданный дескриптор доступа 
Процедура ЗаполнитьДескрипторДоступа(ОбъектДоступа, ДескрипторДоступа) Экспорт
	
КонецПроцедуры
	
// Заполняет параметр ПраваДоступа правами доступа к файлам, владелец 
// которых имеет указанный дескриптор
Процедура ЗаполнитьПраваДоступаДляФайлов(ДескрипторОбъектаДоступа, ПраваДоступа) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Права на чтение
	ПраваПользователя = Новый Структура("Чтение, Добавление, Изменение, Удаление, УправлениеПравами",
									Истина, Ложь, Ложь, Ложь, Ложь);
									
	ДокументооборотПраваДоступа.ДобавитьПользователяВСоответствиеПрав(
		ПраваДоступа,
		Справочники.ГруппыПользователей.ВсеПользователи,
		Неопределено,
		Неопределено,
		ПраваПользователя);
		
	// Права на изменение
	Таблица = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Справочник.Должности");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПраваГруппДоступаНаТаблицы.ГруппаДоступа
	|ПОМЕСТИТЬ ГруппыДоступа
	|ИЗ
	|	РегистрСведений.ПраваГруппДоступаНаТаблицы КАК ПраваГруппДоступаНаТаблицы
	|ГДЕ
	|	ПраваГруппДоступаНаТаблицы.Таблица = &Таблица
	|	И ПраваГруппДоступаНаТаблицы.Изменение = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГруппыДоступаПользователи.Пользователь КАК Пользователь
	|ИЗ
	|	Справочник.ГруппыДоступа.Пользователи КАК ГруппыДоступаПользователи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ГруппыДоступа КАК ГруппыДоступа
	|		ПО ГруппыДоступаПользователи.Ссылка = ГруппыДоступа.ГруппаДоступа";
	
	Запрос.УстановитьПараметр("Таблица", Таблица);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ПраваПользователя = Новый Структура("Чтение, Добавление, Изменение, Удаление, УправлениеПравами",
										Истина, Истина, Истина, Истина, Ложь);
		
		ДокументооборотПраваДоступа.ДобавитьПользователяВСоответствиеПрав(
			ПраваДоступа,
			Выборка.Пользователь,
			Неопределено,
			Неопределено,
			ПраваПользователя);
		
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
