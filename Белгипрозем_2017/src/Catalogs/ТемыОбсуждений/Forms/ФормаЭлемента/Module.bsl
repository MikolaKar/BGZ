#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		Объект.Автор = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;
	
	Если Объект.Документ = Неопределено Тогда
		Элементы.Документ.Видимость = Ложь;
	КонецЕсли;
	
	Если Объект.Закрытая Тогда
		Элементы.ФормаОтвет.Доступность = Ложь;
		Элементы.Наименование.ТолькоПросмотр = Истина;
		Элементы.ТекстСообщения.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Если ДокументооборотПраваДоступаПовтИсп.ВключеноИспользованиеПравДоступа() Тогда
			
			ПраваПоОбъекту = ДокументооборотПраваДоступа.ПолучитьПраваПоОбъекту(Объект.Ссылка, ПользователиКлиентСервер.ТекущийПользователь());
			Если Не ПраваПоОбъекту.Изменение Тогда
				УстановитьРежимЧтения(Истина);
			КонецЕсли;
			
		Иначе
			
			Если НЕ (Объект.Автор = ПользователиКлиентСервер.ТекущийПользователь() ИЛИ РольДоступна("ПолныеПрава")) Тогда
				УстановитьРежимЧтения(Истина);
			КонецЕсли;
		
		КонецЕсли;
		
	КонецЕсли;
	
	ПервоеСообщениеТемы = РаботаСОбсуждениями.НайтиПервоеСообщениеТемы(Объект.Ссылка);
	ТекстСообщения = ПервоеСообщениеТемы.ТекстСообщения;

	РаботаСПрочтениями.УстановитьСвойствоПрочтен(ПервоеСообщениеТемы);
	
	ОбновитьСведенияОТеме();
	
	// Прочтение
	ОповеститьОПрочтении = РаботаСПрочтениями.УстановитьСвойствоПрочтен(ПервоеСообщениеТемы);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УстановитьУпрощенноеОтображениеТемы(Истина);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Документ) Тогда
		// Рабочие группы
		Элементы.РабочаяГруппаТаблица.Видимость = Истина;
		РаботаСРабочимиГруппами.ДокументУстановитьУсловноеОформлениеСпискаРабочейГруппы(ЭтаФорма);
	Иначе
		Элементы.ГруппаРабочаяГруппа.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РаботаСПрочтениямиКлиент.ОповеститьОПрочтении(ПервоеСообщениеТемы, ОповеститьОПрочтении);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Если НЕ ЗначениеЗаполнено(Объект.Документ) Тогда
		// Рабочие группы
		РаботаСРабочимиГруппами.ДокументПриЧтенииНаСервере(ЭтаФорма);
		
		// Формирование исходной рабочей группы
		Участники = РегистрыСведений.РабочиеГруппы.ПолучитьУчастниковПоОбъекту(Объект.Ссылка);
		ИсходнаяРабочаяГруппа.Очистить();
		Для каждого Эл Из Участники Цикл
			
			Строка = ИсходнаяРабочаяГруппа.Добавить();
			Строка.Участник = Эл.Участник; 
			Строка.ОсновнойОбъектАдресации = Эл.ОсновнойОбъектАдресации;
			Строка.ДополнительныйОбъектАдресации = Эл.ДополнительныйОбъектАдресации;
			
		КонецЦикла;
		
	Иначе
		Элементы.ГруппаРабочаяГруппа.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ ЗначениеЗаполнено(Объект.Документ) Тогда
		// Рабочая группа
		РабочаяГруппаТаблицаКоличество = РабочаяГруппаТаблица.Количество();
		Для Инд = 1 По РабочаяГруппаТаблицаКоличество Цикл
			Строка = РабочаяГруппаТаблица[РабочаяГруппаТаблицаКоличество - Инд];
			Если Не ЗначениеЗаполнено(Строка.Участник) Тогда 
				РабочаяГруппаТаблица.Удалить(Строка);
			КонецЕсли;	
		КонецЦикла;
		
		НоваяРабочаяГруппа = РабочаяГруппаТаблица.Выгрузить();
		РабочаяГруппаДобавить = Новый Массив;
		РабочаяГруппаУдалить = Новый Массив;
		
		// Формирование списка удаленных участников рабочей группы
		Для каждого Эл Из ИсходнаяРабочаяГруппа Цикл
			
			Найден = Ложь;
			
			Для каждого Эл2 Из НоваяРабочаяГруппа Цикл
				Если Эл.Участник = Эл2.Участник 
					И Эл.ОсновнойОбъектАдресации = Эл2.ОсновнойОбъектАдресации 
					И Эл.ДополнительныйОбъектАдресации = Эл2.ДополнительныйОбъектАдресации Тогда
					
					Найден = Истина;
					Прервать;
				КонецЕсли;	
			КонецЦикла;	
			
			Если Не Найден Тогда
				РабочаяГруппаУдалить.Добавить(Новый Структура("Участник, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации", 
					Эл.Участник,
					Эл.ОсновнойОбъектАдресации,
					Эл.ДополнительныйОбъектАдресации));
			КонецЕсли;
			
		КонецЦикла;
		
		// Формирование списка добавленных участников рабочей группы
		Для каждого Эл Из НоваяРабочаяГруппа Цикл
			
			Найден = Ложь;
			
			Для каждого Эл2 Из ИсходнаяРабочаяГруппа Цикл
				Если Эл.Участник = Эл2.Участник 
					И Эл.ОсновнойОбъектАдресации = Эл2.ОсновнойОбъектАдресации 
					И Эл.ДополнительныйОбъектАдресации = Эл2.ДополнительныйОбъектАдресации Тогда
					
					Найден = Истина;
					Прервать;
				КонецЕсли;	
			КонецЦикла;	
			
			Если Не Найден Тогда
				РабочаяГруппаДобавить.Добавить(Новый Структура("Участник, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации", 
					Эл.Участник,
					Эл.ОсновнойОбъектАдресации,
					Эл.ДополнительныйОбъектАдресации));
			КонецЕсли;
			
		КонецЦикла;
		
		ТекущийОбъект.ДополнительныеСвойства.Вставить("РабочаяГруппаУдалить", РабочаяГруппаУдалить);
		ТекущийОбъект.ДополнительныеСвойства.Вставить("РабочаяГруппаДобавить", РабочаяГруппаДобавить);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(ПервоеСообщениеТемы) Тогда
		Если ПервоеСообщениеТемы.ТекстСообщения <> ТекстСообщения Тогда
			СообщениеИзменено = Истина;
		КонецЕсли;
		ОбъектПервоеСообщениеТемы = ПервоеСообщениеТемы.ПолучитьОбъект();
		ОбъектПервоеСообщениеТемы.ТекстСообщения = ТекстСообщения;
		ОбъектПервоеСообщениеТемы.Записать();
		ПервоеСообщениеТемы = ОбъектПервоеСообщениеТемы.Ссылка;
	Иначе
		СправочникСообщения = Справочники.СообщенияОбсуждений;
		НовоеСообщение = СправочникСообщения.СоздатьЭлемент();
		НовоеСообщение.ВладелецСообщения = ТекущийОбъект.Ссылка;
		НовоеСообщение.ПервоеСообщениеТемы = Истина;
		
		Если ТекстСообщения = "" Тогда
			НовоеСообщение.ТекстСообщения = ТекущийОбъект.Наименование;
			ТекстСообщения = ТекущийОбъект.Наименование;
		Иначе
			НовоеСообщение.ТекстСообщения = ТекстСообщения;
		КонецЕсли;
		
		НовоеСообщение.Записать();
		ПервоеСообщениеТемы = НовоеСообщение.Ссылка;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	РаботаСПрочтениями.УстановитьСвойствоПрочтен(ПервоеСообщениеТемы);
	
	ОбновитьСведенияОТеме();
	
	УстановитьУпрощенноеОтображениеТемы(Ложь);
	
	Если НЕ ЗначениеЗаполнено(Объект.Документ) Тогда
		// Рабочие группы
		РаботаСРабочимиГруппами.ОбъектПослеЗаписиНаСервере(ЭтаФорма, ПараметрыЗаписи);
		
		// Формирование исходной рабочей группы
		Участники = РегистрыСведений.РабочиеГруппы.ПолучитьУчастниковПоОбъекту(Объект.Ссылка);
		ИсходнаяРабочаяГруппа.Очистить();
		Для каждого Эл Из Участники Цикл
			
			Строка = ИсходнаяРабочаяГруппа.Добавить();
			Строка.Участник = Эл.Участник; 
			Строка.ОсновнойОбъектАдресации = Эл.ОсновнойОбъектАдресации;
			Строка.ДополнительныйОбъектАдресации = Эл.ДополнительныйОбъектАдресации;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ПервоеСообщениеТемыОбсужденияИзменено");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ОбщегоНазначенияДокументооборотКлиент.ВставитьВОписаниеОповещенияОЗакрытииСсылкуНаОбъект(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЗакрытаяПриИзменении(Элемент)
	
	Элементы.ФормаОтвет.Доступность = Не Объект.Закрытая;
	Элементы.Наименование.ТолькоПросмотр = Объект.Закрытая;
	Элементы.ТекстСообщения.ТолькоПросмотр = Объект.Закрытая;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКСообщениямТемыНажатие(Элемент)
	
	СтандартнаяОбработка = Ложь;
		
	Если Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОповещения = Новый Структура("Тема, Сообщение", 
		Объект.Ссылка, 
		ПервоеСообщениеТемы);
	Оповестить("ВыбраноСообщениеДляПросмотра", ПараметрыОповещения);
	
	Форма = ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаПросмотраТемы",
		Новый Структура("Тема, ТекущееСообщение",
			Объект.Ссылка,
			ПервоеСообщениеТемы),
		,	
		Объект.Ссылка.УникальныйИдентификатор());
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРабочаяГруппа

&НаКлиенте
Процедура РабочаяГруппаТаблицаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаПриНачалеРедактирования(Элемент, НоваяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаПриОкончанииРедактирования(
		ЭтаФорма,
		Элемент,
		ОтменаРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаПередУдалением(Элемент, Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"РабочаяГруппаТаблицаПередУдалениемПродолжение",
		ЭтотОбъект);
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаТаблицаПередУдалением(ЭтаФорма, Отказ, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаПередУдалениемПродолжение(Результат, Параметры) Экспорт
	
	ТаблицаРГ = Элементы.РабочаяГруппаТаблица;
	Для Каждого Индекс Из ТаблицаРГ.ВыделенныеСтроки Цикл
		РабочаяГруппаТаблица.Удалить(ТаблицаРГ.ДанныеСтроки(Индекс));
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РабочаяГруппаТаблицаОбработкаВыбораСервер(ВыбранноеЗначение);
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаПриОкончанииРедактирования(
		ЭтаФорма,
		Элементы.РабочаяГруппаТаблица,
		Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаУчастникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	РаботаСРабочимиГруппамиКлиент.ДокументРабочаяГруппаУчастникНачалоВыбора(ЭтаФорма, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаУчастникАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	РаботаСРабочимиГруппамиКлиент.ДокументРабочаяГруппаУчастникАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтветитьНаТему(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда 
		ОписаниеОповещения = Новый ОписаниеОповещения("ОтветитьНаТемуЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Для ответа на тему необходимо записать. Выполнить запись?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Сообщение", ПервоеСообщениеТемы);
	ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", ПараметрыФормы);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветитьНаТемуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не Записать() Тогда 
		Возврат;
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(
		"Создание:", 
		ПолучитьНавигационнуюСсылку(Объект.Ссылка),
		Строка(Объект.Ссылка),
		БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

&НаКлиенте
Процедура Подписаться(Команда)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрыФормы = Новый Структура("ОбъектПодписки", Объект.Ссылка);
		ОткрытьФорму("ОбщаяФорма.ПодпискаНаУведомленияПоОбъекту", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьУчастниковРабочейГруппы(Команда)
	
	РаботаСРабочимиГруппамиКлиент.ДокументПодобратьУчастниковРабочейГруппы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаОбновить(Команда)
	
	РабочаяГруппаОбновитьНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РабочаяГруппа

&НаСервере
Процедура РабочаяГруппаТаблицаОбработкаВыбораСервер(ВыбранноеЗначение)
	
	РаботаСРабочимиГруппами.ДокументОбработкаВыбора(ЭтаФорма, ВыбранноеЗначение);
	
КонецПроцедуры

&НаСервере
Процедура РабочаяГруппаОбновитьНаСервере()
	
	РаботаСРабочимиГруппами.ДокументПриЧтенииНаСервере(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ОбновитьСведенияОТеме()
	
	СведенияОТеме = РаботаСОбсуждениями.ПолучитьСведенияОТеме(Объект.Ссылка);
	
	Если СведенияОТеме <> Неопределено Тогда
		КоличествоОтветов = СведенияОТеме.КоличествоСообщений;
		ДатаПоследнегоСообщения = Формат(СведенияОТеме.ДатаПоследнегоСообщения, "ДФ='dd.MM.yyyy HH:mm'");
		АвторПоследнегоСообщения = СведенияОТеме.АвторПоследнегоСообщения;
		
		СведенияОПоследнемОтвете = "" + ДатаПоследнегоСообщения + " от " + АвторПоследнегоСообщения;  
	Иначе
		КоличествоОтветов = 0;
		СведенияОПоследнемОтвете = "";
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьРежимЧтения(РежимЧтения)
	
	Элементы.ФормаЗакрыть.Видимость = РежимЧтения;
	Элементы.ФормаЗакрыть.КнопкаПоУмолчанию = РежимЧтения;
	Элементы.ФормаЗаписатьИЗакрыть.Видимость = Не РежимЧтения;
	Элементы.ФормаЗаписатьИЗакрыть.КнопкаПоУмолчанию = Не РежимЧтения;
	Элементы.ФормаЗаписать.Видимость = Не РежимЧтения;
	Элементы.ФормаУстановитьПометкуУдаления.Видимость = Не РежимЧтения;
	ТолькоПросмотр = РежимЧтения;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУпрощенноеОтображениеТемы(УпрощенноеОтображениеТемы)
	
	Элементы.ПерейтиКСообщениямТемы.Видимость = Не УпрощенноеОтображениеТемы;
	Элементы.Закрытая.Видимость = Не УпрощенноеОтображениеТемы;
	Элементы.КоличествоОтветов.Видимость = Не УпрощенноеОтображениеТемы;
	Элементы.ПоследнийОтвет.Видимость = Не УпрощенноеОтображениеТемы;
	Элементы.ФормаОтвет.Видимость = Не УпрощенноеОтображениеТемы;
	Элементы.СоздатьНаОсновании.Видимость = Не УпрощенноеОтображениеТемы;
	Элементы.ФормаУстановитьПометкуУдаления.Видимость = Не УпрощенноеОтображениеТемы;
	Элементы.ФормаПроцессы.Видимость = Не УпрощенноеОтображениеТемы; 
	
КонецПроцедуры

#КонецОбласти