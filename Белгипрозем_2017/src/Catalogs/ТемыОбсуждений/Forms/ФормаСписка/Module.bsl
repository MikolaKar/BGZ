#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Список.Параметры.УстановитьЗначениеПараметра("Пользователь", Пользователи.ТекущийПользователь());
	
	РазделПриОткрытии = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		ЭтаФорма.ИмяФормы, 
		"ТекущийРаздел", 
		Справочники.ТемыОбсуждений.ПустаяСсылка());
	Если ЗначениеЗаполнено(РазделПриОткрытии) Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Группа", РазделПриОткрытии);
		Элементы.Дерево.ТекущаяСтрока = РазделПриОткрытии;
		ТекущийРаздел = РазделПриОткрытии;
	КонецЕсли;
	
	ТекущаяТемаПриОткрытии = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		ЭтаФорма.ИмяФормы, 
		"ТекущаяТема", 
		Справочники.ТемыОбсуждений.ПустаяСсылка());
	Если ЗначениеЗаполнено(ТекущаяТемаПриОткрытии) Тогда
		Элементы.Список.ТекущаяСтрока = ТекущаяТемаПриОткрытии;
	КонецЕсли;
	
	ПоказатьПомеченныеНаУдалениеПриОткрытии = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		ЭтаФорма.ИмяФормы, 
		"ПоказатьПомеченныеНаУдаление", 
		Ложь);
	Если ЗначениеЗаполнено(ПоказатьПомеченныеНаУдалениеПриОткрытии) Тогда
		ПоказатьПомеченныеНаУдаление = ПоказатьПомеченныеНаУдалениеПриОткрытии;
	КонецЕсли;
	ПараметрыОтбора = Новый Соответствие();
	Параметрыотбора.Вставить("ПоказатьПомеченныеНаУдаление", ПоказатьПомеченныеНаУдаление);
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
	Элементы.ВидПросмотра.СписокВыбора.Очистить();
	Элементы.ВидПросмотра.СписокВыбора.Добавить(
		НСтр("ru = 'Списком'"), 
		НСтр("ru = 'Списком'"));
	Элементы.ВидПросмотра.СписокВыбора.Добавить(
		НСтр("ru = 'По разделам'"),
		НСтр("ru = 'По разделам'"));	
	ВидПросмотра = НСтр("ru = 'Списком'");
	
	Элементы.ОтображаемыеТемы.СписокВыбора.Очистить();
	Элементы.ОтображаемыеТемы.СписокВыбора.Добавить(
		НСтр("ru = 'Все'"), 
		НСтр("ru = 'Все'"));
	Элементы.ОтображаемыеТемы.СписокВыбора.Добавить(
		НСтр("ru = 'Прочтенные'"),
		НСтр("ru = 'Прочтенные'"));
	Элементы.ОтображаемыеТемы.СписокВыбора.Добавить(
		НСтр("ru = 'Непрочтенные'"),
		НСтр("ru = 'Непрочтенные'"));		
	ОтображаемыеТемы = НСтр("ru = 'Все'");	
	
	ПереключитьВидПросмотра();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьОтображениеКоманд();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПриЗакрытииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если РаботаСПрочтениямиКлиент.ПроверитьНеобходимостьОбновления(ИмяСобытия, Параметр, "Обсуждения") Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
	Если ИмяСобытия = "СообщениеОбсужденияИзменено" Тогда	
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)

	УстановитьОтборСписка(Список, Настройки);
	ВидПросмотра = Настройки["ВидПросмотра"];
	ПереключитьВидПросмотра();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РазделыОбсужденийПриИзменении(Элемент)
	
	ПараметрыОтбора = Новый Соответствие();
	Параметрыотбора.Вставить("РазделыОбсуждений", РазделыОбсуждений);
	
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПросмотраПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(ВидПросмотра) 
		Или Не (ВидПросмотра = НСтр("ru = 'Списком'") 
		Или ВидПросмотра = НСтр("ru = 'По разделам'")) Тогда
		ВидПросмотра = НСтр("ru = 'Списком'");
	КонецЕсли;
	
	ПереключитьВидПросмотра();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПриАктивизацииСтроки(Элемент)
	
	Если ВидПросмотра = НСтр("ru = 'По разделам'") Тогда
		ТекущийРаздел = Элементы.Дерево.ТекущаяСтрока;
		ПодключитьОбработчикОжидания("ОбработкаОжидания", 0.2, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображаемыеТемыПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(ОтображаемыеТемы) 
		Или Не (ОтображаемыеТемы = НСтр("ru = 'Все'")
		Или ОтображаемыеТемы = НСтр("ru = 'Прочтенные'")
		Или ОтображаемыеТемы = НСтр("ru = 'Непрочтенные'")) Тогда
		ОтображаемыеТемы = НСтр("ru = 'Все'");
	КонецЕсли;
	
	ПараметрыОтбора = Новый Соответствие();
	Параметрыотбора.Вставить("ОтображаемыеТемы", ОтображаемыеТемы);
	
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Не Элемент.ТекущиеДанные.Свойство("ГруппировкаСтроки") 
		ИЛИ Элемент.ТекущиеДанные.ГруппировкаСтроки = Неопределено Тогда
		
		Форма = ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаПросмотраТемы",
			Новый Структура("Тема",
				Элемент.ТекущиеДанные.Ссылка),
			,	
			Элемент.ТекущиеДанные.Ссылка.УникальныйИдентификатор());
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	Если Копирование Тогда
		РаботаСОбсуждениямиКлиент.СкопироватьТему(Элементы.Список.ТекущаяСтрока);
		Возврат;
	КонецЕсли;
	
	ЗначениеЗаполнения = Новый Структура;
	Если ВидПросмотра = НСтр("ru = 'По разделам'") Тогда
		ЗначениеЗаполнения.Вставить("Папка", ТекущийРаздел);
	КонецЕсли;	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначениеЗаполнения);
	ОткрытьФорму("Справочник.ТемыОбсуждений.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВсеСообщения(Команда)
	
	ОткрытьФорму("Справочник.СообщенияОбсуждений.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПомеченныеНаУдаление(Команда)
	
	ПоказатьПомеченныеНаУдаление = Не ПоказатьПомеченныеНаУдаление;
	
	ПараметрыОтбора = Новый Соответствие();
	Параметрыотбора.Вставить("ПоказатьПомеченныеНаУдаление", ПоказатьПомеченныеНаУдаление);
	
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
	УстановитьОтображениеКоманд();
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьВсеВГруппеКакПрочтенные(Команда)
	
	Темы = ПолучитьВыбранныеТемы(Истина);
	КоличествоТем = Темы.Количество();
	Если Темы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЧислоПрочтенных = 0;
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	Для каждого Ссылка Из ВыделенныеСтроки Цикл
		
		Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.ТемыОбсуждений") Тогда
			
			Прочтен = Элементы.Список.ДанныеСтроки(Ссылка).Прочтен;
			
			Если Прочтен Тогда
				
				ЧислоПрочтенных = ЧислоПрочтенных + 1;
				
			КонецЕсли;	
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПоставитьПометкуПрочтения = Истина;
	
	Если КоличествоТем = ЧислоПрочтенных Тогда
		ПоставитьПометкуПрочтения = Ложь;
	Иначе
		ПоставитьПометкуПрочтения = Истина;
	КонецЕсли;	
	
	Если КоличествоТем > 1 Тогда
		Если ПоставитьПометкуПрочтения Тогда
			Состояние(НСтр("ru = 'Темы помечаются как прочтенные. Пожалуйста подождите...'"));
		Иначе
			Состояние(НСтр("ru = 'Снимается пометка прочтенности. Пожалуйста подождите...'"));
		КонецЕсли;	
	КонецЕсли;
	
	УстановитьПрочтение(Темы, ПоставитьПометкуПрочтения);
	
	Если КоличествоТем > 1 Тогда
		
		Если ПоставитьПометкуПрочтения Тогда
			ТекстСостояния = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Темы помечены как прочтенные (%1)'"),
				КоличествоТем);
		Иначе
			ТекстСостояния = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Сняты пометки прочтенности тем (%1)'"),
				КоличествоТем);
		КонецЕсли;
			
		Состояние(ТекстСостояния);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовуюТему(Команда)
	
	ЗначениеЗаполнения = Новый Структура("Папка");
	Если ВидПросмотра = НСтр("ru = 'По разделам'") Тогда
		ЗначениеЗаполнения.Папка = ТекущийРаздел;
	КонецЕсли;
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначениеЗаполнения);
	ОткрытьФорму("Справочник.ТемыОбсуждений.ФормаОбъекта", ПараметрыФормы, Элементы.Список);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписка(Список, ПараметрыОтбора)
	
	// РазделыОбсуждений 
	РазделыОбсуждений = ПараметрыОтбора.Получить("РазделыОбсуждений");
	Если РазделыОбсуждений <> Неопределено Тогда 
		
		ВидПросмотра = ПараметрыОтбора.Получить("ВидПросмотра");
		Если ВидПросмотра <> Неопределено Тогда
			Если Не ЗначениеЗаполнено(ВидПросмотра) Тогда
				ИспользоватьОтборПоРазделам = Истина;
			Иначе	
				Если ВидПросмотра = НСтр("ru = 'Списком'") Тогда
					ИспользоватьОтборПоРазделам = Истина;
				Иначе
					ИспользоватьОтборПоРазделам = Ложь;
				КонецЕсли;	
			КонецЕсли;
		Иначе
			ИспользоватьОтборПоРазделам = Истина;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(РазделыОбсуждений) 
			Или Не ИспользоватьОтборПоРазделам Тогда
			
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"Папка");
		Иначе			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				"Папка",
				РазделыОбсуждений,
				ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии);
		КонецЕсли;
		
	КонецЕсли;	
	
	// Прочтение
	ОтображаемыеТемы = ПараметрыОтбора.Получить("ОтображаемыеТемы");
	Если ОтображаемыеТемы <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(ОтображаемыеТемы) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"Прочтен");
		Иначе
			Если ОтображаемыеТемы = НСтр("ru = 'Прочтенные'") Тогда
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
					"Прочтен",
					Истина);
			ИначеЕсли ОтображаемыеТемы = НСтр("ru = 'Непрочтенные'") Тогда
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
					"Прочтен",
					Ложь);
			Иначе 
				ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
					"Прочтен");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
	// Пометка удаления
	ПоказатьПомеченныеНаУдаление = ПараметрыОтбора.Получить("ПоказатьПомеченныеНаУдаление");
	Если ПоказатьПомеченныеНаУдаление <> Неопределено Тогда 
		
		ЭлементыОтбора = Список.Отбор.Элементы;
		
		ЭлементОтбораДанных = Неопределено;
		Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
			Если ЭлементОтбора.Представление = "ОтборПометкиУдаления" Тогда
				ЭлементОтбораДанных = ЭлементОтбора;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ЭлементОтбораДанных = Неопределено Тогда
			ГруппаОтборПометкиУдаления = ЭлементыОтбора.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаОтборПометкиУдаления.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли; 
			ГруппаОтборПометкиУдаления.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный; 
			ГруппаОтборПометкиУдаления.Использование = Истина;
			ГруппаОтборПометкиУдаления.Представление = "ОтборПометкиУдаления";
		Иначе
			ГруппаОтборПометкиУдаления = ЭлементОтбораДанных;
			ГруппаОтборПометкиУдаления.Элементы.Очистить();
			ГруппаОтборПометкиУдаления.Использование = Истина;
		КонецЕсли;
		
		ГруппаОтборПометкиУдаленияИКоличестваСообщений = ГруппаОтборПометкиУдаления.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаОтборПометкиУдаленияИКоличестваСообщений.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ; 
		ГруппаОтборПометкиУдаленияИКоличестваСообщений.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный; 
		ГруппаОтборПометкиУдаленияИКоличестваСообщений.Использование = Истина;
		ГруппаОтборПометкиУдаленияИКоличестваСообщений.Представление = "ОтборПометкиУдаленияИКоличестваСообщений";
		
		ЭлементОтбораДанных = ГруппаОтборПометкиУдаленияИКоличестваСообщений.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПометкаУдаления");
		ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбораДанных.ПравоеЗначение = Ложь;
		ЭлементОтбораДанных.Использование = Истина;
		
		ЭлементОтбораДанных = ГруппаОтборПометкиУдаленияИКоличестваСообщений.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КоличествоСообщений");
		ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
		ЭлементОтбораДанных.ПравоеЗначение = 1;
		ЭлементОтбораДанных.Использование = Истина;
		
		ЭлементОтбораДанных = ГруппаОтборПометкиУдаления.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПометкаУдаления");
		ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбораДанных.ПравоеЗначение = Истина;
		ЭлементОтбораДанных.Использование = ПоказатьПомеченныеНаУдаление;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПереключитьВидПросмотра()
	
	ПараметрыОтбора = Новый Соответствие();
	ПараметрыОтбора.Вставить("РазделыОбсуждений", РазделыОбсуждений);
	ПараметрыОтбора.Вставить("ВидПросмотра", ВидПросмотра);
	
	УстановитьОтборСписка(Список, ПараметрыОтбора);	
	
	Параметр = Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Группа"));
	Параметр.Использование = Ложь;
		
	Если ВидПросмотра = НСтр("ru = 'Списком'") Тогда
		
		Элементы.Дерево.Видимость = Ложь;
		Элементы.Раздел.Видимость = Истина;
		Элементы.РазделыОбсуждений.Видимость = Истина;
		
	ИначеЕсли ВидПросмотра = НСтр("ru = 'По разделам'") Тогда
		
		Элементы.Дерево.Видимость = Истина;
		Если Элементы.Дерево.ТекущаяСтрока <> Неопределено Тогда 
			Список.Параметры.УстановитьЗначениеПараметра("Группа", ТекущийРаздел);
		КонецЕсли;
		Элементы.Раздел.Видимость = Ложь;
		Элементы.РазделыОбсуждений.Видимость = Ложь;
		
	Иначе
		ВидПросмотра = НСтр("ru = 'Списком'");
		ПереключитьВидПросмотра();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОжидания()
	
	Если Элементы.Дерево.ТекущаяСтрока <> Неопределено Тогда 
		Список.Параметры.УстановитьЗначениеПараметра("Группа", ТекущийРаздел);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ЭтаФорма.ИмяФормы, "ТекущийРаздел", Элементы.Дерево.ТекущаяСтрока);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ЭтаФорма.ИмяФормы, "ТекущаяТема", Элементы.Список.ТекущаяСтрока);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ЭтаФорма.ИмяФормы, "ПоказатьПомеченныеНаУдаление", ПоказатьПомеченныеНаУдаление);
	
КонецПроцедуры

&НаКлиенте 
Процедура УстановитьПрочтение(Сообщение, Прочтен = Истина)
	
	ПрочтениеУстановлено = РаботаСПрочтениями.УстановитьСвойствоПрочтен(Сообщение, Прочтен);
	РаботаСПрочтениямиКлиент.ОповеститьОПрочтении(Тип("СправочникСсылка.СообщенияОбсуждений"), ПрочтениеУстановлено);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьТекущуюТему(ВыводитьПредупреждение = Ложь)
	
	ТекущаяСтрока = Элементы.Список.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрана тема.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Если Элементы.Список.ТекущиеДанные <> Неопределено 
		И Не Элементы.Список.ТекущиеДанные.Свойство("Ссылка") Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрана тема.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Тема = Элементы.Список.ТекущиеДанные.Ссылка;
	Если Не ТипЗнч(Тема) = Тип("СправочникСсылка.ТемыОбсуждений") Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрана тема.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Тема;
	
КонецФункции

&НаКлиенте
Функция ПолучитьВыбранныеТемы(ВыводитьПредупреждение = Ложь)
	
	Результат = Новый Массив;
	
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;

	Для каждого Ссылка Из ВыделенныеСтроки Цикл
		
		Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.ТемыОбсуждений") Тогда
			Результат.Добавить(Ссылка);
		КонецЕсли;
		
	КонецЦикла;
		
	Тема = ПолучитьТекущуюТему(Ложь);
	
	Если ЗначениеЗаполнено(Тема)
		И Результат.Найти(Тема) = Неопределено Тогда
		Результат.Добавить(Тема);
	КонецЕсли;
	
	Если Результат.Количество() = 0 И ВыводитьПредупреждение Тогда
		ТекстПредупреждения = НСтр("ru = 'Не выбрана тема.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура УстановитьОтображениеКоманд()
	
	Элементы.ПоказатьПомеченныеНаУдаление.Пометка = ПоказатьПомеченныеНаУдаление;
	
КонецПроцедуры

#КонецОбласти