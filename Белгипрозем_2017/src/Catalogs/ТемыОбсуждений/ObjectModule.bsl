#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		Автор = ПользователиКлиентСервер.ТекущийПользователь();
		Если ДанныеЗаполнения <> Неопределено И ДанныеЗаполнения.Свойство("Документ") Тогда
			Документ = ДанныеЗаполнения.Документ;
			ТемаДокумента = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка
		И ЗначениеЗаполнено(ОбменДанными.Отправитель)
		И ОбменДаннымиПовтИсп.ЭтоУзелРаспределеннойИнформационнойБазы(ОбменДанными.Отправитель) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Папка) Тогда
		Отказ = Истина;
		ВызватьИсключение НСтр("ru = 'Не указан раздел темы'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Документ) И Папка <> Справочники.ПапкиФорума.ТемыДокументов Тогда
		Отказ = Истина;
		ВызватьИсключение НСтр("ru = 'Темы документов могут располагаться только в разделе тем документов'");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Документ) И Папка = Справочники.ПапкиФорума.ТемыДокументов Тогда
		Отказ = Истина;
		ВызватьИсключение НСтр("ru = 'Общие темы не могут располагаться в разделе тем документов'");
	КонецЕсли;
	
	Если ЭтоНовый() Тогда 
		ДатаСоздания = ТекущаяДатаСеанса();
	КонецЕсли;
	ДополнительныеСвойства.Вставить("ПометкаИБ", ПометкаУдаленияВИБ());
	ДополнительныеСвойства.Вставить("ПометкаНовый", ЭтоНовый());
	
	Если НЕ ЗначениеЗаполнено(Документ) Тогда
		// Обработка рабочей группы
		СсылкаОбъекта = Ссылка;
		// Установка ссылки нового
		Если Не ЗначениеЗаполнено(СсылкаОбъекта) Тогда
			СсылкаОбъекта = ПолучитьСсылкуНового();
			Если Не ЗначениеЗаполнено(СсылкаОбъекта) Тогда
				СсылкаНового = Справочники.ТемыОбсуждений.ПолучитьСсылку();
				УстановитьСсылкуНового(СсылкаНового);
				СсылкаОбъекта = СсылкаНового;
			КонецЕсли;
		КонецЕсли;
		
		// Подготовка рабочей группы
		РабочаяГруппа = РегистрыСведений.РабочиеГруппы.ПолучитьУчастниковПоОбъекту(СсылкаОбъекта);
		
		// Добавление участников, переданных "снаружи", например из формы объекта
		Если ДополнительныеСвойства.Свойство("РабочаяГруппаДобавить") Тогда
			
			Для каждого Эл Из ДополнительныеСвойства.РабочаяГруппаДобавить Цикл
				
				// Добавление участника в итоговую рабочую группу
				Строка = РабочаяГруппа.Добавить();
				Строка.Участник = Эл.Участник;
				Строка.ОсновнойОбъектАдресации = Эл.ОсновнойОбъектАдресации;
				Строка.ДополнительныйОбъектАдресации = Эл.ДополнительныйОбъектАдресации;
				
			КонецЦикла;
			
		КонецЕсли;
		
		// Удаление участников, переданных "снаружи", например из формы объекта
		Если ДополнительныеСвойства.Свойство("РабочаяГруппаУдалить") Тогда
			
			Для каждого Эл Из ДополнительныеСвойства.РабочаяГруппаУдалить Цикл
				
				// Поиск удаляемого участника в итоговой рабочей группе
				Для каждого Эл2 Из РабочаяГруппа Цикл
					
					Если Эл2.Участник = Эл.Участник 
						И Эл2.ОсновнойОбъектАдресации = Эл.ОсновнойОбъектАдресации
						И Эл2.ДополнительныйОбъектАдресации = Эл.ДополнительныйОбъектАдресации Тогда
						
						// Удаление участника из итоговой рабочей группы
						РабочаяГруппа.Удалить(Эл2);
						Прервать;
						
					КонецЕсли;
					
				КонецЦикла;
					
			КонецЦикла;
				
		КонецЕсли;
		
		// Запись итоговой рабочей группы
		РаботаСРабочимиГруппами.ПерезаписатьРабочуюГруппуОбъекта(
			СсылкаОбъекта,
			РабочаяГруппа,
			Ложь); //ОбновитьПраваДоступа
		
		// Установка необходимости обновления прав доступа
		ДополнительныеСвойства.Вставить("ДополнительныеПравообразующиеЗначенияИзменены");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка
		И ЗначениеЗаполнено(ОбменДанными.Отправитель)
		И ОбменДаннымиПовтИсп.ЭтоУзелРаспределеннойИнформационнойБазы(ОбменДанными.Отправитель) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ПометкаИБ")
			И ДополнительныеСвойства.Свойство("ПометкаНовый")
			И ПометкаУдаления <> ДополнительныеСвойства.ПометкаИБ 
			И Не ДополнительныеСвойства.ПометкаНовый Тогда
			
		// Отбираем сообщения и пытаемся поставить им пометку удаления
		УстановитьПривилегированныйРежим(Истина);
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СообщенияОбсуждений.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.СообщенияОбсуждений КАК СообщенияОбсуждений
			|ГДЕ
			|	СообщенияОбсуждений.ВладелецСообщения = &ВладелецСообщения";	
		Запрос.УстановитьПараметр("ВладелецСообщения", Ссылка);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Сообщение = Выборка.Ссылка.ПолучитьОбъект();
			
			Попытка
				
				Сообщение.Заблокировать();
				Сообщение.УстановитьПометкуУдаления(ПометкаУдаления);
				
			Исключение
				
				// Вызывается при удалении первого сообщения темы.
				Инфо = ИнформацияОбОшибке();

				Если Инфо.Описание = "Ошибка при вызове метода контекста (Заблокировать)" Тогда
					
					Если Не Сообщение.ПервоеСообщениеТемы Тогда
						
						Отказ = Истина;
						ВызватьИсключение;
						
					КонецЕсли;
					
				Иначе
					
					ВызватьИсключение;
					
				КонецЕсли;
				
			КонецПопытки;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПометкаУдаленияВИБ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТемыОбсуждений.ПометкаУдаления КАК ПометкаУдаления
		|ИЗ
		|	Справочник.ТемыОбсуждений КАК ТемыОбсуждений
		|ГДЕ
		|	ТемыОбсуждений.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.ПометкаУдаления;
	КонецЕсли;	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#КонецЕсли