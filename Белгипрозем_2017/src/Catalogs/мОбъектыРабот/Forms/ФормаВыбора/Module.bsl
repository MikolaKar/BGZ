
&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	ЭтаФорма.ТекущийЭлемент.ТекущаяСтрока = НовыйОбъект;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    Если ЗначениеЗаполнено(Параметры.Корреспондент) Тогда
    	Корреспондент = Параметры.Корреспондент;
    	ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Владелец");
    	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    	ЭлементОтбора.ПравоеЗначение = Корреспондент;
    	ЭлементОтбора.Использование = Истина;
    КонецЕсли;	

	Если ЗначениеЗаполнено(Параметры.ОбъектРабот) Тогда
    	ОбъектРабот = Параметры.ОбъектРабот;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.НаименованиеОбъекта) Тогда
    	НаименованиеОбъекта = Параметры.НаименованиеОбъекта;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Отбор) Тогда
		Если ЗначениеЗаполнено(Параметры.Отбор.Владелец) Тогда
			Корреспондент = Параметры.Отбор.Владелец;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.СтруктураАдресаЗемельногоУчастка) Тогда
		СтруктураАдресаЗемельногоУчастка = Параметры.СтруктураАдресаЗемельногоУчастка;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ТекущаяСтрока) Тогда
		Элементы.Список.ТекущаяСтрока = Параметры.ТекущаяСтрока;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Отбор", Новый Структура("Владелец", Корреспондент));
	ПараметрыФормы.Вставить("Корреспондент", Корреспондент);
	Если Копирование Тогда
		НаименованиеКопируемого = Элементы.Список.ТекущиеДанные.Наименование;
		СсылкаКопируемого = Элемент.ТекущиеДанные.Ссылка;
		ПараметрыФормы.Вставить("Копирование", Копирование);
		ПараметрыФормы.Вставить("НаименованиеОбъекта", НаименованиеКопируемого);
		ПараметрыФормы.Вставить("Родитель", Элемент.ТекущиеДанные.Родитель);
		ПараметрыФормы.Вставить("ПолноеНаименование", ПолучитьПолноеНаименованиеОбъектаРабот(СсылкаКопируемого));
		ПараметрыФормы.Вставить("СтруктураАдресаЗемельногоУчастка", ПолучитьСтруктуруАдресаЗемельногоУчастка(СсылкаКопируемого));
	Иначе
		ПараметрыФормы.Вставить("НаименованиеОбъекта", НаименованиеОбъекта);
		ПараметрыФормы.Вставить("Родитель", Родитель);
		//ПараметрыФормы.Вставить("Родитель", Элемент.ТекущиеДанные.Родитель);
		ПараметрыФормы.Вставить("СтруктураАдресаЗемельногоУчастка", СтруктураАдресаЗемельногоУчастка);
	КонецЕсли; 
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ОткрытьФормуМодально("Справочник.мОбъектыРабот.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруАдресаЗемельногоУчастка(СсылкаКопируемого)
	СтруктураАдреса = Новый Структура("Представление, ЗначенияПолей, Тип, Вид, Страна, Область, Район, Сельсовет, Город, Регион"); 
	
	КИ = СсылкаКопируемого.КонтактнаяИнформация;
	Для каждого Стр Из КИ Цикл
		Если Стр.Вид = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.АдресЗемельногоУчасткаОбъектаРабот") Тогда
			ЗаполнитьЗначенияСвойств(СтруктураАдреса, Стр);
			Возврат СтруктураАдреса;
		КонецЕсли; 	
	КонецЦикла; 
	Возврат Неопределено;
КонецФункции // ПолучитьСтруктуруАдресаЗемельногоУчастка(СсылкаКопируемого)

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
    ТекущиеДанные = Элементы.Список.ТекущиеДанные;
    Если ТекущиеДанные <> Неопределено Тогда
        ОбъектСсылка = Элементы.Список.ТекущиеДанные.Ссылка;
        ПолноеНаименованиеОбъектаРабот = ПолучитьПолноеНаименованиеОбъектаРабот(ОбъектСсылка);
    КонецЕсли; 
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПолноеНаименованиеОбъектаРабот(ОбъектСсылка)
	Возврат ОбъектСсылка.ПолноеНаименование;
КонецФункции // ПолучитьПолноеНаименованиеОбъектаРабот()
 
 

