
// Сформировать сообщение СВД
Функция СформироватьСообщение(Транспорт, Документ, Корреспондент, Организация, Правило,
	ФайлыДляОтправки = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НастройкаПриемаОтправки = Транспорт.НастройкаПриемаОтправки;
	ФорматСообщения = Транспорт.ФорматСообщения;
	
	Если ФорматСообщения = Справочники.ФорматыСообщенийСВД.СообщениеПоГОСТ53898ВложенныеФайлы
		Или ФорматСообщения = Справочники.ФорматыСообщенийСВД.Сообщение1СДокументооборот Тогда
		
		ВозвращаемоеПолноеИмяФайла = "";
		ВозвращаемыйИдентификационныйНомерСообщения = "";

		ВозвращаемыйВидСообщенияСВД = Перечисления.ВидыСообщенийСВД.ОсновнойДокумент;
		Если Не РаботаССВД.ВыгрузитьИсходящийДокументВXML(Документ, ВозвращаемоеПолноеИмяФайла, Корреспондент,
			Транспорт, ВозвращаемыйИдентификационныйНомерСообщения, Правило, ВозвращаемыйВидСообщенияСВД,
			ФайлыДляОтправки) Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
		// Создать документ ИсходящееСообщениеСВД
		ИсходящееСообщениеСВД = РаботаССВД.СоздатьДокументИсходящееСообщениеСВД(Документ, Корреспондент, 
			Организация, Транспорт, ФорматСообщения, ВозвращаемыйИдентификационныйНомерСообщения,
			ВозвращаемыйВидСообщенияСВД);
		
		// Добавить файл
		//МиСофт+
		РаботаСФайламиВнешнийВызов.СоздатьФайлНаОсновеФайлаНаДиске(ИсходящееСообщениеСВД, 
			ВозвращаемоеПолноеИмяФайла, ВозвращаемыйИдентификационныйНомерСообщения+"_data");
		//МиСофт-
		УдалитьФайлы(ВозвращаемоеПолноеИмяФайла);
		
		Возврат Истина;
		
	КонецЕсли;	
	
	Возврат РаботаССВДПереопределяемый.СформироватьСообщение(Транспорт, Документ, 
		Корреспондент, Организация, Правило, ФайлыДляОтправки);
	
КонецФункции

	
Функция СформироватьСообщение21(Транспорт, Документ, ВидДокумента, Контрагент, Организация, Правило,
	ФайлыДляОтправки = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НастройкаПриемаОтправки = Транспорт.НастройкаПриемаОтправки;
	ФорматСообщения = Транспорт.ФорматСообщения;
	
	Если ФорматСообщения = Справочники.ФорматыСообщенийСВД.СообщениеПоГОСТ53898ВложенныеФайлы
		Или ФорматСообщения = Справочники.ФорматыСообщенийСВД.Сообщение1СДокументооборот Тогда
		
		ВозвращаемоеПолноеИмяФайла = "";
		ВозвращаемыйИдентификационныйНомерСообщения = "";

		ВозвращаемыйВидСообщенияСВД = Перечисления.ВидыСообщенийСВД.ОсновнойДокумент;
		Если Не РаботаССВД.ВыгрузитьИсходящийДокументВXML21(Документ, ВидДокумента, ВозвращаемоеПолноеИмяФайла, Контрагент,
			Транспорт, ВозвращаемыйИдентификационныйНомерСообщения, Правило, ВозвращаемыйВидСообщенияСВД,
			ФайлыДляОтправки) Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
		// Создать документ ИсходящееСообщениеСВД
		ИсходящееСообщениеСВД = РаботаССВД.СоздатьДокументИсходящееСообщениеСВД21(Документ, Контрагент, 
			Организация, Транспорт, ФорматСообщения, ВозвращаемыйИдентификационныйНомерСообщения,
			ВозвращаемыйВидСообщенияСВД);
		
		// Добавить файл
		//МиСофт+
		ЭтоНеУведомление = (ИсходящееСообщениеСВД.ВидСообщения = Перечисления.ВидыСообщенийСВД.ОсновнойДокумент Или ИсходящееСообщениеСВД.ВидСообщения = Перечисления.ВидыСообщенийСВД.ДокументОтвет);
		НаименованиеФайла = ИсходящееСообщениеСВД.ИдентификаторСессии + ?(ЭтоНеУведомление, "_data", "_ack");
		РаботаСФайламиВнешнийВызов.СоздатьФайлНаОсновеФайлаНаДиске(ИсходящееСообщениеСВД, 
			ВозвращаемоеПолноеИмяФайла, НаименованиеФайла);
		//МиСофт-
		УдалитьФайлы(ВозвращаемоеПолноеИмяФайла);
		
		Возврат Истина;
		
	КонецЕсли;	
	
	Возврат РаботаССВДПереопределяемый.СформироватьСообщение(Транспорт, Документ, 
		Контрагент, Организация, Правило, ФайлыДляОтправки);
	
КонецФункции

////////////////////////////////////////
////// Функции сервера СВД
////////////////////////////////////////

//МиСофт
Функция УстановитьКонтактноеЛицо(Наименование, Корреспондент)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтактныеЛица.Ссылка
	|ИЗ
	|	Справочник.КонтактныеЛица КАК КонтактныеЛица
	|ГДЕ
	|	КонтактныеЛица.Владелец = &Корреспондент
	|	И КонтактныеЛица.Наименование = &Наименование";
	Запрос.УстановитьПараметр("Корреспондент", Корреспондент);
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		КонтактноеЛицо = Результат.Ссылка;
	Иначе
		КонтактноеЛицо = Справочники.КонтактныеЛица.СоздатьЭлемент();
		КонтактноеЛицо.Владелец = Корреспондент;
		КонтактноеЛицо.Наименование = Наименование;
		КонтактноеЛицо.Записать();
	КонецЕсли;
	Возврат КонтактноеЛицо;
КонецФункции

// Вызывается на сервере СВД и записывает в журнал сообщение СВД
// Если при записи возникла ошибка, то записывается уведомление об ошибке приема.
// Параметры:
//	СообщениеСВД - структура
//		Наименование - имя сообщения
//		Файлы - массив структур
//			Имя - Имя файла
//			Тип - MIME-тип файла
//			Данные - двоичные данные файла
Процедура ЗаписатьСообщения(ФорматСообщенияСсылка, СообщениеСВД) Экспорт
	
	//МиСофт+
	УстановитьПривилегированныйРежим(Истина);
	
	ОшибочноеСообщение = Ложь;
	СообщениеОбОшибке = "";
	КодОшибки = 0;
	
	ИдентификаторСообщения = Неопределено;
	КорреспондентОтправитель = Неопределено;
	
	ПространствоИмен = РаботаССВД.ПолучитьПространствоИмен(ФорматСообщенияСсылка);

	// Получение информации о сообщении
	ИдентификаторСообщения = СообщениеСВД.Наименование;
	Запрос = Новый Запрос;		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаКонтактнаяИнформация.Ссылка
	|ИЗ
	|	Справочник.Корреспонденты.КонтактнаяИнформация КАК ТаблицаКонтактнаяИнформация
	|ГДЕ
	|	ТаблицаКонтактнаяИнформация.АдресЭП = &Адрес
	|	И ТаблицаКонтактнаяИнформация.Ссылка.ПометкаУдаления = ЛОЖЬ";
	Запрос.УстановитьПараметр("Адрес", СообщениеСВД.ОтправительПочта);
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
	    Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		КорреспондентОтправитель = Выборка.Ссылка;
		
		Если ФорматСообщенияСсылка = Справочники.ФорматыСообщенийСВД.СообщениеПоГОСТ53898ВложенныеФайлы
			Или ФорматСообщенияСсылка = Справочники.ФорматыСообщенийСВД.Сообщение1СДокументооборот Тогда
			
			Если СообщениеСВД.Файлы.Количество() = 1 Тогда
				ФайлСообщения = СообщениеСВД.Файлы[0];
				Если Найти(НРег(ФайлСообщения.Имя), ".xml") > 0 Тогда				
					Попытка
						ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
						ФайлСообщения.Данные.Записать(ИмяВременногоФайла);
						
						//МиСофт+
						ЧтениеФайла = Новый ТекстовыйДокумент();
						ЧтениеФайла.Прочитать(ИмяВременногоФайла, КодировкаТекста.UTF8);
						ЗаписьФайла = Новый ТекстовыйДокумент();
						Для ТекущаяСтрока=1 По ЧтениеФайла.КоличествоСтрок() Цикл
							Стр = ЧтениеФайла.ПолучитьСтроку(ТекущаяСтрока);
							Если Найти(Стр, "<Envelop")>0 И Найти(Стр, "http://www.1c.ru/medosignedby")=0 Тогда
								Стр = СтрЗаменить(Стр, "<Envelop", "<Envelop xmlns='http://www.1c.ru/medosignedby' xmlns:xs='http://www.w3.org/2001/XMLSchema' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'");
							КонецЕсли;
							ЗаписьФайла.ДобавитьСтроку(Стр);
						КонецЦикла;
						ЗаписьФайла.Записать(ИмяВременногоФайла, КодировкаТекста.UTF8);
												
						ТипОбъектаXDTO = ФабрикаXDTO.Тип(ПространствоИмен, "Envelop");
						ЧтениеXML = Новый ЧтениеXML;
						ЧтениеXML.ОткрытьФайл(ИмяВременногоФайла);
						Сообщение = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML, ТипОбъектаXDTO);
						Сообщение.Проверить();
					Исключение
						Информация = ИнформацияОбОшибке();
						ОшибочноеСообщение = Истина;
					КонецПопытки;	
					
					ЧтениеXML.Закрыть();
				
					УдалитьФайлы(ИмяВременногоФайла);
					
					СтруктураСообщения = Новый Структура;
					Если Не Сообщение.Body.Document = Неопределено Тогда
						КорреспондентОтправитель = Справочники.Корреспонденты.НайтиПоНаименованию(Сообщение.Header.Sender.name);
						Отправитель = Новый Структура;
						Отправитель.Вставить("Организация", Новый Структура("Наименование, Код", Сообщение.Header.Sender.name, Сообщение.Header.Sender.id));
						Отправитель.Вставить("Контакт", Сообщение.Body.Document.Writer.PrivatePerson.Name.__content);
						СтруктураСообщения.Вставить("Отправитель", Отправитель);
						СтруктураСообщения.Вставить("Документ", Новый Структура("Дата, Номер", Сообщение.Body.Document.RegNumber.regdate, Сообщение.Body.Document.RegNumber.__content));
						Получатели = Новый Массив;
						ПолучателиОш = Новый Массив;
						Для Каждого ПолучательОрганизация Из Сообщение.Header.Receiver Цикл
							КорреспондентПолучатель = Справочники.Корреспонденты.НайтиПоНаименованию(ПолучательОрганизация.Organization.shortname);
							Если ЗначениеЗаполнено(КорреспондентПолучатель) Тогда
								КонтактныеЛица = Новый Массив;
								КонтактныеЛицаОш = Новый Массив;
								Для Каждого Получатель Из ПолучательОрганизация.Organization.OfficialPerson Цикл
									КонтактныеЛица.Добавить(УстановитьКонтактноеЛицо(Получатель.Name.__content, КорреспондентПолучатель));
									
									//КонтактноеЛицо = Справочники.Пользователи.НайтиПоНаименованию(Получатель.Name.__content);
									//Если ЗначениеЗаполнено(КонтактноеЛицо) Тогда
									//	КонтактныеЛица.Добавить(КонтактноеЛицо);
									//	КонтактныеЛицаОш.Добавить(Новый Структура("Контакт, Ошибка", Получатель.Name.__content, ""));
									//Иначе
									//	ОшибочноеСообщение = Истина;
									//	СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									//	НСтр("ru = 'Получатель ""%1"" не найден среди абонентов СВД'"),
									//	Получатель.Name.__content);
									//	КодОшибки = 10; // Код ошибки по ГОСТ 53898
									//	КонтактныеЛицаОш.Добавить(Новый Структура("Контакт, Ошибка", Получатель.Name.__content, СообщениеОбОшибке));
									//КонецЕсли;
								КонецЦикла;
								Получатели.Добавить(Новый Структура("Организация, Контакты", КорреспондентПолучатель, КонтактныеЛица));
								ПолучателиОш.Добавить(Новый Структура("Организация, Контакты", Новый Структура("Наименование, Код, Ошибка", КорреспондентПолучатель.Наименование, КорреспондентПолучатель.Код, ""), КонтактныеЛицаОш));
							Иначе
								ОшибочноеСообщение = Истина;
								СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru = 'Корреспондент ""%1"" не найден на сервере СВД'"),
								ПолучательОрганизация.Organization.shortname);
								КодОшибки = 10; // Код ошибки по ГОСТ 53898
								ПолучателиОш.Добавить(Новый Структура("Организация, контакты", Новый Структура("Наименование, Код, Ошибка", ПолучательОрганизация.name, ПолучательОрганизация.id, СообщениеОбОшибке), Новый Массив));
							КонецЕсли;
						КонецЦикла;     
						
						СтруктураСообщения.Вставить("Получатели", ПолучателиОш);
						ИдентификаторСообщения = Сообщение.msg_id;
						СтруктураСообщения.Вставить("ИдентификаторСообщения", ИдентификаторСообщения);
						
						НачатьТранзакцию();
						Попытка
							
							//Если получатель найден, то записываем сообщение в справочник СерверныеСообщенияСВД
							Для Каждого Получатель Из Получатели Цикл
								Для Каждого ПользовательКому Из Получатель.Контакты Цикл
									НовоеСообщение = Справочники.СерверныеСообщенияСВД.СоздатьЭлемент();
									НовоеСообщение.ДатаПолученияСервером = ТекущаяДатаСеанса();
									НовоеСообщение.ОтКого = КорреспондентОтправитель;
									НовоеСообщение.Кому = КорреспондентПолучатель;	  
									НовоеСообщение.Отправлено = Ложь;
									НовоеСообщение.ИдентификаторСообщения = ИдентификаторСообщения;
									НовоеСообщение.ФорматСообщения = ФорматСообщенияСсылка;
									НовоеСообщение.Записать();
									// Получение файла XML из сообщения
									ЗаписьXML = Новый ЗаписьXML;
									ВременныйФайл = ПолучитьИмяВременногоФайла("xml");
									ЗаписьXML.ОткрытьФайл(ВременныйФайл, "UTF-8");
									ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, Сообщение);
									ЗаписьXML.Закрыть();
									
									РаботаСФайламиВнешнийВызов.СоздатьФайлНаОсновеФайлаНаДиске(
									НовоеСообщение.Ссылка,
									ВременныйФайл,       
									"Сообщение_" + ИдентификаторСообщения);
									
									УдалитьФайлы(ВременныйФайл);
									
								КонецЦикла;
							КонецЦикла;
							
							ЗафиксироватьТранзакцию();
						Исключение
							ОтменитьТранзакцию();
							ОшибочноеСообщение = Истина;
							
							Информация = ИнформацияОбОшибке();
							СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'В процессе обработки сообщения на сервере произошла ошибка ""%1""'"),
							ПодробноеПредставлениеОшибки(Информация));
							
							КодОшибки = 1001;
						КонецПопытки;
					ИначеЕсли Не Сообщение.Body.Acknowledgement = Неопределено Тогда
						Для Каждого Получатель Из Сообщение.Header.Receiver Цикл
							КорреспондентПолучатель = Справочники.Корреспонденты.НайтиПоНаименованию(Получатель.name);
							НовоеСообщение = Справочники.СерверныеСообщенияСВД.СоздатьЭлемент();
							НовоеСообщение.ДатаПолученияСервером 		= ТекущаяДатаСеанса();
							НовоеСообщение.ИдентификаторСообщения		= Сообщение.msg_id;
							НовоеСообщение.Отправлено                   = Ложь;
							НовоеСообщение.ФорматСообщения = ФорматСообщенияСсылка;
							НовоеСообщение.Кому = КорреспондентПолучатель;
							НовоеСообщение.ОтКого = КорреспондентОтправитель;
							НовоеСообщение.Записать();
							// Получение файла XML из сообщения
							ЗаписьXML = Новый ЗаписьXML;
							ВременныйФайл = ПолучитьИмяВременногоФайла("xml");
							ЗаписьXML.ОткрытьФайл(ВременныйФайл, "UTF-8");
							ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, Сообщение);
							ЗаписьXML.Закрыть();
							
							РаботаСФайламиВнешнийВызов.СоздатьФайлНаОсновеФайлаНаДиске(
							НовоеСообщение.Ссылка,
							ВременныйФайл,       
							"Сообщение_" + ИдентификаторСообщения);
							УдалитьФайлы(ВременныйФайл);
						КонецЦикла;
					КонецЕсли;
				Иначе
					ОшибочноеСообщение = Истина;
					СообщениеОбОшибке = НСтр("ru = 'В сообщении отсутствует зона сообщения ""Envelop""'");
					КодОшибки = 20; // Код ошибки по ГОСТ 53898
				КонецЕсли;
			Иначе
				ОшибочноеСообщение = Истина;
				СообщениеОбОшибке = НСтр("ru = 'Неправильное количество файлов в сообщении'");
				КодОшибки = 1002; 
			КонецЕсли;	
		Иначе
			ОшибочноеСообщение = РаботаССВДСерверСВДПереопределяемый.ЗаписатьСообщениеСВД(ФорматСообщенияСсылка, 
				СообщениеСВД);
		КонецЕсли;
	КонецЕсли;
	Если ОшибочноеСообщение Тогда
		
		Если ЗначениеЗаполнено(ИдентификаторСообщения)
			И ЗначениеЗаполнено(КорреспондентОтправитель) Тогда
			
			Для Каждого Получатель Из СтруктураСообщения.Получатели Цикл
				
				Уведомление = Новый Структура;
				
				Для Каждого Контакт Из Получатель.Контакты Цикл
					
					Если ЗначениеЗаполнено(Контакт.Ошибка) Тогда
						Уведомление.Вставить("Отправитель", Новый Структура("Организация, Контакт", Получатель.Организация, Контакт));
						Уведомление.Вставить("Получатель", СтруктураСообщения.Отправитель);
						Уведомление.Вставить("ИдентификаторСообщения", СтруктураСообщения.ИдентификаторСообщения);
						Уведомление.Вставить("Документ", СтруктураСообщения.Документ);
						
						СообщениеОбОшибке = СформироватьСообщениеОбОшибке(
						Уведомление, 
						10, // Получатель не найден (ГОСТ)
						СообщениеОбОшибке, 
						КорреспондентОтправитель,
						ПространствоИмен);
					КонецЕсли;
					
				КонецЦикла;
				
				Если ЗначениеЗаполнено(Получатель.Организация.Ошибка) Тогда
					Уведомление.Вставить("Отправитель", Получатель);
					Уведомление.Вставить("Получатель", СтруктураСообщения.Отправитель);
					Уведомление.Вставить("ИдентификаторСообщения", СтруктураСообщения.ИдентификаторСообщения);
					Уведомление.Вставить("Документ", СтруктураСообщения.Документ);
					
					СообщениеОбОшибке = СформироватьСообщениеОбОшибке(
						Уведомление, 
						10, // Получатель не найден (ГОСТ)
						СообщениеОбОшибке, 
						КорреспондентОтправитель,
						ПространствоИмен);
						
				КонецЕсли;
				
			КонецЦикла;
				
			НовоеСообщение = Справочники.СерверныеСообщенияСВД.СоздатьЭлемент();
			НовоеСообщение.ДатаПолученияСервером = ТекущаяДатаСеанса();
			НовоеСообщение.ОтКого = Справочники.Организации.ОрганизацияПоУмолчанию();
			НовоеСообщение.Кому = КорреспондентОтправитель;	
			НовоеСообщение.Отправлено = Ложь;
			НовоеСообщение.ИдентификаторСообщения = ИдентификаторСообщения;
			НовоеСообщение.ФорматСообщения = ФорматСообщенияСсылка;
			НовоеСообщение.Записать();
			// Получение файла XML из сообщения
			ЗаписьXML = Новый ЗаписьXML;
			ВременныйФайл = ПолучитьИмяВременногоФайла("xml");
			ЗаписьXML.ОткрытьФайл(ВременныйФайл, "UTF-8");
			ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, СообщениеОбОшибке);
			ЗаписьXML.Закрыть();
			
			РаботаСФайламиВнешнийВызов.СоздатьФайлНаОсновеФайлаНаДиске(
				НовоеСообщение.Ссылка,
				ВременныйФайл,
				"Сообщение_" + ИдентификаторСообщения);
				
			УдалитьФайлы(ВременныйФайл);	
		КонецЕсли;		
	КонецЕсли;
	//МиСофт-
	
КонецПроцедуры

//МиСофт
Функция СформироватьСообщениеОбОшибке(Уведомление, КодОшибки, ТекстОшибки, Кому, ПространствоИмен)
	
	//МиСофт + 
	Сообщение = СоздатьОбъект("Envelop", ПространствоИмен);
	Сообщение.dtstamp = ТекущаяДата();
	Сообщение.subject = "Уведомление об ошибке при доставке на сервер СВД";
	Сообщение.type = "SDIP-1.0";
	ИДПакета = Новый УникальныйИдентификатор;
	Сообщение.msg_id = ИдВСтроку(ИДПакета); // Уникальный служебный идентификационный номер сообщения 
	
	Отправитель = СоздатьОбъект("Sender", ПространствоИмен);
	Отправитель.id				= Справочники.Организации.ОрганизацияПоУмолчанию().Код;
	Отправитель.name            = Справочники.Организации.ОрганизацияПоУмолчанию().Наименование;
	Отправитель.sys_id          = "";
	Отправитель.system          = Метаданные.Представление();
	Отправитель.system_details  = Метаданные.Версия;
	
	ПолучательОрганизация = СоздатьОбъект("Organization", ПространствоИмен);
	ПолучательОрганизация.organization_string = Уведомление.Получатель.Организация.Наименование;
	
	Получатель = СоздатьОбъект("Receiver", ПространствоИмен);
	Получатель.Organization		= ПолучательОрганизация;
	Получатель.id				= Уведомление.Получатель.Организация.Код;
	Получатель.name				= Уведомление.Получатель.Организация.Наименование;
	
	Заголовок = СоздатьОбъект("Header", ПространствоИмен);
	Заголовок.Receiver.Добавить(Получатель);
	Заголовок.Sender        = Отправитель;
	Заголовок.msg_acknow    = 0;
	Заголовок.msg_type      = 0;
	
	Сообщение.Header = Заголовок;
	
	РегистрационныйНомер = СоздатьОбъект("RegNumber", ПространствоИмен);
	РегистрационныйНомер.regdate = Уведомление.Документ.Дата;
	РегистрационныйНомер.__content = Уведомление.Документ.Номер;
	
	УведомлениеXDTO = СоздатьОбъект("AcknowledgementType", ПространствоИмен);
	УведомлениеXDTO.msg_id = Уведомление.ИдентификаторСообщения;
	УведомлениеXDTO.ack_type = "1";
	УведомлениеXDTO.RegNumber = РегистрационныйНомер;
	
	Если ЗначениеЗаполнено(Уведомление.Отправитель.Организация.Ошибка) Тогда
		СообщениеОбОшибке = СоздатьОбъект("AckResult", ПространствоИмен);
		СообщениеОбОшибке.errorcode = КодОшибки;
		СообщениеОбОшибке.__content = Уведомление.Отправитель.Организация.Ошибка; 
		УведомлениеXDTO.AckResult.Добавить(СообщениеОбОшибке);
	КонецЕсли;
	
	Для Каждого Контакт Из Уведомление.Отправитель.Контакты Цикл
		СообщениеОбОшибке = СоздатьОбъект("AckResult", ПространствоИмен);
		СообщениеОбОшибке.errorcode = КодОшибки;
		СообщениеОбОшибке.__content = Контакт.Ошибка; 
		УведомлениеXDTO.AckResult.Добавить(СообщениеОбОшибке);
	КонецЦикла;
	
	Тело = СоздатьОбъект("Body", ПространствоИмен);
	Тело.Acknowledgement = УведомлениеXDTO;
	
	Сообщение.Body = Тело;
	
	Возврат Сообщение;
	//МиСофт -
	
КонецФункции

// Создает XDTO объект указанного типа из пространства имен ПространствоИмен
Функция СоздатьОбъект(ТипОбъекта, ПространствоИмен) Экспорт
	
	Возврат ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(ПространствоИмен, ТипОбъекта));
	
КонецФункции

Функция ИдВСтроку(ИДДокумента)
	
	ИДДокументаСтрока = НРег(Строка(ИДДокумента));
	ИДДокументаСтрока = СтрЗаменить(ИДДокументаСтрока, "-", "");
	
	Возврат ИДДокументаСтрока;
	
КонецФункции	

