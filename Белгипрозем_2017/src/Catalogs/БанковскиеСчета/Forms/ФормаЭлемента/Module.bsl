
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда 
	
		Если Не ЗначениеЗаполнено(Объект.ВидСчета) Тогда 
			Объект.ВидСчета = Элементы.ВидСчета.СписокВыбора.Получить(0).Значение;
		КонецЕсли;	
		
		Если Не ЗначениеЗаполнено(Объект.ВалютаДенежныхСредств) Тогда 
			Объект.ВалютаДенежныхСредств = Делопроизводство.ПолучитьВалютуПоУмолчанию();
		КонецЕсли;	
		
		ЗаполнитьТекстКорреспондента();
		
	КонецЕсли;	
	
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Организации") Тогда
		Элементы.Владелец.Заголовок = Нстр("ru = 'Организация'");
	ИначеЕсли ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Корреспонденты") Тогда
		Элементы.Владелец.Заголовок = Нстр("ru = 'Корреспондент'");
	КонецЕсли;
	
	ОпределитьВалютныйСчет();
	
	// Обработчик механизма "Свойства"
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, Объект, "ГруппаСвойства");
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	УказатьОсновнойБанковскийСчет = Ложь;
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Организации") 
	 Или ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Корреспонденты") Тогда
		Если Объект.Ссылка.Пустая() Тогда 
			ОсновнойБанковскийСчет = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.Владелец, "ОсновнойБанковскийСчет"); 
			УказатьОсновнойБанковскийСчет = Не ЗначениеЗаполнено(ОсновнойБанковскийСчет);
		КонецЕсли; 
	КонецЕсли;
	
	// Обработчик механизма "Свойства"
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
//1С-Минск
	ПроверитьБанковскийСчет();
//1С-Минск
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
		
	Если Не ЗначениеЗаполнено(Объект.ДатаОткрытия) И ЗначениеЗаполнено(Объект.ДатаЗакрытия) Тогда 
		Отказ = Истина;		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Поле ""Дата открытия"" не заполнено'"),,"Объект.ДатаОткрытия");
	ИначеЕсли ЗначениеЗаполнено(Объект.ДатаОткрытия) И ЗначениеЗаполнено(Объект.ДатаЗакрытия)
		И Объект.ДатаОткрытия > Объект.ДатаЗакрытия Тогда 
		Отказ = Истина;		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = '""Дата открытия"" счета больше ""Даты закрытия""'"),,"Объект.ДатаОткрытия");
	КонецЕсли;

	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если УказатьОсновнойБанковскийСчет Тогда 
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ОсновнойБанковскийСчет", Объект.Ссылка);
		СтруктураПараметров.Вставить("Владелец", Объект.Владелец);
		
		Оповестить("ЗаписатьОсновнойБанковскийСчет", СтруктураПараметров, ЭтаФорма);
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// Обработчик механизма "Свойства"
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НомерСчетаПриИзменении(Элемент)
	
	Объект.НомерСчета = СокрЛП(Объект.НомерСчета);
	
	ЗаполнитьТекстКорреспондента();
	СформироватьАвтоНаименование();
	СформироватьАвтоНаименованиеИБАН();
	Объект.Наименование = Элементы.Наименование.СписокВыбора.Получить(0);
	
//1С-Минск
	Если ЗначениеЗаполнено(Объект.Банк) Тогда
		ПроверитьБанковскийСчет();
	КонецЕсли; 
//1С-Минск
	
КонецПроцедуры

&НаКлиенте
Процедура БанкПриИзменении(Элемент)
	
	ЗаполнитьТекстКорреспондента();
	СформироватьАвтоНаименование();
	Объект.Наименование = Элементы.Наименование.СписокВыбора.Получить(0);
	
//1С-Минск
	Если ЗначениеЗаполнено(Объект.НомерСчета) Тогда
		ПроверитьБанковскийСчет();
	КонецЕсли; 
//1С-Минск
КонецПроцедуры

&НаКлиенте
Процедура БанкДляРасчетовПриИзменении(Элемент)
	
	ЗаполнитьТекстКорреспондента();
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаДенежныхСредствПриИзменении(Элемент)
	
	ОпределитьВалютныйСчет();
	СформироватьАвтоНаименование();
	Объект.Наименование = Элементы.Наименование.СписокВыбора.Получить(0);
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СформироватьАвтоНаименование();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекстКорреспондента()

	Владелец = Объект.Владелец;
	
	Если Не ЗначениеЗаполнено(Владелец) Тогда
		Возврат;
	КонецЕсли;

	СтрКорреспондента = "";
	Если ТипЗнч(Владелец) = Тип("СправочникСсылка.Организации") Тогда
		СтрКорреспондента = СокрЛП(Владелец.ПолноеНаименование);
	ИначеЕсли ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Корреспонденты") Тогда
		СтрКорреспондента = СокрЛП(Владелец.ПолноеНаименование);
	КонецЕсли;	

	Если ЗначениеЗаполнено(Объект.БанкДляРасчетов) Тогда
		Если ПустаяСтрока(СтрКорреспондента) Тогда 
			СтрКорреспондента = СокрЛП(Владелец.Наименование);
		КонецЕсли;	
		
		СтрКорреспондента = СтрКорреспондента +
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = ' р/с %1 в %2 %3'"),
			Объект.НомерСчета,
			Объект.Банк,
			Объект.Банк.Город);
	КонецЕсли;	

	Объект.ТекстКорреспондента = СтрКорреспондента;	

КонецПроцедуры

&НаСервере
Процедура ОпределитьВалютныйСчет()
	
	Валютный = ЗначениеЗаполнено(Объект.ВалютаДенежныхСредств) 
		И Объект.ВалютаДенежныхСредств <> Константы.ОсновнаяВалюта.Получить();
	
КонецПроцедуры	

&НаКлиенте
Процедура СформироватьАвтоНаименование()

	Элементы.Наименование.СписокВыбора.Очистить();
	
	Если ПустаяСтрока(Объект.НомерСчета) Тогда 
		Возврат;
	КонецЕсли;	
	
	СтрокаНаименования = Лев(
		Объект.НомерСчета
		+ ?(Валютный, " (" + Объект.ВалютаДенежныхСредств + ")", "")
		+ ?(Не Объект.Банк.Пустая(), " в " + Объект.Банк, ""), 
		100);

	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	Если Объект.Банк.Пустая() Тогда 
		Возврат;
	КонецЕсли;	
		
	СтрокаНаименования = Лев(
		Строка(Объект.Банк)
		+ " (" 
		+ Объект.НомерСчета 
		+ ?(Валютный, ", " + Объект.ВалютаДенежныхСредств , "")
		+ ")", 
		100);
	
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	СтрокаНаименования = Лев(
		Объект.НомерСчета 
		+ ", " + Объект.Банк
		+ ?(Валютный, ", " + Объект.ВалютаДенежныхСредств , ""),
		100);
	
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ МЕХАНИЗМА СВОЙСТВ

&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма, Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма, РеквизитФормыВЗначение("Объект"));
	
КонецПроцедуры

//1С-Минск
&НаКлиенте
Процедура НаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СформироватьАвтоНаименование();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СформироватьАвтоНаименование();
//1С-Минск
	УстановитьФорматСчета();
	КодИБАН = "";
	СчетИБАН = Объект.СчетИБАН;
	Для й = 0 По 6 Цикл
		КодИБАН = КодИБАН + Сред(СчетИБАН, 4*й+1, 4)+" ";
	КонецЦикла; 
	СформироватьАвтоНаименованиеИБАН();
//1С-Минск
КонецПроцедуры

// Проверка банковского счета
&НаСервере
Функция ПроверитьБанковскийСчет()
	СчетВерен = Истина;
	ЕстьБанк = ЗначениеЗаполнено(Объект.Банк);
	ЕстьСчет = ЗначениеЗаполнено(Объект.НомерСчета);
	Если ЕстьБанк и ЕстьСчет Тогда
		ТекстОшибки = "";
		Если Не НомерБанковскогоСчетаПравильный(Объект.Банк.Код, Объект.НомерСчета, ТекстОшибки) Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = ТекстОшибки;
			Сообщение.Поле = "Объект.НомерСчета";
			Сообщение.Сообщить();
			СчетВерен = Ложь;
		КонецЕсли;
	КонецЕсли; 
	Возврат СчетВерен;
КонецФункции 
 
//НомерБанковскогоСчетаПравильный(КодБанка, НомерСчета)
//КОНТРОЛЬНЫЙ КЛЮЧ
//     Контрольный   ключ  рассчитывается   исходя  из   номера  банка
//(филиала), балансового счета и номера лицевого счета клиента (номера
//внутрибанковского счета).
//
//     Формула расчета защитного контрольного ключа:
//
//     1. Номер учреждения банка, номер счета умножить на значение:
//     713 371 371 371 371 3 и записать последние цифры от умножения.
//
//     2. Полученные результаты от умножения сложить.
//
//     3. Последнюю цифру от сложения умножить на 3.
//
//     4. Последний разряд от умножения является контрольным ключом.
//
//     5. Для проверки  правильности  определения  контрольного  ключа
//провести расчет еще один раз, но уже со знанием контрольного ключа.
//     Если сумма по завершении действия  2 оканчивается на ноль, ключ
//подсчитан верно.
//
//     Пример: Номер банка - 739
//             Номер балансового счета - 3002
//             Номер клиента в банке (филиале) - 00125
//             Номер лицевого счета клиента - 102
//             Контрольный ключ - К
//
//     1. Умножить  на  значение 713  371  371  371 371  3 и  записать
//последние цифры от умножения
//
//        739 3002 00 125 102 К
//        713 3713 71 371 371 З
//        --- ---- -- --- --- -
//        937 9  6    345 3 2
//
//     2. Полученные результаты от умножения сложить:
//        9+3+7+9+6+3+4+5+3+2=51
//
//     3. Последнюю цифру от сложения умножить на 3:
//        1*3=3
//
//     4. Контрольный ключ = 3
//        Номер счета имеет значение: 3002001251023
//
//     5. Проверка правильности определения контрольного ключа.
//
//        5.1. 739 3002 00 125 102 3
//             713 3713 71 371 371 3
//             --- ---- -- --- --- -
//             937 9  6    345 3 2 9
//
//        5.2. 9+3+7+9+6+3+4+5+3+2+9=60
//
//        Полученная сумма оканчивается на ноль, что свидетельствует о
//правильности определения номера счета.
//Методические указания Национального банка Республики Беларусь от 15 мая 1995 г. №536 "Методические указания по нумерации счетов аналитического учета"
//По состоянию на 12 октября 2006 года
&НаСервере
Функция НомерБанковскогоСчетаПравильный(КодБанка, НомерСчета, ТекстОшибки = "")
	
	Если СтрДлина(НомерСчета) = 20 Тогда
		// Счет РФ - считаем, что правильно
		Возврат Истина;
	КонецЕсли;	
	Если СтрДлина(НомерСчета)<>13  Тогда
		ТекстОшибки = "В счете должно быть 13 символов!";
		Возврат Ложь;
	КонецЕсли;	
	
	МассивМн = "7133713713713713";
	Данные = ""+Прав(СокрП(КодБанка), 3)+НомерСчета;
	
	Сумма = 0;
	Для й=1 По 16 Цикл
		Мн1 = Число(Сред(МассивМн, й, 1));
		Мн2 = Число(Сред(Данные, й, 1));
		Произв = Мн1*Мн2;
		Если Произв > 0 Тогда
			Слаг = Произв - Цел(Произв/10)*10;
			Сумма = Сумма + Слаг;
		КонецЕсли; 
	КонецЦикла; 
	Всего = Сумма - Цел(Сумма/10)*10;
	Если Всего=0 Тогда
		Возврат Истина;
	Иначе
		ТекстОшибки = "В счете ошибка!";
		Возврат Ложь;
	КонецЕсли; 
КонецФункции // НомерБанковскогоСчетаПравильный(КодБанка, НомерСчета)

&НаКлиенте
Функция УстановитьФорматСчета()
	Элементы.НомерСчета.Маска = "9999999999999";
	Если ЭтоНеРезидентРБ(Объект.Владелец) Тогда
		Элементы.НомерСчета.Маска = "99999999999999999999";
	КонецЕсли; 
КонецФункции // УстановитьФорматСчета()

&НаСервереБезКонтекста
Функция ЭтоНеРезидентРБ(Корреспондент)
	Если ЗначениеЗаполнено(Корреспондент) Тогда
		Возврат Корреспондент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент;
	КонецЕсли;
	Возврат Ложь;
КонецФункции // ЭтоНеРезидентРБ()

&НаКлиенте
Процедура КодИБАНПриИзменении(Элемент)
	_КодИБАН = СтрЗаменить(КодИБАН, " ", "");
	Если Не мРазноеКлиент.ПравильныйКодИБАН(_КодИБАН, ЭтотОбъект) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Ошибка в контрольной сумме кода: "+КодИБАН;
		Сообщение.Поле = "КодИБАН";
		Сообщение.Сообщить();
	Иначе
		ОчиститьСообщения();
		Объект.СчетИБАН = _КодИБАН;
	КонецЕсли; 
	
	ЗаполнитьТекстКорреспондента();
	СформироватьАвтоНаименование();
	СформироватьАвтоНаименованиеИБАН();
	Объект.Наименование = Элементы.Наименование.СписокВыбора.Получить(0);
КонецПроцедуры

&НаКлиенте
Процедура СформироватьАвтоНаименованиеИБАН()

	//Элементы.Наименование.СписокВыбора.Очистить();
	
	Если ПустаяСтрока(Объект.СчетИБАН) Тогда 
		Возврат;
	КонецЕсли;	
	
	СтрокаНаименования = Лев(
		КодИБАН
		+ ?(Валютный, " (" + Объект.ВалютаДенежныхСредств + ")", "")
		+ ?(Не Объект.Банк.Пустая(), " в " + Объект.Банк, ""), 
		100);

	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	Если Объект.Банк.Пустая() Тогда 
		Возврат;
	КонецЕсли;	
		
	СтрокаНаименования = Лев(
		Строка(Объект.Банк)
		+ " (" 
		+ КодИБАН 
		+ ?(Валютный, ", " + Объект.ВалютаДенежныхСредств , "")
		+ ")", 
		100);
	
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	СтрокаНаименования = Лев(
		КодИБАН 
		+ ", " + Объект.Банк
		+ ?(Валютный, ", " + Объект.ВалютаДенежныхСредств , ""),
		100);
	
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
КонецПроцедуры
//1С-Минск

