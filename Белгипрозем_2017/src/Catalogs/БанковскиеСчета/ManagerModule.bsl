
// Возвращает строку, содержащую перечисление полей доступа через запятую
// Это перечисление используется в дальнейшем для передачи в метод 
// ОбщегоНазначения.ПолучитьЗначенияРеквизитов()
Функция ПолучитьПоляДоступа() Экспорт
	
	Возврат  "Владелец";
	
КонецФункции

// Заполняет переданный дескриптор доступа 
Процедура ЗаполнитьДескрипторДоступа(ОбъектДоступа, ДескрипторДоступа) Экспорт
	
	Если ТипЗнч(ОбъектДоступа.Владелец) = Тип("СправочникСсылка.Организации") Тогда
		ДескрипторДоступа.Организация = ОбъектДоступа.Владелец;
	ИначеЕсли ТипЗнч(ОбъектДоступа.Владелец) = Тип("СправочникСсылка.Корреспонденты") Тогда
		Строка = ДескрипторДоступа.Корреспонденты.Добавить();
		Строка.ГруппаДоступа = ОбщегоНазначения.ПолучитьЗначениеРеквизита(
			ОбъектДоступа.Владелец,
			"ГруппаДоступа");
	КонецЕсли;	
	
КонецПроцедуры	

// Возвращает Истина, указывая тем самым, что этот объект сам заполняет свои права 
Функция ЕстьМетодЗаполнитьПраваДоступа() Экспорт
	
	Возврат Истина;
	
КонецФункции

// Заполняет параметр ПраваДоступа правами доступа, вычисляя их на 
// основании переданного дескриптора доступа.
// Если указан параметр ПротоколРасчетаПрав, то в него 
// заносится список данных, которые были использованы для расчета прав.
Процедура ЗаполнитьПраваДоступа(ДескрипторДоступа, ПраваДоступа, ПротоколРасчетаПрав) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Справочники.ДескрипторыДоступаОбъектов.ЗаполнитьПраваДоступаСтандартно(
		ДескрипторДоступа, 
		ПраваДоступа, 
		ПротоколРасчетаПрав);
	
	Если ЗначениеЗаполнено(ДескрипторДоступа.Организация) Тогда // Для организаций только права чтения
		
		НовыеПраваДоступа = Новый Соответствие;
		Для каждого Эл Из ПраваДоступа Цикл
			ПраваПользователя = Новый Структура("Чтение, Добавление, Изменение, Удаление, УправлениеПравами", 
												Истина, Ложь, Ложь, Ложь, Ложь);
			НовыеПраваДоступа.Вставить(Эл.Ключ, ПраваПользователя);
		КонецЦикла;	
		ПраваДоступа = НовыеПраваДоступа;
		
	КонецЕсли;	
	
КонецПроцедуры