
Функция ПолучитьПоляДоступа() Экспорт
	
	Возврат "Пользователь";
	
КонецФункции

Процедура ЗаполнитьДескрипторДоступа(ОбъектДоступа, ДескрипторДоступа) Экспорт
	
	// Пользователи
	Если ЗначениеЗаполнено(ОбъектДоступа.Пользователь) Тогда
		Строка = ДескрипторДоступа.Пользователи.Добавить();
		Строка.Ключ = "Автор";
		Строка.Пользователь = ОбъектДоступа.Пользователь;
	КонецЕсли;
	
КонецПроцедуры

// Возвращает Истина, указывая тем самым что этот объект сам заполняет свои права 
Функция ЕстьМетодЗаполнитьПраваДоступа() Экспорт
	
	Возврат Истина;
	
КонецФункции

// Заполняет параметр ПраваДоступа правами доступа, вычисляя их на 
// основании переданного дескриптора доступа.
// Если указан параметр ПротоколРасчетаПрав, то в него 
// заносится список данных, которые были использованы для расчета прав.
Процедура ЗаполнитьПраваДоступа(ДескрипторДоступа, ПраваДоступа, ПротоколРасчетаПрав) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
		
	// Пользователи
	АвторДобавлен = Ложь;
	ПользовательСпискаДоступаДобавлен = Ложь;
	Для каждого Эл Из ДескрипторДоступа.Пользователи Цикл
		Если Эл.Ключ = "Автор" Тогда
							
			АвторДобавлен = Истина;
			
			ПраваПользователя = Новый Структура("Чтение, Добавление, Изменение, Удаление, УправлениеПравами",
											Истина, Истина, Истина, Истина, Ложь);
											
			ДокументооборотПраваДоступа.ДобавитьПользователяВСоответствиеПрав(
				ПраваДоступа,
				Эл.Пользователь,
				Эл.ОсновнойОбъектАдресации,
				Эл.ДополнительныйОбъектАдресации,
				ПраваПользователя);
				
		Иначе
				
			ВызватьИсключение(НСтр("ru = 'Неизвестный ключ пользователя.'"));
			
		КонецЕсли;
	КонецЦикла;
		
	Если АвторДобавлен Тогда
		Если ПротоколРасчетаПрав <> Неопределено Тогда
			ПротоколРасчетаПрав.Добавить(НСтр("ru = 'Автор личного адресата'"));
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

// Вернет Истина, у этого объекта метаданных есть функция ПолучитьАдресФото
Функция ЕстьФункцияПолученияФото() Экспорт
	
	Возврат Истина;
	
КонецФункции

// Прочитать фото и вернуть адрес (навигационную ссылку)
// Параметры:
//  Ссылка - ссылка на справочник, для которого надо показать фото
//  УникальныйИдентификатор - уникальный идентификатор формы, откуда идет вызов
//  ЕстьКартинка - возвращаемое значение - Булево - Истина, если в объекте есть картинка
//
// Возвращаемое значение:
//   Строка - навигационная ссылка - или "", если нет картинки
Функция ПолучитьАдресФото(Ссылка, УникальныйИдентификатор, ЕстьКартинка) Экспорт
	
	Возврат РаботаСФотографиями.ПолучитьНавигационнуюСсылкуРеквизита(Ссылка, УникальныйИдентификатор, ЕстьКартинка);
	
КонецФункции

// Возвращает двоичные данные фото личного адресата
//
Функция ПолучитьДвоичныеДанныеФото(ЛичныйАдресат) Экспорт
	
	ДвоичныеДанные = РаботаСФотографиями.ПолучитьДвоичныеДанныеРеквизита(ЛичныйАдресат, "ФайлФотографии");
	Если Не ЗначениеЗаполнено(ДвоичныеДанные) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ДвоичныеДанные;
	
КонецФункции
