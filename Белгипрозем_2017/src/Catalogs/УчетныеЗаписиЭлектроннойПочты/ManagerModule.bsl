// Возвращает строку, содержащую перечисление полей доступа через запятую
// Это перечисление используется в дальнейшем для передачи в метод 
// ОбщегоНазначения.ПолучитьЗначенияРеквизитов()
Функция ПолучитьПоляДоступа() Экспорт
	
	Возврат "Ссылка, ОтветственныеЗаОбработкуПисем, ВариантИспользования";
	
КонецФункции

// Заполняет переданный дескриптор доступа
Процедура ЗаполнитьДескрипторДоступа(ОбъектДоступа, ДескрипторДоступа) Экспорт
	
	// ОтветственныеЗаОбработкуПисем
	Если ТипЗнч(ОбъектДоступа) = Тип("Структура") Тогда
		Выборка = ОбъектДоступа.ОтветственныеЗаОбработкуПисем.Выбрать();
		Пока Выборка.Следующий()Цикл  
			ДескрипторДоступа.ДобавитьПользователя("ОтветственныйЗаОбработкуПисем", Выборка.Пользователь);
		КонецЦикла;
	Иначе
		Для каждого Ответственный Из ОбъектДоступа.ОтветственныеЗаОбработкуПисем Цикл
			ДескрипторДоступа.ДобавитьПользователя("ОтветственныйЗаОбработкуПисем", Ответственный.Пользователь);
		КонецЦикла;
	КонецЕсли;
	
	// Рабочая группа
	Если ОбъектДоступа.ВариантИспользования = Перечисления.ВариантыИспользованияПочты.Встроенная Тогда
		РабочаяГруппа = РаботаСРабочимиГруппами.ПолучитьРабочуюГруппуДокумента(ОбъектДоступа.Ссылка);
		Для каждого Эл Из РабочаяГруппа Цикл
			Строка = ДескрипторДоступа.РабочаяГруппа.Добавить();
			Строка.Участник = Эл.Участник;
			Строка.ОсновнойОбъектАдресации = Эл.ОсновнойОбъектАдресации;
			Строка.ДополнительныйОбъектАдресации = Эл.ДополнительныйОбъектАдресации;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Возвращает Истина, указывая тем самым что этот объект сам заполняет свои права.
Функция ЕстьМетодЗаполнитьПраваДоступа() Экспорт
	
	Возврат Истина;
	
КонецФункции

// Заполняет параметр ПраваДоступа правами доступа, вычисляя их на 
// основании переданного дескриптора доступа.
// Если указан параметр ПротоколРасчетаПрав, то в него 
// заносится список данных, которые были использованы для расчета прав.
Процедура ЗаполнитьПраваДоступа(ДескрипторДоступа, ПраваДоступа, ПротоколРасчетаПрав) Экспорт
	
	// Добавление ответственных за работу с учетной записью
	ОтветственныеДобавлены = Ложь;
	Для каждого Строка Из ДескрипторДоступа.Пользователи Цикл
		
		Если Строка.Ключ = "ОтветственныйЗаОбработкуПисем" Тогда
			
			ПраваПользователя = Новый Структура("Чтение, Добавление, Изменение, Удаление, УправлениеПравами", 
											Истина, Истина, Истина, Истина, Ложь);
	
			ДокументооборотПраваДоступа.ДобавитьПользователяВСоответствиеПрав(
				ПраваДоступа,
				Строка.Пользователь,
				Строка.ОсновнойОбъектАдресации,
				Строка.ДополнительныйОбъектАдресации,
				ПраваПользователя);
				
			ОтветственныеДобавлены = Истина;	
				
		Иначе
				
			ВызватьИсключение(НСтр("ru = 'Неизвестный ключ пользователя.'"));				
			
		КонецЕсли;
			
	КонецЦикла;
	
	// Добавление сведений об ответственных в протокол расчета прав
	Если ОтветственныеДобавлены Тогда
		Если ПротоколРасчетаПрав <> Неопределено Тогда
			ПротоколРасчетаПрав.Добавить(НСтр("ru = 'Ответственные за учетную запись (см. учетную запись)'"));
		КонецЕсли;	
	КонецЕсли;	
	
	// Добавление участников рабочей группы
	Если ДескрипторДоступа.РабочаяГруппа.Количество() > 0 Тогда
		
		// Обход рабочей группы
		Для каждого Строка Из ДескрипторДоступа.РабочаяГруппа Цикл
			
			ПраваПользователя = Новый Структура("Чтение, Добавление, Изменение, Удаление, УправлениеПравами", 
											Истина, Ложь, Ложь, Ложь, Ложь);
	
			ДокументооборотПраваДоступа.ДобавитьПользователяВСоответствиеПрав(
				ПраваДоступа,
				Строка.Участник,
				Строка.ОсновнойОбъектАдресации,
				Строка.ДополнительныйОбъектАдресации,
				ПраваПользователя);
				
				УчастникиРабочейГруппыДобавлены = Истина;	
				
		КонецЦикла;
		
		// Добавление сведений о рабочей группе в протокол расчета прав
		Если ПротоколРасчетаПрав <> Неопределено Тогда
			ПротоколРасчетаПрав.Добавить(НСтр("ru = 'Рабочая группа (см. учетную запись)'"));
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

Функция ПолучитьПредставлениеАдреса(УчетнаяЗапись) Экспорт
	
	ДанныеУчетнойЗаписи = Почта.ПолучитьДанныеУчетнойЗаписи(УчетнаяЗапись);	
	ПредставлениеАдреса = РаботаСоСтроками.ПолучитьПредставлениеАдресаЭлектроннойПочты(
		ДанныеУчетнойЗаписи.ИмяПользователя,
		ДанныеУчетнойЗаписи.АдресЭлектроннойПочты);
		
	Возврат ПредставлениеАдреса;
	
КонецФункции

// Переносит данные из реквизита УдалитьОтветственныйЗаОбработкуПисем
// в табличную часть ОтветственныеЗаОбработкуПисем
Процедура ПеренестиОтветственныхВТабличнуюЧасть() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетныеЗаписиЭлектроннойПочты.Ссылка
		|ИЗ
		|	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты";

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		УчетнаяЗаписьОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		УчетнаяЗаписьОбъект.Заблокировать();
		Если УчетнаяЗаписьОбъект.ОтветственныеЗаОбработкуПисем.Количество() = 0 Тогда
			Строка = УчетнаяЗаписьОбъект.ОтветственныеЗаОбработкуПисем.Добавить();
			Строка.Пользователь = УчетнаяЗаписьОбъект.УдалитьОтветственныйЗаОбработкуПисем;
			УчетнаяЗаписьОбъект.Записать();
		КонецЕсли;	
	КонецЦикла;

КонецПроцедуры	
