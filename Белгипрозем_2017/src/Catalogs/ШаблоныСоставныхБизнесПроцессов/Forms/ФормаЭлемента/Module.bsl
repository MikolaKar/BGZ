
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПротоколированиеРаботыПользователей.ЗаписатьОткрытие(Объект.Ссылка);
	
	УстановитьДоступностьЭлементовПоПравуДоступа();
	
	// Инициализация формы механизмом комплексных процессов 
	Если Объект.Ссылка.Пустая() Тогда
		ЗаголовокФормы = НСтр("ru = 'Составной процесс (Создание)'");
		Если Не ЗначениеЗаполнено(Объект.Ответственный) Тогда 
			Объект.Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
		КонецЕсли;
	Иначе
		ЗаголовокФормы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Составной процесс ""%1""'"), 
			Объект.НаименованиеБизнесПроцесса);
	КонецЕсли;
		
	// Рабочие группы
	РаботаСРабочимиГруппами.ШаблонПриСозданииНаСервере(ЭтаФорма);
	
	// Заполнение сроков отложенного старта
	ОтложенныйСтартДни = Цел(Объект.СрокОтложенногоСтарта/86400);
	ОтложенныйСтартЧасы = (Объект.СрокОтложенногоСтарта - ОтложенныйСтартДни * 86400)/3600;
	
	ИспользоватьДатуИВремяВСрокахЗадач = ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	Элементы.ОтложенныйСтартЧасы.Видимость = ИспользоватьДатуИВремяВСрокахЗадач;
	Элементы.ДекорацияОтложенныйСтартЧасы.Видимость = ИспользоватьДатуИВремяВСрокахЗадач;

	МультипредметностьКлиентСервер.ЗаполнитьТаблицуПредметовФормы(Объект);
	МультипредметностьКлиентСервер.ЗаполнитьОписаниеПредметовШаблона(Объект);

	ДоступныеРолиПредметов.Добавить(Перечисления.РолиПредметов.Основной);
	ДоступныеРолиПредметов.Добавить(Перечисления.РолиПредметов.Вспомогательный);

	МультипредметностьКлиентСервер.УстановитьДоступностьКнопокУправленияПредметами(ЭтаФорма);
	
	РаботаСКомплекснымиБизнесПроцессамиСервер.КарточкаШаблонаБизнесПроцессаПриСозданииНаСервере(
		ЭтаФорма, 
		ЗаголовокФормы);
		
	Если Не ЗначениеЗаполнено(Объект.ТипШаблона) И Параметры.Свойство("ТипШаблона") Тогда
		Объект.ТипШаблона = Параметры.ТипШаблона;		
	КонецЕсли;	
	
	ЗаполнитьТипыШаблона();
	
	ЗаполнитьПредставлениеШаблонов();
	
	// Обработчик подсистемы "Свойства"
	РаботаСБизнесПроцессами.СкопироватьЗначенияДопРеквизитов(Объект.Ссылка, ПустойБизнесПроцесс);
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ПустойБизнесПроцесс, "ГруппаДополнительныеРеквизиты");
	
	Если Объект.Ссылка.Пустая() Тогда 
		Если ЗначениеЗаполнено(Объект.ТипШаблона) Тогда 
			ЗаполнитьТаблицуШаблонов();
		КонецЕсли;	
	КонецЕсли;	
	
	ИсходныйТипШаблона = Объект.ТипШаблона;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	СтруктураРеквизитов = Новый Структура;
	Для Каждого Строка Из Объект.Шаблоны Цикл
		СтруктураРеквизитов.Вставить(Строка.Реквизит, Строка.Шаблон);
	КонецЦикла;	
	
	Попытка
		Ошибки = БизнесПроцессы[Объект.ТипШаблона].ПроверитьШаблон(СтруктураРеквизитов);
	Исключение
		Возврат;	
	КонецПопытки;	
	
	Для Каждого Ошибка Из Ошибки Цикл
		Если ПустаяСтрока(Ошибка.Значение) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Ошибка.Представление,,"Объект.Шаблоны",,Отказ);
		Иначе	
			НайденныеСтроки = Объект.Шаблоны.НайтиСтроки(Новый Структура("Реквизит", Ошибка.Значение));
			Если НайденныеСтроки.Количество() > 0 Тогда 
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Ошибка.Представление,,
					"Объект.Шаблоны["+(НайденныеСтроки[0].НомерСтроки-1)+"].Шаблон",,Отказ);
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("ЭтоНовыйОбъект", НЕ ЗначениеЗаполнено(ТекущийОбъект.Ссылка));
	// Обработчик подсистемы "Свойства"
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
	// Рабочая группа
	РабочаяГруппаТаблицаКоличество = РабочаяГруппаТаблица.Количество();
	Для Инд = 1 По РабочаяГруппаТаблицаКоличество Цикл
		Строка = РабочаяГруппаТаблица[РабочаяГруппаТаблицаКоличество - Инд];
		Если Не ЗначениеЗаполнено(Строка.Участник) Тогда 
			РабочаяГруппаТаблица.Удалить(Строка);
		КонецЕсли;	
	КонецЦикла;
	
	НоваяРабочаяГруппа = РабочаяГруппаТаблица.Выгрузить();
	РабочаяГруппаДобавить = Новый Массив;
	РабочаяГруппаУдалить = Новый Массив;
	
	// Формирование списка удаленных участников рабочей группы
	Для каждого Эл Из ИсходнаяРабочаяГруппа Цикл
		
		Найден = Ложь;
		
		Для каждого Эл2 Из НоваяРабочаяГруппа Цикл
			Если Эл.Участник = Эл2.Участник 
				И Эл.ОсновнойОбъектАдресации = Эл2.ОсновнойОбъектАдресации 
				И Эл.ДополнительныйОбъектАдресации = Эл2.ДополнительныйОбъектАдресации Тогда
				
				Найден = Истина;
				Прервать;
			КонецЕсли;	
		КонецЦикла;	
		
		Если Не Найден Тогда
			РабочаяГруппаУдалить.Добавить(Новый Структура("Участник, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации", 
				Эл.Участник,
				Эл.ОсновнойОбъектАдресации,
				Эл.ДополнительныйОбъектАдресации));
		КонецЕсли;
		
	КонецЦикла;	
	
	// Формирование списка добавленных участников рабочей группы
	Для каждого Эл Из НоваяРабочаяГруппа Цикл
		
		Найден = Ложь;
		
		Для каждого Эл2 Из ИсходнаяРабочаяГруппа Цикл
			Если Эл.Участник = Эл2.Участник 
				И Эл.ОсновнойОбъектАдресации = Эл2.ОсновнойОбъектАдресации 
				И Эл.ДополнительныйОбъектАдресации = Эл2.ДополнительныйОбъектАдресации Тогда
				
				Найден = Истина;
				Прервать;
			КонецЕсли;	
		КонецЦикла;	
		
		Если Не Найден Тогда
			РабочаяГруппаДобавить.Добавить(Новый Структура("Участник, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации", 
				Эл.Участник,
				Эл.ОсновнойОбъектАдресации,
				Эл.ДополнительныйОбъектАдресации));
		КонецЕсли;
		
	КонецЦикла;	
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("РабочаяГруппаУдалить", РабочаяГруппаУдалить);	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("РабочаяГруппаДобавить", РабочаяГруппаДобавить);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если Объект.ШаблонВКомплексномПроцессе Тогда
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1 ""%2""'"), 
			Объект.Ссылка.Метаданные().Синоним,
			Объект.НаименованиеБизнесПроцесса);
	КонецЕсли;
			
	ПротоколированиеРаботыПользователей.ЗаписатьСоздание(Объект.Ссылка, ПараметрыЗаписи.ЭтоНовыйОбъект);
	ПротоколированиеРаботыПользователей.ЗаписатьИзменение(Объект.Ссылка);
	
	ЗаполнитьПредставлениеШаблонов();
	
	// Рабочая группа
	РаботаСРабочимиГруппами.ОбъектПослеЗаписиНаСервере(ЭтаФорма, ПараметрыЗаписи);
	
	МультипредметностьКлиентСервер.ЗаполнитьТаблицуПредметовФормы(Объект);
	МультипредметностьКлиентСервер.ЗаполнитьОписаниеПредметовШаблона(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗаполнитьПредставлениеШаблонов();
	
	// Рабочие группы
	РаботаСРабочимиГруппами.ДокументПриЧтенииНаСервере(ЭтаФорма);
	
	// Формирование исходной рабочей группы
	Участники = РегистрыСведений.РабочиеГруппы.ПолучитьУчастниковПоОбъекту(Объект.Ссылка);
	ИсходнаяРабочаяГруппа.Очистить();
	Для каждого Эл Из Участники Цикл
		
		Строка = ИсходнаяРабочаяГруппа.Добавить();
		Строка.Участник = Эл.Участник; 
		Строка.ОсновнойОбъектАдресации = Эл.ОсновнойОбъектАдресации;
		Строка.ДополнительныйОбъектАдресации = Эл.ДополнительныйОбъектАдресации;
		
	КонецЦикла;
			
	МультипредметностьКлиентСервер.ЗаполнитьТаблицуПредметовФормы(Объект);
	
	// СтандартныеПодсистемы.Свойства
	РаботаСБизнесПроцессами.СкопироватьЗначенияДопРеквизитов(Объект.Ссылка, ПустойБизнесПроцесс);
	ПустойБизнесПроцессОбъект =
		РеквизитФормыВЗначение("ПустойБизнесПроцесс", Тип("БизнесПроцессОбъект.КомплексныйПроцесс"));
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ПустойБизнесПроцессОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если Объект.ШаблонВКомплексномПроцессе Тогда
		РаботаСКомплекснымиБизнесПроцессамиКлиент.ОповеститьПослеЗаписиНастройкиДействия(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// Заполнение сроков отложенного старта
	Объект.СрокОтложенногоСтарта = (ОтложенныйСтартЧасы * 3600) + (ОтложенныйСтартДни * 86400);
	
	ЕстьЗаполненныйШаблон = Ложь;
	Если Объект.ШаблонВКомплексномПроцессе Тогда
		Для Каждого СтрокаТаблицы Из Объект.Шаблоны Цикл
			Если ЗначениеЗаполнено(СтрокаТаблицы.Шаблон) Тогда
				ЕстьЗаполненныйШаблон = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если НЕ ЕстьЗаполненныйШаблон И Объект.ШаблонВКомплексномПроцессе Тогда
		Текст = НСтр("ru = 'Не указано ни одного шаблона.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст,, "Объект.Шаблоны",, Отказ);
	КонецЕсли;
	
	РаботаСКомплекснымиБизнесПроцессамиКлиент.ФормаНастройкиДействияПередЗаписью(ЭтаФорма, Отказ);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ТипШаблонаПриИзменении(Элемент)
	
	Если ИсходныйТипШаблона <> Объект.ТипШаблона Тогда 
		ЗаполнитьТаблицуШаблонов();
		ИсходныйТипШаблона = Объект.ТипШаблона;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура АвторНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСПользователямиКлиент.ВыбратьПользователя(Элемент, Объект.Автор);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСПользователямиКлиент.ВыбратьПользователя(Элемент, Объект.Ответственный);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ "РАБОЧАЯ ГРУППА"

&НаКлиенте
Процедура РабочаяГруппаТаблицаУчастникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	РаботаСРабочимиГруппамиКлиент.ДокументРабочаяГруппаУчастникНачалоВыбора(
		ЭтаФорма,
		Элемент,
		ДанныеВыбора,
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаУчастникАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	РаботаСРабочимиГруппамиКлиент.ДокументРабочаяГруппаУчастникАвтоПодбор(
		Элемент,
		Текст,
		ДанныеВыбора,
		Ожидание,
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаПриНачалеРедактирования(Элемент, НоваяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаПриОкончанииРедактирования(
		ЭтаФорма,
		Элемент,
		ОтменаРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаПередУдалением(Элемент, Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"РабочаяГруппаТаблицаПередУдалениемПродолжение",
		ЭтотОбъект);
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаТаблицаПередУдалением(ЭтаФорма, Отказ, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаПередУдалениемПродолжение(Результат, Параметры) Экспорт
	
	ТаблицаРГ = Элементы.РабочаяГруппаТаблица;
	Для Каждого Индекс Из ТаблицаРГ.ВыделенныеСтроки Цикл
		РабочаяГруппаТаблица.Удалить(ТаблицаРГ.ДанныеСтроки(Индекс));
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РабочаяГруппаТаблицаОбработкаВыбораСервер(ВыбранноеЗначение);
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаПриОкончанииРедактирования(
		ЭтаФорма,
		Элементы.РабочаяГруппаТаблица,
		Ложь);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ "ШАБЛОНЫ"

&НаКлиенте
Процедура ШаблоныШаблонНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Шаблоны.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ШаблоныШаблонНачалоВыбораПродолжение",
		ЭтотОбъект);
	СписокТипов = ПолучитьТипы(ТекущиеДанные.Реквизит);
	Если СписокТипов.Количество() = 0 Тогда 
		Возврат;
	ИначеЕсли СписокТипов.Количество() = 1 Тогда 
		ВыбранныйТип = СписокТипов[0];
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, ВыбранныйТип);
	Иначе	
		СписокТипов.ПоказатьВыборЭлемента(ОписаниеОповещения, "Выбор типа данных");
	КонецЕсли;		
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблоныШаблонНачалоВыбораПродолжение(ВыбранныйТип, Параметры) Экспорт
	
	Если ВыбранныйТип = Неопределено Тогда 	
		Возврат;
	КонецЕсли;
	ТекущиеДанные = Элементы.Шаблоны.ТекущиеДанные;
	ПараметрыФормы = Новый Структура("ТекущаяСтрока", ТекущиеДанные.Шаблон);
	ОткрытьФорму("Справочник." + ВыбранныйТип.Значение + ".ФормаВыбора", ПараметрыФормы, Элементы.Шаблоны);
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблоныОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Шаблоны.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Шаблон = ВыбранноеЗначение;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ "ПРЕДМЕТЫ"

&НаКлиенте
Процедура ПредметыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	МультипредметностьКлиент.ПредметыШаблонаИзменитьПредмет(ЭтаФорма, Объект, ВыбраннаяСтрока, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	МультипредметностьКлиент.ПредметыШаблонаПередНачаломДобавления(ЭтаФорма, Объект, Отказ, Копирование);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	ВыбраннаяСтрока = Элементы.Предметы.ТекущаяСтрока;
	Если ВыбраннаяСтрока <> Неопределено Тогда
		МультипредметностьКлиент.ПредметыШаблонаИзменитьПредмет(ЭтаФорма, Объект, ВыбраннаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыПередУдалением(Элемент, Отказ)
	
	МультипредметностьКлиент.ПредметыПередУдалением(ЭтаФорма, Объект, Отказ, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыПослеУдаления(Элемент)
	
	МультипредметностьКлиентСервер.УстановитьДоступностьКнопокУправленияПредметами(ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПодобратьУчастниковРабочейГруппы(Команда)
	
	РаботаСРабочимиГруппамиКлиент.ДокументПодобратьУчастниковРабочейГруппы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыДобавитьОсновной(Команда)
	
	МультипредметностьКлиент.ПредметыДобавитьОсновной(ЭтаФорма, Объект, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыДобавитьВспомогательный(Команда)
	
	МультипредметностьКлиент.ПредметыДобавитьВспомогательный(ЭтаФорма, Объект, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыИзменитьПредмет(Команда)
	
	ВыбраннаяСтрока = Элементы.Предметы.ТекущаяСтрока;
	Если ВыбраннаяСтрока <> Неопределено Тогда
		МультипредметностьКлиент.ПредметыШаблонаИзменитьПредмет(ЭтаФорма, Объект, ВыбраннаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыИзменитьРоль(Команда)
	
	ВыбраннаяСтрока = Элементы.Предметы.ТекущаяСтрока;
	Если ВыбраннаяСтрока <> Неопределено Тогда
		МультипредметностьКлиент.ИзменитьРольПредмета(ЭтаФорма, Объект, ВыбраннаяСтрока, Ложь, Истина);
		МультипредметностьКлиент.ПредметыШаблонаПриАктивизацииСтроки(ЭтаФорма, Объект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура РабочаяГруппаТаблицаОбработкаВыбораСервер(ВыбранноеЗначение)
	
	РаботаСРабочимиГруппами.ДокументОбработкаВыбора(ЭтаФорма, ВыбранноеЗначение);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПредставлениеШаблонов()
	
	Если ЗначениеЗаполнено(Объект.ТипШаблона) Тогда 
		МДБизнесПроцесс = Метаданные.БизнесПроцессы.Найти(Объект.ТипШаблона);
		Если МДБизнесПроцесс <> Неопределено Тогда 
			Для Каждого Строка Из Объект.Шаблоны Цикл
				МДРеквизит = МДБизнесПроцесс.Реквизиты.Найти(Строка.Реквизит);
				Если МДРеквизит <> Неопределено Тогда 
					Строка.ПредставлениеРеквизита = ?(ПустаяСтрока(МДРеквизит.Синоним), МДРеквизит.Имя, МДРеквизит.Синоним);
				Иначе
					Строка.ПредставлениеРеквизита =  Строка.Реквизит;
				КонецЕсли;	
			КонецЦикла;	
		Иначе	
			Для Каждого Строка Из Объект.Шаблоны Цикл
				Строка.ПредставлениеРеквизита = Строка.Реквизит;
			КонецЦикла;	
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьТаблицуШаблонов()
	
	Объект.Шаблоны.Очистить();
	МДБизнесПроцесс = Метаданные.БизнесПроцессы.Найти(Объект.ТипШаблона);
	Если МДБизнесПроцесс = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	МДРеквизиты = МДБизнесПроцесс.Реквизиты;
	Для Каждого МДРеквизит Из МДРеквизиты Цикл
		
		Если МДРеквизит.Тип.СодержитТип(Тип("СправочникСсылка.ШаблоныИсполнения")) 
		 Или МДРеквизит.Тип.СодержитТип(Тип("СправочникСсылка.ШаблоныОзнакомления")) 
		 Или МДРеквизит.Тип.СодержитТип(Тип("СправочникСсылка.ШаблоныПоручения")) 
		 Или МДРеквизит.Тип.СодержитТип(Тип("СправочникСсылка.ШаблоныРассмотрения")) 
		 Или МДРеквизит.Тип.СодержитТип(Тип("СправочникСсылка.ШаблоныРегистрации")) 
		 Или МДРеквизит.Тип.СодержитТип(Тип("СправочникСсылка.ШаблоныСогласования")) 
		 Или МДРеквизит.Тип.СодержитТип(Тип("СправочникСсылка.ШаблоныУтверждения")) Тогда 
			НоваяСтрока = Объект.Шаблоны.Добавить();
			НоваяСтрока.Реквизит = МДРеквизит.Имя;
			НоваяСтрока.ПредставлениеРеквизита = ?(ПустаяСтрока(МДРеквизит.Синоним), МДРеквизит.Имя, МДРеквизит.Синоним);
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьТипыШаблона()
	
	Для Каждого МДБизнесПроцесс Из Метаданные.БизнесПроцессы Цикл
		МДРеквизит = МДБизнесПроцесс.Реквизиты.Найти("Шаблон");
		Если МДРеквизит <> Неопределено Тогда
			Если МДРеквизит.Тип.СодержитТип(Тип("СправочникСсылка.ШаблоныСоставныхБизнесПроцессов")) Тогда 
				Элементы.ТипШаблона.СписокВыбора.Добавить(МДБизнесПроцесс.Имя, МДБизнесПроцесс.Синоним);
				Продолжить;
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере 
Функция ПолучитьТипы(Реквизит)
	
	СписокТипов = Новый СписокЗначений;
	
	МДБизнесПроцесс = Метаданные.БизнесПроцессы.Найти(Объект.ТипШаблона);
	Если МДБизнесПроцесс = Неопределено Тогда 
		Возврат СписокТипов;
	КонецЕсли;
	
	МДРеквизит = МДБизнесПроцесс.Реквизиты.Найти(Реквизит);
	Если МДРеквизит = Неопределено Тогда 
		Возврат СписокТипов;
	КонецЕсли;	
	
	ТипыОбъекта = МДРеквизит.Тип.Типы();
	Для Каждого ТипОбъекта Из ТипыОбъекта Цикл
		ОбъектСсылка = Новый(ТипОбъекта);
		СписокТипов.Добавить(ОбъектСсылка.Метаданные().Имя, ОбъектСсылка.Метаданные().Синоним);
	КонецЦикла;	
	
	Возврат СписокТипов;
	
КонецФункции	

// Устанавливает доступность элементов формы при ее открытии в зависимости от
// прав доступа к шаблону.
//
&НаСервере
Процедура УстановитьДоступностьЭлементовПоПравуДоступа()
	
	Если НЕ Объект.Ссылка.Пустая()
		И НЕ ДокументооборотПраваДоступа.ПолучитьПраваПоОбъекту(Объект.Ссылка).Изменение Тогда
		
		ТолькоПросмотр = Истина;
		
		Элементы.РабочаяГруппаТаблица.ТолькоПросмотр = Истина;
		
		Элементы.ФормаЗакрытьФорму.Видимость = Истина;
		Элементы.ФормаЗакрытьФорму.КнопкаПоУмолчанию = Истина;
		Элементы.ФормаЗаписатьИЗакрыть.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры
