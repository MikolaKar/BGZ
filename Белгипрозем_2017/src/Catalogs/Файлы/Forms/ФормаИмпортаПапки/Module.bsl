
// Обработка события ПриОткрытии формы
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВыборКаталогов = Истина;
	ХранитьВерсии = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ВРег(ИсточникВыбора.ИмяФормы) = ВРег("Справочник.Файлы.Форма.ВыборКодировки") Тогда
		Если ТипЗнч(ВыбранноеЗначение) <> Тип("Структура") Тогда
			Возврат;
		КонецЕсли;
		КодировкаТекстаФайла = ВыбранноеЗначение.Значение;
		КодировкаПредставление = ВыбранноеЗначение.Представление;
		УстановитьПредставлениеКомандыКодировки(КодировкаПредставление);
	КонецЕсли;
КонецПроцедуры

// Обработка нажатия на кнопку Импорт
//
&НаКлиенте
Процедура ИмпортВыполнить()
	
	ОчиститьСообщения();
	
	Если ПустаяСтрока(Каталог) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не выбран каталог для импорта.'"), , "Каталог");
		Возврат;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПапкаДляДобавления) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не выбрана папка.'"), , "ПапкаДляДобавления");
		Возврат;
	КонецЕсли;
	
	ВыбранныеФайлы = Новый СписокЗначений;
	ВыбранныеФайлы.Добавить(Каталог);
	
	ПсевдоФайловаяСистема = Новый Соответствие; // соответствие путь к директории - файлы и папки в ней 
	ДобавленныеФайлы = Новый Массив;
	ПараметрыРаспознавания = Новый Структура("СтратегияРаспознавания, ЯзыкРаспознавания", 
		СтратегияРаспознавания, ЯзыкРаспознавания);
		
	Обработчик = Новый ОписаниеОповещения("ИмпортЗавершение", ЭтотОбъект);	
	
	РаботаСФайламиКлиент.ИмпортФайловВыполнить(
		Обработчик,
		ПапкаДляДобавления, 
		ВыбранныеФайлы, 
		Описание, 
		ХранитьВерсии, 
		УдалятьФайлыПослеДобавления, 
		Истина,
		УникальныйИдентификатор,
		ПсевдоФайловаяСистема,
		ДобавленныеФайлы,
		Ложь,
		ПараметрыРаспознавания,
		КодировкаТекстаФайла,
		СписокКатегорий);
		
КонецПроцедуры

&НаКлиенте
Процедура ИмпортЗавершение(Результат, ПараметрыВыполнения) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Закрыть();
	Оповестить("ИмпортКаталоговЗавершен", Новый Структура, Результат.ПапкаДляДобавленияТекущая);
	
КонецПроцедуры

// Обработка события НачалоВыбора у поля Папка
//
&НаКлиенте
Процедура ВыбранныйКаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	#Если НЕ ВебКлиент Тогда
		Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
		
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
		
		ДиалогОткрытияФайла.Каталог = Каталог;
		ДиалогОткрытияФайла.ПолноеИмяФайла = "";
		Фильтр = НСтр("ru = 'Все файлы(*.*)|*.*'");
		ДиалогОткрытияФайла.Фильтр = Фильтр;
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите каталог'");
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			
			Если ВыборКаталогов = Истина Тогда 
				
				Каталог = ДиалогОткрытияФайла.Каталог;
				
			КонецЕсли;
			
		КонецЕсли;
			
		СтандартнаяОбработка = Ложь;
	#КонецЕсли
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("КаталогНаДиске") Тогда 	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Данная обработка вызывается из других процедур конфигурации. Вручную ее вызывать запрещено.'")); 
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Параметры.КаталогНаДиске <> Неопределено Тогда
		Каталог = Параметры.КаталогНаДиске;
	КонецЕсли;
	
	Если Параметры.ПапкаДляДобавления <> Неопределено Тогда
		ПапкаДляДобавления = Параметры.ПапкаДляДобавления;
	КонецЕсли;
	
	ИспользоватьРаспознавание = РаботаСФайламиВызовСервера.ПолучитьИспользоватьРаспознавание();
	Элементы.ГруппаРаспознавание.Видимость = ИспользоватьРаспознавание;
	Если ИспользоватьРаспознавание = Ложь Тогда
		СтратегияРаспознавания = Перечисления.СтратегииРаспознаванияТекста.НеРаспознавать;
	Иначе
		ЯзыкРаспознавания = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("Распознавание", "ЯзыкРаспознавания");
		Если НЕ ЗначениеЗаполнено(ЯзыкРаспознавания) Тогда
			ЯзыкРаспознавания = РаботаСФайламиВызовСервера.ПолучитьЯзыкРаспознавания();
		КонецЕсли;
		
		СтратегияРаспознавания = Перечисления.СтратегииРаспознаванияТекста.ПоместитьТолькоВТекстовыйОбраз;
		
		ПредставлениеНастроекРаспознавания = РаботаСФайламиВызовСервера.ПолучитьПредставлениеНастроекРаспознавания(СтратегияРаспознавания, ЯзыкРаспознавания);
	КонецЕсли;	
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьКатегорииДанных") Тогда
		Элементы.ГруппаКатегории.Видимость = Ложь;
	Иначе
		Если Параметры.Свойство("СписокКатегорий") Тогда
			Для каждого КатегорияВСписке Из Параметры.СписокКатегорий Цикл
				НоваяСтрока = СписокКатегорий.Добавить();
				НоваяСтрока.Значение = КатегорияВСписке;
				НоваяСтрока.ПолноеНаименование = РаботаСКатегориямиДанных.ПолучитьПолныйПутьКатегорииДанных(КатегорияВСписке);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиРаспознавания(Команда)
	
	ПараметрыОткрытия = Новый Структура("СтратегияРаспознавания, ЯзыкРаспознавания", СтратегияРаспознавания, ЯзыкРаспознавания);	
	РежимОткрытия = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
	Обработчик = Новый ОписаниеОповещения("ПослеВыбораНастроекРаспознавания", ЭтотОбъект);
	ОткрытьФорму("Справочник.Файлы.Форма.НастройкаРаспознавания", ПараметрыОткрытия, ЭтаФорма,,,,Обработчик, РежимОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораНастроекРаспознавания(РезультатОткрытия, ДополнительниыеПараметры) Экспорт
	
	Если ТипЗнч(РезультатОткрытия) = Тип("Структура") Тогда
		СтратегияРаспознавания = РезультатОткрытия.СтратегияРаспознавания;
		ЯзыкРаспознавания = РезультатОткрытия.ЯзыкРаспознавания;
		ПредставлениеНастроекРаспознавания = РаботаСФайламиВызовСервера.ПолучитьПредставлениеНастроекРаспознавания(СтратегияРаспознавания, ЯзыкРаспознавания);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКатегории(Команда)
	
	РаботаСКатегориямиДанныхКлиент.ОткрытьФормуПодбораКатегорийДляСпискаКатегорий(СписокКатегорий);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеКомандыКодировки(Представление)
	
	Команды.ВыбратьКодировку.Заголовок = Представление;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКодировку(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТекущаяКодировка", КодировкаТекстаФайла);
	ОткрытьФорму("Справочник.Файлы.Форма.ВыборКодировки", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры
