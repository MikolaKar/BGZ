#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НумероватьАвтоматически = Перечисления.СпособыНумерации.Автоматически;
	НумероватьВручную = Перечисления.СпособыНумерации.Вручную;
	
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда //Копирование
		ТаблНастройкиНумерации = Нумерация.ПрочитатьНастройкиНумерацииВидаДокумента(Параметры.ЗначениеКопирования);
		ЗначениеВРеквизитФормы(ТаблНастройкиНумерации, "НастройкиНумерации");
	ИначеЕсли Объект.Ссылка.Пустая() Тогда 
		НоваяСтрока = НастройкиНумерации.Добавить();
		НоваяСтрока.СпособНумерации = Перечисления.СпособыНумерации.Автоматически;
		НоваяСтрока.Нумератор = Справочники.Нумераторы.ИсходящиеДокументы;
		НоваяСтрока.Нумеровать = Нумерация.СформироватьПолеНумеровать(НоваяСтрока.СпособНумерации, НоваяСтрока.Нумератор);
	Иначе	
		ТаблНастройкиНумерации = Нумерация.ПрочитатьНастройкиНумерацииВидаДокумента(Объект.Ссылка);
		ЗначениеВРеквизитФормы(ТаблНастройкиНумерации, "НастройкиНумерации");
	КонецЕсли;
	
	Элементы.ГруппаЭтапы.Видимость = Объект.ИспользоватьЭтапыОбработкиДокумента;
	Делопроизводство.ПрочитатьНастройкиЭтапов(ЭтаФорма);
	
	//МиСофт+
	ОбязательноеУказаниеОтветственногоНачальноеЗначение = Объект.ОбязательноеУказаниеОтветственного; 
	
	Элементы.ЯвляетсяОтветомНаОбращение.Видимость = Константы.ВестиУчетОбращенийГраждан.Получить();
	Если Не Константы.ВестиУчетОбращенийГраждан.Получить() Тогда
		Объект.ЯвляетсяОтветомНаОбращение = Ложь;
	КонецЕсли;
	//МиСофт-
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СформироватьЗаголовокЗакладкиНумерация();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ОчиститьСообщения();
	
	Если Не ОбязательноеУказаниеОтветственногоНачальноеЗначение 
		И Объект.ОбязательноеУказаниеОтветственного
		И ЗначениеЗаполнено(Объект.Ссылка)
		И Не ПоказанВопросПроОбязательноеУказаниеОтветственного Тогда 
		
		ЧислоДокументовБезОтветственного = ПолучитьЧислоДокументовБезОтветственного(Объект.Ссылка);
		Если ЧислоДокументовБезОтветственного <> 0 Тогда
			НужноПоказатьДиалогОбязательноеУказаниеОтветственного = Истина;
		КонецЕсли;	
		
	КонецЕсли;	
	
	Если НужноВключитьУчетПономенклатуреДел() И Не ПараметрыЗаписи.Свойство("ВключенУчетПоНоменклатуреДел") 
		И Не ПоказанВопросПроВключениеНоменклатуры Тогда 
		
		ПоказанВопросПроВключениеНоменклатуры = Истина;
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ПередЗаписьюПродолжениеПослеВопросаОВключенииУчетаПоНоменклатуреДел",
			ЭтотОбъект,
			ПараметрыЗаписи);
		ТекстВопроса = Нстр("ru = 'Указанный нумератор использует индекс номенклатуры дел.
							|Включить учет по номенклатуре дел?'");
			
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;	
	
	Если НужноПоказатьДиалогОбязательноеУказаниеОтветственного Тогда 
		ПоказатьДиалогОбязательноеУказаниеОтветственного(Отказ, ПараметрыЗаписи);		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДиалогОбязательноеУказаниеОтветственного(Отказ, ПараметрыЗаписи)
	
	НужноПоказатьДиалогОбязательноеУказаниеОтветственного = Ложь;
	ПоказанВопросПроОбязательноеУказаниеОтветственного = Истина;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПередЗаписьюПродолжениеПослеВопросаОбязательноеУказаниеОтветственного",
		ЭтотОбъект,
		ПараметрыЗаписи);
		
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Нстр("ru = 'Включено обязательное указание ответственного за документ. 
		|У некоторых документов вида ""%1"" ответственный не указан (%2 шт).
		|Заполнить ответственного из реквизита ""Подготовил""?'"),
		Строка(Объект.Ссылка), Строка(ЧислоДокументовБезОтветственного));
		
	Кнопки = Новый СписокЗначений;	
	Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Заполнить'"));
	Кнопки.Добавить(КодВозвратаДиалога.Нет, НСтр("ru = 'Не заполнять'"));
	Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru = 'Отмена'"));
	
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки,,КодВозвратаДиалога.Да);
	Отказ = Истина;
	
КонецПроцедуры	

&НаКлиенте
Процедура ПередЗаписьюПродолжениеПослеВопросаОбязательноеУказаниеОтветственного(Результат, ПараметрыЗаписи) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да И Результат <> КодВозвратаДиалога.Нет Тогда 
		ПоказанВопросПроОбязательноеУказаниеОтветственного = Ложь;
		Возврат;
	КонецЕсли;
	
	Если Результат = КодВозвратаДиалога.Да Тогда 
		ЗаполнитьОтветственногоАвтоматически = Истина;
	КонецЕсли;
	
	Если Записать(ПараметрыЗаписи) Тогда
		
		Если ПараметрыЗаписи.Свойство("Закрыть") Тогда
			ЗакрытьПослеЗаписи();
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюПродолжениеПослеВопросаОВключенииУчетаПоНоменклатуреДел(Результат, ПараметрыЗаписи) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда 
		Возврат;
	КонецЕсли;
	
	Объект.ВестиУчетПоНоменклатуреДел = Истина;
	ПараметрыЗаписи.Вставить("ВключенУчетПоНоменклатуреДел", Истина);
	Если Записать(ПараметрыЗаписи) Тогда
		ПослеЗаписиКлиент(ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаписатьИЗакрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Нумерация.ЗаписатьНастройкиНумерацииВидаДокумента(ТекущийОбъект.Ссылка, НастройкиНумерации);
	
	Делопроизводство.ЗаписатьНастройкиЭтапов(ЭтаФорма, ТекущийОбъект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("НетНастройкиНумерации", Нумерация.НетНастройкиНумерации(ТекущийОбъект.Ссылка));
	
	Если ЗаполнитьОтветственногоАвтоматически Тогда
		ЗаполнитьОтветственногоАвтоматически = Ложь;
		ВыполнитьЗаполнениеОтветственного(ТекущийОбъект.Ссылка);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Для Каждого Строка Из НастройкиНумерации Цикл
		Если Не ЗначениеЗаполнено(Строка.Нумеровать) Тогда 
			НомерСтроки = НастройкиНумерации.Индекс(Строка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Не заполнено поле ""Нумеровать""'"),,"НастройкиНумерации["+Формат(НомерСтроки, "ЧН=; ЧГ=")+"].Нумеровать",,Отказ);
		КонецЕсли;
	КонецЦикла;	
	
	//Проверка табличной части Настройки нумерации на задвоения
	КоличествоНастроек = НастройкиНумерации.Количество();	
	Если КоличествоНастроек > 1 Тогда	
		Для Инд1 = 0 По КоличествоНастроек - 2 Цикл 			
			Для Инд2 = Инд1 + 1 По КоличествоНастроек - 1 Цикл 			
				Если НастройкиНумерации[Инд1].Организация = НастройкиНумерации[Инд2].Организация 
					И НастройкиНумерации[Инд1].Корреспондент = НастройкиНумерации[Инд2].Корреспондент 
					И НастройкиНумерации[Инд1].Подразделение = НастройкиНумерации[Инд2].Подразделение
					И НастройкиНумерации[Инд1].Проект = НастройкиНумерации[Инд2].Проект
					И НастройкиНумерации[Инд1].ВопросДеятельности = НастройкиНумерации[Инд2].ВопросДеятельности Тогда 
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						НСтр("ru = 'Для указанных полей ""Действует для"" уже задана настройка нумерации'"),,
						"НастройкиНумерации["+ Формат(Инд2, "ЧН=0; ЧГ=0") +"].Нумеровать",, Отказ);
				КонецЕсли;				
	        КонецЦикла;			
		КонецЦикла;	
	КонецЕсли;

	Делопроизводство.ОбработкаПроверкиЗаполненияНастройкиЭтапов(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если Не ПараметрыЗаписи.Свойство("Закрыть") Тогда
		ПослеЗаписиКлиент(ПараметрыЗаписи);	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьЭтапыОбработкиДокументаПриИзменении(Элемент)
	
	Элементы.ГруппаЭтапы.Видимость = Объект.ИспользоватьЭтапыОбработкиДокумента;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиНумерацииПослеУдаления(Элемент)
	
	СформироватьЗаголовокЗакладкиНумерация();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиНумерацииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока Тогда 
		СформироватьЗаголовокЗакладкиНумерация();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиНумерацииНумероватьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.НастройкиНумерации.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Список = Новый СписокЗначений;
	Список.Добавить(НумероватьАвтоматически, НСтр("ru = 'Автоматически'"));
	Список.Добавить(НумероватьВручную, НСтр("ru = 'Вручную'"));
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"НастройкиНумерацииНумероватьНачалоВыбораПослеВыбораТипаНумерации",
		ЭтотОбъект);
	ПоказатьВыборИзСписка(ОписаниеОповещения, Список, Элемент);
		
КонецПроцедуры

&НаКлиенте
Процедура НастройкиНумерацииНумероватьНачалоВыбораПослеВыбораТипаНумерации(ВыбранныйЭлемент, Параметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.НастройкиНумерации.ТекущиеДанные;
	ТекущиеДанные.СпособНумерации = ВыбранныйЭлемент.Значение;
	
	Если ТекущиеДанные.СпособНумерации = НумероватьАвтоматически Тогда 
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"НастройкиНумерацииНумероватьНачалоВыбораПродолжение",
			ЭтотОбъект);
		ПараметрыФормы =  Новый Структура("ТекущаяСтрока", ТекущиеДанные.Нумератор);
		ОткрытьФорму(
			"Справочник.Нумераторы.ФормаВыбора", 
			ПараметрыФормы, 
			ЭтаФорма,,,,
			ОписаниеОповещения,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Возврат;
	Иначе	
		ТекущиеДанные.Нумератор = Неопределено;
	КонецЕсли;	
	
	ТекущиеДанные.Нумеровать = Нумерация.СформироватьПолеНумеровать(ТекущиеДанные.СпособНумерации, ТекущиеДанные.Нумератор);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиНумерацииНумероватьНачалоВыбораПродолжение(ВыбранноеЗначение, Параметры) Экспорт
	
	ТекущиеДанные = Элементы.НастройкиНумерации.ТекущиеДанные;
	Модифицированность = ТекущиеДанные.Нумератор <> ВыбранноеЗначение;
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда 
		ТекущиеДанные.Нумератор = ВыбранноеЗначение;
	Иначе	
		ТекущиеДанные.СпособНумерации = Неопределено;
	КонецЕсли;	
	ТекущиеДанные.Нумеровать = Нумерация.СформироватьПолеНумеровать(ТекущиеДанные.СпособНумерации, ТекущиеДанные.Нумератор);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиНумерацииНумероватьОткрытие(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.НастройкиНумерации.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Нумератор) Тогда 
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(,ТекущиеДанные.Нумератор);
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыЭтапыОбработкиДокументов

&НаКлиенте
Процедура ЭтапыОбработкиДокументовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда 
		ТекущиеДанные = Элементы.ЭтапыОбработкиДокументов.ТекущиеДанные;
		ТекущиеДанные.Порядок = КоличествоЭтапов + 1;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОбработкиДокументовПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока Тогда 
		Если Не ОтменаРедактирования Тогда 
			КоличествоЭтапов = КоличествоЭтапов + 1;
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОбработкиДокументовПослеУдаления(Элемент)
	
	Порядок = 1;
	Для Каждого Строка Из ЭтапыОбработкиДокументов Цикл 
		Строка.Порядок = Порядок;
		Порядок = Порядок + 1;
	КонецЦикла;
	
	КоличествоЭтапов = ЭтапыОбработкиДокументов.Количество();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьНаборСвойств(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОткрытьНаборСвойствПродолжение",
		ЭтотОбъект);

	Если Объект.Ссылка.Пустая() Тогда
		
		ТекстВопроса = НСтр("ru = 'Для перехода к набору свойств элемент необходимо записать.'") + Символы.ПС + НСтр("ru = 'Записать?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе 
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.ОК);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНаборСвойствПродолжение(Результат, Параметры) Экспорт 

	Если Результат = КодВозвратаДиалога.Нет Тогда 
		Возврат;	
	ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда 
					
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлючНазначенияИспользования", "НаборыДополнительныхРеквизитов");
	
	ОткрытьФорму("Справочник.НаборыДополнительныхРеквизитовИСведений.ФормаСписка", ПараметрыФормы);
	
	ПараметрыПерехода = Новый Структура;
	ПараметрыПерехода.Вставить("Набор", Объект.НаборСвойств);
	ПараметрыПерехода.Вставить("Свойство", Неопределено);
	ПараметрыПерехода.Вставить("ЭтоДополнительноеСведение", Ложь);
	
	Оповестить("Переход_НаборыДополнительныхРеквизитовИСведений", ПараметрыПерехода);

КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Команда)
	
	ЗаписатьИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапВверх(Команда)
	
	ТекущиеДанные = Элементы.ЭтапыОбработкиДокументов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Если ТекущиеДанные.Порядок = 1 Тогда 
		Возврат;
	КонецЕсли;	
	
	ПредыдущаяСтрока = Неопределено;
	Для Каждого Строка Из ЭтапыОбработкиДокументов Цикл
		Если Строка.Порядок = ТекущиеДанные.Порядок - 1 Тогда 
			ПредыдущаяСтрока = Строка;
			Прервать;
		КонецЕсли;	
	КонецЦикла;	
	ИндексПредыдущаяСтрока = ПредыдущаяСтрока.ПолучитьИдентификатор();
	
	ИменаКолонок = "Наименование, Этап, Срок";
	ДанныеСтроки = Новый Структура(ИменаКолонок);
	
	ЗаполнитьЗначенияСвойств(ДанныеСтроки, ПредыдущаяСтрока, ИменаКолонок);
	ЗаполнитьЗначенияСвойств(ПредыдущаяСтрока, ТекущиеДанные, ИменаКолонок);
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтроки, ИменаКолонок);
	
	Элементы.ЭтапыОбработкиДокументов.ТекущаяСтрока = ИндексПредыдущаяСтрока;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапВниз(Команда)
	
	ТекущиеДанные = Элементы.ЭтапыОбработкиДокументов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Если ТекущиеДанные.Порядок = КоличествоЭтапов Тогда 
		Возврат;
	КонецЕсли;	
	
	СледующаяСтрока = Неопределено;
	Для Каждого Строка Из ЭтапыОбработкиДокументов Цикл
		Если Строка.Порядок = ТекущиеДанные.Порядок + 1 Тогда 
			СледующаяСтрока = Строка;
			Прервать;
		КонецЕсли;	
	КонецЦикла;	
	ИндексСледующаяСтрока = СледующаяСтрока.ПолучитьИдентификатор();
	
	ИменаКолонок = "Наименование, Этап, Срок";
	ДанныеСтроки = Новый Структура(ИменаКолонок);
	
	ЗаполнитьЗначенияСвойств(ДанныеСтроки, СледующаяСтрока, ИменаКолонок);
	ЗаполнитьЗначенияСвойств(СледующаяСтрока, ТекущиеДанные, ИменаКолонок);
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеСтроки, ИменаКолонок);
	
	Элементы.ЭтапыОбработкиДокументов.ТекущаяСтрока = ИндексСледующаяСтрока;
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция НужноВключитьУчетПоНоменклатуреДел()
	
	ЕстьИндексНомДел = Ложь;
	Для Каждого Строка Из НастройкиНумерации Цикл
		Если ЗначениеЗаполнено(Строка.Нумератор) И Найти(Строка.Нумератор.ФорматНомера, "ИндексНомДел") > 0 Тогда 
			ЕстьИндексНомДел = Истина;
			Прервать;
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат ЕстьИндексНомДел
		И Не Объект.ВестиУчетПоНоменклатуреДел;
		
КонецФункции

&НаКлиенте
Процедура ЗаписатьИЗакрыть()

	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("Закрыть", Истина);
	Если Записать(ПараметрыЗаписи) Тогда
		ПослеЗаписиКлиент(ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьЗаголовокЗакладкиНумерация()
	
	КоличествоНастроекНумерации = НастройкиНумерации.Количество();
	
КонецПроцедуры		

&НаКлиенте
Процедура ПослеЗаписиКлиент(ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.Свойство("НетНастройкиНумерации") И ПараметрыЗаписи.НетНастройкиНумерации = Истина Тогда 
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ПослеЗаписиКлиентПродолжение",
			ЭтотОбъект,
			ПараметрыЗаписи);
		
		ПоказатьПредупреждение(
			ОписаниеОповещения,
			НСтр("ru = 'Документы с данным видом нельзя будет зарегистрировать, так как отсутствует подходящая настройка нумерации.'"));
		Возврат;
	КонецЕсли;	
	
	Если ПараметрыЗаписи.Свойство("Закрыть") Тогда
		ЗакрытьПослеЗаписи();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписиКлиентПродолжение(ПараметрыЗаписи) Экспорт
	
	ПараметрыЗаписи.Вставить("ПоказаноПредупреждениеПослеЗаписи", Истина);
	ПослеЗаписиКлиент(ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЧислоДокументовБезОтветственного(ВидДокумента)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(КОЛИЧЕСТВО(ИсходящиеДокументы.Ссылка), 0) КАК ЧислоДокументов
		|ИЗ
		|	Справочник.ИсходящиеДокументы КАК ИсходящиеДокументы
		|ГДЕ
		|	ИсходящиеДокументы.ВидДокумента = &ВидДокумента
		|	И ИсходящиеДокументы.Ответственный = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)";
		
	Запрос.УстановитьПараметр("ВидДокумента", ВидДокумента);	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.ЧислоДокументов;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ВыполнитьЗаполнениеОтветственного(ВидДокумента)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсходящиеДокументы.Ссылка,
		|	ИсходящиеДокументы.Подготовил
		|ИЗ
		|	Справочник.ИсходящиеДокументы КАК ИсходящиеДокументы
		|ГДЕ
		|	ИсходящиеДокументы.ВидДокумента = &ВидДокумента
		|	И ИсходящиеДокументы.Ответственный = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|	И ИсходящиеДокументы.Подготовил <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)";
		
	Запрос.УстановитьПараметр("ВидДокумента", ВидДокумента);	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокументОбъект.Ответственный = Выборка.Подготовил;
			
			ДокументОбъект.Записать();
			РазблокироватьДанныеДляРедактирования(Выборка.Ссылка);
		Исключение
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение Ответственного в документах.Ошибка'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗакрытьПослеЗаписи()

	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Изменение:'"),
		ПолучитьНавигационнуюСсылку(Объект.Ссылка),
		Строка(Объект.Ссылка),
		БиблиотекаКартинок.Информация32);
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

