// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
  // Смета
  КомандаПечати = КомандыПечати.Добавить();
  КомандаПечати.МенеджерПечати = "Справочник.мСметы";
  КомандаПечати.Идентификатор = "ПФ_MXL_Смета";
  КомандаПечати.Представление = НСтр("ru = 'Печать сметы'");
  //КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
     
    // Устанавливаем признак доступности печати покомплектно.
    ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
    // Проверяем, нужно ли для макета СчетЗаказ формировать табличный документ.
    Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_Смета") Тогда
        // Формируем табличный документ и добавляем его в коллекцию печатных форм.
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
        "ПФ_MXL_Смета", "Смета", ПечатьСметы(МассивОбъектов, ОбъектыПечати));
    КонецЕсли;
КонецПроцедуры

// Объединяет ЕИ и значения параметорв объекта в строке для условия и для количества
Функция ПодготовитьПраметрыДляЗаписиВСтроку(ОбъемРабот)
    СтруктураПараметров = Новый Структура("ЕдИзм1, Количество1, ЕдИзм2, Количество2", "", "", "", "");
	
	// по колонке
    СтруктураПараметров.Вставить("ЕдИзм1", ОбъемРабот.ЕдИзм1); 
    СтруктураПараметров.Вставить("Количество1", ОбъемРабот.Количество1);
	
	// по строке может быть 2 значения: по условию и по количеству
    Если ЗначениеЗаполнено(ОбъемРабот.КоличествоСтрУсл) Тогда
        // есть первая половина (по условию) 
        ЕдИзм2 = ОбъемРабот.ЕдИзмСтрУсл; 
        Количество2 = "" + ОбъемРабот.КоличествоСтрУсл;
    
        Если ЗначениеЗаполнено(ОбъемРабот.КоличествоСтрКол) Тогда
            // есть и вторая половина
            ЕдИзм2 = ЕдИзм2 + "; " + ОбъемРабот.ЕдИзмСтрКол; 
            Количество2 = Количество2 + "; " + ОбъемРабот.КоличествоСтрКол;
        КонецЕсли; 
	Иначе
		// есть только количество
        Если ЗначениеЗаполнено(ОбъемРабот.КоличествоСтрКол) Тогда
            // есть только вторая половина
            ЕдИзм2 = ОбъемРабот.ЕдИзмСтрКол; 
            Количество2 = "" + ОбъемРабот.КоличествоСтрКол;
        КонецЕсли; 
    КонецЕсли; 
    
    СтруктураПараметров.Вставить("ЕдИзм2", ЕдИзм2);
    СтруктураПараметров.Вставить("Количество2", Количество2);
    
    Возврат СтруктураПараметров;
    
КонецФункции // ПодготовитьПраметрыДляЗаписиВСтроку(Выборка)

// определяет необходимость вывода в документ обычной строки 
Функция НужнаОбычнаяСтрока(СтруктураПараметров)
    Нужна = Ложь;
    
    ЕстьКолонка = ?(ЗначениеЗаполнено(СтруктураПараметров.Количество1), 1, 0);
    ЕстьСтрока = ?(ЗначениеЗаполнено(СтруктураПараметров.Количество2), 1, 0);
    
    Если ЕстьКолонка+ЕстьСтрока < 2 Тогда
        Нужна = Истина;    
    КонецЕсли; 
    
    Возврат Нужна;
КонецФункции // НужнаОбычнаяСтрока(Выборка)   
 
Функция ПечатьСметы(МассивОбъектов, ОбъектыПечати) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Город = мРазное.ПолучитьГородБазы();
	
	// Создаем табличный документ и устанавливаем имя параметров печати
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_Смета";
	// Запомним номер строки с которой начали выводить текущий документ
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
	Макет = ПолучитьМакет("ПФ_MXL_Смета");

    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |	мСметы.НомерСметы КАК НомерДок,
    |	мСметы.Корреспондент.ПолноеНаименование КАК Заказчик,
    |	мСметы.ОбъектРабот.ПолноеНаименование КАК НаименованиеОбъекта,
    |	мСметы.Наименование КАК ЗаголовокСметы,
    |	мСметы.ОбъектРабот.ВидОбъекта КАК ВидОбъекта,
    |	мСметы.ЭтапДоговора.Владелец КАК ДокументОснование,
    |	мСметы.ЭтапДоговора.Договор.РегистрационныйНомер КАК НомерДоговора,
    |	мСметы.ЭтапДоговора.Договор.ДатаРегистрации КАК ДатаДоговора,
    |	мСметы.ДатаРасчетаСметы КАК ДатаРасчетаСметы,
    |	мСметы.ОбъемРабот.(
    |		СтадияРабот.ПолноеНаименование КАК СтадияРабот,
    |		СсылкаНаСборник КАК СборникЦен,
    |		ЕдиницаИзмеренияКолонки КАК ЕдИзм1,
    |		ЕдиницаИзмеренияСтрокиДляУсловия КАК ЕдИзмСтрУсл,
    |		ЕдиницаИзмеренияСтрокиДляКоличества КАК ЕдИзмСтрКол,
    |		ЗначениеКолонки КАК Количество1,
    |		ЗначениеСтрокиДляУсловия КАК КоличествоСтрУсл,
    |		ЗначениеСтрокиДляКоличества КАК КоличествоСтрКол,
    |		ПараметрКолонки КАК ПараметрКолонки,
    |		ПараметрСтрокиДляУсловия КАК ПараметрСтрокиДляУсловия,
    |		ПараметрСтрокиДляКоличества КАК ПараметрСтрокиДляКоличества,
    |		РасчетСтоимости КАК РасчетСтоимости,
    |		Стоимость КАК Стоимость
    |	),
    |	мСметы.Корреспонденты.(
    |		Корреспондент КАК Заказчик
    |	) КАК Заказчики,
    |	мСметы.ОсвобождениеОтНДС КАК ОсвобождениеОтНДС,
    |	ЕСТЬNULL(мСметы.СтавкаНДС.Ставка, 0) КАК Ставка,
    |	мСметы.ЭтапДоговора.ВидРабот.ПолноеНаименование КАК ВидРабот,
    |	мСметы.ОснованиеСметы КАК ОснованиеСметы,
    |	мСметы.Итого,
    |	мСметы.НДС,
    |	мСметы.КОплате,
    |	мСметы.Подписал КАК Подписал,
    |	мСметы.Проверил КАК Проверил,
    |	мСметы.Составил КАК Составил,
    |	мСметы.ДоляОбъекта,
    |	мСметы.ИндексЦен,
    |	мСметы.ТекстИндексЦен,
    |	мСметы.КарточкаОбъектаРабот.ПараметрыОбъекта.(
    |		ПараметрОбъекта КАК ПараметрОбъекта,
    |		Значение КАК Значение
    |	) КАК ПараметрыОбъекта,
    |	мСметы.КарточкаОбъектаРабот.ВидКарточки КАК ВидКарточки,
    |	ЕстьNULL(Штрихкоды.Код, 0) КАК Штрихкод
    |ИЗ
    |	Справочник.мСметы КАК мСметы
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
    |		ПО мСметы.ЭтапДоговора = Штрихкоды.Владелец
    |ГДЕ
    |	мСметы.Ссылка В(&МассивОбъектов)";
    
    Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
    РезультатЗапроса = Запрос.Выполнить();
    
    ТаблицаСтадий = РезультатЗапроса.Выгрузить()[0].ОбъемРабот.Скопировать(, "СтадияРабот");
    ТаблицаСтадий.Колонки.Добавить("КолвоСтадий", Новый ОписаниеТипов("Число"));
    ТаблицаСтадий.ЗаполнитьЗначения(1, "КолвоСтадий");
    ТаблицаСтадий.Свернуть("СтадияРабот", "КолвоСтадий");
	
	ПараметрыОбъекта = РезультатЗапроса.Выгрузить()[0].ПараметрыОбъекта;
    Заказчики = РезультатЗапроса.Выгрузить()[0].Заказчики.Скопировать(, "Заказчик");
    
    Выборка = РезультатЗапроса.Выбрать();
	
    ВыводитьИндексЦен = Ложь;
    ДоляОбъекта = 1;
    
    Пока Выборка.Следующий() Цикл
		
		ВидНеСтандартнойКарточки = "";
		Если Выборка.ВидКарточки = Перечисления.мВариантыКарточекИсходныхДанных.КарточкаСоставленияОстаточногоКаталога Тогда
			ВидНеСтандартнойКарточки = "СоставлениеОстаточногоКаталога";
		ИначеЕсли Выборка.ВидКарточки = Перечисления.мВариантыКарточекИсходныхДанных.КарточкаУстановленияГраниц Тогда
			ВидНеСтандартнойКарточки = "УстановлениеГраниц";
		ИначеЕсли Выборка.ВидКарточки = Перечисления.мВариантыКарточекИсходныхДанных.КарточкаФормированияУчастков Тогда
			ВидНеСтандартнойКарточки = "ФормированиеУчастков";
		ИначеЕсли Выборка.ВидКарточки = Перечисления.мВариантыКарточекИсходныхДанных.КарточкаУниверсальная Тогда
			ВидНеСтандартнойКарточки = "Универсальная";
		КонецЕсли; 
		
		ПараметрыОбъекта = Выборка.ПараметрыОбъекта.Выгрузить();
		
        // Шапка сметы
        ОбластьШапка1 = Макет.ПолучитьОбласть("Шапка1");
        ЗаполнитьЗначенияСвойств(ОбластьШапка1.Параметры, Выборка);
		// вставка перевода строки после даты сметы
        ДатаРасчетаСметы = Формат(Выборка.ДатаРасчетаСметы, "ДФ=dd.MM.yyyy");
		Если Город = "Брест" Тогда
			// убираем дату из заголовка
	        ЗаголовокСметы = СтрЗаменить(Выборка.ЗаголовокСметы, " от "+ДатаРасчетаСметы, Символы.ПС); 
		Иначе
	        ЗаголовокСметы = СтрЗаменить(Выборка.ЗаголовокСметы, ДатаРасчетаСметы, ДатаРасчетаСметы + Символы.ПС); 
		КонецЕсли; 
        ОбластьШапка1.Параметры.ЗаголовокСметы = ЗаголовокСметы;
        // Приложение
        Если мРаботаСДоговорами.ЭтоДопСоглашение(Выборка.ДокументОснование) Тогда
            Приложение = "Приложение к дополнительному соглашению" + Символы.ПС + "№ " + СокрЛП(Выборка.ДокументОснование.РегистрационныйНомер) 
                + " от " + Формат(Выборка.ДокументОснование.ДатаРегистрации, "ДЛФ=D") + Символы.ПС
                + "к договору № "+СокрЛП(Выборка.НомерДоговора) + " от " + Формат(Выборка.ДатаДоговора, "ДЛФ=D");
        Иначе
            Приложение = "Приложение к договору" + Символы.ПС + "№ "+СокрЛП(Выборка.НомерДоговора) + " от " + Формат(Выборка.ДатаДоговора, "ДЛФ=D");
        КонецЕсли; 
        ОбластьШапка1.Параметры.Приложение = Приложение;
		
		//Штрихкод
		Если Выборка.ШтрихКод <> 0 Тогда
			КартинкаШтрихкода = ШтрихкодированиеСервер.ПолучитьКартинкуШтрихкода(Выборка.ШтрихКод, 1, , Истина);
			Если КартинкаШтрихкода <> Неопределено Тогда
				Рисунок = ОбластьШапка1.Область("ШтрихКод");
				Рисунок.Картинка = КартинкаШтрихкода;
			КонецЕсли;
		КонецЕсли; 
        
        ОбластьШапка1.Параметры.Исполнитель = Константы.НашаОрганизация.Получить().ПолноеНаименование;
        ТабличныйДокумент.Вывести(ОбластьШапка1);
		
		ОбластьЗаказчик = Макет.ПолучитьОбласть("Заказчик");
        ОдинЗаказчик = Заказчики.Количество()=1;
		Для й=0 По Заказчики.Количество()-1 Цикл
			НомерЗаказчика = ?(ОдинЗаказчик, "", " " + Число(й+1));
	        ОбластьЗаказчик.Параметры.ЗаказчикПП = "Заказчик"+НомерЗаказчика+":";
	        ОбластьЗаказчик.Параметры.Заказчик = ПолучитьНаименованиеЗаказчика(Заказчики[й].Заказчик);
        	ТабличныйДокумент.Вывести(ОбластьЗаказчик);
		КонецЦикла; 
		
        ОбластьШапка2 = Макет.ПолучитьОбласть("Шапка2");
        ЗаполнитьЗначенияСвойств(ОбластьШапка2.Параметры, Выборка);
        ТабличныйДокумент.Вывести(ОбластьШапка2);
        
        СтавкаНДСЧисло = Выборка.Ставка;
        ОсвобождениеОтНДС = Выборка.ОсвобождениеОтНДС;
        ОснованиеСметы = Выборка.ОснованиеСметы;
        Подписал = Выборка.Подписал;
        Проверил = Выборка.Проверил;
        Составил = Выборка.Составил;
        
        // Индекс цен
        Если Выборка.ИндексЦен <> 1 Тогда
            ОбластьИндексЦен = Макет.ПолучитьОбласть("ИндексЦен");
            СтрокаИндексаЦен = " "+ Выборка.ИндексЦен + " - коэффициент отпускных цен, " + Выборка.ТекстИндексЦен;
            ОбластьИндексЦен.Параметры.СтрокаИндексаЦен = СтрокаИндексаЦен;
            ВыводитьИндексЦен = Истина;
        КонецЕсли; 
        
        // Доля объекта
        Если Выборка.ДоляОбъекта <> 1 Тогда
            СтоимостьБезУчетаДолиОбъекта = Выборка.ОбъемРабот.Выгрузить().Итог("Стоимость");
            ДоляОбъекта = Выборка.ДоляОбъекта;
        КонецЕсли; 
    
        НомерПП = 0;
        Итого = Выборка.Итого;
        НДС = Выборка.НДС;
        СуммаКОплате = Выборка.КОплате;
 		ОбработаноСтрок = 0;
		ОбластьСтрока = "";
       
        Для каждого СтрТаб Из ТаблицаСтадий Цикл
            НомерПП = НомерПП + 1;
            
            // для управления выводом дублей стадий
            ЭтоПерваяСтрокаДубля = Истина;
            ПарСтрокиХ2 = Новый Структура("НомерПП, СтадияРабот, ЕдИзм1, ЕдИзм2, ЕдИзм3, ЕдИзм4, Количество1, Количество2, Количество3, Количество4, СборникЦен, РасчетСтоимости, Стоимость", ); 
            
            // для накопления ЕИ и кол-ва в строках
            ЕИ1 = "";
            ЕИ2 = "";
            Кол1 = "";
            Кол2 = "";
            
            ОбъемРабот = Выборка.ОбъемРабот.Выбрать();
            Пока ОбъемРабот.Следующий() Цикл
                Если СтрТаб.СтадияРабот <> ОбъемРабот.СтадияРабот Тогда
                    Продолжить;
                КонецЕсли; 
                Если ОбъемРабот.Стоимость = 0 Тогда
                    Продолжить;
                КонецЕсли; 
                
                Если СтрТаб.КолвоСтадий = 1 Тогда
                    СтруктураПараметров = ПодготовитьПраметрыДляЗаписиВСтроку(ОбъемРабот);
					ПараметрыСтрокиУстановлены = Ложь;
					
 					Если ЗначениеЗаполнено(ВидНеСтандартнойКарточки) Тогда
						ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаОбычная");
						// Запоминаем и больше не изменяем 
						ОбластьСтрока.Параметры.Заполнить(ОбъемРабот);
						
						Если Лев(ОбъемРабот.ПараметрСтрокиДляКоличества.ИмяПредопределенныхДанных, 32)  = "КоличествоДелОстаточногоКаталога" ИЛИ 
							Лев(ОбъемРабот.ПараметрСтрокиДляУсловия.ИмяПредопределенныхДанных, 34)  = "КоличествоТочекОстаточногоКаталога" Тогда
							ОбластьСтрока.Параметры.ЕдИзм = "дело; точка";
							РеквКолво = ПолучитьКоличествоДелТочек(ОбъемРабот, ПараметрыОбъекта);
							ОбластьСтрока.Параметры.Количество = ""+РеквКолво.Кол1+"; "+Формат(РеквКолво.Кол2, "ЧГ=0");
							ПараметрыСтрокиУстановлены = Истина;
						КонецЕсли; 	
						
						Если Лев(ОбъемРабот.ПараметрСтрокиДляКоличества.ИмяПредопределенныхДанных, 30)  = "КоличествоУчастковПлановГраниц" ИЛИ 
							Лев(ОбъемРабот.ПараметрСтрокиДляУсловия.ИмяПредопределенныхДанных, 27)  = "КоличествоТочекПлановГраниц" Тогда
							ОбластьСтрока.Параметры.ЕдИзм = "участок; точка";
							РеквКолво = ПолучитьКоличествоУчастковТочек(ОбъемРабот, ПараметрыОбъекта);
							ОбластьСтрока.Параметры.Количество = ""+РеквКолво.Кол1+"; "+Формат(РеквКолво.Кол2, "ЧГ=0");
							ПараметрыСтрокиУстановлены = Истина;
						КонецЕсли; 	
					КонецЕсли;
                        
                    Если Не ПараметрыСтрокиУстановлены Тогда
                        Если НужнаОбычнаяСтрока(СтруктураПараметров) Тогда
                            // есть только один параметр
                            ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаОбычная");
                            ОбластьСтрока.Параметры.Заполнить(ОбъемРабот);
                            Если ЗначениеЗаполнено(СтруктураПараметров.Количество1) Тогда
                                ОбластьСтрока.Параметры.ЕдИзм = СтруктураПараметров.ЕдИзм1;
                                ОбластьСтрока.Параметры.Количество = СтруктураПараметров.Количество1;
                            Иначе
                                ОбластьСтрока.Параметры.ЕдИзм = СтруктураПараметров.ЕдИзм2;
                                ОбластьСтрока.Параметры.Количество = СтруктураПараметров.Количество2;
                            КонецЕсли; 
                        Иначе 
                            // есть 2 параметра в строке
                            ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
                            ОбластьСтрока.Параметры.Заполнить(ОбъемРабот);
                            ОбластьСтрока.Параметры.Заполнить(СтруктураПараметров);
                        КонецЕсли; 
                    КонецЕсли; 
                    
                    ОбластьСтрока.Параметры.НомерПП = НомерПП;
                    ТабличныйДокумент.Вывести(ОбластьСтрока);
                    Прервать;
                    
                Иначе
                    // Количество стадий >1
					Если ЗначениеЗаполнено(ВидНеСтандартнойКарточки) Тогда
						ОбработатьНеСтандартнуюКарточку(ЭтоПерваяСтрокаДубля, Макет, ОбъемРабот, НомерПП, СтрТаб, ПарСтрокиХ2, ТабличныйДокумент, ОбработаноСтрок, ОбластьСтрока, ПараметрыОбъекта, ВидНеСтандартнойКарточки);
					Иначе
					    ОбработатьСтандартнуюКарточку(ЭтоПерваяСтрокаДубля, Макет, ОбъемРабот, НомерПП, СтрТаб, ПарСтрокиХ2, ТабличныйДокумент, ОбработаноСтрок, ОбластьСтрока);
					КонецЕсли;
                  КонецЕсли; 
            КонецЦикла;
        КонецЦикла; 
    КонецЦикла;
    
    ОбластьИтогСметы = Макет.ПолучитьОбласть("ИтогСметы");
    
    ЗначениеСноски = "(";
    
    ОбластьИтогСметы.Параметры.РасчетСтоимостьИтого = "";
    СтоимостьИтого = Итого;
    
    Если ДоляОбъекта <> 1 Тогда
        ЗначениеСноски = ЗначениеСноски + "*";
        ОбластьИтогСметы.Параметры.РасчетСтоимостьИтого = ""+СтоимостьБезУчетаДолиОбъекта+" * "+ДоляОбъекта+" "+ЗначениеСноски+")";
        //СтоимостьИтого = Окр(Итого*ДоляОбъекта, 0);
        
        ОбластьДоляОбъекта = Макет.ПолучитьОбласть("ДоляОбъекта");
        СтрокаДоляОбъекта = Сред(ЗначениеСноски, 2) +" "+ Выборка.ДоляОбъекта + " - доля объекта, " + ?(СтавкаНДСЧисло = 0, "не ", "") + "облагаемая НДС.";
        ОбластьДоляОбъекта.Параметры.СтрокаДоляОбъекта = СтрокаДоляОбъекта;
    КонецЕсли; 
    
    ОбластьИтогСметы.Параметры.СтоимостьИтого = СтоимостьИтого;
    
    ОбластьИтогСметы.Параметры.Ставка = СтавкаНДСЧисло;
    ОбластьИтогСметы.Параметры.РасчетНДС = ""+СтоимостьИтого+" * "+СтавкаНДСЧисло+"%";
    
    Если СтавкаНДСЧисло=0 Тогда
        ЗначениеСноски = ЗначениеСноски + "*";
        ОбластьИтогСметы.Параметры.РасчетНДС = ""+СтоимостьИтого+" * "+СтавкаНДСЧисло+"%"+" " + ЗначениеСноски+")";
    
        ОбластьБезНДС = Макет.ПолучитьОбласть("БезНДС");
        ОбластьБезНДС.Параметры.БезНДС = Сред(ЗначениеСноски, 2) + " Основание освобождения от НДС: " + ОсвобождениеОтНДС.ДляПечати;
    	
    КонецЕсли; 
    
    ОбластьИтогСметы.Параметры.НДС = НДС;
    ОбластьИтогСметы.Параметры.СуммаКОплате = СуммаКОплате;
    
    ТабличныйДокумент.Вывести(ОбластьИтогСметы);
    
    // Индекс цен
    Если ВыводитьИндексЦен Тогда
        ТабличныйДокумент.Вывести(ОбластьИндексЦен);
    КонецЕсли; 
    
    // Доля объекта
    Если ДоляОбъекта <> 1 Тогда
        ТабличныйДокумент.Вывести(ОбластьДоляОбъекта);
    КонецЕсли; 
    
    // НДС
    Если НДС = 0 Тогда
        ТабличныйДокумент.Вывести(ОбластьБезНДС);
    КонецЕсли; 
	
	Если Константы.М_Гродно.Получить() Тогда
	    ОбластьПодвал = Макет.ПолучитьОбласть("Подвал_Гродно");
	Иначе	
	    ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	КонецЕсли; 
	//ФормСтрока = "Л = ru_RU; НД = Ложь";
	//ПарПредмета="рубль, рубля, рублей,м,,,,,0";

	//СуммаПрописью = ЧислоПрописью(СуммаКОплате, ФормСтрока, ПарПредмета);
	//Если НДС > 0 Тогда
	//    СуммаПрописью = СуммаПрописью + ", в том числе НДС по ставке "+СтавкаНДСЧисло+"% "+ЧислоПрописью(НДС, ФормСтрока, ПарПредмета);
	//КонецЕсли; 
	
	ОсновнаяВалюта = Константы.ОсновнаяВалюта.Получить();
	СуммаПрописью = мРаботаСДоговорами.СуммаЧисломИПрописью(СуммаКОплате, ОсновнаяВалюта); 
	Если НДС > 0 Тогда
	    СуммаПрописью = СуммаПрописью + ", в том числе НДС по ставке "+СтавкаНДСЧисло+"% "+мРаботаСДоговорами.СуммаЧисломИПрописью(НДС, ОсновнаяВалюта);
	КонецЕсли; 
    
    ОбластьПодвал.Параметры.Сумма = СуммаПрописью;
    ОбластьПодвал.Параметры.ОснованиеСметы = ОснованиеСметы;
    ОбластьПодвал.Параметры.ДолжностьПодписал = РаботаСПользователями.ПолучитьДолжность(Подписал);
    ОбластьПодвал.Параметры.Подписал = Подписал.ПредставлениеВДокументах;
    
    ТабличныйДокумент.Вывести(ОбластьПодвал);
    
    Если ЗначениеЗаполнено(Проверил) И Проверил <> Подписал Тогда
        ОбластьПроверил = Макет.ПолучитьОбласть("Проверил");
        ОбластьПроверил.Параметры.ДолжностьПроверил = РаботаСПользователями.ПолучитьДолжность(Проверил);
        ОбластьПроверил.Параметры.Проверил = Проверил.ПредставлениеВДокументах;
        
        ТабличныйДокумент.Вывести(ОбластьПроверил);
    КонецЕсли; 
	
	Если ЗначениеЗаполнено(Составил) И Проверил <> Составил И Подписал <> Составил Тогда
		ОбластьСоставил = Макет.ПолучитьОбласть("Составил");
		ОбластьСоставил.Параметры.ДолжностьСоставил = РаботаСПользователями.ПолучитьДолжность(Составил);
		ОбластьСоставил.Параметры.Составил = Составил.ПредставлениеВДокументах;
		
		ТабличныйДокумент.Вывести(ОбластьСоставил);
	КонецЕсли; 
    
	//ТабличныйДокумент.Показать();
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, МассивОбъектов);
	
	УстановитьПривилегированныйРежим(Ложь);
	Возврат ТабличныйДокумент;

КонецФункции // ПечатьИнформацииДляОплатыДоговора()

Процедура ОбработатьСтандартнуюКарточку(ЭтоПерваяСтрокаДубля, Макет, ОбъемРабот, НомерПП, СтрТаб, ПарСтрокиХ2, ТабличныйДокумент, ОбработаноСтрок, ОбластьСтрока)
	Если ЭтоПерваяСтрокаДубля Тогда
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		// Запоминаем 
		ОбластьСтрока.Параметры.Заполнить(ОбъемРабот);
		
		СтруктураПараметров = ПодготовитьПраметрыДляЗаписиВСтроку(ОбъемРабот);
		ОбластьСтрока.Параметры.Заполнить(СтруктураПараметров);
		
		ОбластьСтрока.Параметры.НомерПП = НомерПП;                       
		ЭтоПерваяСтрокаДубля = Ложь;
		ОбработаноСтрок = 1;
	Иначе
		ОбработаноСтрок = ОбработаноСтрок + 1;
		СтруктураПараметров = ПодготовитьПраметрыДляЗаписиВСтроку(ОбъемРабот);
		
		Если ЗначениеЗаполнено(ОбластьСтрока.Параметры.ЕдИзм1) Тогда
			Если ЗначениеЗаполнено(ОбъемРабот.ЕдИзм1) Тогда
				ОбластьСтрока.Параметры.ЕдИзм1 = ""+ОбластьСтрока.Параметры.ЕдИзм1+"; "+ОбъемРабот.ЕдИзм1;
			КонецЕсли; 
		КонецЕсли; 
		Если ЗначениеЗаполнено(ОбластьСтрока.Параметры.Количество1) Тогда
			Если ЗначениеЗаполнено(ОбъемРабот.Количество1) Тогда
				ОбластьСтрока.Параметры.Количество1 = ""+ОбластьСтрока.Параметры.Количество1+"; "+ОбъемРабот.Количество1;
			КонецЕсли; 
		КонецЕсли; 
		Если ЗначениеЗаполнено(ОбластьСтрока.Параметры.ЕдИзм2) Тогда
			Если ЗначениеЗаполнено(СтруктураПараметров.ЕдИзм2) Тогда
				//Если ОбластьСтрока.Параметры.ЕдИзм2 <> СтруктураПараметров.ЕдИзм2 Тогда
				ОбластьСтрока.Параметры.ЕдИзм2 = ""+ОбластьСтрока.Параметры.ЕдИзм2+"; "+СтруктураПараметров.ЕдИзм2;
				//КонецЕсли; 
			КонецЕсли; 
		КонецЕсли; 
		Если ЗначениеЗаполнено(ОбластьСтрока.Параметры.Количество2) Тогда
			Если ЗначениеЗаполнено(СтруктураПараметров.Количество2) Тогда
				//Если ОбластьСтрока.Параметры.ЕдИзм2 <> СтруктураПараметров.ЕдИзм2 Тогда
				ОбластьСтрока.Параметры.Количество2 = ""+ОбластьСтрока.Параметры.Количество2+"; "+СтруктураПараметров.Количество2;
				//Иначе    
				//    ОбластьСтрока.Параметры.Количество2 = СуммироватьТекстовыеСтроки(ОбластьСтрока.Параметры.Количество2, СтруктураПараметров.Количество2) ;
				//КонецЕсли; 
			КонецЕсли; 
		КонецЕсли; 
		
		ОбластьСтрока.Параметры.РасчетСтоимости = ""+ОбластьСтрока.Параметры.РасчетСтоимости + "+" + СокрЛП(ОбъемРабот.РасчетСтоимости);
		ОбластьСтрока.Параметры.Стоимость = ОбластьСтрока.Параметры.Стоимость + ОбъемРабот.Стоимость;
		
		Если СтрТаб.КолвоСтадий = ОбработаноСтрок  Тогда
			// в какую строку выводить?
			Если НужнаОбычнаяСтрока(ОбластьСтрока.Параметры) Тогда
				
				// сохранить в промежуточной структуре накопленную информацию по строке
				ЗаполнитьЗначенияСвойств(ПарСтрокиХ2, ОбластьСтрока.Параметры);
				
				// перезаполнить параметры в строке
				ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаОбычная");
				ОбластьСтрока.Параметры.Заполнить(ПарСтрокиХ2);
				Если ЗначениеЗаполнено(ПарСтрокиХ2.Количество1) Тогда
					ОбластьСтрока.Параметры.ЕдИзм = ПарСтрокиХ2.ЕдИзм1;
					ОбластьСтрока.Параметры.Количество = ПарСтрокиХ2.Количество1;
				Иначе
					ОбластьСтрока.Параметры.ЕдИзм = ПарСтрокиХ2.ЕдИзм2;
					ОбластьСтрока.Параметры.Количество = ПарСтрокиХ2.Количество2;
				КонецЕсли; 
			КонецЕсли; 
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры
 
Процедура ОбработатьНеСтандартнуюКарточку(ЭтоПерваяСтрокаДубля, Макет, ОбъемРабот, НомерПП, СтрТаб, ПарСтрокиХ2, ТабличныйДокумент, ОбработаноСтрок, ОбластьСтрока, ПараметрыОбъекта, ВидНеСтандартнойКарточки)
	
	НужнаОбработкаДляДел = Ложь;
	Если Лев(ОбъемРабот.ПараметрСтрокиДляКоличества.ИмяПредопределенныхДанных, 32)  = "КоличествоДелОстаточногоКаталога" ИЛИ 
		Лев(ОбъемРабот.ПараметрСтрокиДляУсловия.ИмяПредопределенныхДанных, 34)  = "КоличествоТочекОстаточногоКаталога" Тогда
		НужнаОбработкаДляДел = Истина;
	КонецЕсли; 	
	
	НужнаОбработкаДляТочек = Ложь;
	Если Лев(ОбъемРабот.ПараметрСтрокиДляКоличества.ИмяПредопределенныхДанных, 30)  = "КоличествоУчастковПлановГраниц" ИЛИ 
		Лев(ОбъемРабот.ПараметрСтрокиДляУсловия.ИмяПредопределенныхДанных, 27)  = "КоличествоТочекПлановГраниц" Тогда
		НужнаОбработкаДляТочек = Истина;
	КонецЕсли; 	
	
	Если ЭтоПерваяСтрокаДубля Тогда
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаОбычная");
		// Запоминаем и больше не изменяем 
		ОбластьСтрока.Параметры.Заполнить(ОбъемРабот);
		
		Если НужнаОбработкаДляДел Тогда
			ОбластьСтрока.Параметры.ЕдИзм = "дело; точка";
			РеквКолво = ПолучитьКоличествоДелТочек(ОбъемРабот, ПараметрыОбъекта);
			ОбластьСтрока.Параметры.Количество = ""+РеквКолво.Кол1+"; "+Формат(РеквКолво.Кол2, "ЧГ=0");
			
		ИначеЕсли НужнаОбработкаДляТочек Тогда	
			ОбластьСтрока.Параметры.ЕдИзм = "участок; точка";
			РеквКолво = ПолучитьКоличествоУчастковТочек(ОбъемРабот, ПараметрыОбъекта);
			ОбластьСтрока.Параметры.Количество = ""+РеквКолво.Кол1+"; "+Формат(РеквКолво.Кол2, "ЧГ=0");
			
		Иначе
			ОбработатьСтандартнуюКарточку(ЭтоПерваяСтрокаДубля, Макет, ОбъемРабот, НомерПП, СтрТаб, ПарСтрокиХ2, ТабличныйДокумент, ОбработаноСтрок, ОбластьСтрока);			
		КонецЕсли;
		
		ОбластьСтрока.Параметры.НомерПП = НомерПП;                       
		ЭтоПерваяСтрокаДубля = Ложь;
		ОбработаноСтрок = 1;
	Иначе
		
		Если НужнаОбработкаДляДел ИЛИ НужнаОбработкаДляТочек Тогда	
			ОбработаноСтрок = ОбработаноСтрок + 1;
			ОбластьСтрока.Параметры.РасчетСтоимости = ""+ОбластьСтрока.Параметры.РасчетСтоимости + "+" + СокрЛП(ОбъемРабот.РасчетСтоимости);
			ОбластьСтрока.Параметры.Стоимость = ОбластьСтрока.Параметры.Стоимость + ОбъемРабот.Стоимость;
			Если СтрТаб.КолвоСтадий = ОбработаноСтрок  Тогда
				ТабличныйДокумент.Вывести(ОбластьСтрока);
			КонецЕсли; 
		Иначе
			ОбработатьСтандартнуюКарточку(ЭтоПерваяСтрокаДубля, Макет, ОбъемРабот, НомерПП, СтрТаб, ПарСтрокиХ2, ТабличныйДокумент, ОбработаноСтрок, ОбластьСтрока);			
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

// Возвращает итоговые количества участков и точек
Функция ПолучитьКоличествоУчастковТочек(ОбъемРабот, ПараметрыОбъекта)
	РеквКолво = Новый Структура("Кол1, Кол2", 0, 0); 
	
	ИскПараметрУчастки = ПланыВидовХарактеристик.ПараметрыОбъектов.КоличествоЭлементарныхУчастков;
	ИскПараметрТочки = ПланыВидовХарактеристик.ПараметрыОбъектов.КоличествоТочекПлановГраницВсего;
	
	Стр = ПараметрыОбъекта.Найти(ИскПараметрУчастки, "ПараметрОбъекта");
	Если Стр <> Неопределено Тогда
		РеквКолво.Вставить("Кол1", Стр.Значение);
	КонецЕсли; 
	Стр = ПараметрыОбъекта.Найти(ИскПараметрТочки, "ПараметрОбъекта");
	Если Стр <> Неопределено Тогда
		РеквКолво.Вставить("Кол2", Стр.Значение);
	КонецЕсли; 
	Возврат РеквКолво;
КонецФункции // ПолучитьКоличествоДелТочек()

// Возвращает итоговые количества дел и точек
Функция ПолучитьКоличествоДелТочек(ОбъемРабот, ПараметрыОбъекта)
	РеквКолво = Новый Структура("Кол1, Кол2", 0, 0); 
	
	ИскПараметрДела = ПланыВидовХарактеристик.ПараметрыОбъектов.КоличествоДелОстаточногоКаталогаВсего;
	ИскПараметрТочки = ПланыВидовХарактеристик.ПараметрыОбъектов.КоличествоТочекОстаточногоКаталогаВсего;
	
	Стр = ПараметрыОбъекта.Найти(ИскПараметрДела, "ПараметрОбъекта");
	Если Стр <> Неопределено Тогда
		РеквКолво.Вставить("Кол1", Стр.Значение);
	КонецЕсли; 
	Стр = ПараметрыОбъекта.Найти(ИскПараметрТочки, "ПараметрОбъекта");
	Если Стр <> Неопределено Тогда
		РеквКолво.Вставить("Кол2", Стр.Значение);
	КонецЕсли; 
	Возврат РеквКолво;
КонецФункции // ПолучитьКоличествоДелТочек()

Функция ПолучитьНаименованиеЗаказчика(_Заказчик)
    Если ЗначениеЗаполнено(_Заказчик) Тогда
        Возврат _Заказчик.ПолноеНаименование;
    КонецЕсли; 
    Возврат "";	
КонецФункции 
 
