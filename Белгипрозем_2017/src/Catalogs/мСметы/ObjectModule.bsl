
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	ЭтапДоговора = Неопределено;
	ДатаРасчетаСметы = ТекущаяДата();
	//ИндексЦен = мРаботаСоСметами.ПолучитьИндексЦен(ДатаРасчетаСметы);
	Состояние = Перечисления.мСостоянияСмет.Черновик;
	ДоляОбъекта = 1;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
        Владелец = ДанныеЗаполнения.Владелец;
        Корреспондент = Владелец.Корреспондент;
		Для каждого Заказчик Из Владелец.Корреспонденты Цикл
			НовСтрока = Корреспонденты.Добавить();
			НовСтрока.Корреспондент = Заказчик.Корреспондент;
		КонецЦикла; 
		
		Если ДанныеЗаполнения.Свойство("ЭтапДоговора") Тогда
			// Это из ЭтапаДоговора
			ЭтапДоговора = ДанныеЗаполнения.ЭтапДоговора;
			ОбъектРабот = ЭтапДоговора.ОбъектРабот;
			КарточкаОбъектаРабот = ЭтапДоговора.КарточкаОбъектаРабот;
			СтавкаНДС = ЭтапДоговора.СтавкаНДС;
			ОсвобождениеОтНДС = ЭтапДоговора.ОсвобождениеОтНДС;
			ДоляОбъекта = ЭтапДоговора.ДоляОбъекта;
			
			//Номер сметы
			ЧисловойНомерСметы = мРаботаСоСметами.КоличествоСметЭтапаДоговора(ЭтапДоговора) + 1;
			НомерСметы = СокрЛП(ЭтапДоговора.НомерЭтапа) + "-" + ЧисловойНомерСметы;
		КонецЕсли; 
    КонецЕсли; 
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
    Если ЭтотОбъект.ОбменДанными.Загрузка Тогда
        Возврат;
	КонецЕсли;
	
	// Регистрация сметы по договору ГКИ
	ДокСметы = НайтиДокСметы(Ссылка);
	
	ЭтоКадастроваяОценка = ВидРабот.Родитель = Справочники.мВидыРаботЮрЛица.КадастроваяОценкаГКИ;
	
	Если НаГод ИЛИ ЭтоКадастроваяОценка Тогда
		// Создать и провести документ мСмета
		Если ЗначениеЗаполнено(ДокСметы) Тогда
			Док = ДокСметы.ПолучитьОбъект();
			Если Док.ПометкаУдаления Тогда
				Док.УстановитьПометкуУдаления(Ложь);
			КонецЕсли; 
		Иначе	
			Док = Документы.мСмета.СоздатьДокумент();
			Док.Дата = Ссылка.ДатаРасчетаСметы;
			Док.УстановитьНовыйНомер();
		КонецЕсли; 
		
		ЗаполнитьЗначенияСвойств(Док, Ссылка);
		Док.Договор = Ссылка.Владелец;
		Док.Смета = Ссылка;
		Док.Сумма = Ссылка.Итого;
		Док.НДС = Ссылка.НДС;
		Док.Всего = Ссылка.КОплате;
		
		Док.ОбъемРабот.Очистить();
		Тз = Док.ОбъемРабот.Выгрузить();
		
		Для каждого Стр Из ОбъемРабот Цикл
			Если Стр.Стоимость > 0 Тогда
				СтрДок = Тз.Добавить();
				СтрДок.СтадияРабот = Стр.СтадияРабот;
				СтрДок.Сумма = Стр.Стоимость;
			КонецЕсли; 
		КонецЦикла; 
		
		Тз.Свернуть("СтадияРабот", "Сумма");
		Док.ОбъемРабот.Загрузить(Тз);
		
		Попытка
			Док.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			Сообщить("Не удалось провести "+ДокСметы);
			Отказ = Истина;			
		КонецПопытки;
	Иначе
		// проверить - не осталось ли док мСмета и удалить его
		Если ЗначениеЗаполнено(ДокСметы) и Не ДокСметы.ПометкаУдаления Тогда
			Попытка
				Док = ДокСметы.ПолучитьОбъект();
				Док.УстановитьПометкуУдаления(Истина);
				Док.Записать();
			Исключение
				Сообщить("Не удалось пометить на удаление "+ДокСметы);
				Отказ = Истина;			
			КонецПопытки; 
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

Функция НайтиДокСметы(Смета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	мСмета.Ссылка КАК Смета
		|ИЗ
		|	Документ.мСмета КАК мСмета
		|ГДЕ
		|	мСмета.Смета = &Смета";
	
	Запрос.УстановитьПараметр("Смета", Смета);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Смета;		
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции 
 
