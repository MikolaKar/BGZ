////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ГруппаАдресации.Доступность = НЕ Объект.Предопределенный;
	Если НЕ Объект.Предопределенный Тогда
		Элементы.ГруппаТипыОбъектовАдресации.Доступность = Объект.ИспользуетсяСОбъектамиАдресации;
	КонецЕсли;
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтаФорма, Объект, 
		"ГруппаКонтактнаяИнформация", ПоложениеЗаголовкаЭлементаФормы.Лево);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	Элементы.ГруппаКонтактнаяИнформация.Видимость = Объект.ИспользуетсяБезОбъектовАдресации;
	
	ОбновитьДоступность();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Объект.ВнешняяРоль И Не ЗначениеЗаполнено(Объект.УзелОбмена) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю( 
		    НСтр("ru = 'Укажите информационную базу, в которой определены исполнители данной роли.'"),
			,
			"УзелОбмена",
			"Объект",
			Отказ);
	КонецЕсли;		
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтаФорма, Объект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_РолиИсполнителей");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	Если Не Объект.ИспользуетсяБезОбъектовАдресации Тогда
		ТекущийОбъект.КонтактнаяИнформация.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ВРег(ИсточникВыбора.ИмяФормы) = ВРег("ОбщаяФорма.ВыборУзловПлановОбмена") Тогда
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			Объект.УзелОбмена = ВыбранноеЗначение;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ИспользуетсяВКонтекстеДругихИзмеренийАдресацииПриИзменении(Элемент)
	
	Элементы.ГруппаТипыОбъектовАдресации.Доступность = Объект.ИспользуетсяСОбъектамиАдресации;
	Элементы.ГруппаКонтактнаяИнформация.Видимость = Объект.ИспользуетсяБезОбъектовАдресации;
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешняяРольПриИзменении(Элемент)
	
	ВнешняяРольПриИзмененииНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура УзелОбменаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ПланыОбменаДляВыбора = Новый Массив;
	БизнесПроцессыИЗадачиКлиентПереопределяемый.ЗаполнитьМассивПлановОбмена(ПланыОбменаДляВыбора);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ТекущаяСтрока", Объект.УзелОбмена);
	ПараметрыФормы.Вставить("ВыбиратьВсеУзлы", Ложь);
	ПараметрыФормы.Вставить("ПланыОбменаДляВыбора", ПланыОбменаДляВыбора);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор", Ложь);
	
	ОткрытьФорму("ОбщаяФорма.ВыборУзловПлановОбмена", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования,
		ЭтотОбъект, "Объект.Комментарий")
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ВнешняяРольПриИзмененииНаСервере()
	
	Объект.ИспользуетсяБезОбъектовАдресации = Истина;
	Объект.ИспользуетсяСОбъектамиАдресации = Ложь;
	ОбновитьДоступность();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДоступность()
	
	ВнешниеЗадачиИБизнесПроцессыИспользуются = Ложь;
	БизнесПроцессыИЗадачиСервер.ПриОпределенииИспользованияВнешнихЗадачИБизнесПроцессов(ВнешниеЗадачиИБизнесПроцессыИспользуются);
	
	Если ВнешниеЗадачиИБизнесПроцессыИспользуются Тогда
		
		Если Объект.ВнешняяРоль Тогда
			Элементы.ИспользуетсяБезКонтекстаДругихИзмеренийАдресации.Доступность = Ложь;
			Элементы.ИспользуетсяВКонтекстеДругихИзмеренийАдресации.Доступность = Ложь;
			Элементы.ТипыОсновногоОбъектаАдресации.Доступность = Ложь;
			Элементы.ТипыДополнительногоОбъектаАдресации.Доступность = Ложь;
			Элементы.УзелОбмена.Доступность = Истина;
			Элементы.УзелОбмена.АвтоОтметкаНезаполненного = Истина;
		Иначе
			Элементы.ИспользуетсяБезКонтекстаДругихИзмеренийАдресации.Доступность = Истина;
			Элементы.ИспользуетсяВКонтекстеДругихИзмеренийАдресации.Доступность = Истина;
			Элементы.ТипыОсновногоОбъектаАдресации.Доступность = Истина;
			Элементы.ТипыДополнительногоОбъектаАдресации.Доступность = Истина;
			Элементы.УзелОбмена.Доступность = Ложь;
			Элементы.УзелОбмена.АвтоОтметкаНезаполненного = Ложь;
		КонецЕсли;	
		
	Иначе
		
		Элементы.ИспользуетсяБезКонтекстаДругихИзмеренийАдресации.Доступность = Истина;
		Элементы.ИспользуетсяВКонтекстеДругихИзмеренийАдресации.Доступность = Истина;
		Элементы.ТипыОсновногоОбъектаАдресации.Доступность = Истина;
		Элементы.ТипыДополнительногоОбъектаАдресации.Доступность = Истина;
		Элементы.УзелОбмена.Видимость = Ложь;
		Элементы.УзелОбмена.АвтоОтметкаНезаполненного = Ложь;
		Элементы.ВнешняяРоль.Видимость = Ложь;
		
	КонецЕсли;
		
КонецПроцедуры

// СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	
  УправлениеКонтактнойИнформациейКлиент.ПредставлениеПриИзменении(ЭтаФорма, Элемент);
  
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
  Результат = УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтаФорма, Элемент, , СтандартнаяОбработка);
  ОбновитьКонтактнуюИнформацию(Результат);
  
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	
  Результат = УправлениеКонтактнойИнформациейКлиент.ПредставлениеОчистка(ЭтаФорма, Элемент.Имя);
  ОбновитьКонтактнуюИнформацию(Результат);
  
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	
  Результат = УправлениеКонтактнойИнформациейКлиент.ПодключаемаяКоманда(ЭтаФорма, Команда.Имя);
  ОбновитьКонтактнуюИнформацию(Результат);
  УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуВводаАдреса(ЭтаФорма, Результат);
  
КонецПроцедуры

&НаСервере
Функция ОбновитьКонтактнуюИнформацию(Результат = Неопределено)
	
  Возврат УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтаФорма, Объект, Результат);
  
КонецФункции

// Конец СтандартныеПодсистемы.КонтактнаяИнформация
