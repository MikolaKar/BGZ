#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НадписьСообщение = НСтр("ru = 'В справочнике ""Корреспонденты"" найдены дублирующие элементы.'"); 
	НадписьВопрос = НСтр("ru = 'Отменить запись текущего корреспондента, заменив его корреспондентом из списка?'");
	
	МассивСсылок = Новый Массив;
	Для Каждого НайденныйЭлемент Из Параметры.НайденныеОбъекты Цикл
		МассивСсылок.Добавить(НайденныйЭлемент.Значение.Ссылка);	
	КонецЦикла;
	
	СписокКорреспондентов.Параметры.УстановитьЗначениеПараметра("МассивСсылок", МассивСсылок);
	
	Для Каждого НайденныйЭлемент Из Параметры.НайденныеОбъекты Цикл
		УстановитьОформлениеСписка(НайденныйЭлемент.Значение, СписокКорреспондентов.УсловноеОформление);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокКорреспондентовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Закрыть(Элементы.СписокКорреспондентов.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Да(Команда)
	
	Если Элементы.СписокКорреспондентов.ТекущиеДанные <> Неопределено Тогда
		Закрыть(Элементы.СписокКорреспондентов.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Нет(Команда)
	
	Закрыть(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВернутьсяКСозданию(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОформлениеСписка(НайденныйЭлемент, Знач УсловноеОформление)

	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементОтбораДанных = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораДанных.ПравоеЗначение = НайденныйЭлемент.Ссылка;
	ЭлементОтбораДанных.Использование = Истина;
	
	ЭлементЦветаОформления = ЭлементУсловногоОформления.Оформление.Элементы.Найти("TextColor");
	ЭлементЦветаОформления.Значение =  Метаданные.ЭлементыСтиля.ПоясняющийОшибкуТекст.Значение; 
	ЭлементЦветаОформления.Использование = Истина;
	
	Если НайденныйЭлемент.Свойство("Наименование_Флаг") И НайденныйЭлемент.Наименование_Флаг Тогда
		НовыйЭлемент = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		НовыйЭлемент.Поле = Новый ПолеКомпоновкиДанных("Наименование");		
	КонецЕсли;
	
	Если НайденныйЭлемент.Свойство("ИНН_Флаг") И НайденныйЭлемент.ИНН_Флаг Тогда
		НовыйЭлемент = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		НовыйЭлемент.Поле = Новый ПолеКомпоновкиДанных("ИНН");
	КонецЕсли;
	
	Если НайденныйЭлемент.Свойство("КПП_Флаг") И НайденныйЭлемент.КПП_Флаг Тогда
		НовыйЭлемент = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		НовыйЭлемент.Поле = Новый ПолеКомпоновкиДанных("КПП");
	КонецЕсли;
	
	Если НайденныйЭлемент.Свойство("ПолноеНаименование_Флаг") И НайденныйЭлемент.ПолноеНаименование_Флаг Тогда
		НовыйЭлемент = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		НовыйЭлемент.Поле = Новый ПолеКомпоновкиДанных("ПолноеНаименование");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
