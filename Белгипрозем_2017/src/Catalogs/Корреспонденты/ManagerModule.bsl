#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет переданный дескриптор доступа 

Функция ПолучитьПоляДоступа() Экспорт
	
	Возврат "ГруппаДоступа";
	
КонецФункции

Процедура ЗаполнитьДескрипторДоступа(ОбъектДоступа, ДескрипторДоступа) Экспорт
	
	Строка = ДескрипторДоступа.Корреспонденты.Добавить();
	Строка.ГруппаДоступа = ОбъектДоступа.ГруппаДоступа;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Проверяет, подходит ли объект к шаблону бизнес-процесса
Функция ШаблонПодходитДляАвтозапускаБизнесПроцессаПоОбъекту(ШаблонСсылка, ПредметСсылка, Подписчик, ВидСобытия, Условие) Экспорт
	
	Возврат БизнесСобытияВызовСервера.ШаблонПодходитДляАвтозапускаБизнесПроцессаПоДокументу(ШаблонСсылка, 
		ПредметСсылка, Подписчик, ВидСобытия, Условие);
	
КонецФункции

// Возвращает имя предмета процесса по умолчанию
//
Функция ПолучитьИмяПредметаПоУмолчанию(Ссылка) Экспорт
	
	Возврат НСтр("ru='Корреспондент'");
	
КонецФункции

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
    // Устанавливаем признак доступности печати по-комплектно
    ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
    Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Карточка") Тогда

        // Формируем табличный документ и добавляем его в коллекцию печатных форм
        УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
            "Карточка", "Карточка корреспондента", ПечатьКарточки(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));	
			
	КонецЕсли;
		
КонецПроцедуры

// Вернет Истина, у этого объекта метаданных есть функция ПолучитьАдресФото
Функция ЕстьФункцияПолученияФото() Экспорт
	
	Возврат Истина;
	
КонецФункции	

// Прочитать фото и вернуть адрес (навигационную ссылку)
// Параметры:
//  Ссылка - ссылка на справочник, для которого надо показать фото
//  УникальныйИдентификатор - уникальный идентификатор формы, откуда идет вызов
//  ЕстьКартинка - возвращаемое значение - Булево - Истина, если в объекте есть картинка
//
// Возвращаемое значение:
//   Строка - навигационная ссылка - или "", если нет картинки
Функция ПолучитьАдресФото(Ссылка, УникальныйИдентификатор, ЕстьКартинка) Экспорт
	
	АдресКартинки = "";
	
	ФизЛицо = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Ссылка, "ФизЛицо");
	
	Если ЗначениеЗаполнено(ФизЛицо) Тогда
		
		Если УправлениеДоступом.ОграничиватьДоступНаУровнеЗаписей() 
			И Не ДокументооборотПраваДоступа.ПолучитьПраваПоОбъекту(ФизЛицо).Чтение Тогда
			Возврат АдресКартинки;
		КонецЕсли;
		
		АдресКартинки = РаботаСФотографиями.ПолучитьНавигационнуюСсылкуРеквизита(ФизЛицо, УникальныйИдентификатор, ЕстьКартинка);
		
	КонецЕсли;
	
	Возврат АдресКартинки;
	
КонецФункции

// Возвращает двоичные данные фото корреспондента
//
Функция ПолучитьДвоичныеДанныеФото(Корреспондент) Экспорт
	
	ФизЛицо = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Корреспондент, "ФизЛицо");
	
	Если Не ЗначениеЗаполнено(ФизЛицо) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если УправлениеДоступом.ОграничиватьДоступНаУровнеЗаписей()
		И Не ДокументооборотПраваДоступа.ПолучитьПраваПоОбъекту(ФизЛицо).Чтение Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДвоичныеДанные = РаботаСФотографиями.ПолучитьДвоичныеДанныеРеквизита(ФизЛицо, "ФайлФотографии");
	Если Не ЗначениеЗаполнено(ДвоичныеДанные) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ДвоичныеДанные;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПечатьКарточки(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ИспользоватьДополнительныеРеквизитыИСведения = ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения");
	
	// Создаем табличный документ и устанавливаем имя параметров печати
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_КарточкаКорреспондента";
	
	Макет = Справочники.Корреспонденты.ПолучитьМакет("Карточка");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьОсновныеРеквизиты = Макет.ПолучитьОбласть("ОсновныеРеквизиты");
	
	ОбластьДополнительныеРеквизитыШапка = Макет.ПолучитьОбласть("ДополнительныеРеквизитыШапка");
	ОбластьДополнительныеРеквизитыСтрока = Макет.ПолучитьОбласть("ДополнительныеРеквизитыСтрока");

	ОбластьКонтактнаяИнформацияШапка = Макет.ПолучитьОбласть("КонтактнаяИнформацияШапка");
	ОбластьКонтактнаяИнформацияСтрока = Макет.ПолучитьОбласть("КонтактнаяИнформацияСтрока");
	
	ОбластьКонтактныеЛицаШапка = Макет.ПолучитьОбласть("КонтактныеЛицаШапка");
	ОбластьКонтактныеЛицаСтрока	= Макет.ПолучитьОбласть("КонтактныеЛицаСтрока");
	ОбластьКонтактныеЛицаКонтактыСтрока = Макет.ПолучитьОбласть("КонтактныеЛицаКонтактыСтрока");
	
	// Получаем запросом необходимые данные
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Корреспонденты.Ссылка,
		|	Корреспонденты.Наименование,
		|	Корреспонденты.ГруппаДоступа,
		|	Корреспонденты.ИНН,
		|	Корреспонденты.КодПоОКПО,
		|	Корреспонденты.Комментарий,
		|	Корреспонденты.КПП,
		|	Корреспонденты.ОсновнойБанковскийСчет,
		|	Корреспонденты.Ответственный,
		|	Корреспонденты.ПолноеНаименование,
		|	Корреспонденты.ЮрФизЛицо
		|ИЗ
		|	Справочник.Корреспонденты КАК Корреспонденты
		|ГДЕ
		|	Корреспонденты.Ссылка В(&МассивОбъектов)";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ВыборкаКорреспонденты = Запрос.Выполнить().Выбрать();
	
	Если ИспользоватьДополнительныеРеквизитыИСведения Тогда
		ЗапросДопРеквизиты = Новый Запрос;
		ЗапросДопРеквизиты.Текст = 
			"ВЫБРАТЬ
			|	КорреспондентыДополнительныеРеквизиты.Ссылка КАК Ссылка,
			|	КорреспондентыДополнительныеРеквизиты.Свойство КАК Свойство,
			|	КорреспондентыДополнительныеРеквизиты.Значение КАК Значение,
			|	КорреспондентыДополнительныеРеквизиты.ТекстоваяСтрока КАК ТекстоваяСтрока
			|ИЗ
			|	Справочник.Корреспонденты.ДополнительныеРеквизиты КАК КорреспондентыДополнительныеРеквизиты
			|ГДЕ
			|	КорреспондентыДополнительныеРеквизиты.Ссылка В(&МассивОбъектов)";
		ЗапросДопРеквизиты.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
		ВыборкаДопРеквизиты = ЗапросДопРеквизиты.Выполнить().Выбрать();
	КонецЕсли;
	
	ЗапросКонтактнаяИнформация = Новый Запрос;
	ЗапросКонтактнаяИнформация.Текст = 
		"ВЫБРАТЬ
		|	КорреспондентыКонтактнаяИнформация.Ссылка КАК Ссылка,
		|	КорреспондентыКонтактнаяИнформация.Вид КАК Вид,
		|	КорреспондентыКонтактнаяИнформация.Представление КАК Значение
		|ИЗ
		|	Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
		|ГДЕ
		|	КорреспондентыКонтактнаяИнформация.Ссылка В(&МассивОбъектов)";
	ЗапросКонтактнаяИнформация.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ВыборкаКонтактнаяИнформация = ЗапросКонтактнаяИнформация.Выполнить().Выбрать();
	
	ЗапросКонтактныеЛица = Новый Запрос;
	ЗапросКонтактныеЛица.Текст = 
		"ВЫБРАТЬ
		|	КонтактныеЛица.Владелец КАК Владелец,
		|	КонтактныеЛица.Ссылка КАК Ссылка, 
		|	КонтактныеЛица.Должность КАК Должность,
		|	КонтактныеЛица.Наименование КАК ФИО
		|ИЗ
		|	Справочник.КонтактныеЛица КАК КонтактныеЛица
		|ГДЕ
		|	КонтактныеЛица.Владелец В(&МассивОбъектов)";
	ЗапросКонтактныеЛица.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ВыборкаКонтактныеЛица = ЗапросКонтактныеЛица.Выполнить().Выбрать();
	
		
	ПервыйДокумент = Истина;
	Пока ВыборкаКорреспонденты.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки с которой начали выводить текущий документ
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаКорреспонденты);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		ОбластьОсновныеРеквизиты.Параметры.Заполнить(ВыборкаКорреспонденты);
		ТабличныйДокумент.Вывести(ОбластьОсновныеРеквизиты);

		// Дополнительные реквизиты
		Если ИспользоватьДополнительныеРеквизитыИСведения Тогда
			
			ПервыйПоискДопРеквизита = Истина;
			ВыборкаДопРеквизиты.Сбросить();
			Пока ВыборкаДопРеквизиты.НайтиСледующий(ВыборкаКорреспонденты.Ссылка, "Ссылка") Цикл
				
				Если ПервыйПоискДопРеквизита Тогда
					ТабличныйДокумент.Вывести(ОбластьДополнительныеРеквизитыШапка);
					ПервыйПоискДопРеквизита = Ложь;
				КонецЕсли;
				
				ОбластьДополнительныеРеквизитыСтрока.Параметры.Свойство = ВыборкаДопРеквизиты.Свойство;
				
				Если ЗначениеЗаполнено(ВыборкаДопРеквизиты.ТекстоваяСтрока) Тогда 
					ЗначениеСвойства = ВыборкаДопРеквизиты.ТекстоваяСтрока;
				Иначе
					ЗначениеСвойства = ВыборкаДопРеквизиты.Значение;
				КонецЕсли;	
								
				ОбластьДополнительныеРеквизитыСтрока.Параметры.Значение = ЗначениеСвойства;
				
				ТабличныйДокумент.Вывести(ОбластьДополнительныеРеквизитыСтрока);
			КонецЦикла;	
		КонецЕсли;	
		
		// Контактная информация
		ПервоеПолучениеКонтактнойИнформации = Истина;
		Пока ВыборкаКонтактнаяИнформация.НайтиСледующий(ВыборкаКорреспонденты.Ссылка, "Ссылка") Цикл
			Если ПервоеПолучениеКонтактнойИнформации Тогда
				ТабличныйДокумент.Вывести(ОбластьКонтактнаяИнформацияШапка);
				ПервоеПолучениеКонтактнойИнформации = Ложь;
			КонецЕсли;
			ОбластьКонтактнаяИнформацияСтрока.Параметры.Заполнить(ВыборкаКонтактнаяИнформация);
			ТабличныйДокумент.Вывести(ОбластьКонтактнаяИнформацияСтрока);
		КонецЦикла;
		
		//Контактные лица
		ПервоеПолучениеКонтактныхЛиц = Истина;
		Пока ВыборкаКонтактныеЛица.НайтиСледующий(ВыборкаКорреспонденты.Ссылка, "Владелец") Цикл
			Если ПервоеПолучениеКонтактныхЛиц Тогда
				ТабличныйДокумент.Вывести(ОбластьКонтактныеЛицаШапка);
				ПервоеПолучениеКонтактныхЛиц = Ложь;
			КонецЕсли;
			ОбластьКонтактныеЛицаСтрока.Параметры.Заполнить(ВыборкаКонтактныеЛица);
			ТабличныйДокумент.Вывести(ОбластьКонтактныеЛицаСтрока);
			
			ЗапросКонтактыКонтактныхЛиц = Новый Запрос;
			ЗапросКонтактыКонтактныхЛиц.Текст = 
				"ВЫБРАТЬ
				|	КонтактныеЛицаКонтактнаяИнформация.Ссылка,
				|	КонтактныеЛицаКонтактнаяИнформация.Вид КАК ВидКонтактнойИнформации,
				|	КонтактныеЛицаКонтактнаяИнформация.Представление КАК ЗначениеКонтактнойИнформации
				|ИЗ
				|	Справочник.КонтактныеЛица.КонтактнаяИнформация КАК КонтактныеЛицаКонтактнаяИнформация
				|ГДЕ
				|	КонтактныеЛицаКонтактнаяИнформация.Ссылка = &КонтактноеЛицо";
			ЗапросКонтактыКонтактныхЛиц.УстановитьПараметр("КонтактноеЛицо", ВыборкаКонтактныеЛица.Ссылка);
			ВыборкаКонтактыЛиц = ЗапросКонтактыКонтактныхЛиц.Выполнить().Выбрать();
			Пока ВыборкаКонтактыЛиц.Следующий() Цикл
				ОбластьКонтактныеЛицаКонтактыСтрока.Параметры.Заполнить(ВыборкаКонтактыЛиц);
				ТабличныйДокумент.Вывести(ОбластьКонтактныеЛицаКонтактыСтрока);
			КонецЦикла;	
		КонецЦикла;
		
		// В табличном документе зададим имя области в которую был 
		// выведен объект. Нужно для возможности печати по-комплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаКорреспонденты.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПроверкаНалогоплательщика(Корреспондент) Экспорт
    
    Хост = "www.portal.nalog.gov.by";
    
    УНП = СокрЛП(Корреспондент.ИНН);
    Ресурс = "grp/getData?unp=" + УНП; 
    
    Соединение = Новый HTTPСоединение(Хост);
    
    Заголовки = Новый Соответствие;
    Заголовки.Вставить("host", Хост); 
    
    Запрос = Новый HTTPЗапрос(Ресурс, Заголовки); 
    
    Ответ = Неопределено;
    Попытка
        Ответ = Соединение.Получить(Запрос);        
    Исключение
        Возврат Неопределено;    
    КонецПопытки;    
    
    СведенияXML = Неопределено;
    Попытка
        ЧтениеXML = Новый ЧтениеXML;
        ЧтениеXML.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
        СведенияXML = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
    Исключение
        Возврат Неопределено;
    КонецПопытки;
    
    Попытка
        Если ТипЗнч(СведенияXML) = Тип("ОбъектXDTO") Тогда
            Если СведенияXML.Свойства().Получить("ROW") = Неопределено Тогда
                Возврат Неопределено;    
            Иначе
                Если ТипЗнч(СведенияXML.ROW) = Тип("ОбъектXDTO") Тогда
                    Статус = СведенияXML.ROW.VKODS;
                Иначе                     
                    Статус = СведенияXML.ROW[0].VKODS;
                КонецЕсли;
            КонецЕсли;
        Иначе
            Возврат Неопределено;
        КонецЕсли;
    Исключение
        Сообщить("Ошибка: " + Строка(Корреспондент) + " " + УНП);
        Возврат Неопределено;         
    КонецПопытки;
    
    Если СокрЛП(Статус) = "Ликвидирован" Тогда
        Сообщить(Строка(Корреспондент) + " " + Статус);
        Возврат Ложь;
    Иначе
        Возврат Статус;
    КонецЕсли;
    
КонецФункции

#КонецОбласти

#КонецЕсли