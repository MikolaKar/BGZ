
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПротоколированиеРаботыПользователей.ЗаписатьОткрытие(Объект.Ссылка);
	
	Если Параметры.Свойство("Родитель") Тогда
		Объект.Родитель = Параметры.Родитель;
	КонецЕсли;
	
	РабочийКаталог = РаботаСФайламиВызовСервера.ПолучитьРабочийКаталог(Объект.Ссылка);
	
	// Свойства
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, Объект, "");
	// Конец Свойства
	
	УчитыватьПодпапки = Ложь;
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбновитьПолныйПуть();
	КонецЕсли;	
	
	// Установка видимости команды "Права"
	Если Не УправлениеДоступом.ОграничиватьДоступНаУровнеЗаписей() Тогда
		Элементы.ФормаПрава.Видимость = Ложь;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если Не ДокументооборотПраваДоступа.ПолучитьПраваПоОбъекту(Объект.Ссылка).УправлениеПравами Тогда
			Элементы.ФормаПрава.Видимость = Ложь;
		КонецЕсли;	
	Иначе
		Элементы.ПодсчитатьСУчетомПодпапок.Доступность = Ложь;
		Элементы.ОткрытьСписокПапокИФайлов.Доступность = Ложь;	
		Объект.ДатаСоздания = ТекущаяДатаСеанса();
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПолныйПуть()
	
	ПапкаРодитель = Объект.Родитель;
	
	Если ЗначениеЗаполнено(ПапкаРодитель) Тогда
	
		ПолныйПуть = "";
		Пока ЗначениеЗаполнено(ПапкаРодитель) Цикл
			
			ПолныйПуть = Строка(ПапкаРодитель) + "\" + ПолныйПуть;
			ПапкаРодитель = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ПапкаРодитель, "Родитель");
			Если Не ЗначениеЗаполнено(ПапкаРодитель) Тогда
				Прервать;
			КонецЕсли;	
			
		КонецЦикла;
		
		ПолныйПуть = ПолныйПуть + Строка(Объект.Ссылка);
		
		Если Не ПустаяСтрока(ПолныйПуть) Тогда
			ПолныйПуть = """" + ПолныйПуть + """";
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	// Конец Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("ЭтоНовыйОбъект", НЕ ЗначениеЗаполнено(ТекущийОбъект.Ссылка));
	
	// Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаКлиенте
Процедура Подписаться(Команда)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрыФормы = Новый Структура("ОбъектПодписки", Объект.Ссылка);
		ОткрытьФорму("ОбщаяФорма.ПодпискаНаУведомленияПоОбъекту", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Элементы.ПодсчитатьСУчетомПодпапок.Доступность = Истина;
	Элементы.ОткрытьСписокПапокИФайлов.Доступность = Истина;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ СВОЙСТВ

&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма, Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма, РеквизитФормыВЗначение("Объект"));
	
КонецПроцедуры

&НаКлиенте
Процедура РабочийКаталогВладельцаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Объект.Ссылка.Пустая() Тогда
		Если Записать() = Ложь Тогда
			Возврат;
		КонецЕсли;	
	КонецЕсли;	
	
	ОчиститьСообщения();
	
	Каталог = "";
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Каталог = РабочийКаталог;
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	Фильтр = НСтр("ru = 'Все файлы(*.*)|*.*'");
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите каталог'");
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		
		ИмяКаталога = ДиалогОткрытияФайла.Каталог;
		ИмяКаталога = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяКаталога, 
			ОбщегоНазначенияКлиентПовтИсп.ТипПлатформыКлиента());
		
		// Создать каталог для файлов
		Попытка
			СоздатьКаталог(ИмяКаталога);
			ИмяКаталогаТестовое = ИмяКаталога + "ПроверкаДоступа\";
			СоздатьКаталог(ИмяКаталогаТестовое);
			УдалитьФайлы(ИмяКаталогаТестовое);
		Исключение
			// нет прав на создание каталога, или такой путь отсутствует
			
			ТекстОшибки 
				= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Неверный путь или отсутствуют права на запись в каталог ""%1""'"),
				ИмяКаталога);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "РабочийКаталог");
			Возврат;
		КонецПопытки;
		
		РабочийКаталог = ИмяКаталога;
		РаботаСФайламиВызовСервера.СохранитьРабочийКаталог(Объект.Ссылка, РабочийКаталог);
		
	КонецЕсли;
	
	ОбновитьОтображениеДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура РабочийКаталогВладельцаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	РодительСсылка = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.Ссылка, "Родитель");
	РабочийКаталогРодителя = РаботаСФайламиВызовСервера.ПолучитьРабочийКаталог(РодительСсылка);	
	
	РабочийКаталогЭтойПапки = РаботаСФайламиВызовСервера.ПолучитьРабочийКаталог(Объект.Ссылка);
	РабочийКаталогУнаследованный = РабочийКаталогРодителя + Объект.Наименование + ФайловыеФункцииКлиентСервер.ПолучитьСлеш(ОбщегоНазначенияКлиентПовтИсп.ТипПлатформыКлиента());
	
	Если ПустаяСтрока(РабочийКаталогРодителя) Тогда
		РабочийКаталог = "";
		РаботаСФайламиВызовСервера.ОчиститьРабочийКаталог(Объект.Ссылка);
	ИначеЕсли РабочийКаталогУнаследованный <> РабочийКаталогЭтойПапки Тогда
		РабочийКаталог = РабочийКаталогУнаследованный;
		РаботаСФайламиВызовСервера.СохранитьРабочийКаталог(Объект.Ссылка, РабочийКаталог);
	КонецЕсли;
	
	ОбновитьОтображениеДанных();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	РабочийКаталог = РаботаСФайламиВызовСервера.ПолучитьРабочийКаталог(Объект.Ссылка);
	ОбновитьПолныйПуть();
	
	ПротоколированиеРаботыПользователей.ЗаписатьСоздание(Объект.Ссылка, ПараметрыЗаписи.ЭтоНовыйОбъект);
	ПротоколированиеРаботыПользователей.ЗаписатьИзменение(Объект.Ссылка);
	
КонецПроцедуры


&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	
	ОбновитьПолныйПуть();
	
КонецПроцедуры


&НаКлиенте
Процедура ОткрытьСписокПапокИФайлов(Команда)
	
	ПараметрыФормы = Новый Структура("Папка", Объект.Ссылка);
	
	ОткрытьФорму("Справочник.Файлы.Форма.ХранилищеФайлов", ПараметрыФормы, ,Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗаполнитьИнформациюОСодержимом();
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнформациюОСодержимом()
	
	ЧислоВерсий = 0;
	ЧислоФайлов = 0;
	ЧислоПапок = 0;
	РазмерВерсий = 0;
	РазмерФайлов = 0;
	
	Запрос = Новый Запрос;
	
	Если УчитыватьПодпапки Тогда
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ПапкиФайлов.Ссылка КАК Ссылка
		               |ПОМЕСТИТЬ ВременнаяТаблицаПапок
		               |ИЗ
		               |	Справочник.ПапкиФайлов КАК ПапкиФайлов
		               |ГДЕ
		               |	ПапкиФайлов.Ссылка В ИЕРАРХИИ(&ПапкаКорневая)
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	Ссылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	КОЛИЧЕСТВО(ВременнаяТаблицаПапок.Ссылка) КАК ЧислоПапок
		               |ИЗ
		               |	ВременнаяТаблицаПапок КАК ВременнаяТаблицаПапок
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	КОЛИЧЕСТВО(Файлы.Ссылка) КАК ЧислоФайлов,
		               |	ЕСТЬNULL(СУММА(Файлы.ТекущаяВерсияРазмер), 0) КАК РазмерФайлов
		               |ИЗ
		               |	Справочник.Файлы КАК Файлы
		               |ГДЕ
		               |	Файлы.ВладелецФайла В
		               |			(ВЫБРАТЬ
		               |				ВременнаяТаблицаПапок.Ссылка
		               |			ИЗ
		               |				ВременнаяТаблицаПапок)
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	КОЛИЧЕСТВО(ВерсииФайлов.Ссылка) КАК ЧислоВерсий,
		               |	ЕСТЬNULL(СУММА(ВерсииФайлов.Размер), 0) КАК РазмерВерсий
		               |ИЗ
		               |	Справочник.Файлы КАК Файлы
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВерсииФайлов КАК ВерсииФайлов
		               |		ПО (ВерсииФайлов.Владелец = Файлы.Ссылка)
		               |ГДЕ
		               |	Файлы.ВладелецФайла В
		               |			(ВЫБРАТЬ
		               |				ВременнаяТаблицаПапок.Ссылка
		               |			ИЗ
		               |				ВременнаяТаблицаПапок)
		               |	И ВерсииФайлов.ФайлУдален = ЛОЖЬ";
		
	Иначе // без подпапок
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	&ПапкаКорневая КАК Ссылка
		               |ПОМЕСТИТЬ ВременнаяТаблицаПапок
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	КОЛИЧЕСТВО(ПапкиФайлов.Ссылка) КАК ЧислоПапок
		               |ИЗ
		               |	Справочник.ПапкиФайлов КАК ПапкиФайлов
		               |ГДЕ
		               |	ПапкиФайлов.Родитель = &ПапкаКорневая
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	КОЛИЧЕСТВО(Файлы.Ссылка) КАК ЧислоФайлов,
		               |	ЕСТЬNULL(СУММА(Файлы.ТекущаяВерсияРазмер), 0) КАК РазмерФайлов
		               |ИЗ
		               |	Справочник.Файлы КАК Файлы
		               |ГДЕ
		               |	Файлы.ВладелецФайла В
		               |			(ВЫБРАТЬ
		               |				ВременнаяТаблицаПапок.Ссылка
		               |			ИЗ
		               |				ВременнаяТаблицаПапок)
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	КОЛИЧЕСТВО(ВерсииФайлов.Ссылка) КАК ЧислоВерсий,
		               |	ЕСТЬNULL(СУММА(ВерсииФайлов.Размер), 0) КАК РазмерВерсий
		               |ИЗ
		               |	Справочник.Файлы КАК Файлы
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВерсииФайлов КАК ВерсииФайлов
		               |		ПО (ВерсииФайлов.Владелец = Файлы.Ссылка)
		               |ГДЕ
		               |	Файлы.ВладелецФайла В
		               |			(ВЫБРАТЬ
		               |				ВременнаяТаблицаПапок.Ссылка
		               |			ИЗ
		               |				ВременнаяТаблицаПапок)
		               |	И ВерсииФайлов.ФайлУдален = ЛОЖЬ";

	КонецЕсли;
				   
	Запрос.УстановитьПараметр("ПапкаКорневая", Объект.Ссылка);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Выборка = МассивРезультатов[1].Выгрузить();
	ЧислоПапок = Выборка[0].ЧислоПапок;
	Если УчитыватьПодпапки Тогда
		ЧислоПапок = ЧислоПапок - 1;
	КонецЕсли;
	
	Выборка = МассивРезультатов[2].Выгрузить();
	ЧислоФайлов  = Выборка[0].ЧислоФайлов;
	РазмерФайлов = Выборка[0].РазмерФайлов;
	
	Выборка = МассивРезультатов[3].Выгрузить();
	ЧислоВерсий  = Выборка[0].ЧислоВерсий;
	РазмерВерсий = Выборка[0].РазмерВерсий;

	КоличествоВерсий = ?(ЧислоВерсий > 0, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 (%2)'"), 
		ЧислоВерсий, ФайловыеФункцииКлиентСервер.ПолучитьСтрокуСРазмеромФайлаДляКарточкиПапки(РазмерВерсий)), "-");
	КоличествоПодпапок = ?(ЧислоПапок > 0, Строка(ЧислоПапок), "-");
	КоличествоФайлов = ?(ЧислоФайлов > 0, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 (%2)'"), 
		ЧислоФайлов, ФайловыеФункцииКлиентСервер.ПолучитьСтрокуСРазмеромФайлаДляКарточкиПапки(РазмерФайлов)), "-");

КонецПроцедуры	

&НаКлиенте
Процедура ПодсчитатьСУчетомПодпапок(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПодсчитатьСУчетомПодпапокПродолжение",
		ЭтотОбъект);
	ПоказатьВопрос(
		ОписаниеОповещения,
		НСтр("ru = 'Сейчас будет выполнен подсчет содержимого папки с учетом подпапок.
			|Эта операция может занять продолжительное время. Продолжить?'"),
		РежимДиалогаВопрос.ДаНет,,
		КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодсчитатьСУчетомПодпапокПродолжение(Результат, Параметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	
	Состояние(НСтр("ru='Выполняется подсчет содержимого папки с учетом подпапок. Пожалуйста, подождите...'"));
	
	УчитыватьПодпапки = Истина;
	ЗаполнитьИнформациюОСодержимом();
	Элементы.ГруппаИнформация.Заголовок = НСтр("ru='Папка содержит (с учетом подпапок)'");
	Элементы.ПодсчитатьСУчетомПодпапок.Доступность = Ложь;
	
	Состояние();	
	
КонецПроцедуры

&НаКлиенте
Процедура Права(Команда)
	
		ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПраваПродолжение",
		ЭтотОбъект);
	// Предварительная запись новой папки
	Если Объект.Ссылка.Пустая() Тогда
		ТекстВопроса = НСтр("ru = 'Данные еще не записаны.
			|Выполнение команды ""Права"" возможно только после записи данных.
			|Данные будут записаны.'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);			
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, Истина);
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ПраваПродолжение(Результат, Параметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.ОК 
		И Результат <> Истина Тогда 
		Возврат;
	КонецЕсли;
	
	Если Результат = КодВозвратаДиалога.ОК Тогда
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
			
		ПоказатьОповещениеПользователя(НСтр("ru = 'Изменение:'"), 
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка));
	КонецЕсли;
	
	// Проверка прав
	Если Не ДокументооборотПраваДоступа.ПолучитьПраваПоОбъекту(Объект.Ссылка).УправлениеПравами Тогда
		Элементы.ФормаПрава.Видимость = Ложь;
		ВызватьИсключение НСтр("ru = 'Доступ к настройке прав запрещен. 
			|Обратитесь к администратору.'");
	КонецЕсли;

	// Открытие формы настройки прав
	ПараметрыФормы = Новый Структура("СсылкаНаОбъект", Объект.Ссылка);
	ОткрытьФорму("Справочник.ПапкиФайлов.Форма.ПраваНаПапку", ПараметрыФормы, , Объект.Ссылка);	
	
КонецПроцедуры



