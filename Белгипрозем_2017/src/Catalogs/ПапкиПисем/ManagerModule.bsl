
// Возвращает строку, содержащую перечисление полей доступа через запятую
// Это перечисление используется в дальнейшем для передачи в метод 
// ОбщегоНазначения.ПолучитьЗначенияРеквизитов()
Функция ПолучитьПоляДоступа() Экспорт
	
	Возврат "Ссылка";
	
КонецФункции

// Заполняет переданный дескриптор доступа
//
Процедура ЗаполнитьДескрипторДоступа(ОбъектДоступа, ДескрипторДоступа) Экспорт
	
	ДокументооборотПраваДоступа.ЗаполнитьНастройкиДескриптора(ДескрипторДоступа, ОбъектДоступа);
	
КонецПроцедуры

Функция ЕстьМетодЗаполнитьПраваДоступа() Экспорт
	Возврат Истина;
КонецФункции

// Заполняет права по переданному дескриптору доступа 
Процедура ЗаполнитьПраваДоступа(ДескрипторДоступа, ПраваДоступа, ПротоколРасчетаПрав) Экспорт
	
	// Заполнение правил обработки настроек папки
	ПравилаОбработкиНастроек = Новый Соответствие;
	
	Настройка = "ЧтениеПапокИПисем";
	РазрешенныеДействия = Новый Массив;
	РазрешенныеДействия.Добавить("Чтение");
	ПравилаОбработкиНастроек.Вставить(Настройка, РазрешенныеДействия);
	
	Настройка = "ИзменениеПапок";
	РазрешенныеДействия = Новый Массив;
	РазрешенныеДействия.Добавить("Добавление");
	РазрешенныеДействия.Добавить("Изменение");
	РазрешенныеДействия.Добавить("Удаление");
	ПравилаОбработкиНастроек.Вставить(Настройка, РазрешенныеДействия);
	
	Настройка = "УправлениеПравами";
	РазрешенныеДействия = Новый Массив;
	РазрешенныеДействия.Добавить("УправлениеПравами");
	ПравилаОбработкиНастроек.Вставить(Настройка, РазрешенныеДействия);
	
	// Получение прав по настройкам
	ЭтоСтарыйДескриптор = ЗначениеЗаполнено(ДескрипторДоступа.УдалитьПапка);
	Если ЭтоСтарыйДескриптор Тогда
		Справочники.ДескрипторыДоступаОбъектов.ЗаполнитьПраваПоНастройкамПапки(
			ДескрипторДоступа.УдалитьПапка, ПраваДоступа, ПравилаОбработкиНастроек);
	Иначе
		Справочники.ДескрипторыДоступаОбъектов.ЗаполнитьПраваПоНастройкамДескриптора(
			ДескрипторДоступа, ПраваДоступа, ПравилаОбработкиНастроек);
	КонецЕсли;
	
	// Добавление папки в протокол прав
	Если ПротоколРасчетаПрав <> Неопределено Тогда
		ПротоколРасчетаПрав.Добавить(НСтр("ru = 'Права на папку (см. Настройка прав папки)'"));
	КонецЕсли;
	
КонецПроцедуры

// Возвращает массив разрешенных прав на объекты, которые 
// хранятся в указанной папке.
Процедура ПолучитьПраваОтПапки(Папка, РазрешенныеПрава) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Поиск дескриптора папки
	ДескрипторДоступаПапки = РегистрыСведений.ДескрипторыДоступаДляОбъектов.НайтиДескрипторДляОбъекта(Папка);
	
	Если ДескрипторДоступаПапки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолучитьРазрешенныеПраваОтВладельцаПоДескриптору(ДескрипторДоступаПапки, РазрешенныеПрава);
	
КонецПроцедуры

// Возвращает массив разрешенных прав на объекты, которые 
// хранятся папке с указанным дескриптором
Процедура ПолучитьРазрешенныеПраваОтВладельцаПоДескриптору(ДескрипторДоступаПапки, РазрешенныеПрава) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(ДескрипторДоступаПапки) Тогда
		Возврат;
	КонецЕсли;
	
	// Заполнение правил обработки настроек папки
	ПравилаОбработкиНастроек = Новый Соответствие;
	
	Настройка = "ЧтениеПапокИПисем";
	РазрешенныеДействия = Новый Массив;
	РазрешенныеДействия.Добавить("Чтение");
	ПравилаОбработкиНастроек.Вставить(Настройка, РазрешенныеДействия);
	
	Настройка = "ДобавлениеПапокИПисем";
	РазрешенныеДействия = Новый Массив;
	РазрешенныеДействия.Добавить("Добавление");
	ПравилаОбработкиНастроек.Вставить(Настройка, РазрешенныеДействия);
	
	Настройка = "ИзменениеПапокИПисем";
	РазрешенныеДействия = Новый Массив;
	РазрешенныеДействия.Добавить("Изменение");
	ПравилаОбработкиНастроек.Вставить(Настройка, РазрешенныеДействия);
	
	Настройка = "ПометкаУдаленияПапокИПисем";
	РазрешенныеДействия = Новый Массив;
	РазрешенныеДействия.Добавить("Удаление");
	ПравилаОбработкиНастроек.Вставить(Настройка, РазрешенныеДействия);
	
	// Получение прав по настройкам
	ЭтоСтарыйДескриптор = ЗначениеЗаполнено(ДескрипторДоступаПапки.УдалитьПапка);
	Если ЭтоСтарыйДескриптор Тогда
		Справочники.ДескрипторыДоступаОбъектов.ЗаполнитьПраваПоНастройкамПапки(
			ДескрипторДоступаПапки.УдалитьПапка,
			РазрешенныеПрава,
			ПравилаОбработкиНастроек);
	Иначе
		Справочники.ДескрипторыДоступаОбъектов.ЗаполнитьПраваПоНастройкамДескриптора(
			ДескрипторДоступаПапки,
			РазрешенныеПрава,
			ПравилаОбработкиНастроек);
	КонецЕсли;
		
КонецПроцедуры	

// Устанавливает или очищает родителя папки.
//
Процедура УстановитьРодителяПапки(Папка, ПапкаРодитель) Экспорт
	
	ПапкаОбъект = Папка.ПолучитьОбъект();
	ЗаблокироватьДанныеДляРедактирования(Папка);
	
	// Установка привилегированного режима, т.к. перенос из папки в папку
	// проверяется программно
	УстановитьПривилегированныйРежим(Истина);
	
	СообщениеОбОшибке = "";
	Если Не ДокументооборотПраваДоступа.ЕстьПравоПеремещенияПапки(
		Папка, ПапкаРодитель, СообщениеОбОшибке) Тогда
		ВызватьИсключение СообщениеОбОшибке;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Папка)
		И ЗначениеЗаполнено(ПапкаРодитель)
		И ПапкаРодитель.ПринадлежитЭлементу(Папка) Тогда
		СообщениеОбОшибке = НСтр("ru = 'Нельзя перемещать папки в собственные подпапки.'");
		ВызватьИсключение СообщениеОбОшибке;
	КонецЕсли;
	
	ПапкаОбъект.Родитель = ПапкаРодитель;
	ПапкаОбъект.Записать();
	
КонецПроцедуры

// Возвращает вариант отображения количества писем в папке по умолчанию.
//
Функция ПолучитьВариантОтображенияКоличестваПисемВПапкеПоУмолчанию(ВидПапки) Экспорт
	
	Если ВидПапки = Перечисления.ВидыПапокПисем.Входящие Тогда
		Возврат Перечисления.ВариантыОтображенияКоличестваПисемВПапке.Непрочтенные;
	ИначеЕсли ВидПапки = Перечисления.ВидыПапокПисем.Исходящие Тогда
		Возврат Перечисления.ВариантыОтображенияКоличестваПисемВПапке.Все;
	ИначеЕсли ВидПапки = Перечисления.ВидыПапокПисем.Корзина Тогда
		Возврат Перечисления.ВариантыОтображенияКоличестваПисемВПапке.НеОтображать;
	ИначеЕсли ВидПапки = Перечисления.ВидыПапокПисем.Общая Тогда
		Возврат Перечисления.ВариантыОтображенияКоличестваПисемВПапке.Непрочтенные;
	ИначеЕсли ВидПапки = Перечисления.ВидыПапокПисем.Отправленные Тогда
		Возврат Перечисления.ВариантыОтображенияКоличестваПисемВПапке.Непрочтенные;
	ИначеЕсли ВидПапки = Перечисления.ВидыПапокПисем.Черновики Тогда
		Возврат Перечисления.ВариантыОтображенияКоличестваПисемВПапке.Все;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПолныйПутьПапки(ПапкаСсылка) Экспорт
	
	Если Не ЗначениеЗаполнено(ПапкаСсылка) Тогда
		Возврат "";
	КонецЕсли;
	
	Родитель = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ПапкаСсылка, "Родитель");
	Если ЗначениеЗаполнено(Родитель) Тогда
		Возврат ПолучитьПолныйПутьПапки(Родитель) + "\" + Строка(ПапкаСсылка);
	Иначе
		Возврат Строка(ПапкаСсылка);
	КонецЕсли;
	
КонецФункции