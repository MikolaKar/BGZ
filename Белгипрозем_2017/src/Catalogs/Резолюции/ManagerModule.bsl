// УправлениеДоступом

// Возвращает строку, содержащую перечисление полей доступа через запятую
// Это перечисление используется в дальнейшем для передачи в метод 
// ОбщегоНазначения.ПолучитьЗначенияРеквизитов()
Функция ПолучитьПоляДоступа() Экспорт
	
	Возврат "Документ,АвторРезолюции,ВнесРезолюцию,ОсновнойОбъектАдресацииАвтора,ДополнительныйОбъектАдресацииАвтора";
	
КонецФункции

// Заполняет переданный дескриптор доступа
//
Процедура ЗаполнитьДескрипторДоступа(ОбъектДоступа, ДескрипторДоступа) Экспорт
	
	ДескрипторДоступа.ДескрипторВладельца = 
		РегистрыСведений.ДескрипторыДоступаДляОбъектов.НайтиДескрипторДляОбъекта(ОбъектДоступа.Документ);
		
	Если ТипЗнч(ОбъектДоступа.АвторРезолюции) <> Тип("СправочникСсылка.КонтактныеЛица") Тогда
		
		ДескрипторДоступа.ДобавитьПользователя(
			"Автор",
			ОбъектДоступа.АвторРезолюции,
			ОбъектДоступа.ОсновнойОбъектАдресацииАвтора,
			ОбъектДоступа.ДополнительныйОбъектАдресацииАвтора);	
		
	КонецЕсли;
		
	ДескрипторДоступа.ДобавитьПользователя(
		"Внесший",
		ОбъектДоступа.ВнесРезолюцию);	
	
КонецПроцедуры

// Возвращает Истина, указывая тем самым, что этот объект сам заполняет свои права
//
Функция ЕстьМетодЗаполнитьПраваДоступа() Экспорт
	
	Возврат Истина;
	
КонецФункции

// Заполняет параметр ПраваДоступа правами доступа, вычисляя их на
// основании переданного дескриптора доступа.
// Если указан параметр ПротоколРасчетаПрав, то в него
// заносится список данных, которые были использованы для расчета прав.
Процедура ЗаполнитьПраваДоступа(ДескрипторДоступа, ПраваДоступа, ПротоколРасчетаПрав) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	// права владельца
	СоответствиеПравВладельца = Новый Соответствие;
	ДокументооборотПраваДоступа.СкопироватьПраваДескриптора(ДескрипторДоступа.ДескрипторВладельца, СоответствиеПравВладельца);
	
	// права на чтение
	Для каждого Эл Из СоответствиеПравВладельца Цикл
		ПраваПользователя = Новый Структура("Чтение, Добавление, Изменение, Удаление, УправлениеПравами",
				Эл.Значение.Чтение, Ложь, Ложь, Ложь, Ложь);
				
		ДокументооборотПраваДоступа.ДобавитьПользователяВСоответствиеПрав(
			ПраваДоступа,
			Эл.Ключ,
			Неопределено,
			Неопределено,
			ПраваПользователя);	
	КонецЦикла; 
	
	Если ПротоколРасчетаПрав <> Неопределено Тогда
		ПротоколРасчетаПрав.Добавить(НСтр("ru = 'По документу'"));
	КонецЕсли;
	
	// права на добавление и изменение
	Для Каждого Эл Из ДескрипторДоступа.Пользователи Цикл
		
		Если ТипЗнч(Эл.Пользователь) = Тип("СправочникСсылка.Пользователи") Тогда
			
			НайденноеЗначение = СоответствиеПравВладельца.Получить(Эл.Пользователь);
			Если НайденноеЗначение = Неопределено Тогда
				Продолжить;
			КонецЕсли;	
			
			Если Эл.Ключ = "Автор" Или Эл.Ключ = "Внесший" Или Эл.Ключ = "" Тогда
				
				ПраваПользователя = Новый Структура("Чтение, Добавление, Изменение, Удаление, УправлениеПравами",
					НайденноеЗначение.Чтение, НайденноеЗначение.Добавление Или НайденноеЗначение.Изменение, НайденноеЗначение.Изменение, НайденноеЗначение.Изменение, Ложь);
					
				Если Эл.Ключ = "Автор" Тогда
					Если ПротоколРасчетаПрав <> Неопределено Тогда
						ПротоколРасчетаПрав.Добавить(НСтр("ru = 'Автор резолюции'"));
					КонецЕсли;
				Иначе
					Если ПротоколРасчетаПрав <> Неопределено Тогда
						ПротоколРасчетаПрав.Добавить(НСтр("ru = 'Внесший резолюцию'"));
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				
				ВызватьИсключение НСтр("ru = 'Неизвестный ключ пользователя.'");
				
			КонецЕсли;			
			
			ДокументооборотПраваДоступа.ДобавитьПользователяВСоответствиеПрав(
				ПраваДоступа,
				Эл.Пользователь,
				Неопределено,
				Неопределено,
				ПраваПользователя);
			
			
		ИначеЕсли ТипЗнч(Эл.Пользователь) = Тип("СправочникСсылка.РолиИсполнителей") Тогда
			
			ИсполнителиРоли = РегистрыСведений.ИсполнителиЗадач.ПолучитьИсполнителейРоли(Эл.Пользователь, Эл.ОсновнойОбъектАдресации, Эл.ДополнительныйОбъектАдресации);
			Для каждого ИсполнительРоли Из ИсполнителиРоли Цикл
				
				НайденноеЗначение = СоответствиеПравВладельца.Получить(ИсполнительРоли.Исполнитель);
				Если НайденноеЗначение = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				Если Эл.Ключ = "Автор" Или Эл.Ключ = "" Тогда
				
					ПраваПользователя = Новый Структура("Чтение, Добавление, Изменение, Удаление, УправлениеПравами",
						НайденноеЗначение.Чтение, НайденноеЗначение.Добавление Или НайденноеЗначение.Изменение, НайденноеЗначение.Изменение, НайденноеЗначение.Изменение, Ложь);
				
					Если ПротоколРасчетаПрав <> Неопределено Тогда
						ПротоколРасчетаПрав.Добавить(НСтр("ru = 'Автор резолюции'"));
					КонецЕсли;
					
				Иначе
					
					ВызватьИсключение НСтр("ru = 'Неизвестный ключ пользователя.'");
					
				КонецЕсли;			
				
				ДокументооборотПраваДоступа.ДобавитьПользователяВСоответствиеПрав(
					ПраваДоступа,
					ИсполнительРоли.Исполнитель,
					Неопределено,
					Неопределено,
					ПраваПользователя);
				
			КонецЦикла;	
			
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры

// Конец УправлениеДоступом

// Возвращает массив имен ключевых реквизитов
Функция ПолучитьИменаКлючевыхРеквизитов(Версия = Неопределено) Экспорт
	
	МассивИмен = Новый Массив;
	
	Если Версия = 1 Тогда
		МассивИмен.Добавить("Документ");
		МассивИмен.Добавить("АвторРезолюции");
		МассивИмен.Добавить("ВнесРезолюцию");
		МассивИмен.Добавить("ДатаРезолюции");
		МассивИмен.Добавить("ТекстРезолюции");
		МассивИмен.Добавить("Наименование");
	Иначе
		МассивИмен.Добавить("Документ");
		МассивИмен.Добавить("АвторРезолюции");
		МассивИмен.Добавить("ВнесРезолюцию");
		МассивИмен.Добавить("ДатаРезолюции");
		МассивИмен.Добавить("ТекстРезолюции");
	КонецЕсли;
	
	Возврат МассивИмен;
	
КонецФункции
