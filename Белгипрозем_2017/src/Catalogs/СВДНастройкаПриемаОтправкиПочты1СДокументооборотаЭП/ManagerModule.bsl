
// Отправить сообщение СВД
Функция ОтправитьСообщение(НастройкаПриемаОтправки, Транспорт, ИсходящееСообщениеСВД) Экспорт
	
	Попытка
		
		УчетнаяЗапись = ОбщегоНазначения.ПолучитьЗначениеРеквизита(НастройкаПриемаОтправки, "УчетнаяЗаписьПочты");
		ПараметрыОтправки = Новый Структура();
		
		// Тема
		//МиСофт+
		Если ИсходящееСообщениеСВД.ВидСообщения = Перечисления.ВидыСообщенийСВД.ОсновнойДокумент Тогда
			ПараметрыОтправки.Вставить("Тема", "исх. документ №"+ИсходящееСообщениеСВД.Документ.РегистрационныйНомер+" от "+Формат(ИсходящееСообщениеСВД.Документ.ДатаРегистрации, "ДФ=dd.MM.yyyy"));
		ИначеЕсли ИсходящееСообщениеСВД.ВидСообщения = Перечисления.ВидыСообщенийСВД.УведомлениеОДоставке Тогда
			ПараметрыОтправки.Вставить("Тема", "уведомление о доставке исх. №"+ИсходящееСообщениеСВД.Документ.ИсходящийНомер+" от "+Формат(ИсходящееСообщениеСВД.Документ.ИсходящаяДата, "ДФ=dd.MM.yyyy"));
		ИначеЕсли ИсходящееСообщениеСВД.ВидСообщения = Перечисления.ВидыСообщенийСВД.УведомлениеОРегистрации ИЛИ ИсходящееСообщениеСВД.ВидСообщения = Перечисления.ВидыСообщенийСВД.УведомлениеОбОшибке Тогда 
			ПараметрыОтправки.Вставить("Тема", "уведомление о регистрации исх. №"+ИсходящееСообщениеСВД.Документ.ИсходящийНомер+" от "+Формат(ИсходящееСообщениеСВД.Документ.ИсходящаяДата, "ДФ=dd.MM.yyyy"));
		//ИначеЕсли ИсходящееСообщениеСВД.ВидСообщения = Перечисления.ВидыСообщенийСВД.УведомлениеОбОшибке Тогда
		//	ПараметрыОтправки.Вставить("Тема", "уведомление об ошибке исх. №"+ИсходящееСообщениеСВД.Документ.ИсходящийНомер+" от "+Формат(ИсходящееСообщениеСВД.Документ.ИсходящаяДата, "ДФ=dd.MM.yyyy"));
		Иначе
			ПараметрыОтправки.Вставить("Тема", ИсходящееСообщениеСВД.ИдентификаторСообщения);
		КонецЕсли;
		//МиСофт-
		
		// Кому
		ПараметрыОтправки.Вставить(
			"Кому", ОбщегоНазначения.ПолучитьЗначениеРеквизита(НастройкаПриемаОтправки, "АдресОтправки"));
		
		// Вставка вложений
		МассивВложений = Новый Массив;
		МассивФайлов = РаботаСФайламиВызовСервера.ПолучитьВсеПодчиненныеФайлы(ИсходящееСообщениеСВД);
		//МиСофт+
		Текст = "";
		//МиСофт-
		Для каждого ФайлСсылка Из МассивФайлов Цикл
			
			ДвоичныеДанныеФайла = РаботаСФайламиВызовСервера.ПолучитьДвоичныеДанныеФайла(ФайлСсылка);
			
			АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанныеФайла);
			
			СтруктураВложения = Новый Структура();
			СтруктураВложения.Вставить("Адрес", АдресВоВременномХранилище);
			СтруктураВложения.Вставить("ИмяФайла", ФайлСсылка.Наименование + "." + ФайлСсылка.ТекущаяВерсияРасширение);
			МассивВложений.Добавить(СтруктураВложения);
			
			//МиСофт+
			// Текст
			Текст = Текст + "(See attached file: "+ФайлСсылка.Наименование+ ?(ЗначениеЗаполнено(ФайлСсылка.ТекущаяВерсияРасширение),".","") + ФайлСсылка.ТекущаяВерсияРасширение+")"+Символы.ПС;
			//МиСофт-

		КонецЦикла;
		//МиСофт+
		ПараметрыОтправки.Вставить("Текст", Текст);
		//МиСофт-
		ПараметрыОтправки.Вставить("Вложения", МассивВложений);
			
		Если ЛегкаяПочтаСервер.ОтправитьИнтернетПочта(ПараметрыОтправки, УчетнаяЗапись) Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли; 
		//ЛегкаяПочтаСервер.ОтправитьИнтернетПочта(ПараметрыОтправки, УчетнаяЗапись);	
		//
		//Возврат Истина;
		
	Исключение
		
		Информация = ИнформацияОбОшибке();
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'СВД. Отправка почты'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			ИсходящееСообщениеСВД.Метаданные(),
			ИсходящееСообщениеСВД,
			НСтр("ru='Невозможно отправить сообщение. '", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())
				+ ПодробноеПредставлениеОшибки(Информация));
		
		Возврат Ложь;
		
	КонецПопытки;
	
КонецФункции

// Отправить сообщения СВД
Функция ОтправитьСообщения(НастройкаПриемаОтправки, Транспорт) Экспорт
	
	Выборка = РаботаССВД.ПолучитьИсходящиеСообщенияДляОтправкиПоТранспорту(Транспорт);
	
	Пока Выборка.Следующий() Цикл
		
		ИсходящееСообщениеСВД = Выборка.Ссылка;
		ИсходящееСообщениеСВДОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Попытка
			
			Если ОтправитьСообщение(НастройкаПриемаОтправки, Транспорт, ИсходящееСообщениеСВД) Тогда
				
				ИсходящееСообщениеСВДОбъект.ДатаОтправки = ТекущаяДатаСеанса();
				ИсходящееСообщениеСВДОбъект.Отправлено = Истина;
				ИсходящееСообщениеСВДОбъект.Записать();
				
				ОтправляемыйДокумент = ИсходящееСообщениеСВДОбъект.Документ;
				
				// если это не уведомление - запишем в историю
				Если ЗначениеЗаполнено(ОтправляемыйДокумент) 
					И (ИсходящееСообщениеСВД.ВидСообщения = Перечисления.ВидыСообщенийСВД.ОсновнойДокумент
					Или ИсходящееСообщениеСВД.ВидСообщения = Перечисления.ВидыСообщенийСВД.ДокументОтвет) Тогда
					РаботаССВД.ЗаписатьВИсториюСостоянийСВД(ОтправляемыйДокумент, 
						ИсходящееСообщениеСВД, Справочники.ВидыСостоянийДокументовВСВД.Отправлен,
						ИсходящееСообщениеСВДОбъект.ИдентификаторСообщения);
					//МиСофт+	
					Если ИсходящееСообщениеСВД.ВидСообщения = Перечисления.ВидыСообщенийСВД.ОсновнойДокумент Тогда
						//ОбъектДокумента = ОтправляемыйДокумент.ПолучитьОбъект();
						//ЗаблокироватьДанныеДляРедактирования(ОбъектДокумента);
						//ОбъектДокумента.Отправлен = Истина;
						//ОбъектДокумента.Дата = ИсходящееСообщениеСВД.Дата;
						//ОбъектДокумента.Записать();
						//РазблокироватьДанныеДляРедактирования(ОбъектДокумента);
					КонецЕсли;
					//МиСофт-
				КонецЕсли;
				
			КонецЕсли;
			
		Исключение
			
			СообщениеОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'СВД. Отправка на сервер'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Документы.ИсходящееСообщениеСВД,
				ИсходящееСообщениеСВД, 
				СообщениеОбОшибке);
				
			ОтправляемыйДокумент = ОбщегоНазначения.ПолучитьЗначениеРеквизита(
				ИсходящееСообщениеСВД, "Документ");
			
			// если это не уведомление - запишем в историю
			Если ЗначениеЗаполнено(ОтправляемыйДокумент) Тогда
				
				РаботаССВД.ЗаписатьВИсториюСостоянийСВД(
					ОтправляемыйДокумент, 
					ИсходящееСообщениеСВД, 
					Справочники.ВидыСостоянийДокументовВСВД.Ошибка,
					ИсходящееСообщениеСВДОбъект.ИдентификаторСообщения,
					СообщениеОбОшибке);
					
			КонецЕсли;
			
		КонецПопытки;	
			
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

// Получить сообщения СВД
Функция ПолучитьСообщения(НастройкаПриемаОтправки, Транспорт) Экспорт
	
	МассивСообщенийСВД = Новый Массив;
	УчетнаяЗапись = ОбщегоНазначения.ПолучитьЗначениеРеквизита(НастройкаПриемаОтправки, "УчетнаяЗаписьПочты");
	СообщениеОбОшибке = "";
	Соединение = Почта.ИнтернетПочтаУстановитьСоединение(УчетнаяЗапись, , СообщениеОбОшибке);
	Если Соединение = Неопределено Тогда
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'СВД. Получение сообщения с сервера. Получение почты'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), 
			УровеньЖурналаРегистрации.Ошибка,
			НастройкаПриемаОтправки.Метаданные(),
			НастройкаПриемаОтправки,
			НСтр("ru = 'Невозможно подключиться к почтовому серверу.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
		Возврат МассивСообщенийСВД;
		
	КонецЕсли;

	ПараметрыЗагрузки = Почта.СформироватьСтруктуруПараметровЗагрузки();
	СообщениеОбОшибке = "";
	Сообщения = Почта.ПолучитьВходящиеСообщения(Соединение, ПараметрыЗагрузки, СообщениеОбОшибке);
	
	//МиСофт+
	Если Не Сообщения = Неопределено Тогда
		
		ИдентификаторыЗагруженныхСообщений = Новый Массив;
		Для каждого Сообщение Из Сообщения Цикл
			Вложения = Новый Массив; 
			СообщениеСВД = "";
			ВходящееСообщениеСВД = Неопределено;
			Для Каждого Вложение Из Сообщение.Вложения Цикл
				Если Найти(НРег(Вложение.Имя), ".xml") > 0 Тогда
					ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
					Вложение.Данные.Записать(ИмяВременногоФайла);
					//Вложения.Добавить(Новый Структура("Файл, ИмяВременногоФайла", "СВД", ИмяВременногоФайла));
					//СообщениеСВД = Новый Структура("ПутьКФайлуXML, ИмяФайлаXML", ИмяВременногоФайла, Вложение.Имя);
					СообщениеСВД = Новый Структура("ПутьКФайлу, ИмяФайла", ИмяВременногоФайла, Вложение.Имя);
					СообщениеСВД.Вставить("СодержаниеОшибки", "");
					СообщениеСВД.Вставить("ИзБазы", Ложь);
				Иначе
					ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
					Если ТипЗнч(Вложение.Данные) = Тип("ДвоичныеДанные") Тогда 
						Вложение.Данные.Записать(ИмяВременногоФайла);
						Вложения.Добавить(Новый Структура("Файл, ИмяВременногоФайла", Вложение.Имя, ИмяВременногоФайла));
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Если ТипЗнч(СообщениеСВД) = Тип("Структура") Тогда
				ВходящееСообщениеСВД = РаботаССВД.СоздатьВходящееСообщениеСВДИзXML(Транспорт, СообщениеСВД, Вложения, Сообщение);
				УдалитьФайлы(ИмяВременногоФайла);
			КонецЕсли;
			Для Каждого Вложение Из Вложения Цикл
				УдалитьФайлы(Вложение.ИмяВременногоФайла);
			КонецЦикла;
			Если ВходящееСообщениеСВД = Неопределено ИЛИ ВходящееСообщениеСВД.СообщениеУспешноПолучено Тогда
				ИдентификаторыЗагруженныхСообщений.Добавить(Сообщение.Идентификатор[0]);
			КонецЕсли;
		КонецЦикла;
		//МиСофт-
		СообщениеОбОшибке = "";
		Если Не Почта.УдалитьСообщенияВПочтовомЯщике(
			Соединение,
			ИдентификаторыЗагруженныхСообщений,
			СообщениеОбОшибке) Тогда	
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'СВД. Получение сообщения с сервера. Получение почты'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				НастройкаПриемаОтправки.Метаданные(),
				НастройкаПриемаОтправки,
				НСтр("ru = 'Невозможно удалить полученные сообщения. '", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())
					+ СообщениеОбОшибке);
			
		КонецЕсли;
	Иначе
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'СВД. Получение сообщения с сервера. Получение почты'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), 
			УровеньЖурналаРегистрации.Ошибка, 
			НастройкаПриемаОтправки.Метаданные(), НастройкаПриемаОтправки, 
			НСтр("ru = 'Невозможно загрузить сообщения. '", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())
				+ СообщениеОбОшибке);
		
	КонецЕсли;
	
	Соединение.Отключиться();
	
КонецФункции

// Возвращает формат сообщений в данном виде доставки транспорта
Функция ФорматСообщенияСВД() Экспорт
	
	Возврат Справочники.ФорматыСообщенийСВД.Сообщение1СДокументооборот;
	
КонецФункции	

// Возвращает Истина, если в данном виде доставки транспорта требуется заполнить участников
Функция ТребуетсяЗаполнитьСписокУчастников() Экспорт
	
	Возврат Истина;
	
КонецФункции	

// Получить наименование корреспондента в СВД
Функция ПолучитьНаименованиеКорреспондентаВСВД(Корреспондент, Транспорт) Экспорт
	
	Возврат РаботаССВД.ПолучитьНаименованиеКорреспондентаВСВДКлиентСервер(Корреспондент, Транспорт);
	
КонецФункции	

// Получить наименование организации в СВД
Функция ПолучитьНаименованиеОрганизацииВСВД(ОрганизацияДокумента, Транспорт) Экспорт
	
	Возврат РаботаССВД.ПолучитьНаименованиеОрганизацииВСВДКлиентСервер(ОрганизацияДокумента, Транспорт);
	
КонецФункции	

//МиСофт
// Получить код организации в СВД
Функция ПолучитьКодОрганизацииВСВД(ОрганизацияДокумента, Транспорт) Экспорт
	
	Возврат РаботаССВД.ПолучитьКодОрганизацииВСВДКлиентСервер(ОрганизацияДокумента, Транспорт);
	
КонецФункции	

// Получить сообщения СВД
Функция ПолучитьСообщения_1_4_8(НастройкаПриемаОтправки, Транспорт) Экспорт
	
	МассивСообщенийСВД = Новый Массив;
	УчетнаяЗапись = ОбщегоНазначения.ПолучитьЗначениеРеквизита(НастройкаПриемаОтправки, "УчетнаяЗаписьПочты");
	СообщениеОбОшибке = "";
	Соединение = Почта.ИнтернетПочтаУстановитьСоединение(УчетнаяЗапись, , СообщениеОбОшибке);
	Если Соединение = Неопределено Тогда
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'СВД. Получение сообщения с сервера. Получение почты'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), 
			УровеньЖурналаРегистрации.Ошибка,
			НастройкаПриемаОтправки.Метаданные(),
			НастройкаПриемаОтправки,
			НСтр("ru = 'Невозможно подключиться к почтовому серверу.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
		Возврат МассивСообщенийСВД;
		
	КонецЕсли;

	ПараметрыЗагрузки = Почта.СформироватьСтруктуруПараметровЗагрузки();
	СообщениеОбОшибке = "";
	Сообщения = Почта.ПолучитьВходящиеСообщения(Соединение, ПараметрыЗагрузки, СообщениеОбОшибке);
	
	//МиСофт+
	Если ТипЗнч(Сообщения) = Тип("Массив") Тогда
		
		ИдентификаторыЗагруженныхСообщений = Новый Массив;
		Для каждого Сообщение Из Сообщения Цикл
			Вложения = Новый Массив; 
			СообщениеСВД = "";
			ВходящееСообщениеСВД = Неопределено;
			Для Каждого Вложение Из Сообщение.Вложения Цикл
				Если Найти(НРег(Вложение.Имя), ".xml") > 0 Тогда
					ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
					Вложение.Данные.Записать(ИмяВременногоФайла);
					//Вложения.Добавить(Новый Структура("Файл, ИмяВременногоФайла", "СВД", ИмяВременногоФайла));
					СообщениеСВД = Новый Структура("ПутьКФайлуXML, ИмяФайлаXML", ИмяВременногоФайла, Вложение.Имя);
				Иначе
					ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
					Если ТипЗнч(Вложение.Данные) = Тип("ДвоичныеДанные") Тогда 
						Вложение.Данные.Записать(ИмяВременногоФайла);
						Вложения.Добавить(Новый Структура("Файл, ИмяВременногоФайла", Вложение.Имя, ИмяВременногоФайла));
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Если ТипЗнч(СообщениеСВД) = Тип("Структура") Тогда
				ВходящееСообщениеСВД = РаботаССВД.СоздатьВходящееСообщениеСВДИзXML(Транспорт, СообщениеСВД, Вложения, Сообщение);
				УдалитьФайлы(ИмяВременногоФайла);
			КонецЕсли;
			Для Каждого Вложение Из Вложения Цикл
				УдалитьФайлы(Вложение.ИмяВременногоФайла);
			КонецЦикла;
			Если ВходящееСообщениеСВД = Неопределено ИЛИ ВходящееСообщениеСВД.СообщениеУспешноПолучено Тогда
				ИдентификаторыЗагруженныхСообщений.Добавить(Сообщение.Идентификатор[0]);
			КонецЕсли;
		КонецЦикла;
		//МиСофт-
		СообщениеОбОшибке = "";
		Если Не Почта.УдалитьСообщенияВПочтовомЯщике(
			Соединение,
			ИдентификаторыЗагруженныхСообщений,
			СообщениеОбОшибке) Тогда	
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'СВД. Получение сообщения с сервера. Получение почты'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				НастройкаПриемаОтправки.Метаданные(),
				НастройкаПриемаОтправки,
				НСтр("ru = 'Невозможно удалить полученные сообщения. '", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())
					+ СообщениеОбОшибке);
			
		КонецЕсли;
	Иначе
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'СВД. Получение сообщения с сервера. Получение почты'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), 
			УровеньЖурналаРегистрации.Ошибка, 
			НастройкаПриемаОтправки.Метаданные(), НастройкаПриемаОтправки, 
			НСтр("ru = 'Невозможно загрузить сообщения. '", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())
				+ СообщениеОбОшибке);
		
	КонецЕсли;
	
	Соединение.Отключиться();
	
КонецФункции
