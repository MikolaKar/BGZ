
&НаКлиенте
Перем ПерваяАктивизация;

//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПапкаПриОткрытии = Справочники.РазделыНоменклатурыДел.ПустаяСсылка();
	Список.Параметры.УстановитьЗначениеПараметра("Раздел", ПапкаПриОткрытии);
	
	ПоказыватьДелаЗа = Год(ТекущаяДата());
	Организация = РаботаСОрганизациями.ПолучитьОрганизациюПоУмолчанию();
	УстановитьОтбор();
	
	ИспользоватьУчетПоОрганизациям = ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям");
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УстановитьОтборСписка(Настройки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьРазделыНоменклатурыДел" И (Параметр = ПоказыватьДелаЗа ИЛИ ПоказыватьДелаЗа = 0)  Тогда 
		Элементы.Разделы.Обновить();
	КонецЕсли;	
	
	Если ИмяСобытия = "СкопированаНоменклатураДел" И (Параметр = ПоказыватьДелаЗа ИЛИ ПоказыватьДелаЗа = 0)  Тогда 
		Элементы.Разделы.Обновить();
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьДелаЗаПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыПриАктивизацииСтроки(Элемент)
	
	Если ПерваяАктивизация = Истина Или ПерваяАктивизация = Неопределено Тогда
		ПерваяАктивизация = Ложь;
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ОбработкаОжидания", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ПараметрыФормы = Новый Структура;
	
	Если Копирование Тогда 
		ПараметрыФормы.Вставить("ЗначениеКопирования", Элементы.Разделы.ТекущаяСтрока);
	Иначе 
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("Родитель", Элементы.Разделы.ТекущаяСтрока);
		ЗначенияЗаполнения.Вставить("Год", ПоказыватьДелаЗа);
		
		Если ИспользоватьУчетПоОрганизациям Тогда 
			ЗначенияЗаполнения.Вставить("Организация", Организация);
		КонецЕсли;
		
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	КонецЕсли;
	
	ОткрытьФорму("Справочник.РазделыНоменклатурыДел.ФормаОбъекта", ПараметрыФормы, Элементы.Разделы);
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)

	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") 
		И ПараметрыПеретаскивания.Значение.Количество() > 0 
		И ТипЗнч(ПараметрыПеретаскивания.Значение[0]) = Тип("СправочникСсылка.НоменклатураДел") Тогда
		СтандартнаяОбработка = Ложь;
			
		Если ИзменитьРаздел(ПараметрыПеретаскивания.Значение, Строка) Тогда 
			Элементы.Список.Обновить();
			
			Если ПараметрыПеретаскивания.Значение.Количество() = 1 Тогда
				ПолноеОписание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Номенклатура дел ""%1"" перенесена в раздел ""%2""'"),
					ПараметрыПеретаскивания.Значение[0],
					Строка);
				
				ПоказатьОповещениеПользователя(
					НСтр("ru = 'Номенклатура дел перенесена.'"),
					ПолучитьНавигационнуюСсылку(ПараметрыПеретаскивания.Значение[0]),
					ПолноеОписание,
					БиблиотекаКартинок.Информация32);
			Иначе
				ПолноеОписание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Элементы номенклатуры дел (%1 шт.) перенесены в раздел ""%2""'"),
					ПараметрыПеретаскивания.Значение.Количество(),
					Строка);
				
				ПоказатьОповещениеПользователя(
					НСтр("ru = 'Элементы номенклатуры дел перенесены.'"),
					,
					ПолноеОписание,
					БиблиотекаКартинок.Информация32);
			КонецЕсли;

		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	ТекущийРаздел    = Элементы.Разделы.ТекущаяСтрока;
	ТекущийЭлементНД = Элементы.Список.ТекущаяСтрока;
	
	Отказ = Истина;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Раздел", ТекущийРаздел);
	ЗначенияЗаполнения.Вставить("Год", ПоказыватьДелаЗа);
	Если ИспользоватьУчетПоОрганизациям Тогда 
		ЗначенияЗаполнения.Вставить("Организация", Организация);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	Если Копирование Тогда 
		ПараметрыФормы.Вставить("ЗначениеКопирования", ТекущийЭлементНД);
	КонецЕсли;	
	
	Открытьформу("Справочник.НоменклатураДел.ФормаОбъекта", ПараметрыФормы, Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПечатьНоменклатурыДелВыполнить(Команда)
	
	ПараметрыПечати = Новый Структура;
	Если ЗначениеЗаполнено(ПоказыватьДелаЗа) Тогда 
		ПараметрыПечати.Вставить("Год", ПоказыватьДелаЗа);
	Иначе
		ПараметрыПечати.Вставить("Год", Год(ТекущаяДата()));
	КонецЕсли;	
	ПараметрыПечати.Вставить("Организация", Организация);
	ПараметрыПечати.Вставить("Подразделение", Подразделение);

	
	ТабДок = Новый ТабличныйДокумент;
	ПечатьНоменклатурыДел(ТабДок, ПараметрыПечати);

	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_НоменклатураДел";
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.Показать("Номенклатура дел");
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьИтоговойЗаписиВыполнить(Команда)
	
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("Год", ПоказыватьДелаЗа);
	ПараметрыПечати.Вставить("Организация", Организация);
	
	ТабДок = Новый ТабличныйДокумент;
	ПечатьИтоговойЗаписи(ТабДок, ПараметрыПечати);

	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_ИтоговаяЗапись";
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.Показать("Итоговая запись о категориях и количестве дел");
	
КонецПроцедуры

&НаКлиенте
Процедура Скопировать(Команда)
	
	ПараметрыФормы = Новый Структура("Год, Организация", ПоказыватьДелаЗа, Организация);
	ОткрытьФорму("Справочник.НоменклатураДел.Форма.ФормаКопирования", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЭлемент(Команда)
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Раздел", Элементы.Разделы.ТекущаяСтрока);
	ЗначенияЗаполнения.Вставить("Год", ПоказыватьДелаЗа);
	Если ИспользоватьУчетПоОрганизациям Тогда 
		ЗначенияЗаполнения.Вставить("Организация", Организация);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	Открытьформу("Справочник.НоменклатураДел.ФормаОбъекта", ПараметрыФормы, Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРаздел(Команда)
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Родитель", Элементы.Разделы.ТекущаяСтрока);
	ЗначенияЗаполнения.Вставить("Год", ПоказыватьДелаЗа);
	Если ИспользоватьУчетПоОрганизациям Тогда 
		ЗначенияЗаполнения.Вставить("Организация", Организация);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ОткрытьФорму("Справочник.РазделыНоменклатурыДел.ФормаОбъекта", ПараметрыФормы, Элементы.Разделы);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРазделы(Команда)
	
	ПараметрыФормы = Новый Структура("Год, Организация", ПоказыватьДелаЗа, Организация);
	ОткрытьФорму("Справочник.НоменклатураДел.Форма.ФормаЗаполненияРазделов", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервереБезКонтекста
Процедура ПечатьНоменклатурыДел(ТабДок, ПараметрыПечати)
	
	Справочники.НоменклатураДел.ПечатьНоменклатурыДел(ТабДок, ПараметрыПечати);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПечатьИтоговойЗаписи(ТабДок, ПараметрыПечати)
	
	Справочники.НоменклатураДел.ПечатьИтоговойЗаписи(ТабДок, ПараметрыПечати);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОжидания()
	
	Если Элементы.Разделы.ТекущаяСтрока <> Неопределено Тогда 
		Список.Параметры.УстановитьЗначениеПараметра("Раздел", Элементы.Разделы.ТекущаяСтрока);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборСписка(ПараметрыОтбора)

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда
		ПараметрыОтбора["Организация"] = Неопределено;
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("Год", ПараметрыОтбора["ПоказыватьДелаЗа"]);
	Разделы.Параметры.УстановитьЗначениеПараметра("Год", ПараметрыОтбора["ПоказыватьДелаЗа"]);
	
	Если ЗначениеЗаполнено(ПараметрыОтбора["Организация"]) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Организация",
			ПараметрыОтбора["Организация"]);
			
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Разделы.Отбор,
			"Организация",
			ПараметрыОтбора["Организация"]);
			
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "Организация");
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Разделы.Отбор, "Организация");	
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ПараметрыОтбора["Подразделение"]) Тогда 
		
		МассивПодразделений = Делопроизводство.ПолучитьПодразделениеИРодителей(ПараметрыОтбора["Подразделение"]);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Разделы.Отбор,
			"Подразделение",
			МассивПодразделений,
			ВидСравненияКомпоновкиДанных.ВСписке);
			
		МассивПодразделений = Делопроизводство.ПолучитьПодразделениеИПустуюСсылку(ПараметрыОтбора["Подразделение"]);	
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Раздел.Подразделение",
			МассивПодразделений,
			ВидСравненияКомпоновкиДанных.ВСписке);

	Иначе 
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "Раздел.Подразделение");	
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Разделы.Отбор, "Подразделение");
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьОтбор()

	ПараметрыОтбора = Новый Соответствие();
	ПараметрыОтбора.Вставить("ПоказыватьДелаЗа", ПоказыватьДелаЗа);	
	ПараметрыОтбора.Вставить("Организация",      Организация);	
	ПараметрыОтбора.Вставить("Подразделение",    Подразделение);	
	УстановитьОтборСписка(ПараметрыОтбора);
	
КонецПроцедуры	

&НаСервереБезКонтекста 
Функция ИзменитьРаздел(МассивНоменклатурДел, НовыйРаздел)
	
	Если МассивНоменклатурДел.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ИспользоватьУчетПоОрганизациям = ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям");
	Для Каждого НоменклатураДелСсылка Из МассивНоменклатурДел Цикл
		Если Не ДокументооборотПраваДоступа.ПолучитьПраваПоОбъекту(НоменклатураДелСсылка).Изменение Тогда 
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'У вас нет права на изменение номенклатуры дел ""%1"".'"),
				Строка(НоменклатураДелСсылка));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НовыйРаздел) И (НоменклатураДелСсылка.Год <> НовыйРаздел.Год) Тогда
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(	
				НСтр("ru = 'Год номенклатуры дел ""%1"" не совпадает с годом раздела'"),
				Строка(НоменклатураДелСсылка));
		КонецЕсли;
		
		Если ИспользоватьУчетПоОрганизациям Тогда 
			Если ЗначениеЗаполнено(НовыйРаздел) И ЗначениеЗаполнено(НоменклатураДелСсылка.Организация) 
				И НоменклатураДелСсылка.Организация <> НовыйРаздел.Организация Тогда 
				ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(	
					НСтр("ru = 'Организация номенклатуры дел ""%1"" не совпадает с организацией раздела'"),
					Строка(НоменклатураДелСсылка));
			КонецЕсли;
		КонецЕсли;	

	КонецЦикла;	
	
	РазделыИзменились = Ложь; 
	НачатьТранзакцию();
	Попытка
		Для Каждого НоменклатураДелСсылка Из МассивНоменклатурДел Цикл
			// Если тот же раздел, то ничего делать не надо
			Если НоменклатураДелСсылка.Раздел = НовыйРаздел Тогда
				Продолжить;
			КонецЕсли;
			
			НоменклатураДелОбъект = НоменклатураДелСсылка.ПолучитьОбъект();
			ЗаблокироватьДанныеДляРедактирования(НоменклатураДелОбъект.Ссылка);
			НоменклатураДелОбъект.Раздел = НовыйРаздел;
			НоменклатураДелОбъект.Записать();                   

			РазделыИзменились = Истина;
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Возврат РазделыИзменились;
	
КонецФункции	

