#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Параметры.Свойство("СертификатДляРасшифрования")
		ИЛИ ТипЗнч(Параметры.СертификатДляРасшифрования) <> Тип("СправочникСсылка.СертификатыЭП") Тогда
		
		ВызватьИсключение НСтр("ru = 'Не найден сертификат для подписания.'");
	КонецЕсли;
	
	// Чтение данных сертификата.
	СертификатДляРасшифрования = Параметры.СертификатДляРасшифрования;
	СертификатДляРасшифрованияОтпечаток = СертификатДляРасшифрования.Отпечаток;
	СертификатДляРасшифрованияУсиленный = СертификатДляРасшифрования.Усиленный;
	СертификатДляРасшифрованияНастройкиКриптографии =
		РаботаСЭП.ПрофильНастроекКриптографииПоСертификату(СертификатДляРасшифрования.Отпечаток);
	Если ЗначениеЗаполнено(СертификатДляРасшифрования.НазначениеКратко) Тогда
		НазначениеСертификата = СертификатДляРасшифрования.НазначениеКратко;
	Иначе
		НазначениеСертификата = СтрЗаменить(СокрЛП(СертификатДляРасшифрования.Назначение),
			Символы.ПС, ", ");
	КонецЕсли;
	СертификатДляРасшифрованияПредставлениеHTML = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"<html>
		|<body>
		|<style>
		|* { font-family: sans-serif; font-size: 8pt; }
		|body { padding: 0; margin: 8px; overflow: auto; }
		|table { border-collapse: collapse; }
		|table td { padding: 0 4px 0 0; border: 0; vertical-align: top; }
		|table td.col1 { vertical-align: top; color: #606060; width: 80px; }
		|</style>
		|<table>
		|<tr><td class=""col1"">%1:</td><td>%2</td></tr>
		|<tr><td class=""col1"">%3:</td><td>%4</td></tr>
		|<tr><td class=""col1"">%5:</td><td>%6</td></tr>
		|<tr><td class=""col1"">%7:</td><td>%8</td></tr>
		|</table>
		|</body>
		|</html>",
		НСтр("ru = 'Кому выдан'"),
		СертификатДляРасшифрования.КомуВыдан,
		НСтр("ru = 'Кем выдан'"),
		СертификатДляРасшифрования.КемВыдан,
		НСтр("ru = 'Действует до'"),
		Формат(СертификатДляРасшифрования.ДатаОкончания, "ДФ=dd.MM.yyyy"),
		НСтр("ru = 'Назначение'"),
		НазначениеСертификата);
	
	// Установка начальной видимости элементов.
	Элементы.Пароль.Видимость = Не СертификатДляРасшифрованияУсиленный;
	Элементы.ГруппаИнформацияДляУсиленных.Видимость = СертификатДляРасшифрованияУсиленный;
	
	ФайлСсылка = Неопределено;
	Если Параметры.Свойство("ФайлСсылка") Тогда
		ФайлСсылка = Параметры.ФайлСсылка;
	КонецЕсли;
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Расшифровать ""%1""'"),
		Строка(ФайлСсылка));
	
	ПоказыватьИнструкции = ПолучитьФункциональнуюОпцию("ИспользоватьИнструкции");
	ПолучитьИнструкции();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Настройки["ПоказыватьИнструкции"] <> Неопределено
		И ПолучитьФункциональнуюОпцию("ИспользоватьИнструкции") Тогда
		
		ПолучитьИнструкции();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	ОбработкаВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСертификат(Команда)
	
	ПоказатьЗначение(Неопределено, СертификатДляРасшифрования);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаВыбора()
	
	// Возвращаемое значение:
	//  Структура -
	//   Пароль - Строка - Пароль к закрытому ключу.
	//   НастройкиКриптографии - Структура или Неопределено, если нет связки с настройками криптографии 
	//    ПровайдерЭП - Строка
	//    ПутьМодуляКриптографии - Строка
	//    ТипПровайдераЭП - Число
	//    АлгоритмПодписи - Строка
	//    АлгоритмХеширования - Строка
	//    АлгоритмШифрования - Строка
	
	ВозвратПароль = Пароль;
	Если ПустаяСтрока(Пароль) И НЕ ПустаяСтрока(Элементы.Пароль.ТекстРедактирования) Тогда
		ВозвратПароль = Элементы.Пароль.ТекстРедактирования;
	КонецЕсли;
	
	ВыбранныйСертификат = ЭлектроннаяПодписьКлиент.ПолучитьСертификатПоОтпечатку(СертификатДляРасшифрованияОтпечаток);
	НастройкиКриптографии = Новый Структура(
		"ПровайдерЭП,
		|ПутьМодуляКриптографии,
		|ТипПровайдераЭП,
		|АлгоритмПодписи,
		|АлгоритмХеширования,
		|АлгоритмШифрования");
	ЗаполнитьЗначенияСвойств(НастройкиКриптографии, СертификатДляРасшифрованияНастройкиКриптографии);
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("НастройкиКриптографии", НастройкиКриптографии);
	
	Если СертификатДляРасшифрованияУсиленный Тогда
		СтруктураВозврата.Вставить("Пароль", "");
	Иначе
		СтруктураВозврата.Вставить("Пароль", ВозвратПароль);
	КонецЕсли;
	
	Закрыть(СтруктураВозврата);
	
КонецПроцедуры

#Область РаботаСИнструкциями

&НаСервере
Процедура ПолучитьИнструкции()
	
	РаботаСИнструкциями.ПолучитьИнструкции(ЭтаФорма, 50, 80);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнструкцияПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСИнструкциямиКлиент.ОткрытьСсылку(ДанныеСобытия.Href, ДанныеСобытия.Element, Элемент.Документ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьИнструкции(Команда)
	
	ПоказыватьИнструкции = Не ПоказыватьИнструкции;
	ПолучитьИнструкции();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
