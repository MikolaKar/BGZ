#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Если Не Пользователи.ЭтоПолноправныйПользователь() Тогда
			Объект.Пользователь = Пользователи.ТекущийПользователь();
		КонецЕсли;
		
		Если Параметры.Свойство("ДвоичныеДанныеСертификата") Тогда
			АдресСертификата = ПолучитьИмяВременногоФайла("cer");
			Параметры.ДвоичныеДанныеСертификата.Записать(АдресСертификата);
		КонецЕсли;
		
		Если Параметры.Свойство("СтруктураСертификата")
			И ТипЗнч(Параметры.СтруктураСертификата) = Тип("Структура") Тогда
			
			Объект.Отпечаток = Параметры.СтруктураСертификата.Отпечаток;
			Объект.ДатаОкончания = Параметры.СтруктураСертификата.ДействителенДо;
			Объект.КомуВыдан = Параметры.СтруктураСертификата.КомуВыдан;
			Объект.КемВыдан = Параметры.СтруктураСертификата.КемВыдан;
			Объект.Назначение = Параметры.СтруктураСертификата.Назначение;
			
			Модифицированность = Истина;
			
		КонецЕсли;
		
	Иначе
		
		ДвоичныеДанныеСертификата = ПолучитьДвоичныеДанныеСертификата();
		
		АдресСертификата = ПолучитьИмяВременногоФайла("cer");
		ДвоичныеДанныеСертификата.Записать(АдресСертификата);
		
	КонецЕсли;
	
	Элементы.Пользователь.Видимость = Пользователи.ЭтоПолноправныйПользователь();
	
	Профили = РаботаСЭП.ПрофилиНастроекКриптографии();
	ЗначениеВРеквизитФормы(Профили, "ПрофилиНастроекКриптографии");
	
	#Если ВебКлиент Тогда
		Элементы.ОткрытьСертификат.Видимость = Ложь;
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.Ссылка.Пустая() Тогда
		ПодключитьОбработчикОжидания("ОпределитьПрофильНастроекКриптографии", 0.2, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Объект.Ссылка.Пустая() Тогда
		ДвоичныеДанныеСертификата = Новый ДвоичныеДанные(АдресСертификата);
		ТекущийОбъект.ФайлСертификата = Новый ХранилищеЗначения(ДвоичныеДанныеСертификата);
		ТекущийОбъект.Наименование = ТекущийОбъект.КомуВыдан;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьСертификат(Команда)
	
	#Если Не ВебКлиент Тогда
		АдресСертификатаНаКлиенте = ПолучитьИмяВременногоФайла("cer");
		ДвоичныеДанныеСертификата = ПолучитьДвоичныеДанныеСертификата();
		ДвоичныеДанныеСертификата.Записать(АдресСертификатаНаКлиенте);
		ЗапуститьПриложение(АдресСертификатаНаКлиенте);
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьПрофильКриптографии(Команда)
	
	ОпределитьПрофильНастроекКриптографии();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьДвоичныеДанныеСертификата()
	
	Если ЗначениеЗаполнено(АдресСертификата) Тогда
		Возврат Новый ДвоичныеДанные(АдресСертификата);
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Сертификаты.ФайлСертификата
		|ИЗ
		|	Справочник.СертификатыЭП КАК Сертификаты
		|ГДЕ
		|	Сертификаты.Отпечаток = &Отпечаток";
	Запрос.УстановитьПараметр("Отпечаток", Объект.Отпечаток);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		ВызватьИсключение НСтр("ru = 'Не определен сертификат'");
	КонецЕсли;
	
	Возврат Выборка.ФайлСертификата.Получить();

КонецФункции

&НаКлиенте
Процедура ОпределитьПрофильНастроекКриптографии()
	
	Если НЕ ПодключитьРасширениеРаботыСКриптографией() Тогда
		ТекстПредупреждения = НСтр("ru = 'Для определения профиля криптографии, соответствующего сертификату,
                                    |необходимо установить расширение работы с криптографией.'");
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВидОперации", НСтр("ru = 'Определение профиля криптографии'"));
	ПараметрыФормы.Вставить("СертификатЭП", Объект.КомуВыдан);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОпределитьПрофильНастроекКриптографииЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.СертификатыЭП.Форма.ЗапросПароляДляХранения", ПараметрыФормы,,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьПрофильНастроекКриптографииЗавершение(Результат, Параметры) Экспорт
	
	СтруктураВозврата = Результат;
	
	Если ТипЗнч(СтруктураВозврата) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	// Тест сертификата
	
	// Блок проверки установленных криптосредств на компьютере.
	Попытка
		МенеджерКриптографии = ЭлектроннаяПодписьКлиент.ПолучитьМенеджерКриптографии();
	Исключение
		ТекстПредупреждения = НСтр("ru = 'Не удалось создать менеджер криптографии на компьютере.'");
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
		Возврат;
	КонецПопытки;
	
	// Блок проверки наличия сертификата в хранилище сертификатов компьютера.
	Сертификат = ЭлектроннаяПодписьКлиент.ПолучитьСертификатПоОтпечатку(Объект.Отпечаток);
	Если Сертификат = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru = 'Сертификат не найден в хранилище личных сертификатов.'");
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	// Блок проверки сертификата на корректность.
	Попытка
		МенеджерКриптографии.ПроверитьСертификат(
			Сертификат,
			РежимПроверкиСертификатаКриптографии.РазрешитьТестовыеСертификаты);
	Исключение
		Инфо = ИнформацияОбОшибке();
		ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Произошла ошибка при проверке сертификата:
                  |%1'"),
			КраткоеПредставлениеОшибки(Инфо));
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
		Возврат;
	КонецПопытки;
	
	// Определение профиля
	Для Каждого Профиль Из ПрофилиНастроекКриптографии Цикл
		Если ТестЭПИШифрования(Объект.Отпечаток, СтруктураВозврата.ПарольПользователя, Профиль) Тогда
			Объект.ПрофильНастроекКриптографии = Профиль.Ссылка;
			ПровайдерЭП = Профиль.ПровайдерЭП;
			ТипПровайдераЭП = Профиль.ТипПровайдераЭП;
			АлгоритмПодписи = Профиль.АлгоритмПодписи;
			АлгоритмХеширования = Профиль.АлгоритмХеширования;
			АлгоритмШифрования = Профиль.АлгоритмШифрования;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	ТекстПредупреждения = НСтр("ru = 'Не определен профиль криптографии, соответствующий сертификату.
                                |Возможно был введен неверный пароль.'");
	ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
	
КонецПроцедуры

&НаКлиенте
Функция ТестЭПИШифрования(Отпечаток, Пароль, НастройкиКриптографии)
		
	Попытка
		МенеджерКриптографии = ЭлектроннаяПодписьКлиент.ПолучитьМенеджерКриптографии(Ложь, НастройкиКриптографии);
	Исключение
		// Пропускаем провайдер, не установленный на ПК.
		Возврат Ложь;
	КонецПопытки;
	
	Сертификат = ЭлектроннаяПодписьКлиент.ПолучитьСертификатПоОтпечатку(Объект.Отпечаток);
	Если Сертификат = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	МенеджерКриптографии.ПарольДоступаКЗакрытомуКлючу = Пароль;
	
	// Блок проверки шифрования/расшифрования.
	ОтпечатокДвоичныеДанные = Сертификат.Отпечаток;
	Попытка
		ДвоичныеДанные = МенеджерКриптографии.Зашифровать(ОтпечатокДвоичныеДанные, Сертификат);
		РасшифрованныеДвоичныеДанные = МенеджерКриптографии.Расшифровать(ДвоичныеДанные);
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	// Блок проверки ЭП.
	Попытка
		ДвоичныеДанные = МенеджерКриптографии.Подписать(ОтпечатокДвоичныеДанные, Сертификат);
		МенеджерКриптографии.ПроверитьПодпись(ОтпечатокДвоичныеДанные, ДвоичныеДанные, Сертификат);
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти
