#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Заполнение списка сертификатов.
	Если Не Параметры.Свойство("СертификатыПользователя")
		ИЛИ ТипЗнч(Параметры.СертификатыПользователя) <> Тип("ТаблицаЗначений") Тогда
		
		ВызватьИсключение НСтр("ru = 'Не найдены сертификаты для расшифрования.'");
	КонецЕсли;
	Если Параметры.СертификатыПользователя.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	Для Каждого Сертификат Из Параметры.СертификатыПользователя Цикл
		НоваяСтрока = Сертификаты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Сертификат);
	КонецЦикла;
	
	// Установка начальной видимости элементов.
	Элементы.ГруппаИнформацияДляУсиленных.Видимость = Ложь;
	
	ФайлСсылка = Неопределено;
	Если Параметры.Свойство("ФайлСсылка") Тогда
		ФайлСсылка = Параметры.ФайлСсылка;
	КонецЕсли;
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Расшифровать ""%1""'"),
		Строка(ФайлСсылка));
	
	ПоказыватьИнструкции = ПолучитьФункциональнуюОпцию("ИспользоватьИнструкции");
	ПолучитьИнструкции();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Сертификаты.Количество() = 0 Тогда
		ТекстПредупреждения = РаботаСЭПКлиентСервер.СообщениеОбОтсутствииУстановленныхСертификатовДляРасшифрования();
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Настройки["ПоказыватьИнструкции"] <> Неопределено
		И ПолучитьФункциональнуюОпцию("ИспользоватьИнструкции") Тогда
		
		ПолучитьИнструкции();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСертификаты

&НаКлиенте
Процедура СертификатыПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СертификатУсиленный = Элемент.ТекущиеДанные.Усиленный;
	
	Элементы.Пароль.Доступность = Не СертификатУсиленный;
	Элементы.ГруппаИнформацияДляУсиленных.Видимость = СертификатУсиленный;
	
КонецПроцедуры

&НаКлиенте
Процедура СертификатыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)

	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СертификатыПередУдалением(Элемент, Отказ)

	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	ОбработкаВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСертификат(Команда)
	
	ТекущиеДанные = Элементы.Сертификаты.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(Неопределено, ТекущиеДанные.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаВыбора()
	
	// Возвращаемое значение:
	//  Структура -
	//   Пароль - Строка - Пароль к закрытому ключу.
	//   НастройкиКриптографии - Структура или Неопределено, если нет связки с настройками криптографии 
	//    ПровайдерЭП - Строка
	//    ПутьМодуляКриптографии - Строка
	//    ТипПровайдераЭП - Число
	//    АлгоритмПодписи - Строка
	//    АлгоритмХеширования - Строка
	//    АлгоритмШифрования - Строка
	
	ТекущиеДанные = Элементы.Сертификаты.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ВозвратПароль = Пароль;
	Если ПустаяСтрока(Пароль) И НЕ ПустаяСтрока(Элементы.Пароль.ТекстРедактирования) Тогда
		ВозвратПароль = Элементы.Пароль.ТекстРедактирования;
	КонецЕсли;
	
	Если ТекущиеДанные.Ссылка.Пустая() Тогда
		НастройкиКриптографии = Неопределено;
	Иначе
		НастройкиКриптографии = Новый Структура(
			"ПровайдерЭП,
			|ПутьМодуляКриптографии,
			|ТипПровайдераЭП,
			|АлгоритмПодписи,
			|АлгоритмХеширования,
			|АлгоритмШифрования");
		ЗаполнитьЗначенияСвойств(НастройкиКриптографии, ТекущиеДанные);
	КонецЕсли;
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("НастройкиКриптографии", НастройкиКриптографии);
	
	Если ТекущиеДанные.Усиленный Тогда
		СтруктураВозврата.Вставить("Пароль", "");
	Иначе
		СтруктураВозврата.Вставить("Пароль", ВозвратПароль);
	КонецЕсли;
	
	Закрыть(СтруктураВозврата);
	
КонецПроцедуры

#Область РаботаСИнструкциями

&НаСервере
Процедура ПолучитьИнструкции()
	
	РаботаСИнструкциями.ПолучитьИнструкции(ЭтаФорма, 70, 100);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнструкцияПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСИнструкциямиКлиент.ОткрытьСсылку(ДанныеСобытия.Href, ДанныеСобытия.Element, Элемент.Документ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьИнструкции(Команда)
	
	ПоказыватьИнструкции = Не ПоказыватьИнструкции;
	ПолучитьИнструкции();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
