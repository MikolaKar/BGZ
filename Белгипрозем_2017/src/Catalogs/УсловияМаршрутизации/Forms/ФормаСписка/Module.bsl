
&НаКлиенте
Процедура СписокТиповОбъектовПриАктивизацииСтроки(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Список.Отбор,
		"ТипОбъекта",
		Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если НЕ Копирование Тогда
		Отказ = Истина;
		ПараметрыФормы = Новый Структура("ТипОбъекта", Элементы.СписокТиповОбъектов.ТекущиеДанные.Ссылка);
		ОткрытьФорму("Справочник.УсловияМаршрутизации.ФормаОбъекта", ПараметрыФормы, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Для Каждого ТипОбъекта Из Перечисления.ТипыОбъектов Цикл
		УстановитьОформлениеСписка(ТипОбъекта, СписокТиповОбъектов.УсловноеОформление, "Ссылка");	
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура УстановитьОформлениеСписка(НайденныйЭлемент, Знач УсловноеОформление, ИмяПоля)

	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементОтбораДанных = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПоля);
	ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораДанных.ПравоеЗначение = НайденныйЭлемент;
	ЭлементОтбораДанных.Использование = Истина;
	
	ИндексЗначенияПеречисления = Перечисления.ТипыОбъектов.Индекс(НайденныйЭлемент);
	ИмяЗначенияПеречисления = Метаданные.Перечисления.ТипыОбъектов.ЗначенияПеречисления[ИндексЗначенияПеречисления].Имя;
	
	Если Метаданные.Справочники.Найти(ИмяЗначенияПеречисления) <> Неопределено Тогда	
		Если НЕ ПравоДоступа("Чтение", Метаданные.Справочники[ИмяЗначенияПеречисления]) Тогда 
			ЭлементОформления = ЭлементУсловногоОформления.Оформление.Элементы.Найти("Видимость");
			ЭлементОформления.Значение =  Ложь; 
			ЭлементОформления.Использование = Истина;
		КонецЕсли;
	ИначеЕсли Метаданные.БизнесПроцессы.Найти(ИмяЗначенияПеречисления) <> Неопределено Тогда	
		Если НЕ ПравоДоступа("Чтение", Метаданные.БизнесПроцессы[ИмяЗначенияПеречисления]) Тогда 
			ЭлементОформления = ЭлементУсловногоОформления.Оформление.Элементы.Найти("Видимость");
			ЭлементОформления.Значение =  Ложь; 
			ЭлементОформления.Использование = Истина;
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры