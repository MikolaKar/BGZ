
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПоПользователю = Пользователи.ТекущийПользователь();
	
	ОтобразитьУведомленияПоПользователю();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.Объект Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(, Элементы.Список.ТекущиеДанные.Объект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УдалитьУведомленияПрограммы(Команда)
	
	ТекстВопрос = НСтр("ru = 'Удалить отмеченные уведомления программы?'");
	
	ТекстЗаголовкаВопроса = НСтр("ru = 'Удаление уведомлений'");
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"УдалитьУведомленияПрограммыПродолжение", ЭтотОбъект);
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопрос, РежимДиалогаВопрос.ДаНет,,, ТекстЗаголовкаВопроса);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьУведомленияПрограммыПродолжение(Результат, Параметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ОсталисьУведомленияДляПользователя = УдалитьУведомления(Элементы.Список.ВыделенныеСтроки);
	
	Если НЕ ОсталисьУведомленияДляПользователя Тогда
		Закрыть();
	Иначе
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НапомнитьПозже(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВсеИЗакрыть(Команда)
	
	Элементы.Список.Обновить();
	
	ТекстВопрос = НСтр("ru = 'Удалить все уведомления программы?'");
	
	ТекстЗаголовкаВопроса = НСтр("ru = 'Удаление уведомлений'");
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"УдалитьВсеИЗакрытьПродолжить", ЭтотОбъект);
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопрос, РежимДиалогаВопрос.ДаНет,,, ТекстЗаголовкаВопроса);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВсеИЗакрытьПродолжить(Результат, Параметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьВсеУведомленияПользователя(ПоПользователю);
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет параметр Пользователь для реквизита Список (динамический список).
// Параметр заполняет в зависимости от значения реквизита ПоПользователю.
//
&НаСервере
Процедура ОтобразитьУведомленияПоПользователю()
	
	Если ЗначениеЗаполнено(ПоПользователю) Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Пользователь", ПоПользователю);
	Иначе
		ПараметрПользователь = 
			Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Пользователь"));
		ПараметрПользователь.Использование = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьВсеУведомленияПользователя(Пользователь)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СправочникУведомленияПрограммы.Ссылка
		|ИЗ
		|	Справочник.УведомленияПрограммы КАК СправочникУведомленияПрограммы
		|ГДЕ
		|	СправочникУведомленияПрограммы.ПометкаУдаления = ЛОЖЬ
		|	И СправочникУведомленияПрограммы.Пользователь = &Пользователь";
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		УведомлениеОбъект = Выборка.Ссылка.ПолучитьОбъект();
		УведомлениеОбъект.УстановитьПометкуУдаления(Истина);
		
	КонецЦикла;
	
КонецПроцедуры

// Удаляет переданные уведомления программы
//
// Параметры:
//  МассивУведомлений  - Массив - массив объектов типа СправочникСсылка.УведомленияПрограммы
//
// Возвращаемое значение:
//   Булево - принимает значение Истина, если еще остались уведомления для текущего пользователи, иначе Ложь
//
&НаСервереБезКонтекста
Функция УдалитьУведомления(Знач МассивУведомлений)
	
	НачатьТранзакцию();
	
	Для Каждого Уведомление ИЗ МассивУведомлений Цикл
		
		УведомлениеОбъект = Уведомление.ПолучитьОбъект();
		УведомлениеОбъект.УстановитьПометкуУдаления(Истина);
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	Возврат РаботаСУведомлениямиПрограммыСервер.ЕстьУведомленияДляТекущегоПользователя();
	
КонецФункции

#КонецОбласти



