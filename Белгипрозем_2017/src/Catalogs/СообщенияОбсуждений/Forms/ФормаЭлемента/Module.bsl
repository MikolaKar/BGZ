#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		
		Если Параметры.Свойство("Тема") И ЗначениеЗаполнено(Параметры.Тема) Тогда
			
			// Создание нового сообщения в теме
			Объект.ВладелецСообщения = Параметры.Тема;
			Предмет = Объект.ВладелецСообщения.Документ;
			
		ИначеЕсли Параметры.Свойство("Сообщение") Тогда
			
			// Создание нового сообщения в ответ на сообщение
			Объект.Родитель = Параметры.Сообщение.Ссылка;
			Объект.ВладелецСообщения = Объект.Родитель.ВладелецСообщения;
			Предмет = Объект.ВладелецСообщения.Документ;
			
		ИначеЕсли Параметры.Свойство("Предмет") Тогда
			
			// Создание темы по предмету обсуждения
			Предмет = Параметры.Предмет;
			ТемаРаздел = Справочники.ПапкиФорума.ТемыДокументов;
			ТемаНаименование = НСтр("ru = 'Обсуждение ""%1""'");
			ТемаНаименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТемаНаименование, Предмет);
			Объект.ПервоеСообщениеТемы = Истина;
			
		ИначеЕсли Параметры.Свойство("ТемаРаздел") Тогда
			
			// Создание темы в разделе
			ТемаРаздел = Параметры.ТемаРаздел;
			Объект.ПервоеСообщениеТемы = Истина;
			
		ИначеЕсли Параметры.Свойство("ЗначенияЗаполнения") 
			И Параметры.ЗначенияЗаполнения.Свойство("Тема") Тогда
			
			Объект.ВладелецСообщения = Параметры.ЗначенияЗаполнения.Тема;
			Предмет = Объект.ВладелецСообщения.Документ;
			
		ИначеЕсли Параметры.Свойство("ЗначенияЗаполнения") 
			И Параметры.ЗначенияЗаполнения.Свойство("Предмет") Тогда
			
			Предмет = Параметры.ЗначенияЗаполнения.Предмет;
			
		ИначеЕсли Параметры.Свойство("Основание") И ЗначениеЗаполнено(Параметры.Основание) Тогда
			
			Основание = Параметры.Основание;
			Если ТипЗнч(Основание) = Тип("СправочникСсылка.ТемыОбсуждений") Тогда
				
				ТемаОснование = Основание;
				ТемаРаздел = ТемаОснование.Папка;
				ТемаНаименование = ТемаОснование.Наименование;
				
				РаботаСРабочимиГруппами.ФормаДокументаДобавитьУчастников(
					ЭтаФорма,
					РаботаСРабочимиГруппами.ПолучитьРабочуюГруппуДокумента(ТемаОснование));
				ТемаРабочаяГруппа = РабочаяГруппаТаблица.Количество() <> 0;
				
				Объект.ПервоеСообщениеТемы = Истина;
				
			КонецЕсли;
			
		Иначе
			
			Сообщение = НСтр("ru = 'Для создания нового сообщения необходимо сначала выбрать тему обсуждения'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение,,,, Отказ);
			
			Возврат;
			
		КонецЕсли;
		
		Если Параметры.Свойство("ТекстНовогоСообщения") Тогда
			
			Объект.ТекстСообщения = Параметры.ТекстНовогоСообщения;
			
		КонецЕсли;
		
	Иначе
		
		ВремяСоздания = Макс(Объект.ДатаСоздания, Объект.ДатаИзменения);
		ОбновитьФайлСообщения();
		ОбновитьДанныеТемы();
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Родитель) Тогда
		
		ПредставлениеТекстаСообщенияРодителя = СокрЛП(Объект.Родитель.ТекстСообщения);
		ПредставлениеТекстаСообщенияРодителя = СтрЗаменить(ПредставлениеТекстаСообщенияРодителя, Символы.ПС, " ");
		ПозицияДвойногоПробела = Найти(ПредставлениеТекстаСообщенияРодителя, " " + " ");
		Пока ПозицияДвойногоПробела > 0 Цикл
			ПредставлениеТекстаСообщенияРодителяПрав = Сред(ПредставлениеТекстаСообщенияРодителя, ПозицияДвойногоПробела);
			ПредставлениеТекстаСообщенияРодителяПрав = сокрЛ(ПредставлениеТекстаСообщенияРодителяПрав);
			ПредставлениеТекстаСообщенияРодителяЛев = Лев(ПредставлениеТекстаСообщенияРодителя, ПозицияДвойногоПробела);
			ПредставлениеТекстаСообщенияРодителя = ПредставлениеТекстаСообщенияРодителяЛев + ПредставлениеТекстаСообщенияРодителяПрав;
			ПозицияДвойногоПробела = Найти(ПредставлениеТекстаСообщенияРодителя, " " + " ");
		КонецЦикла;
		
		ДатаСообщенияРодитель = Макс(Объект.Родитель.ДатаСоздания, Объект.Родитель.ДатаИзменения); 
		ДатаСообщенияРодительВФормате = Формат(ДатаСообщенияРодитель, "ДФ='dd.MM.yyyy HH:mm'");
		
		ВОтветНа = 
			Строка(Объект.Родитель.Автор) + ", " 
			+ ДатаСообщенияРодительВФормате  + ", " 
			+ ПредставлениеТекстаСообщенияРодителя;
		
	КонецЕсли;
	
	// Режим чтения
	УстановитьРежимЧтения();
	
	// Прочтение
	ОповеститьОПрочтении = РаботаСПрочтениями.УстановитьСвойствоПрочтен(Объект.Ссылка);
	
	// Файлы
	Файлы.Параметры.УстановитьЗначениеПараметра("ВладелецФайла", Объект.Ссылка);
	Файлы.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", ПользователиКлиентСервер.ТекущийПользователь());
	РаботаСФайламиВызовСервера.ЗаполнитьУсловноеОформлениеСпискаФайлов(Файлы);
	
	// Фотографии
	УстановитьРаботуСФотографиями();
	
	// Голосование
	ГолосованиеВПроцессе = Объект.ДобавленоГолосование И ЗначениеЗаполнено(Объект.Ссылка);
	ДоступноГолосование = Объект.ДобавленоГолосование И Не РежимЧтенияСообщения;
	ОбновитьГолосованиеСервер();
	
	// Рабочая группа
	Если ВозможноВедениеРабочейГруппы() Тогда
		РаботаСРабочимиГруппами.ДокументУстановитьУсловноеОформлениеСпискаРабочейГруппы(ЭтаФорма);
	КонецЕсли;
	
	// Настройка отображения формы
	УстановитьЗаголовокФормы();
	УстановитьВидимостьЭлементов();
	
	// Показ помеченных на удаление файлов
	ПоказатьПомеченныеНаУдаление = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		ЭтаФорма.ИмяФормы,
		"ПоказатьПомеченныеНаУдаление",
		Ложь);
	НастроитьПоказПомеченныхНаУдалениеФайлов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РаботаСПрочтениямиКлиент.ОповеститьОПрочтении(Объект.Ссылка, ОповеститьОПрочтении);
	
	УстановитьДоступностьФайловыхКоманд();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если Не ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ИсточникВыбора) = Тип("УправляемаяФорма")
		И ИсточникВыбора.Заголовок = НСтр("ru = 'Выбор сообщения из темы'") Тогда
		
			ВыбратьРодителя(ВыбранноеЗначение);
			
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИмпортФайловЗавершен" Тогда
		ОбработатьОповещениеОНовыхФайлахСервер();
		Если Параметр <> Неопределено Тогда
			Элементы.Файлы.ТекущаяСтрока = Параметр;
		КонецЕсли;
		Если КоличествоФайлов > 1 Тогда
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаФайлы;
		КонецЕсли;
		УстановитьДоступностьФайловыхКоманд();
		УстановитьДоступностьКоманд(Элементы.Файлы.ТекущиеДанные);
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_Файл" И Параметр.Событие = "СозданФайл" Тогда
		Если Параметр <> Неопределено Тогда
			ВладелецФайла = Неопределено;
			Если Параметр.Свойство("Владелец", ВладелецФайла) Тогда
				Если ВладелецФайла = Объект.Ссылка Тогда
					ОбработатьОповещениеОНовыхФайлахСервер();
					ФайлСозданный = Неопределено;
					Если Параметр.Свойство("Файл", ФайлСозданный) Тогда
						Элементы.Файлы.ТекущаяСтрока = ФайлСозданный;
					КонецЕсли;
					Если КоличествоФайлов > 1 Тогда
						Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаФайлы;
					КонецЕсли;
					УстановитьДоступностьФайловыхКоманд();
					УстановитьДоступностьКоманд(Элементы.Файлы.ТекущиеДанные);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// Рабочая группа
	Если ВозможноВедениеРабочейГруппы() Тогда
		
		РабочаяГруппаОбновитьНаСервере();
		
		ТемаРабочаяГруппа = РабочаяГруппаТаблица.Количество() <> 0;
		
		// Формирование исходной рабочей группы
		Участники = РегистрыСведений.РабочиеГруппы.ПолучитьУчастниковПоОбъекту(Объект.ВладелецСообщения);
		ИсходнаяРабочаяГруппа.Очистить();
		Для Каждого Эл Из Участники Цикл
			Строка = ИсходнаяРабочаяГруппа.Добавить();
			Строка.Участник = Эл.Участник;
			Строка.ОсновнойОбъектАдресации = Эл.ОсновнойОбъектАдресации;
			Строка.ДополнительныйОбъектАдресации = Эл.ДополнительныйОбъектАдресации;
		КонецЦикла;
		
	КонецЕсли;
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ОбщегоНазначенияДокументооборотКлиент.УдалитьПустыеСтрокиТаблицы(РабочаяГруппаТаблица, "Участник");
	КоличествоУчастниковРабочейГруппы = РабочаяГруппаТаблица.Количество();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	СозданиеНовойТемы = Не ЗначениеЗаполнено(ТекущийОбъект.ВладелецСообщения);
	ОповеститьОСозданииНовойТемы = СозданиеНовойТемы И Не ЗначениеЗаполнено(Предмет);
	ОповеститьОСозданииТемыПоПредмету = СозданиеНовойТемы И ЗначениеЗаполнено(Предмет);
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("СозданиеНовойТемы", СозданиеНовойТемы);
	Если СозданиеНовойТемы Тогда
		РеквизитыТемы = ПолучитьРеквизитыТемы();
		ТекущийОбъект.ДополнительныеСвойства.Вставить("РеквизитыТемы", РеквизитыТемы);
	КонецЕсли;
	
	// Рабочая группа
	Если ВозможноВедениеРабочейГруппы() Тогда
		
		Если Не ТемаРабочаяГруппа Тогда
			РабочаяГруппаТаблица.Очистить();
		КонецЕсли;
		
		РабочаяГруппаТаблицаКоличество = РабочаяГруппаТаблица.Количество();
		Для Инд = 1 По РабочаяГруппаТаблицаКоличество Цикл
			Строка = РабочаяГруппаТаблица[РабочаяГруппаТаблицаКоличество - Инд];
			Если Не ЗначениеЗаполнено(Строка.Участник) Тогда 
				РабочаяГруппаТаблица.Удалить(Строка);
			КонецЕсли;	
		КонецЦикла;
		
		НоваяРабочаяГруппа = РабочаяГруппаТаблица.Выгрузить();
		РабочаяГруппаДобавить = Новый Массив;
		РабочаяГруппаУдалить = Новый Массив;
		
		// Формирование списка удаленных участников рабочей группы
		Для каждого Эл Из ИсходнаяРабочаяГруппа Цикл
			
			Найден = Ложь;
			
			Для каждого Эл2 Из НоваяРабочаяГруппа Цикл
				Если Эл.Участник = Эл2.Участник 
					И Эл.ОсновнойОбъектАдресации = Эл2.ОсновнойОбъектАдресации 
					И Эл.ДополнительныйОбъектАдресации = Эл2.ДополнительныйОбъектАдресации Тогда
					
					Найден = Истина;
					Прервать;
				КонецЕсли;	
			КонецЦикла;	
			
			Если Не Найден Тогда
				РабочаяГруппаУдалить.Добавить(Новый Структура("Участник, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации", 
					Эл.Участник,
					Эл.ОсновнойОбъектАдресации,
					Эл.ДополнительныйОбъектАдресации));
			КонецЕсли;
			
		КонецЦикла;
		
		// Формирование списка добавленных участников рабочей группы
		Для каждого Эл Из НоваяРабочаяГруппа Цикл
			
			Найден = Ложь;
			
			Для каждого Эл2 Из ИсходнаяРабочаяГруппа Цикл
				Если Эл.Участник = Эл2.Участник 
					И Эл.ОсновнойОбъектАдресации = Эл2.ОсновнойОбъектАдресации 
					И Эл.ДополнительныйОбъектАдресации = Эл2.ДополнительныйОбъектАдресации Тогда
					
					Найден = Истина;
					Прервать;
				КонецЕсли;	
			КонецЦикла;	
			
			Если Не Найден Тогда
				РабочаяГруппаДобавить.Добавить(Новый Структура("Участник, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации", 
					Эл.Участник,
					Эл.ОсновнойОбъектАдресации,
					Эл.ДополнительныйОбъектАдресации));
			КонецЕсли;
			
		КонецЦикла;
		
		ТекущийОбъект.ДополнительныеСвойства.Вставить("РабочаяГруппаУдалить", РабочаяГруппаУдалить);
		ТекущийОбъект.ДополнительныеСвойства.Вставить("РабочаяГруппаДобавить", РабочаяГруппаДобавить);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.ПервоеСообщениеТемы Тогда
		ТемаОбъект = ТекущийОбъект.ВладелецСообщения.ПолучитьОбъект();
		РеквизитыТемы = ПолучитьРеквизитыТемы();
		ЗаполнитьЗначенияСвойств(ТемаОбъект, РеквизитыТемы, , "Документ");
		ТемаОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Файлы
	ЗначениеПараметра = Файлы.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВладелецФайла"));
	Если Не ЗначениеЗаполнено(ЗначениеПараметра.Значение) Тогда 
		Файлы.Параметры.УстановитьЗначениеПараметра("ВладелецФайла", Объект.Ссылка);
	КонецЕсли;
	
	РаботаСПрочтениями.УстановитьСвойствоПрочтен(ТекущийОбъект.Ссылка);
	
	ВремяСоздания = Макс(Объект.ДатаСоздания, Объект.ДатаИзменения);
	ОбновитьДанныеТемы();
	
	Если УдалитьРезультатыГолосованияПослеЗаписи Тогда
		РаботаСОбсуждениями.УдалитьГолосование(Объект.Ссылка);
		УдалитьРезультатыГолосованияПослеЗаписи = Ложь;
	КонецЕсли;
	
	ГолосованиеВПроцессе = ТекущийОбъект.ДобавленоГолосование;
	
	ОбновитьГолосованиеСервер();
	
	УстановитьВидимостьЭлементов();
	УстановитьЗаголовокФормы();
	
	// Рабочие группы
	Если ВозможноВедениеРабочейГруппы() Тогда
		
		РабочаяГруппаОбновитьНаСервере();
		
		// Формирование исходной рабочей группы
		Участники = РегистрыСведений.РабочиеГруппы.ПолучитьУчастниковПоОбъекту(Объект.ВладелецСообщения);
		ИсходнаяРабочаяГруппа.Очистить();
		Для каждого Эл Из Участники Цикл
			Строка = ИсходнаяРабочаяГруппа.Добавить();
			Строка.Участник = Эл.Участник;
			Строка.ОсновнойОбъектАдресации = Эл.ОсновнойОбъектАдресации;
			Строка.ДополнительныйОбъектАдресации = Эл.ДополнительныйОбъектАдресации;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ОповеститьОСозданииТемыПоПредмету Тогда
		ПараметрыОповещения = Новый Структура("Тема,Предмет", 
			Объект.ВладелецСообщения, 
			Предмет);
		Оповестить("СозданаТемаПоПредмету", ПараметрыОповещения);
	КонецЕсли;
	
	Если ОповеститьОСозданииНовойТемы Тогда
		ПараметрыОповещения = Новый Структура("Тема", Объект.ВладелецСообщения);
		Оповестить("Создание_ТемыОбсуждений", ПараметрыОповещения);
	КонецЕсли;
	
	Оповестить("СообщениеОбсужденияИзменено");
	
	УстановитьДоступностьФайловыхКоманд();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Не Объект.ПервоеСообщениеТемы Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ТемаРаздел");
		МассивНепроверяемыхРеквизитов.Добавить("ТемаНаименование");
	КонецЕсли;
	
	Если Не ТемаРабочаяГруппа Тогда
		МассивНепроверяемыхРеквизитов.Добавить("РабочаяГруппаТаблица");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	// обход ошибки, при которой с объекта может не сниматься блокировка при работе в немодальном режиме
	ПриЗакрытииНаСервере(Объект.Ссылка, УникальныйИдентификатор);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПриЗакрытииНаСервере(Ссылка, Идентификатор)	
	РазблокироватьДанныеДляРедактирования(Ссылка, Идентификатор);		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#Область Файлы

&НаКлиенте
Процедура ПервыйПрикрепленныйФайлНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ФайлПрикрепленный = Неопределено ИЛИ ФайлПрикрепленный.Пустая() Тогда 
		Возврат;
	КонецЕсли;
	
	ДанныеФайла = РаботаСФайламиВызовСервера.ПолучитьДанныеФайлаДляОткрытия(ФайлПрикрепленный, 
		Неопределено, УникальныйИдентификатор, Неопределено, ФайлПредыдущийАдрес);
	КомандыРаботыСФайламиКлиент.Открыть(ДанныеФайла);
	
КонецПроцедуры

#КонецОбласти

#Область РабочаяГруппа

&НаКлиенте
Процедура ТемаРабочаяГруппаПриИзменении(Элемент)
	
	УстановитьВидимостьЭлементов();
	
	Если ТемаРабочаяГруппа Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРабочаяГруппа;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Голосование

&НаКлиенте
Процедура ГолосованиеПриИзменении(Элемент)
	
	Элементы.Проголосовать.Доступность = ЗначениеЗаполнено(Голосование);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавленоГолосованиеПриИзменении(Элемент)
	
	Если Объект.ДобавленоГолосование Тогда
		
		ДоступноГолосование = Истина;
		УстановитьВидимостьЭлементов();
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаГолосованиеУправление;
		
		Если Объект.ВариантыГолосования.Количество() = 0 Тогда
			ЗаполнитьВариантыГолосованияПоУмолчанию();
		КонецЕсли;
		
	Иначе
		
		ДоступноГолосование = Ложь;
		УстановитьВидимостьЭлементов();
		
	КонецЕсли;
	
	УдалитьРезультатыГолосования();
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросГолосованияУправлениеПриИзменении(Элемент)
	
	УдалитьРезультатыГолосования();

КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ТекстСообщенияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если КоличествоФайлов <> 1 Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	КомандыРаботыСФайламиКлиент.Редактировать(ФайлПрикрепленный);
	
КонецПроцедуры

&НаКлиенте
Процедура ТемаНаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если КоличествоФайлов <> 1 Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	КомандыРаботыСФайламиКлиент.Редактировать(ФайлПрикрепленный);
	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецСообщенияНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
		
	ПараметрыОповещения = Новый Структура("Тема, Сообщение", 
		Объект.ВладелецСообщения, 
		Объект.Ссылка);
	Оповестить("ВыбраноСообщениеДляПросмотра", ПараметрыОповещения);
		
	Форма = ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаПросмотраТемы",
		Новый Структура("Тема, ТекущееСообщение",
			Объект.ВладелецСообщения,
			Объект.Ссылка),
		,	
		Объект.ВладелецСообщения.УникальныйИдентификатор());
			
КонецПроцедуры

&НаКлиенте
Процедура ВОтветНаОчистка(Элемент, СтандартнаяОбработка)
	
	ОчиститьПолеВОтветНаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ВОтветНаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Объект.Родитель <> Неопределено И НЕ Объект.Родитель.Пустая() Тогда
		ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", 
		 	Новый Структура("Ключ", Объект.Родитель),
			ЭтаФорма.ВладелецФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВОтветНаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ТекущаяСтрока", Объект.Родитель);
	ПараметрыФормы.Вставить("Тема", Объект.ВладелецСообщения);
	
	ОткрытьФорму("Справочник.СообщенияОбсуждений.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыФайлы

&НаКлиенте
Процедура ФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КакОткрывать = ФайловыеФункцииКлиентПовтИсп.ПолучитьПерсональныеНастройкиРаботыСФайлами().ДействиеПоДвойномуЩелчкуМыши;
	
	Если КакОткрывать = "ОткрыватьКарточку" Тогда
		ПоказатьЗначение(, ВыбраннаяСтрока);
		Возврат;
	КонецЕсли;
	
	ДанныеФайла = РаботаСФайламиВызовСервера.ПолучитьДанныеФайлаДляОткрытия(ВыбраннаяСтрока, 
		Неопределено, ЭтаФорма.УникальныйИдентификатор, Неопределено, ПредыдущийАдресФайла);
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ДанныеФайла", ДанныеФайла);
	Обработчик = Новый ОписаниеОповещения("СписокВыборПослеВыбораРежимаРедактирования", ЭтотОбъект, ПараметрыОбработчика);
	
	РаботаСФайламиКлиент.ВыбратьРежимИРедактироватьФайл(Обработчик, ДанныеФайла, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборПослеВыбораРежимаРедактирования(Результат, ПараметрыВыполнения) Экспорт
	
	РезультатОткрыть = "Открыть";
	РезультатРедактировать = "Редактировать";
	
	Если Результат = РезультатРедактировать Тогда
		Обработчик = Новый ОписаниеОповещения("УстановитьДоступностьКомандКлиент", ЭтотОбъект, ПараметрыВыполнения);
		РаботаСФайламиКлиент.РедактироватьФайл(Обработчик, ПараметрыВыполнения.ДанныеФайла);
	ИначеЕсли Результат = РезультатОткрыть Тогда
		РаботаСФайламиКлиент.ОткрытьФайлСОповещением(Неопределено, ПараметрыВыполнения.ДанныеФайла, УникальныйИдентификатор); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПриАктивизацииСтроки(Элемент)
	
	УстановитьДоступностьКоманд(Элементы.Файлы.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	Если Объект.Ссылка.Пустая() Тогда 
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Создание:.'"), 
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
	КонецЕсли;
	
	ВладелецФайла = Объект.Ссылка;
	ФайлОснование = Элементы.Файлы.ТекущаяСтрока;
	
	Если Не Копирование Тогда
		Попытка
			РежимСоздания = 2;
			РаботаСФайламиКлиент.ДобавитьФайл(Неопределено, ВладелецФайла, ЭтаФорма, РежимСоздания, Истина);
		Исключение
			Инфо = ИнформацияОбОшибке();
			ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Ошибка создания нового файла: %1'"),
				КраткоеПредставлениеОшибки(Инфо));
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Возврат;
		КонецПопытки;
	Иначе
		РаботаСФайламиКлиент.СкопироватьФайл(ВладелецФайла, ФайлОснование);
	КонецЕсли;
	Элементы.Файлы.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элементы.Файлы.ТолькоПросмотр Тогда 
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда 
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;
		
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Создание:.'"), 
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
	КонецЕсли;
	
	ВладелецФайлаСписка = Объект.Ссылка;
	НеОткрыватьКарточкуПослеСозданияИзФайла = Истина;	
	РаботаСФайламиКлиент.ОбработкаПеретаскиванияВЛинейныйСписок(ПараметрыПеретаскивания, ВладелецФайлаСписка, ЭтаФорма, НеОткрыватьКарточкуПослеСозданияИзФайла);
	Элементы.Файлы.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПриИзменении(Элемент)
	
	ОбновитьФайлСообщения();
	УстановитьВидимостьЭлементов();
	УстановитьДоступностьФайловыхКоманд();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВариантыГолосования

&НаКлиенте
Процедура ВариантыГолосованияТекстВариантаПриИзменении(Элемент)
	
	УдалитьРезультатыГолосования();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантыГолосованияПередНачаломИзменения(Элемент, Отказ)
	
	ПредложитьУдалитьРезультатыГолосования(Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантыГолосованияПередУдалением(Элемент, Отказ)
	
	ПредложитьУдалитьРезультатыГолосования(Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантыГолосованияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	ПредложитьУдалитьРезультатыГолосования(Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРабочаяГруппа

&НаКлиенте
Процедура РабочаяГруппаТаблицаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаПриНачалеРедактирования(Элемент, НоваяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаПриОкончанииРедактирования(
		ЭтаФорма,
		Элемент,
		ОтменаРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаПередУдалением(Элемент, Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"РабочаяГруппаТаблицаПередУдалениемПродолжение",
		ЭтотОбъект);
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаТаблицаПередУдалением(ЭтаФорма, Отказ, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаПередУдалениемПродолжение(Результат, Параметры) Экспорт
	
	ТаблицаРГ = Элементы.РабочаяГруппаТаблица;
	Для Каждого Индекс Из ТаблицаРГ.ВыделенныеСтроки Цикл
		РабочаяГруппаТаблица.Удалить(ТаблицаРГ.ДанныеСтроки(Индекс));
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РабочаяГруппаТаблицаОбработкаВыбораСервер(ВыбранноеЗначение);
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаПриОкончанииРедактирования(
		ЭтаФорма,
		Элементы.РабочаяГруппаТаблица,
		Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаУчастникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	РаботаСРабочимиГруппамиКлиент.ДокументРабочаяГруппаУчастникНачалоВыбора(ЭтаФорма, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаУчастникАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	РаботаСРабочимиГруппамиКлиент.ДокументРабочаяГруппаУчастникАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область Файлы

&НаКлиенте
Процедура ПоказатьПомеченныеНаУдаление(Команда)
	
	ПоказатьПомеченныеНаУдаление = Не ПоказатьПомеченныеНаУдаление;
	ПоказатьПомеченныеНаУдалениеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура Редактировать(Команда)
	
	Если Объект.Ссылка.Пустая()
		И Элементы.ФайлыДобавленные.ТекущаяСтрока <> Неопределено Тогда
		Если ЭтоАдресВременногоХранилища(Элементы.ФайлыДобавленные.ТекущиеДанные.ПолныйПуть) Тогда 
			ТекущийФайлВСпискеДобавленных = ПолучитьИзВременногоХранилища(Элементы.ФайлыДобавленные.ТекущиеДанные.ПолныйПуть).Ссылка;
			Записать();
		Иначе			
			РаботаСФайламиКлиент.ЗапуститьПриложениеПоИмениФайла(
				Элементы.ФайлыДобавленные.ТекущиеДанные.ПолныйПуть);
		КонецЕсли;	
	Иначе
		Если Элементы.Файлы.ТекущаяСтрока = Неопределено Тогда 
			Возврат;
		КонецЕсли;
			
		Обработчик = Новый ОписаниеОповещения("УстановитьДоступностьКомандКлиент", ЭтотОбъект);
		РаботаСФайламиКлиент.РедактироватьСОповещением(Обработчик, Элементы.Файлы.ТекущаяСтрока);
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзменения(Команда)
	
	Если Элементы.Файлы.ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("УстановитьДоступностьКомандКлиент", ЭтотОбъект);
	
	РаботаСФайламиКлиент.ОпубликоватьФайлСОповещением(
		Обработчик,
		Элементы.Файлы.ТекущаяСтрока, 
		ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьКак(Команда)
	
	Если Элементы.Файлы.ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если Элементы.Файлы.ВыделенныеСтроки.Количество() > 1 Тогда
		СписокФайловДляВыгрузки = Новый СписокЗначений;
		Для Каждого ВыбраннаяСтрока Из Элементы.Файлы.ВыделенныеСтроки Цикл
			ДанныеСтроки = Элементы.Файлы.ДанныеСтроки(ВыбраннаяСтрока);	
			СписокФайловДляВыгрузки.Добавить(ДанныеСтроки.Ссылка);
		КонецЦикла;
		
		Если СписокФайловДляВыгрузки.Количество() > 0 Тогда
			ПараметрыФормы = Новый Структура();
			ПараметрыФормы.Вставить("СписокОбъектов", СписокФайловДляВыгрузки);
			ОткрытьФорму("Справочник.Файлы.Форма.ВыгрузкаФайловНаДиск", ПараметрыФормы);
		КонецЕсли;
		
	Иначе
		ДанныеФайла = РаботаСФайламиВызовСервера.ПолучитьДанныеФайлаДляСохранения(Элементы.Файлы.ТекущаяСтрока, Неопределено, ЭтаФорма.УникальныйИдентификатор);
		КомандыРаботыСФайламиКлиент.СохранитьКак(ДанныеФайла, УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФайл(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если Не ПроверитьЗаполнение() Тогда
			Возврат;
		КонецЕсли;
		
		Записать();
	КонецЕсли;
	
	Попытка
		РежимСоздания = 2;
		РаботаСФайламиКлиент.ДобавитьФайл(Неопределено, Объект.Ссылка, ЭтотОбъект, РежимСоздания, Истина);
	Исключение
		Инфо = ИнформацияОбОшибке();
		ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Ошибка создания нового файла: %1'"),
			КраткоеПредставлениеОшибки(Инфо));
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакончитьРедактирование(Команда)
	
	Если Элементы.Файлы.ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("УстановитьДоступностьКомандКлиент", ЭтотОбъект);
	
	РаботаСФайламиКлиент.ЗакончитьРедактированиеСОповещением(
		Обработчик,
		Элементы.Файлы.ТекущаяСтрока,
		ЭтаФорма.УникальныйИдентификатор,
		Элементы.Файлы.ТекущиеДанные.ХранитьВерсии,
		Элементы.Файлы.ТекущиеДанные.РедактируетТекущийПользователь,
		Элементы.Файлы.ТекущиеДанные.Редактирует);
		
	УстановитьДоступностьКоманд(Элементы.Файлы.ТекущиеДанные);
		
КонецПроцедуры

&НаКлиенте
Процедура Занять(Команда)
	
	Если Элементы.Файлы.ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;

	Обработчик = Новый ОписаниеОповещения("УстановитьДоступностьКомандКлиент", ЭтотОбъект);
	РаботаСФайламиКлиент.ЗанятьСОповещением(Обработчик, Элементы.Файлы.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайлПервый(Команда)
	
	Если ФайлПрикрепленный = Неопределено Или ФайлПрикрепленный.Пустая() Тогда 
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьФайлПервыйЗавершение", ЭтотОбъект);
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Пометить ""%1"" на удаление?'"), ФайлПрикрепленный);
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайлПервыйЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПометкуУдаленияФайла();
	УстановитьВидимостьЭлементов();
	УстановитьДоступностьФайловыхКоманд();
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьФайлПервый(Команда)
	
	Если ФайлПрикрепленный = Неопределено ИЛИ ФайлПрикрепленный.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("УстановитьДоступностьКомандКлиент", ЭтотОбъект);
	
	РаботаСФайламиКлиент.РедактироватьСОповещением(Обработчик, ФайлПрикрепленный);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗакончитьРедактированиеПервогоФайла(Команда)

	Если ФайлПрикрепленный = Неопределено ИЛИ ФайлПрикрепленный.Пустая() Тогда 
		Возврат;
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("УстановитьДоступностьКомандКлиент", ЭтотОбъект);
	
	РаботаСФайламиКлиент.ЗакончитьРедактированиеСОповещением(
		Обработчик,
		ФайлПрикрепленный,
		УникальныйИдентификатор,
		ФайлХранитьВерсии,
		ФайлРедактируетТекущийПользователь,
		ФайлРедактирует);	
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПервыйФайл(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", ФайлПрикрепленный);
	
	ОткрытьФорму("Справочник.Файлы.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура Освободить(Команда)
	
	Если Элементы.Файлы.ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("УстановитьДоступностьКомандКлиент", ЭтотОбъект);
	
	РаботаСФайламиКлиент.ОсвободитьФайлСОповещением(
		Обработчик,
		Элементы.Файлы.ТекущаяСтрока,
		Элементы.Файлы.ТекущиеДанные.ХранитьВерсии,
		Элементы.Файлы.ТекущиеДанные.РедактируетТекущийПользователь,
		Элементы.Файлы.ТекущиеДанные.Редактирует);
		
	УстановитьДоступностьКоманд(Элементы.Файлы.ТекущиеДанные);
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИзФайлаНаДиске(Команда)
	
	Если Элементы.Файлы.ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ДанныеФайла = РаботаСФайламиВызовСервера.ПолучитьДанныеФайлаИРабочийКаталог(Элементы.Файлы.ТекущаяСтрока);
	
	РаботаСФайламиКлиент.ОбновитьИзФайлаНаДискеСОповещением(
		Неопределено,
		ДанныеФайла,
		УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область РабочаяГруппа

&НаКлиенте
Процедура ПодобратьУчастниковРабочейГруппы(Команда)
	
	РаботаСРабочимиГруппамиКлиент.ДокументПодобратьУчастниковРабочейГруппы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаОбновить(Команда)
	
	РабочаяГруппаОбновитьНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область Голосование

&НаКлиенте
Процедура Проголосовать(Команда)
	
	ВыбранныйВариантГолосования = Голосование;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Или Модифицированность Тогда
		Если Не ПроверитьЗаполнение() Тогда
			Возврат;
		КонецЕсли;
		
		Записать();
	КонецЕсли;
	
	ПроголосоватьСервер(ВыбранныйВариантГолосования);
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьСвойГолос(Команда)
	
	ОтменитьСвойГолосСервер();
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура Прокомментировать(Команда)
	
	ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", 
		Новый Структура("Сообщение, ТекстНовогоСообщения",
			Объект.Ссылка,
			ГолосПользователя));
			
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОтветитьНаСообщение(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда 
		ОписаниеОповещения = Новый ОписаниеОповещения("ОтветитьНаСообщениеЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Для ответа на сообщение необходимо записать. Выполнить запись?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Сообщение", Объект.Ссылка);
	ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", ПараметрыФормы);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветитьНаСообщениеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не Записать() Тогда 
		Возврат;
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(
		"Создание:", 
		ПолучитьНавигационнуюСсылку(Объект.Ссылка),
		Строка(Объект.Ссылка),
		БиблиотекаКартинок.Информация32);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Сообщение", Объект.Ссылка);
	ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦитироватьИсходноеСообщение(Команда)
	
	Если Объект.Родитель <> Неопределено И Не Объект.Родитель.Пустая() Тогда
	    ТекстЦитирования = ЦитироватьИсходноеСообщениеСервер();
		ДлинаЦитаты = СтрДлина(ТекстЦитирования) + 1;
		
		Если СтрДлина(ТекстЦитирования) = СтрДлина(Объект.ТекстСообщения) Тогда
			ДлинаЦитаты = ДлинаЦитаты - 1;
		КонецЕсли;
		
		Элементы.ТекстСообщения.УстановитьГраницыВыделения(ДлинаЦитаты, ДлинаЦитаты);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подписаться(Команда)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрыФормы = Новый Структура("ОбъектПодписки", Объект.Ссылка);
		ОткрытьФорму("ОбщаяФорма.ПодпискаНаУведомленияПоОбъекту", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФотографияНажатие(Элемент, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Автор) Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(, Объект.Автор);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РабочаяГруппа

&НаСервере
Процедура РабочаяГруппаТаблицаОбработкаВыбораСервер(ВыбранноеЗначение)
	
	РаботаСРабочимиГруппами.ДокументОбработкаВыбора(ЭтаФорма, ВыбранноеЗначение);
	
КонецПроцедуры

&НаСервере
Процедура РабочаяГруппаОбновитьНаСервере()
	
	РабочаяГруппаТаблица.Очистить();
	РаботаСРабочимиГруппами.ФормаДокументаДобавитьУчастников(
		ЭтаФорма,
		РаботаСРабочимиГруппами.ПолучитьРабочуюГруппуДокумента(Объект.ВладелецСообщения));
	
КонецПроцедуры

&НаСервере
Функция ВозможноВедениеРабочейГруппы()
	
	Возврат Объект.ПервоеСообщениеТемы И Не ЗначениеЗаполнено(Предмет);
	
КонецФункции

#КонецОбласти

#Область НастройкаФормы

&НаСервере
Процедура УстановитьРаботуСФотографиями()
	
	ОтображатьФотографииПерсональнаяНастройка =
		ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиПрограммы",
		"ОтображатьФотографииПерсональнаяНастройка",
		Истина);
	ОтображатьФотографииОбщаяНастройка = ПолучитьФункциональнуюОпцию("ОтображатьФотографииОбщаяНастройка");
	
	ПолучатьФотографии = Истина;
	Если Не ОтображатьФотографииОбщаяНастройка 
		Или Не ОтображатьФотографииПерсональнаяНастройка
		Или ПолучитьСкоростьКлиентскогоСоединения() = СкоростьКлиентскогоСоединения.Низкая Тогда
		ПолучатьФотографии = Ложь;
	КонецЕсли;
	
	Если ПолучатьФотографии Тогда
		ПоказатьФотоПользователя(Объект.Автор, УникальныйИдентификатор, Фотография);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	Элементы.ФормаОтветитьНаСообщение.Доступность = Не Объект.ВладелецСообщения.Закрытая;
	Элементы.ФормаЦитироватьИсходноеСообщение.Доступность = ЗначениеЗаполнено(Объект.Родитель);
	Элементы.Предмет.Видимость = ЗначениеЗаполнено(Предмет);
	Элементы.ВладелецСообщения.Видимость = ЗначениеЗаполнено(Объект.ВладелецСообщения);
	Элементы.Проголосовать.Доступность = ЗначениеЗаполнено(Голосование);
	Элементы.Фотография.Видимость = ПолучатьФотографии;
	
	// Первое сообщение темы
	Элементы.ВОтветНа.Видимость = Не Объект.ПервоеСообщениеТемы;
	Элементы.ТемаНаименование.Видимость = Объект.ПервоеСообщениеТемы;
	Элементы.ТемаРаздел.Видимость = Объект.ПервоеСообщениеТемы;
	Элементы.ТемаЗакрытая.Видимость = Объект.ПервоеСообщениеТемы И ЗначениеЗаполнено(Объект.Ссылка);
	Элементы.ФормаПроцессы.Видимость = Не Объект.ПервоеСообщениеТемы;
	Элементы.ФормаПроцессыТемы.Видимость = Объект.ПервоеСообщениеТемы;
	
	// Файлы
	Элементы.ДобавитьФайл.Видимость = (КоличествоФайлов = 0) И Не РежимЧтенияСообщения;
	Элементы.ГруппаФайл.Видимость = (КоличествоФайлов = 1);
	Элементы.СтраницаФайлы.Видимость = (КоличествоФайлов > 1);
	
	// Голосование
	Элементы.ГруппаГолосование.Видимость = ГолосованиеВПроцессе;
	Элементы.Голосование.Доступность = Не Объект.ВладелецСообщения.Закрытая;
	Элементы.Проголосовать.Доступность = Не Объект.ВладелецСообщения.Закрытая;
	Элементы.Прокомментировать.Доступность = Не Объект.ВладелецСообщения.Закрытая И ПользовательПроголосовал;
	Элементы.ОтменитьСвойГолос.Доступность = Не Объект.ВладелецСообщения.Закрытая И ПользовательПроголосовал;
	Элементы.СтраницаГолосованиеУправление.Видимость = ДоступноГолосование;
	
	// Рабочая группа
	Элементы.РабочаяГруппаТаблица.Видимость = ВозможноВедениеРабочейГруппы();
	Элементы.ТемаРабочаяГруппа.Видимость = ВозможноВедениеРабочейГруппы();
	Элементы.СтраницаРабочаяГруппа.Видимость = ТемаРабочаяГруппа;
	
	// Тип закладок страниц
	ОтображатьЗакладки = 
		Элементы.СтраницаФайлы.Видимость
		Или Элементы.СтраницаГолосованиеУправление.Видимость
		Или Элементы.СтраницаРабочаяГруппа.Видимость;
	Если ОтображатьЗакладки Тогда
		Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСверху;
	Иначе
		Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	КонецЕсли;
	
	// Режим чтения
	Элементы.ФормаЗакрыть.Видимость = РежимЧтенияСообщения;
	Элементы.ФормаЗакрыть.КнопкаПоУмолчанию = РежимЧтенияСообщения;
	Элементы.ФормаЗаписатьИЗакрыть.Видимость = Не РежимЧтенияСообщения;
	Элементы.ФормаЗаписатьИЗакрыть.КнопкаПоУмолчанию = Не РежимЧтенияСообщения;
	Элементы.СоздатьФайл.Доступность = Не РежимЧтенияСообщения;
	Элементы.КонтекстноеМенюФайлыСоздать.Доступность = Не РежимЧтенияСообщения;
	Элементы.Удалить.Доступность = Не РежимЧтенияСообщения;
	Элементы.КонтекстноеМенюФайлыУстановитьПометкуУдаления.Доступность = Не РежимЧтенияСообщения;
	Элементы.СоздатьФайлОдинКомПанель.Доступность = Не РежимЧтенияСообщения;
	Элементы.РедактироватьПервый.Доступность = Не РежимЧтенияСообщения;
	Элементы.УдалитьФайлПервый.Доступность = Не РежимЧтенияСообщения;
	Элементы.ДобавленоГолосование.Видимость = Не РежимЧтенияСообщения;
	Элементы.КомандыДобавления.Видимость = Не РежимЧтенияСообщения;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРежимЧтения()
	
	УстановитьРежимЧтения = Ложь;
	
	Если Объект.ВладелецСообщения.Закрытая И Не Объект.ПервоеСообщениеТемы Тогда
		
		УстановитьРежимЧтения = Истина;
		
	ИначеЕсли ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Если ДокументооборотПраваДоступаПовтИсп.ВключеноИспользованиеПравДоступа() Тогда
			
			ПраваПоОбъекту = ДокументооборотПраваДоступа.ПолучитьПраваПоОбъекту(Объект.Ссылка, ПользователиКлиентСервер.ТекущийПользователь());
			Если Не ПраваПоОбъекту.Изменение Тогда
				УстановитьРежимЧтения = Истина;
			КонецЕсли;
			
		Иначе
			
			Если Не (Объект.Автор = ПользователиКлиентСервер.ТекущийПользователь() Или РольДоступна("ПолныеПрава")) Тогда
				УстановитьРежимЧтения = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если УстановитьРежимЧтения Тогда
		ТолькоПросмотр = Истина;
		РежимЧтенияСообщения = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы()
	
	АвтоЗаголовок = Не Объект.ПервоеСообщениеТемы;
	Если Объект.ПервоеСообщениеТемы Тогда
		
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			ТекстЗаголовка = РаботаСОбсуждениями.ПолучитьЗаголовок(ТемаНаименование);
			Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"%1 (%2)", ТекстЗаголовка, НСтр("ru = 'Тема'"));
		Иначе
			Заголовок = НСтр("ru = 'Тема (создание)'");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Файлы

&НаСервере
Процедура ПоказатьПомеченныеНаУдалениеНаСервере()
	
	НастроитьПоказПомеченныхНаУдалениеФайлов();
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		ЭтаФорма.ИмяФормы,
		"ПоказатьПомеченныеНаУдаление",
		ПоказатьПомеченныеНаУдаление);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьПоказПомеченныхНаУдалениеФайлов()
	
	Элементы.ФайлыПоказатьПомеченныеНаУдаление.Пометка = ПоказатьПомеченныеНаУдаление;
	
	Если ПоказатьПомеченныеНаУдаление Тогда
		ПараметрПометкиУдаления = Новый ПараметрКомпоновкиДанных("НеПоказыватьПомеченныеНаУдаление");
		Для Каждого Элемент Из Файлы.Параметры.Элементы Цикл
			Если Элемент.Параметр = ПараметрПометкиУдаления Тогда
				Элемент.Использование = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Файлы.Параметры.УстановитьЗначениеПараметра("НеПоказыватьПомеченныеНаУдаление", Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьФайлСообщения()
	
	КоличествоФайлов = 0;
	ФайлПрикрепленный = Справочники.Файлы.ПустаяСсылка();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		Возврат;
	КонецЕсли;
	
	МассивФайлов = РаботаСФайламиВызовСервера.ПолучитьВсеПодчиненныеФайлы(Объект.Ссылка, Ложь);
	КоличествоФайлов = МассивФайлов.Количество();
	
	Если МассивФайлов.Количество() > 0 Тогда
		ФайлПрикрепленный = МассивФайлов[0];
		РеквизитыПрикрепленногоФайла = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(
			ФайлПрикрепленный,
			"ХранитьВерсии, Редактирует, ПометкаУдаления, Наименование, ТекущаяВерсияРасширение");
		
		ФайлХранитьВерсии = РеквизитыПрикрепленногоФайла.ХранитьВерсии;
		ФайлРедактирует = РеквизитыПрикрепленногоФайла.Редактирует;
		ФайлПрикрепленныйПометкаУдаления = РеквизитыПрикрепленногоФайла.ПометкаУдаления;
		ФайлСРасширением = РеквизитыПрикрепленногоФайла.Наименование + "." + РеквизитыПрикрепленногоФайла.ТекущаяВерсияРасширение;
		
		Если ФайлРедактирует = ПользователиКлиентСервер.ТекущийПользователь() Тогда
			ФайлРедактируетТекущийПользователь = Истина;
		Иначе
			ФайлРедактируетТекущийПользователь = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивФайлов.Количество() > 1 Тогда
		Элементы.Файлы.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлВыполнить()
	
	Если Элементы.Файлы.ТекущаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ДанныеФайла = РаботаСФайламиВызовСервера.ПолучитьДанныеФайлаДляОткрытия(Элементы.Файлы.ТекущаяСтрока, 
		Неопределено, ЭтаФорма.УникальныйИдентификатор, Неопределено, ПредыдущийАдресФайла);
		
	КомандыРаботыСФайламиКлиент.Открыть(ДанныеФайла);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПометкуУдаленияФайла()
	
	ОбъектФайлПрикрепленный = ФайлПрикрепленный.ПолучитьОбъект();
	ОбъектФайлПрикрепленный.УстановитьПометкуУдаления(Не ОбъектФайлПрикрепленный.ПометкаУдаления);
	ОбновитьФайлСообщения();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьФайловыхКоманд()
	
	Если ФайлПрикрепленный <> Неопределено Тогда
		
		Элементы.ЗакончитьРедактированиеПервый.Доступность = ФайлРедактируетТекущийПользователь;
		Элементы.РедактироватьПервый.Доступность = 
			(ФайлРедактирует.Пустая()
			ИЛИ ФайлРедактируетТекущийПользователь)
			И НЕ РежимЧтенияСообщения;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКомандКлиент(Результат = Неопределено, ПараметрыВыполнения = Неопределено) Экспорт
	
	ОбновитьФайлСообщения();
	УстановитьДоступностьФайловыхКоманд();
	УстановитьДоступностьКоманд(Элементы.Файлы.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКоманд(ТекущиеДанные)
	
	Если (ТекущиеДанные = Неопределено)
		ИЛИ ТипЗнч(Элементы.Файлы.ТекущаяСтрока) <> Тип("СправочникСсылка.Файлы") Тогда
		
		УстановитьДоступностьКоманды(Элементы.ОткрытьФайл, Ложь);
		УстановитьДоступностьКоманды(Элементы.ФайлыКонтекстноеМеню.ПодчиненныеЭлементы.КонтекстноеМенюФайлыОткрытьФайл, Ложь);
		
		УстановитьДоступностьКоманды(Элементы.Редактировать, Ложь);
		УстановитьДоступностьКоманды(Элементы.ФайлыКонтекстноеМеню.ПодчиненныеЭлементы.КонтекстноеМенюФайлыРедактировать, Ложь);
		
		УстановитьДоступностьКоманды(Элементы.ЗакончитьРедактирование, Ложь);
		УстановитьДоступностьКоманды(Элементы.ФайлыКонтекстноеМеню.ПодчиненныеЭлементы.КонтекстноеМенюФайлыЗакончитьРедактирование, Ложь);
		
		УстановитьДоступностьКоманды(Элементы.Изменить, Ложь);
		
		УстановитьДоступностьКоманды(Элементы.Занять, Ложь);
		УстановитьДоступностьКоманды(Элементы.ФайлыКонтекстноеМеню.ПодчиненныеЭлементы.КонтекстноеМенюФайлыЗанять, Ложь);
		
		УстановитьДоступностьКоманды(Элементы.СохранитьИзменения, Ложь);
		УстановитьДоступностьКоманды(Элементы.ФайлыКонтекстноеМеню.ПодчиненныеЭлементы.КонтекстноеМенюФайлыСохранитьИзменения, Ложь);
		
		УстановитьДоступностьКоманды(Элементы.Удалить, Ложь);
		
		УстановитьДоступностьКоманды(Элементы.СохранитьКак, Ложь);
		УстановитьДоступностьКоманды(Элементы.ФайлыКонтекстноеМеню.ПодчиненныеЭлементы.КонтекстноеМенюФайлыСохранитьКак, Ложь);
		
		УстановитьДоступностьКоманды(Элементы.Освободить, Ложь);
		УстановитьДоступностьКоманды(Элементы.ФайлыКонтекстноеМеню.ПодчиненныеЭлементы.КонтекстноеМенюФайлыОсвободить, Ложь);
		
		УстановитьДоступностьКоманды(Элементы.ОбновитьИзФайлаНаДиске, Ложь);
		УстановитьДоступностьКоманды(Элементы.ФайлыКонтекстноеМеню.ПодчиненныеЭлементы.КонтекстноеМенюФайлыОбновитьИзФайлаНаДиске, Ложь);
			
	Иначе	
		РедактируетТекущийПользователь = ТекущиеДанные.РедактируетТекущийПользователь;
		Редактирует = ТекущиеДанные.Редактирует;
		
		УстановитьДоступностьКоманды(Элементы.ОткрытьФайл, Истина);
		УстановитьДоступностьКоманды(Элементы.ФайлыКонтекстноеМеню.ПодчиненныеЭлементы.КонтекстноеМенюФайлыОткрытьФайл, Истина);
		
		УстановитьДоступностьКоманды(Элементы.Редактировать, Редактирует.Пустая() И Не РежимЧтенияСообщения);
		УстановитьДоступностьКоманды(Элементы.ФайлыКонтекстноеМеню.ПодчиненныеЭлементы.КонтекстноеМенюФайлыРедактировать,Редактирует.Пустая() И Не РежимЧтенияСообщения);
		
		УстановитьДоступностьКоманды(Элементы.ЗакончитьРедактирование, РедактируетТекущийПользователь);
		УстановитьДоступностьКоманды(Элементы.ФайлыКонтекстноеМеню.ПодчиненныеЭлементы.КонтекстноеМенюФайлыЗакончитьРедактирование, РедактируетТекущийПользователь);
		
		УстановитьДоступностьКоманды(Элементы.Изменить, Истина);
		
		УстановитьДоступностьКоманды(Элементы.Занять, Редактирует.Пустая() И Не РежимЧтенияСообщения);
		УстановитьДоступностьКоманды(Элементы.ФайлыКонтекстноеМеню.ПодчиненныеЭлементы.КонтекстноеМенюФайлыЗанять, Редактирует.Пустая() И Не РежимЧтенияСообщения);
		
		УстановитьДоступностьКоманды(Элементы.СохранитьИзменения, РедактируетТекущийПользователь);
		УстановитьДоступностьКоманды(Элементы.ФайлыКонтекстноеМеню.ПодчиненныеЭлементы.КонтекстноеМенюФайлыСохранитьИзменения, РедактируетТекущийПользователь);
		
		УстановитьДоступностьКоманды(Элементы.Удалить, Истина);
		
		УстановитьДоступностьКоманды(Элементы.СохранитьКак, Истина);
		УстановитьДоступностьКоманды(Элементы.ФайлыКонтекстноеМеню.ПодчиненныеЭлементы.КонтекстноеМенюФайлыСохранитьКак, Истина);
		
		УстановитьДоступностьКоманды(Элементы.Освободить, Не Редактирует.Пустая() И Не РежимЧтенияСообщения);
		УстановитьДоступностьКоманды(Элементы.ФайлыКонтекстноеМеню.ПодчиненныеЭлементы.КонтекстноеМенюФайлыОсвободить, Не Редактирует.Пустая() И Не РежимЧтенияСообщения);
		
		УстановитьДоступностьКоманды(Элементы.ОбновитьИзФайлаНаДиске, Истина И Не РежимЧтенияСообщения);
		УстановитьДоступностьКоманды(Элементы.ФайлыКонтекстноеМеню.ПодчиненныеЭлементы.КонтекстноеМенюФайлыОбновитьИзФайлаНаДиске, Истина И Не РежимЧтенияСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКоманды(Команда, Доступность)
	
	Команда.Доступность = Доступность;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьОповещениеОНовыхФайлахСервер()
	
	ОбновитьФайлСообщения();
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

#КонецОбласти

#Область Голосование

&НаСервере
Процедура ОбновитьГолосованиеСервер()
	
	Элементы.Голосование.СписокВыбора.Очистить();
	
	Для каждого РезультатГолосования Из РаботаСОбсуждениями.ПолучитьРезультатГолосования(Объект.Ссылка) Цикл
		Если РезультатГолосования.Значение = 0 Тогда
			ВсегоГолосов = РезультатГолосования.Представление;
			Продолжить;	
		КонецЕсли;
		
		Элементы.Голосование.СписокВыбора.Добавить(
			РезультатГолосования.Значение,
			РезультатГолосования.Представление);
	КонецЦикла;
		
	Голосование = РаботаСОбсуждениями.ПолучитьРезультатГолосованияТекущегоПользователя(Объект.Ссылка);
	ГолосПользователя = РаботаСОбсуждениями.ПолучитьПредставлениеГолосаПользователя(Объект.Ссылка);
	Если Голосование <> 0 Тогда
		ПользовательПроголосовал = Истина;
	Иначе
		ПользовательПроголосовал = Ложь;
	КонецЕсли;	
	УстановитьВидимостьЭлементов();
	
	Если ГолосованиеВПроцессе Тогда
		Элементы.ВопросГолосованияУправление.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
		Элементы.ДобавленоГолосование.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
	Иначе
		Элементы.ВопросГолосованияУправление.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
		Элементы.ДобавленоГолосование.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроголосоватьСервер(ВыбранныйВариантГолосования)
	
	РаботаСОбсуждениями.Проголосовать(Объект.Ссылка, ВыбранныйВариантГолосования);
	ОбновитьГолосованиеСервер();
	
КонецПроцедуры

&НаСервере
Процедура ОтменитьСвойГолосСервер()
	
	РаботаСОбсуждениями.ОтменитьГолос(Объект.Ссылка);
	ОбновитьГолосованиеСервер();	

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВариантыГолосованияПоУмолчанию()
	
	НовыйВариантГолосования = Объект.ВариантыГолосования.Добавить();
	НовыйВариантГолосования.ТекстВарианта = НСтр("ru = 'Да'");
	НовыйВариантГолосования = Объект.ВариантыГолосования.Добавить();
	НовыйВариантГолосования.ТекстВарианта = НСтр("ru = 'Нет'");
	НовыйВариантГолосования = Объект.ВариантыГолосования.Добавить();
	НовыйВариантГолосования.ТекстВарианта = НСтр("ru = 'Не знаю'");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьРезультатыГолосования()
	
	Если ГолосованиеВПроцессе Тогда
		ГолосованиеВПроцессе = Ложь;
		УдалитьРезультатыГолосованияПослеЗаписи = Истина;
		Если ГолосованиеВПроцессе Тогда
			Элементы.ВопросГолосованияУправление.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
			Элементы.ДобавленоГолосование.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;	
		Иначе
			Элементы.ВопросГолосованияУправление.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
			Элементы.ДобавленоГолосование.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредложитьУдалитьРезультатыГолосования(Отказ)
	
	Если Не ГолосованиеВПроцессе Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	ОписаниеОповещения = Новый ОписаниеОповещения("ПредложитьУдалитьРезультатыГолосованияЗавершение", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Если изменить варианты ответов, то все предыдущие результаты голосования будут удалены.
		|Продолжить редактирование?'");
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредложитьУдалитьРезультатыГолосованияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьРезультатыГолосования();
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ВыбратьРодителя(Родитель)
	
	Объект.Родитель = Родитель;
	
	Если Объект.Родитель <> Неопределено И Не Объект.Родитель.Пустая() Тогда
		ДатаСообщенияРодитель = Макс(Объект.Родитель.ДатаСоздания, Объект.Родитель.ДатаИзменения); 
		ДатаСообщенияРодительВФормате = Формат(ДатаСообщенияРодитель, "ДФ='dd.MM.yyyy HH:mm'");
		ВОтветНа = 
			Строка(Объект.Родитель.Автор) + ", " 
			+ ДатаСообщенияРодительВФормате  + ", " 
			+ Объект.Родитель.ТекстСообщения;
	Иначе
		ВОтветНа = "";	
	КонецЕсли;
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьПолеВОтветНаСервер()
		
	Если Объект.Родитель = Неопределено ИЛИ Объект.Родитель.Пустая() Тогда
		Объект.Родитель = БывшийРодитель;
		
		Если Объект.Родитель <> Неопределено И Не Объект.Родитель.Пустая() Тогда
			ДатаСообщенияРодитель = Макс(Объект.Родитель.ДатаСоздания, Объект.Родитель.ДатаИзменения); 
			ДатаСообщенияРодительВФормате = Формат(ДатаСообщенияРодитель, "ДФ='dd.MM.yyyy HH:mm'");
			ВОтветНа = 
				Строка(Объект.Родитель.Автор) + ", " 
				+ ДатаСообщенияРодительВФормате  + ", " 
				+ Объект.Родитель.ТекстСообщения;
		КонецЕсли;
			
		РодительУдален = Ложь;
	Иначе
		БывшийРодитель = Объект.Родитель;
		Объект.Родитель = Справочники.СообщенияОбсуждений.ПустаяСсылка();
		ВОтветНа = "";
		РодительУдален = Истина;
	КонецЕсли;	
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаСервере
Функция ЦитироватьИсходноеСообщениеСервер()
	
	ТекстЦитирования = ">"+Объект.Родитель.ТекстСообщения;
	ТекстЦитирования = СтрЗаменить(ТекстЦитирования, Символы.ПС, Символы.ПС+">");
	ТекстЦитирования = ТекстЦитирования + Символы.ПС;
	
	Если СтрДлина(Объект.ТекстСообщения) = 0 Тогда
		ТекстЦитирования = ТекстЦитирования + " ";
	КонецЕсли;
	
	Если СтрДлина(Объект.ТекстСообщения) < СтрДлина(ТекстЦитирования) 
		ИЛИ Лев(Объект.ТекстСообщения, СтрДлина(ТекстЦитирования)) <> ТекстЦитирования Тогда
		Объект.ТекстСообщения = ТекстЦитирования + Объект.ТекстСообщения;
	КонецЕсли;
	
	Возврат ТекстЦитирования;
	
КонецФункции

&НаСервере
Процедура ОбновитьДанныеТемы()
	
	ТемаНаименование = Объект.ВладелецСообщения.Наименование;
	ТемаРаздел = Объект.ВладелецСообщения.Папка;
	Предмет = Объект.ВладелецСообщения.Документ;
	ТемаЗакрытая = Объект.ВладелецСообщения.Закрытая;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРеквизитыТемы()
	
	СтруктураРеквизитов = Справочники.ТемыОбсуждений.ПолучитьСтруктуруРеквизитов();
	
	СтруктураРеквизитов.Наименование = ТемаНаименование;
	СтруктураРеквизитов.Документ = Предмет;
	СтруктураРеквизитов.Папка = ТемаРаздел;
	СтруктураРеквизитов.Закрытая = ТемаЗакрытая;
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ПоказатьФотоПользователя(Контакт, УникальныйИдентификатор, Фотография)
	
	// фото пользователя
	Если ЭтоАдресВременногоХранилища(Фотография) Тогда
		УдалитьИзВременногоХранилища(Фотография);
	КонецЕсли;	
	
	Фотография = "";
	Если ЗначениеЗаполнено(Контакт) Тогда
		
		ЕстьКартинка = Ложь;
		Фотография = РаботаСФотографиями.ПолучитьАдресФото(Контакт, УникальныйИдентификатор, ЕстьКартинка);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Фотография) Тогда
		
		Попытка
			Картинка  = БиблиотекаКартинок.ПользовательБезФото;
			Фотография = ПоместитьВоВременноеХранилище(Картинка.ПолучитьДвоичныеДанные(), УникальныйИдентификатор);
		Исключение
			Фотография = "";
		КонецПопытки;
		
	КонецЕсли;	
	// фото пользователя

КонецПроцедуры

#КонецОбласти