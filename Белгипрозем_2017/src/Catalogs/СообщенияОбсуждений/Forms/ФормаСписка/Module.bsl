#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПоказаныОтветыНаСообщение = Ложь;
	
	Список.Параметры.УстановитьЗначениеПараметра("Пользователь", Пользователи.ТекущийПользователь());
	
	СообщениеПриОткрытии = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		ЭтаФорма.ИмяФормы, 
		"ТекущееСообщение", 
		ТекущееСообщение);
	Если ЗначениеЗаполнено(СообщениеПриОткрытии) Тогда
		Элементы.Список.ТекущаяСтрока = СообщениеПриОткрытии;
	КонецЕсли;

	Элементы.ОтображаемыеСообщения.СписокВыбора.Очистить();
	Элементы.ОтображаемыеСообщения.СписокВыбора.Добавить(
		НСтр("ru = 'Все'"), 
		НСтр("ru = 'Все'"));
	Элементы.ОтображаемыеСообщения.СписокВыбора.Добавить(
		НСтр("ru = 'Прочтенные'"),
		НСтр("ru = 'Прочтенные'"));
	Элементы.ОтображаемыеСообщения.СписокВыбора.Добавить(
		НСтр("ru = 'Непрочтенные'"),
		НСтр("ru = 'Непрочтенные'"));		
	ОтображаемыеСообщения = НСтр("ru = 'Все'");
	
	ТекущееСообщениеПрочтено = Истина;
	
	// Прочтение		
	ИспользоватьАвтоматическоеПрочтение =
		ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"НастройкиПрочтения",
			"ПомечатьСообщенияФорумаКакПрочтенныеПриПрочтенныеПриПросмотреВОбластиЧтения",
			Ложь);

	ПоложениеОбластиЧтения = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		ЭтаФорма.ИмяФормы,
		"ПоложениеОбластиЧтения",
		"Снизу");
		
	ОбновитьПоложениеОбластиЧтенияСервер();
	
	ШрифтОбластиЧтения = РаботаСОбсуждениями.ПолучитьПерсональнуюНастройку("ШрифтОбластиЧтения");
	УстановитьШрифтОбластиЧтения(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПриЗакрытииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если РаботаСПрочтениямиКлиент.ПроверитьНеобходимостьОбновления(ИмяСобытия, Параметр, "Обсуждения") Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
	Если ИмяСобытия = "ПервоеСообщениеТемыОбсужденияИзменено" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УстановитьОтборСписка(Список, Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборАвторПриИзменении(Элемент)
	
	ПараметрыОтбора = Новый Соответствие();
	Параметрыотбора.Вставить("Автор", Автор);
	
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодСообщенияПриИзменении(Элемент)
	
	ПараметрыОтбора = Новый Соответствие();
	Параметрыотбора.Вставить("ПериодСообщения", ПериодСообщения);
	
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательАдресатОтветаПриИзменении(Элемент)
	
	ПараметрыОтбора = Новый Соответствие();
	Параметрыотбора.Вставить("АдресатОтвета", АдресатОтвета);
	
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображаемыеСообщенияПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(ОтображаемыеСообщения) 
		Или Не (ОтображаемыеСообщения = НСтр("ru = 'Все'")
		Или ОтображаемыеСообщения = НСтр("ru = 'Прочтенные'")
		Или ОтображаемыеСообщения = НСтр("ru = 'Непрочтенные'")) Тогда
		ОтображаемыеСообщения = НСтр("ru = 'Все'");
	КонецЕсли;
	
	ПараметрыОтбора = Новый Соответствие();
	Параметрыотбора.Вставить("ОтображаемыеСообщения", ОтображаемыеСообщения);
	
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущееСообщениеТекстОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "Родитель" Тогда
		
		Если Элементы.Список.ДанныеСтроки(Элементы.Список.ТекущиеДанные.Родитель) = Неопределено 
			И ЗначениеЗаполнено(ВОтветНа) Тогда
			
			ПоказаныОтветыНаСообщение = Ложь;
			Элементы.ФормаПоказатьОтветыНаСообщение.Пометка = Ложь;
			
			ВОтветНа = "";
			ПараметрыОтбора = Новый Соответствие();
			Параметрыотбора.Вставить("Родитель", ВОтветНа);
			
			УстановитьОтборСписка(Список, ПараметрыОтбора);
			
		КонецЕсли;
		
		СтандартнаяОбработка = Ложь;
		Элементы.Список.ТекущаяСтрока = Элементы.Список.ТекущиеДанные.Родитель;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда
		ПодключитьОбработчикОжидания("ОбработкаОжиданияПрочтения", 0.2, Истина);
	Иначе
		ОчиститьТекущееСообщение();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбластьЧтенияВыбратьШрифт(Команда)
	
	ДиалогВыбораШрифтаОбластиЧтения = Новый ДиалогВыбораШрифта;
	ДиалогВыбораШрифтаОбластиЧтения.Шрифт = ШрифтОбластиЧтения;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбластьЧтенияВыбратьШрифтЗавершение", ЭтотОбъект);
	
	ДиалогВыбораШрифтаОбластиЧтения.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьЧтенияВыбратьШрифтЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ШрифтОбластиЧтения = Результат;
	УстановитьШрифтОбластиЧтения(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьЧтенияОтключена(Команда)
	
	ПоложениеОбластиЧтения = "Отключена";
	ОбновитьПоложениеОбластиЧтенияСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьЧтенияСнизу(Команда)
	
	ПоложениеОбластиЧтения = "Снизу";
	ОбновитьПоложениеОбластиЧтенияСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьЧтенияСправа(Команда)
	
	ПоложениеОбластиЧтения = "Справа";
	ОбновитьПоложениеОбластиЧтенияСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветитьНаСообщение(Команда)
	
	Если Элементы.Список.ТекущаяСтрока = Неопределено
		Или ТипЗнч(Элементы.Список.ТекущаяСтрока) <> Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
		ТекстПредупреждения = НСтр("ru = 'Команда не может быть выполнена для указанного объекта.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru = 'Команда не может быть выполнена для указанного объекта.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", 
		Новый Структура("Сообщение", Элементы.Список.ТекущиеДанные.Ссылка),
		Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтветыНаСообщение(Команда)
	
	Если Не ПоказаныОтветыНаСообщение Тогда
		
		Если (Элементы.Список.ТекущаяСтрока = Неопределено
			Или ТипЗнч(Элементы.Список.ТекущаяСтрока) 
			<> Тип("СправочникСсылка.СообщенияОбсуждений"))Тогда
			Возврат;
		КонецЕсли;

		ПоказаныОтветыНаСообщение = Истина;
		Элементы.ФормаПоказатьОтветыНаСообщение.Пометка = Истина;
		
		ВОтветНа = Элементы.Список.ТекущиеДанные.Ссылка;
		ПараметрыОтбора = Новый Соответствие();
		Параметрыотбора.Вставить("Родитель", ВОтветНа);
		УстановитьОтборСписка(Список, ПараметрыОтбора);
		
	Иначе
		
		ПоказаныОтветыНаСообщение = Ложь;
		Элементы.ФормаПоказатьОтветыНаСообщение.Пометка = Ложь;
		
		ВОтветНа = "";
		ПараметрыОтбора = Новый Соответствие();
		Параметрыотбора.Вставить("Родитель", ВОтветНа);
		УстановитьОтборСписка(Список, ПараметрыОтбора);

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьВсеКакНепрочтенные(Команда)
	
	ОповеститьОПрочтении = УстановитьПрочтение(Тип("СправочникСсылка.СообщенияОбсуждений"), Ложь);
	РаботаСПрочтениямиКлиент.ОповеститьОПрочтении(Тип("СправочникСсылка.СообщенияОбсуждений"), ОповеститьОПрочтении);
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьВсеКакПрочтенные(Команда)
	
	ОповеститьОПрочтении = УстановитьПрочтение(Тип("СправочникСсылка.СообщенияОбсуждений"), Истина);
	РаботаСПрочтениямиКлиент.ОповеститьОПрочтении(Тип("СправочникСсылка.СообщенияОбсуждений"), ОповеститьОПрочтении);
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьКакПрочтенные(Команда)
	
	Сообщения = ПолучитьВыбранныеСообщения(Истина);
	КоличествоСообщений = Сообщения.Количество();
	Если Сообщения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЧислоПрочтенных = 0;
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	Для каждого Ссылка Из ВыделенныеСтроки Цикл
		
		Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
			
			Прочтен = Элементы.Список.ДанныеСтроки(Ссылка).Прочтен;
			
			Если Прочтен Тогда
				
				ЧислоПрочтенных = ЧислоПрочтенных + 1;
				
			КонецЕсли;	
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПоставитьПометкуПрочтения = Истина;
	
	Если КоличествоСообщений = ЧислоПрочтенных Тогда
		ПоставитьПометкуПрочтения = Ложь;
	Иначе
		ПоставитьПометкуПрочтения = Истина;
	КонецЕсли;	
	
	Если КоличествоСообщений > 1 Тогда
		Если ПоставитьПометкуПрочтения Тогда
			Состояние(НСтр("ru = 'Сообщения помечаются как прочтенные. Пожалуйста подождите...'"));
		Иначе
			Состояние(НСтр("ru = 'Снимается пометка прочтенности. Пожалуйста подождите...'"));
		КонецЕсли;	
	КонецЕсли;
	
	ОповеститьОПрочтении = УстановитьПрочтение(Сообщения, ПоставитьПометкуПрочтения);
	
	РаботаСПрочтениямиКлиент.ОповеститьОПрочтении(Сообщения, ОповеститьОПрочтении);
	Если КоличествоСообщений > 1 Тогда
		
		Если ПоставитьПометкуПрочтения Тогда
			ТекстСостояния = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Сообщения помечены как прочтенные (%1)'"),
				КоличествоСообщений);
		Иначе
			ТекстСостояния = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Сняты пометки прочтенности сообщений (%1)'"),
				КоличествоСообщений);
		КонецЕсли;
			
		Состояние(ТекстСостояния);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписка(Список, ПараметрыОтбора)
	
	// Автор 
	Автор = ПараметрыОтбора.Получить("Автор");
	Если Автор <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(Автор) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"Автор");
		Иначе			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				"Автор",
				Автор);
		КонецЕсли;
	КонецЕсли;
	
	// Период сообщения
	ПериодСообщения = ПараметрыОтбора.Получить("ПериодСообщения");
	Если ПериодСообщения <> Неопределено Тогда 
		
		ЭлементыОтбора = Список.Отбор.Элементы;
		
		ЭлементОтбораДанных = Неопределено;
		Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
			Если ЭлементОтбора.Представление = "ОтборПериодСообщения" Тогда
				ЭлементОтбораДанных = ЭлементОтбора;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ЭлементОтбораДанных = Неопределено Тогда
			ГруппаОтборПериодСообщения = ЭлементыОтбора.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаОтборПериодСообщения.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ; 
			ГруппаОтборПериодСообщения.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный; 
			ГруппаОтборПериодСообщения.Использование = Истина;
			ГруппаОтборПериодСообщения.Представление = "ОтборПериодСообщения";
		Иначе
			ГруппаОтборПериодСообщения = ЭлементОтбораДанных;
			ГруппаОтборПериодСообщения.Элементы.Очистить();
			ГруппаОтборПериодСообщения.Использование = Истина;
		КонецЕсли;	
					
		Если ЗначениеЗаполнено(ПериодСообщения.ДатаНачала) Тогда 
			ЭлементОтбораДанных = ГруппаОтборПериодСообщения.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДатаСоздания");
			ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
			ЭлементОтбораДанных.ПравоеЗначение = ПериодСообщения.ДатаНачала;
			ЭлементОтбораДанных.Использование = Истина;
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(ПериодСообщения.ДатаОкончания) Тогда 
			ЭлементОтбораДанных = ГруппаОтборПериодСообщения.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДатаСоздания");
			ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
			ЭлементОтбораДанных.ПравоеЗначение = ПериодСообщения.ДатаОкончания;
			ЭлементОтбораДанных.Использование = Истина;
		КонецЕсли;						
		
		Если ГруппаОтборПериодСообщения.Элементы.Количество() = 0 Тогда 
			ЭлементыОтбора.Удалить(ГруппаОтборПериодСообщения);
		КонецЕсли;
		
	КонецЕсли;	
	
	// Адресат ответа
	АдресатОтвета = ПараметрыОтбора.Получить("АдресатОтвета");
	Если АдресатОтвета <> Неопределено Тогда 
		
		ЭлементыОтбора = Список.Отбор.Элементы;
		
		ЭлементОтбораДанных = Неопределено;
		Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
			Если ЭлементОтбора.Представление = "ОтборАдресатОтвета" Тогда
				ЭлементОтбораДанных = ЭлементОтбора;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ЭлементОтбораДанных = Неопределено Тогда
			ГруппаОтборАдресатОтвета = ЭлементыОтбора.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаОтборАдресатОтвета.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли; 
			ГруппаОтборАдресатОтвета.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный; 
			ГруппаОтборАдресатОтвета.Использование = Истина;
			ГруппаОтборАдресатОтвета.Представление = "ОтборАдресатОтвета";
		Иначе
			ГруппаОтборАдресатОтвета = ЭлементОтбораДанных;
			ГруппаОтборАдресатОтвета.Элементы.Очистить();
			ГруппаОтборАдресатОтвета.Использование = Истина;
		КонецЕсли;	
					
		Если ЗначениеЗаполнено(АдресатОтвета) Тогда 
			ЭлементОтбораДанных = ГруппаОтборАдресатОтвета.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТемаАвтор");
			ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбораДанных.ПравоеЗначение = АдресатОтвета;
			ЭлементОтбораДанных.Использование = Истина;

			ЭлементОтбораДанных = ГруппаОтборАдресатОтвета.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВОтветНаАвтор");
			ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбораДанных.ПравоеЗначение = АдресатОтвета;
			ЭлементОтбораДанных.Использование = Истина;
		КонецЕсли;						
		
		Если ГруппаОтборАдресатОтвета.Элементы.Количество() = 0 Тогда 
			ЭлементыОтбора.Удалить(ГруппаОтборАдресатОтвета);
		КонецЕсли;
		
	КонецЕсли;	
	
	// Прочтение
	ОтображаемыеСообщения = ПараметрыОтбора.Получить("ОтображаемыеСообщения");
	Если ОтображаемыеСообщения <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(ОтображаемыеСообщения) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"Прочтен");
		Иначе
			Если ОтображаемыеСообщения = НСтр("ru = 'Прочтенные'") Тогда
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
					"Прочтен",
					Истина);
			ИначеЕсли ОтображаемыеСообщения = НСтр("ru = 'Непрочтенные'") Тогда
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
					"Прочтен",
					Ложь);
			Иначе 
				ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
					"Прочтен");				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Ответы на сообщение
	Родитель = ПараметрыОтбора.Получить("Родитель");
	Если Родитель <> Неопределено Тогда
		ЭлементыОтбора = Список.Отбор.Элементы;
		
		ЭлементОтбораДанных = Неопределено;
		Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
			Если ЭлементОтбора.Представление = "ОтборРодителя" Тогда
				ЭлементОтбораДанных = ЭлементОтбора;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ЭлементОтбораДанных = Неопределено Тогда
			ГруппаОтборРодителя = ЭлементыОтбора.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаОтборРодителя.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли; 
			ГруппаОтборРодителя.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный; 
			ГруппаОтборРодителя.Использование = Истина;
			ГруппаОтборРодителя.Представление = "ОтборРодителя";
		Иначе
			ГруппаОтборРодителя = ЭлементОтбораДанных;
			ГруппаОтборРодителя.Элементы.Очистить();
			ГруппаОтборРодителя.Использование = Истина;
		КонецЕсли;	
					
		Если ЗначениеЗаполнено(Родитель) Тогда 
			ЭлементОтбораДанных = ГруппаОтборРодителя.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
			ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбораДанных.ПравоеЗначение = Родитель;
			ЭлементОтбораДанных.Использование = Истина;

			ЭлементОтбораДанных = ГруппаОтборРодителя.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Родитель");
			ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
			ЭлементОтбораДанных.ПравоеЗначение = Родитель;
			ЭлементОтбораДанных.Использование = Истина;
		КонецЕсли;						
		
		Если ГруппаОтборРодителя.Элементы.Количество() = 0 Тогда 
			ЭлементыОтбора.Удалить(ГруппаОтборРодителя);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОжиданияПрочтения()
	
	Сообщение = ПолучитьТекущееСообщение(Ложь);
	Если Сообщение = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	Если Сообщение <> ТекущееСообщение Тогда
		ПредыдущееСообщение = ТекущееСообщение;
		ПредыдущееСообщениеПрочтено = ТекущееСообщениеПрочтено;
		Если Не ПредыдущееСообщениеПрочтено 
			И ИспользоватьАвтоматическоеПрочтение 
			И ОбластьЧтенияВключена Тогда
			ОповеститьОПрочтении = УстановитьПрочтение(ПредыдущееСообщение);
			РаботаСПрочтениямиКлиент.ОповеститьОПрочтении(ПредыдущееСообщение, ОповеститьОПрочтении);
		КонецЕсли;
		ТекущееСообщение = Сообщение;
		ТекущиеДанныеСообщения = Элементы.Список.ТекущиеДанные;
		Если ТекущиеДанныеСообщения <> Неопределено Тогда
			Если ТекущиеДанныеСообщения.Свойство("ТекстСообщения")
				И ТекущиеДанныеСообщения.Свойство("Автор")
				И ТекущиеДанныеСообщения.Свойство("ДатаСообщения") Тогда
				
				ТекущееСообщениеТекст = РаботаСОбсуждениямиКлиентСервер.СформироватьТекстовоеПредставлениеСообщения(
						ТекущиеДанныеСообщения.ТекстСообщения,
						ТекущиеДанныеСообщения.Автор,
						ТекущиеДанныеСообщения.ДатаСообщения);
				
			Иначе
				ОчиститьТекущееСообщение();
			КонецЕсли;
			
			Если Элементы.Список.ТекущиеДанные.Свойство("Прочтен") Тогда
				ТекущееСообщениеПрочтено = Элементы.Список.ТекущиеДанные.Прочтен;
			Иначе
				ТекущееСообщениеПрочтено = Ложь;	
			КонецЕсли;
		Иначе
			ОчиститьТекущееСообщение();
			ТекущееСообщениеПрочтено = Ложь;		
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ЭтаФорма.ИмяФормы, "ПоложениеОбластиЧтения", ПоложениеОбластиЧтения);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ЭтаФорма.ИмяФормы, "ТекущееСообщение", ТекущееСообщение);
	Если Не ТекущееСообщениеПрочтено 
		И ИспользоватьАвтоматическоеПрочтение 
		И ОбластьЧтенияВключена Тогда 
		УстановитьПрочтение(ТекущееСообщение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьВыбранныеСообщения(ВыводитьПредупреждение = Ложь)
	
	Результат = Новый Массив;
	
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	Для каждого Ссылка Из ВыделенныеСтроки Цикл
		Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
			Результат.Добавить(Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Сообщение = ПолучитьТекущееСообщение(Ложь);
	
	Если ЗначениеЗаполнено(Сообщение)
		И Результат.Найти(Сообщение) = Неопределено Тогда
		Результат.Добавить(Сообщение);
	КонецЕсли;
	
	Если Результат.Количество() = 0 И ВыводитьПредупреждение Тогда
		ТекстПредупреждения = НСтр("ru = 'Не выбрано сообщение.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ПолучитьТекущееСообщение(ВыводитьПредупреждение = Ложь)
	
	ТекущаяСтрока = Элементы.Список.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрано сообщение.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	ТекущиеДанныеСообщения = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанныеСообщения = Неопределено Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрано сообщение.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТекущиеДанныеСообщения <> Неопределено И Не ТекущиеДанныеСообщения.Свойство("Ссылка") Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрано сообщение.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Сообщение = ТекущиеДанныеСообщения.Ссылка;
	Если Не ТипЗнч(Сообщение) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрано сообщение.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Сообщение;
	
КонецФункции

&НаСервере 
Функция УстановитьПрочтение(Сообщение, Прочтен = Истина)
	
	ПрочтениеУстановлено = РаботаСПрочтениями.УстановитьСвойствоПрочтен(Сообщение, Прочтен);
	
	// Не устанавливать прочтенность сообщения автоматически в случае ручной установки прочтения.
	ТекущееСообщениеПрочтено = Истина;
	
	Возврат ПрочтениеУстановлено;

КонецФункции

&НаСервере
Процедура ОбновитьПоложениеОбластиЧтенияСервер()
	
	Если ПоложениеОбластиЧтения = "Снизу" Тогда
		Элементы.ГруппаСписок.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.ТекущееСообщениеТекст.Видимость = Истина;
		Элементы.ОбластьЧтенияСнизу.Пометка = Истина;
		Элементы.ОбластьЧтенияСправа.Пометка = Ложь;
		Элементы.ОбластьЧтенияОтключена.Пометка = Ложь;
		ОбластьЧтенияВключена = Истина;
		
	ИначеЕсли ПоложениеОбластиЧтения = "Справа" Тогда
		Элементы.ГруппаСписок.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		Элементы.ТекущееСообщениеТекст.Видимость = Истина;
		Элементы.ОбластьЧтенияСнизу.Пометка = Ложь;
		Элементы.ОбластьЧтенияСправа.Пометка = Истина;
		Элементы.ОбластьЧтенияОтключена.Пометка = Ложь;
		ОбластьЧтенияВключена = Истина;
		
	ИначеЕсли ПоложениеОбластиЧтения = "Отключена" Тогда
		Элементы.ОбластьЧтенияСнизу.Пометка = Ложь;
		Элементы.ТекущееСообщениеТекст.Видимость = Ложь;
		Элементы.ОбластьЧтенияСправа.Пометка = Ложь;
		Элементы.ОбластьЧтенияОтключена.Пометка = Истина;
		ОбластьЧтенияВключена = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьШрифтОбластиЧтения(УстановитьПерсональнуюНастройку)
	
	Элементы.ТекущееСообщениеТекст.Шрифт = ШрифтОбластиЧтения;
	
	Если УстановитьПерсональнуюНастройку Тогда
		РаботаСОбсуждениями.УстановитьПерсональнуюНастройку("ШрифтОбластиЧтения", ШрифтОбластиЧтения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТекущееСообщение()
	
	ТекущееСообщение = Неопределено;
	ТекущееСообщениеТекст = "";
	
КонецПроцедуры

#КонецОбласти