#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПоказаныОтветыНаСообщение = Ложь;
	ОтображатьТолькоНовыеСообщения = Ложь;
	ОткрытиеПоДокументу = Ложь;
	
	Список.Параметры.УстановитьЗначениеПараметра("Пользователь", Пользователи.ТекущийПользователь());	

	ОтображаемыеСообщения = НСтр("ru = 'Все'");

	// Прочтение
	ТекущееСообщениеПрочтено = Истина;
		
	ИспользоватьАвтоматическоеПрочтение =
		ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"НастройкиПрочтения",
			"ПомечатьСообщенияФорумаКакПрочтенныеПриПрочтенныеПриПросмотреВОбластиЧтения",
			Ложь);

	ПоложениеОбластиЧтения = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		ЭтаФорма.ИмяФормы,
		"ПоложениеОбластиЧтения",
		"Снизу");
		
	ОбновитьПоложениеОбластиЧтенияСервер();
	
	ПоказатьПомеченныеНаУдаление = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		ЭтаФорма.ИмяФормы,
		"ПоказатьПомеченныеНаУдаление",
		Ложь);
    Элементы.ДеревоСообщенийПоказатьПомеченныеНаУдаление.Пометка = ПоказатьПомеченныеНаУдаление;
	
	РежимОтображенияСообщенийДеревом = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		ЭтаФорма.ИмяФормы, 
		"РежимОтображенияСообщенийДеревом", 
		Ложь);
			
	// Новое для формы просмотра
	Список.Параметры.УстановитьЗначениеПараметра("Тема", "");
	
	Если Параметры.Свойство("Тема") Тогда
		ЗадатьТему(Параметры.Тема);
	КонецЕсли;

	Если Параметры.Свойство("Документ") Тогда
		ОткрытиеПоДокументу = Истина;
		Предмет = Параметры.Документ;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				"Предмет",
				Предмет);		
		ЗадатьТему(РаботаСОбсуждениями.НайтиТемуПоПредмету(Параметры.Документ));
	КонецЕсли;
	
	РеквизитыТемы = Новый Структура;
	РеквизитыТемы.Вставить("Ссылка", Тема);
		
	Если Параметры.Свойство("ТекущееСообщение") Тогда
		ТекущееСообщение = Параметры.ТекущееСообщение;
	Иначе
		ТекущееСообщение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			Тема.УникальныйИдентификатор(), 
			"ТекущееСообщение", 
			"");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущееСообщение) Тогда
		
		Если ЗначениеЗаполнено(ТекущееСообщение.ДатаИзменения) Тогда
			ДатаСообщения = ТекущееСообщение.ДатаИзменения;
		Иначе
			ДатаСообщения = ТекущееСообщение.ДатаСоздания;
		КонецЕсли;
		
		ТекущееСообщениеТекст = 
			РаботаСОбсуждениямиКлиентСервер.СформироватьТекстовоеПредставлениеСообщения(
				ТекущееСообщение.ТекстСообщения,
				ТекущееСообщение.Автор,
				ДатаСообщения);
		
		ОбновитьФайлыСообщения();
		
	КонецЕсли;
	
	ОбновитьСервер();
	
	Если ОбщегоНазначенияДокументооборот.ПриложениеЯвляетсяВебКлиентом() Тогда
		Элементы.СписокКонтекстноеМенюНастроитьАвтообновлениеСпискаСообщений.Видимость = Ложь;
	Иначе
		Автообновление.ЗагрузитьНастройкиАвтообновленияСписка(ЭтаФорма, "Список");
		Элементы.СписокКонтекстноеМенюНастроитьАвтообновлениеСпискаСообщений.Видимость = Истина;
	КонецЕсли;
	
	ШрифтОбластиЧтения = РаботаСОбсуждениями.ПолучитьПерсональнуюНастройку("ШрифтОбластиЧтения");
	УстановитьШрифтОбластиЧтения(Ложь);
	
	Если НЕ ЗначениеЗаполнено(Предмет) И ЗначениеЗаполнено(Тема) Тогда
		Предмет = Тема.Документ;
	КонецЕсли;
	
	ВидимостьПредмета = ЗначениеЗаполнено(Предмет) И НЕ ОткрытиеПоДокументу;
	Элементы.Предмет.Видимость = ВидимостьПредмета;
	Элементы.Предмет.Видимость = ВидимостьПредмета;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьТекущуюСтроку(ТекущееСообщение);
	УстановитьДоступностьКоманд();
	
	УстановитьСтраницуПредпросмотра();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПриЗакрытииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если РаботаСПрочтениямиКлиент.ПроверитьНеобходимостьОбновления(ИмяСобытия, Параметр, "Обсуждения") Тогда
		Если Не РаботаСОбсуждениямиКлиент.ОбновитьПрочтенностьЭлементовДерева(
				Элементы.ДеревоСообщений,
				ДеревоСообщений,
				РежимОтображенияСообщенийДеревом,
				Параметр) Тогда
			Элементы.Список.Обновить();
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяСобытия = "ПервоеСообщениеТемыОбсужденияИзменено" Тогда
		Обновить(Неопределено);
	КонецЕсли;
	
	Если ИмяСобытия = "СообщениеОбсужденияИзменено" Тогда
		Обновить(Неопределено);
	КонецЕсли;
	
	Если ИмяСобытия = "СозданаТемаПоПредмету" Тогда
		Если Параметр.Свойство("Тема") И Параметр.Свойство("Предмет") И Параметр.Предмет = Предмет Тогда
			ЗадатьТему(Параметр.Тема);
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяСобытия = "ВыбраноСообщениеДляПросмотра" Тогда
		Если Параметр.Свойство("Тема") И Параметр.Тема = Тема Тогда
			УстановитьТекущуюСтроку(Параметр.Сообщение);		
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_Файл" И Параметр.Событие = "СозданФайл" Тогда
		Если Параметр.Свойство("Владелец") Тогда
			Если Элементы.Список.ТекущаяСтрока = Параметр.Владелец Тогда
				Обновить(Неопределено);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	Если ТипЗнч(НовыйОбъект) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
		УстановитьТекущуюСтроку(НовыйОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГолосованиеПриИзменении(Элемент)
	
	Элементы.Проголосовать.Доступность = ЗначениеЗаполнено(Голосование) И Не ЗакрытаяТема;
	Элементы.ПроголосоватьСФайлами.Доступность = ЗначениеЗаполнено(Голосование) И Не ЗакрытаяТема;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущееСообщениеТекстОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущееСообщениеТекстСФайламиОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущееСообщениеТекстСГолосованиемОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущееСообщениеТекстСФайламиИГолосованиемОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыВложения

&НаКлиенте
Процедура ВложенияСообщенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
			
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ВстроеннаяПочтаКлиент.ОткрытьВложение(Элемент.ТекущиеДанные.Ссылка, УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияСообщенияПриАктивизацииСтроки(Элемент)
	
	УстановитьДоступностьКомандРаботыСВложением();
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияСообщенияНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Если Элементы.ВложенияСообщения.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МассивФайлов = Новый Массив;
	Для каждого ВыделеннаяСтрока Из Элементы.ВложенияСообщения.ВыделенныеСтроки Цикл
		ДанныеСтроки = ВложенияСообщения.НайтиПоИдентификатору(ВыделеннаяСтрока);
		МассивФайлов.Добавить(ДанныеСтроки.Ссылка);
	КонецЦикла;
	Если МассивФайлов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПеретаскивания.Значение = МассивФайлов;

КонецПроцедуры

&НаКлиенте
Процедура ВложенияСообщенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияСообщенияПередНачаломИзменения(Элемент, Отказ)

	Отказ = Истина;
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ПоказатьЗначение(, Элементы.ВложенияСообщения.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияСообщенияПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТекущиеДанные.ПометкаУдаления Тогда
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Пометить ""%1"" на удаление?'"),
			ТекущиеДанные.Представление);
	Иначе
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Снять с ""%1"" пометку на удаление?'"),
			ТекущиеДанные.Представление);
		КонецЕсли;
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("Вложение", ТекущиеДанные.Ссылка);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВложенияСообщенияПередУдалениемЗавершение", ЭтотОбъект, ПараметрыОбработчика);
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияСообщенияПередУдалениемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ВложениеСообщенияПометитьНаУдалениеСервер(ДополнительныеПараметры.Вложение);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "Родитель" Тогда
		Если Элементы.Список.ДанныеСтроки(Элементы.Список.ТекущиеДанные.Родитель) = Неопределено 
			И ЗначениеЗаполнено(ВОтветНа) Тогда
			
			ПоказаныОтветыНаСообщение = Ложь;
			Элементы.СписокПоказатьОтветыНаСообщение.Пометка = Ложь;

			ВОтветНа = "";
			ПараметрыОтбора = Новый Соответствие();
			Параметрыотбора.Вставить("Родитель", ВОтветНа);
			
			УстановитьОтборСписка(Список, ПараметрыОтбора);
			
		КонецЕсли;
		
		СтандартнаяОбработка = Ложь;
		Элементы.Список.ТекущаяСтрока = Элементы.Список.ТекущиеДанные.Родитель;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если Элементы.Список.ТекущаяСтрока <> Неопределено Тогда
		ПодключитьОбработчикОжидания("ОбработкаОжиданияПрочтения", 0.2, Истина);
	Иначе
		ОчиститьТекущееСообщение();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоСообщений

&НаКлиенте
Процедура ДеревоСообщенийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСообщенийПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ДеревоСообщений.ТекущаяСтрока <> Неопределено Тогда
		ПодключитьОбработчикОжидания("ОбработкаОжиданияПрочтения", 0.2, Истина);
	Иначе
		ОчиститьТекущееСообщение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСообщенийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	Сообщение = ПолучитьТекущееСообщение(Ложь);
	ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", 
		Новый Структура("Тема", Тема));
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСообщенийПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	Если Элемент.ТекущаяСтрока <> Неопределено Тогда
		ПоказатьЗначение(, Элемент.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСообщенийПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
	Сообщения = ПолучитьВыбранныеСообщения(Истина);
	Если Сообщения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Сообщения.Количество() = 1 Тогда
		
		ПометкаУдаления = Не Элементы.ДеревоСообщений.ТекущиеДанные.ПометкаУдаления;
		Если ПометкаУдаления Тогда 
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Пометить ""%1"" на удаление?'"),
				Строка(Элементы.ДеревоСообщений.ТекущиеДанные.Ссылка));
		Иначе
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Снять с ""%1"" пометку удаления?'"),
				Строка(Элементы.ДеревоСообщений.ТекущиеДанные.Ссылка));
		КонецЕсли;
		
	Иначе
		
		ПометкаУдаления = Истина;
		Для Каждого СтрокаТаблицы Из Элемент.ВыделенныеСтроки Цикл
			СтрокаТаблицыСообщения = ДеревоСообщений.НайтиПоИдентификатору(СтрокаТаблицы);
			Если СтрокаТаблицыСообщения.ПометкаУдаления = Истина Тогда
				ПометкаУдаления = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ПометкаУдаления Тогда
			ТекстВопроса = НСтр("ru = 'Пометить выделенные элементы на удаление?'");
		Иначе
			ТекстВопроса = НСтр("ru = 'Снять с выделенных элементов пометку на удаление?'");
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("Сообщения", Сообщения);
	ПараметрыОбработчика.Вставить("ПометкаУдаления", ПометкаУдаления);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДеревоСообщенийПередУдалениемЗавершение", ЭтотОбъект, ПараметрыОбработчика);
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСообщенийПередУдалениемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	СписокРаскрытыхСообщений.Очистить();
	РаботаСОбсуждениямиКлиент.ПолучитьМассивРаскрытыхСообщений(Элементы.ДеревоСообщений, ДеревоСообщений.ПолучитьЭлементы(), СписокРаскрытыхСообщений);
	ВременноеТекущееСообщение = ТекущееСообщение;
	ПометитьНаУдалениеСообщения(ДополнительныеПараметры.Сообщения, ДополнительныеПараметры.ПометкаУдаления);
	РаботаСОбсуждениямиКлиент.УстановитьРазвернутостьЭлементовДерева(Элементы.ДеревоСообщений, ДеревоСообщений, СписокРаскрытыхСообщений);
	РаботаСОбсуждениямиКлиент.УстановитьТекущееСообщениеВДеревеПоСсылке(Элементы.ДеревоСообщений, ДеревоСообщений, ВременноеТекущееСообщение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСообщенийПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	СписокРаскрытыхСообщений.Очистить();
	РаботаСОбсуждениямиКлиент.ПолучитьМассивРаскрытыхСообщений(Элементы.ДеревоСообщений, ДеревоСообщений.ПолучитьЭлементы(), СписокРаскрытыхСообщений);
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") 
		И ПараметрыПеретаскивания.Значение.Количество() <> 0 
		И ТипЗнч(ПараметрыПеретаскивания.Значение[0]) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
		
		Если Строка <> Неопределено Тогда
			СтрокаПриемник = Строка;
			СтрокаДерева = ДеревоСообщений.НайтиПоИдентификатору(СтрокаПриемник);
			СсылкаНовыйРодитель = СтрокаДерева.Ссылка;
		Иначе
			СсылкаНовыйРодитель = "";
		КонецЕсли;
		
		КодПереноса = ДеревоСообщенийПеретаскиваниеСервер(ПараметрыПеретаскивания.Значение, СсылкаНовыйРодитель, Тема);
		Если КодПереноса = 1 Тогда
			Возврат;
		ИначеЕсли КодПереноса = 2 Тогда
			ТекстПредупреждения = НСтр("ru = 'Невозможно перетаскивать сообщения между темами.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Возврат;
		ИначеЕсли КодПереноса = 3 Тогда
			ТекстПредупреждения = НСтр("ru = 'Невозможно перетаскивать первое сообщение темы.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Возврат;
		КонецЕсли;
		
	Иначе
		Возврат;
	КонецЕсли;
	
	РаботаСОбсуждениямиКлиент.УстановитьРазвернутостьЭлементовДерева(Элементы.ДеревоСообщений, ДеревоСообщений, СписокРаскрытыхСообщений);		
	РаботаСОбсуждениямиКлиент.УстановитьТекущееСообщениеВДеревеПоСсылке(Элементы.ДеревоСообщений, ДеревоСообщений, ТекущееСообщение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСообщенийНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	Если Элемент.ТекущаяСтрока = Неопределено Тогда
		Выполнение = Ложь;
		Возврат;
	КонецЕсли;
	
	МассивПеретаскиваемыхЗначений = Новый Массив;

	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") Тогда
		Для Каждого ЭлементМассива Из ПараметрыПеретаскивания.Значение Цикл
			Если ТипЗнч(ЭлементМассива) = Тип("Число") Тогда
				ПеретаскиваемоеЗначение = Элемент.ДанныеСтроки(ЭлементМассива);
				МассивПеретаскиваемыхЗначений.Добавить(ПеретаскиваемоеЗначение.Ссылка);
				ЗаполненМассивПеретаскиваемыхЗначений = Истина;				
			КонецЕсли;
		КонецЦикла;	
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
		ПеретаскиваемоеЗначение = Элемент.ДанныеСтроки(ЭлементМассива.Значение);
		МассивПеретаскиваемыхЗначений.Добавить(ПеретаскиваемоеЗначение.Ссылка);
		ЗаполненМассивПеретаскиваемыхЗначений = Истина;
		Возврат;
	Иначе
		ЗаполненМассивПеретаскиваемыхЗначений = Ложь;
	КонецЕсли;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ПеретаскиваемоеЗначение = ТекущиеДанные.Ссылка;
	
	Если ЗаполненМассивПеретаскиваемыхЗначений Тогда
		ПараметрыПеретаскивания.Значение = МассивПеретаскиваемыхЗначений;
		Возврат;
	КонецЕсли;
	
	Выполнение = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСообщенийПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	Если (Строка = Неопределено) Или (ПараметрыПеретаскивания.Значение = Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область Файлы

&НаКлиенте
Процедура СохранитьВложениеСообщенияКак(Команда)
	
	Если Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСФайлами Тогда
		Элемент = Элементы.ВложенияСообщения;
	ИначеЕсли Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСФайламиИГолосованием Тогда
		Элемент = Элементы.ВложенияСообщенияСГолосованием;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.ВыделенныеСтроки.Количество() > 1 Тогда
		СписокФайловДляВыгрузки = Новый СписокЗначений;
		Для каждого ВыбраннаяСтрока Из Элемент.ВыделенныеСтроки Цикл
			ДанныеСтроки = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
			Если ЗначениеЗаполнено(ДанныеСтроки.Ссылка) Тогда
				СписокФайловДляВыгрузки.Добавить(ДанныеСтроки.Ссылка);
			КонецЕсли;
		КонецЦикла;
		Если СписокФайловДляВыгрузки.Количество() > 0 Тогда
			ВстроеннаяПочтаКлиент.СохранитьВложенияКак(СписокФайловДляВыгрузки, УникальныйИдентификатор);
		КонецЕсли;
	Иначе
		ДанныеФайла = РаботаСФайламиВызовСервера.ПолучитьДанныеФайлаДляСохранения(
			Элемент.ТекущиеДанные.Ссылка,
			Неопределено,
			ЭтаФорма.УникальныйИдентификатор);
		КомандыРаботыСФайламиКлиент.СохранитьКак(ДанныеФайла, УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьВложениеСообщения(Команда)
	
	Если Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСФайлами Тогда
		Элемент = Элементы.ВложенияСообщения;
	ИначеЕсли Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСФайламиИГолосованием Тогда
		Элемент = Элементы.ВложенияСообщенияСГолосованием;
	Иначе
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВстроеннаяПочтаКлиент.ОткрытьВложение(ТекущиеДанные.Ссылка, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьВложениеСообщения(Команда)
	
	Если Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСФайлами Тогда
		Элемент = Элементы.ВложенияСообщения;
	ИначеЕсли Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСФайламиИГолосованием Тогда
		Элемент = Элементы.ВложенияСообщенияСГолосованием;
	Иначе
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("УстановитьДоступностьКомандИОбновить", ЭтотОбъект);
	РаботаСФайламиКлиент.РедактироватьСОповещением(Обработчик, ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКомандИОбновить(Результат = Неопределено, ПараметрыВыполнения = Неопределено) Экспорт
	
	ОбновитьФайлыСообщенияКлиент();
	УстановитьДоступностьКомандРаботыСВложением();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакончитьРедактированиеВложенияСообщения(Команда)
	
	Если Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСФайлами Тогда
		Элемент = Элементы.ВложенияСообщения;
	ИначеЕсли Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСФайламиИГолосованием Тогда
		Элемент = Элементы.ВложенияСообщенияСГолосованием;
	Иначе
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("УстановитьДоступностьКомандИОбновить", ЭтотОбъект);
	
	РаботаСФайламиКлиент.ЗакончитьРедактированиеСОповещением(
		Обработчик,
		ТекущиеДанные.Ссылка,
		УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область ОбластьЧтения

&НаКлиенте
Процедура ОбластьЧтенияВыбратьШрифт(Команда)
	
	ДиалогВыбораШрифтаОбластиЧтения = Новый ДиалогВыбораШрифта;
	ДиалогВыбораШрифтаОбластиЧтения.Шрифт = ШрифтОбластиЧтения;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбластьЧтенияВыбратьШрифтЗавершение", ЭтотОбъект);
	
	ДиалогВыбораШрифтаОбластиЧтения.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьЧтенияВыбратьШрифтЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ШрифтОбластиЧтения = Результат;
	УстановитьШрифтОбластиЧтения(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Проголосовать(Команда)
	
	Если Не ЗначениеЗаполнено(ТекущееСообщение) Тогда
		Возврат;
	КонецЕсли;
	
	ПроголосоватьСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура Прокомментировать(Команда)
	
	ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", 
		Новый Структура("Сообщение, ТекстНовогоСообщения",
			ТекущееСообщение,
			ГолосПользователя));
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОбластьЧтенияОтключена(Команда)
	
	ПоложениеОбластиЧтения = "Отключена";
	ОбновитьПоложениеОбластиЧтенияСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьЧтенияСнизу(Команда)
	
	ПоложениеОбластиЧтения = "Снизу";
	ОбновитьПоложениеОбластиЧтенияСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьЧтенияСправа(Команда)
	
	ПоложениеОбластиЧтения = "Справа";
	ОбновитьПоложениеОбластиЧтенияСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	Если РежимОтображенияСообщенийДеревом Тогда
		ОбновитьДеревоСообщений();
	Иначе
		ОбновитьСервер();
	КонецЕсли;
	УстановитьДоступностьКоманд();
	УстановитьСтраницуПредпросмотра();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветитьНаСообщение(Команда)
	
	Если Тема = Неопределено ИЛИ Тема.Пустая() Тогда
		ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", 
	 		Новый Структура("Предмет", Предмет));
		Возврат;
	КонецЕсли;

	Сообщение = ПолучитьТекущееСообщение(Истина);
	Если Сообщение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", 
		Новый Структура("Сообщение", Сообщение),
		ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьКакПрочтенные(Команда)
	
	Сообщения = ПолучитьВыбранныеСообщения(Истина);
	КоличествоСообщений = Сообщения.Количество();
	Если Сообщения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЧислоПрочтенных = 0;
	Если РежимОтображенияСообщенийДеревом Тогда
		
		ВыделенныеСтроки = Элементы.ДеревоСообщений.ВыделенныеСтроки;
		Для каждого Строка Из ВыделенныеСтроки Цикл
			
			Ссылка = Элементы.ДеревоСообщений.ДанныеСтроки(Строка).Ссылка;
			
			Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
				
				Прочтен = Элементы.ДеревоСообщений.ДанныеСтроки(Строка).Прочтен;
				
				Если Прочтен Тогда
					
					ЧислоПрочтенных = ЧислоПрочтенных + 1;
					
				КонецЕсли;	
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
		Для каждого Ссылка Из ВыделенныеСтроки Цикл
			
			Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
				
				Прочтен = Элементы.Список.ДанныеСтроки(Ссылка).Прочтен;
				
				Если Прочтен Тогда
					
					ЧислоПрочтенных = ЧислоПрочтенных + 1;
					
				КонецЕсли;	
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ПоставитьПометкуПрочтения = Истина;
	
	Если КоличествоСообщений = ЧислоПрочтенных Тогда
		ПоставитьПометкуПрочтения = Ложь;
	Иначе
		ПоставитьПометкуПрочтения = Истина;
	КонецЕсли;	
	
	Если КоличествоСообщений > 1 Тогда
		Если ПоставитьПометкуПрочтения Тогда
			Состояние(НСтр("ru = 'Сообщения помечаются как прочтенные. Пожалуйста подождите...'"));
		Иначе
			Состояние(НСтр("ru = 'Снимается пометка прочтенности. Пожалуйста подождите...'"));
		КонецЕсли;	
	КонецЕсли;
	
	УстановитьПрочтение(Сообщения, ПоставитьПометкуПрочтения);
	
	Если КоличествоСообщений > 1 Тогда
		
		Если ПоставитьПометкуПрочтения Тогда
			ТекстСостояния = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Сообщения помечены как прочтенные (%1)'"),
				КоличествоСообщений);
		Иначе
			ТекстСостояния = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Сняты пометки прочтенности сообщений (%1)'"),
				КоличествоСообщений);
		КонецЕсли;
			
		Состояние(ТекстСостояния);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтветыНаСообщение(Команда)
	
	Если Не ПоказаныОтветыНаСообщение Тогда
		
		Если (Элементы.Список.ТекущаяСтрока = Неопределено
			Или ТипЗнч(Элементы.Список.ТекущаяСтрока) 
			<> Тип("СправочникСсылка.СообщенияОбсуждений"))Тогда
			Возврат;
		КонецЕсли;

		ПоказаныОтветыНаСообщение = Истина;
		Элементы.СписокПоказатьОтветыНаСообщение.Пометка = Истина;
		
		ВОтветНа = Элементы.Список.ТекущиеДанные.Ссылка;
		ПараметрыОтбора = Новый Соответствие();
		Параметрыотбора.Вставить("Родитель", ВОтветНа);
		УстановитьОтборСписка(Список, ПараметрыОтбора);
		
	Иначе
		
		ПоказаныОтветыНаСообщение = Ложь;
		Элементы.СписокПоказатьОтветыНаСообщение.Пометка = Ложь;
		
		ВОтветНа = "";
		ПараметрыОтбора = Новый Соответствие();
		Параметрыотбора.Вставить("Родитель", ВОтветНа);
		УстановитьОтборСписка(Список, ПараметрыОтбора);

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Написать(Команда)
	
	Если Тема = Неопределено ИЛИ Тема.Пустая() Тогда
		ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", 
	 		Новый Структура("Предмет", Предмет));
		Возврат;
	КонецЕсли;

	ОткрытьФорму("Справочник.СообщенияОбсуждений.Форма.ФормаЭлемента", 
		Новый Структура("Тема", Тема),
		ЭтаФорма);
		
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьТолькоНовыеСообщения(Команда)
	
	Если Не ЗначениеЗаполнено(ОтображаемыеСообщения) 
		Или Не (ОтображаемыеСообщения = НСтр("ru = 'Все'")
		Или ОтображаемыеСообщения = НСтр("ru = 'Прочтенные'")
		Или ОтображаемыеСообщения = НСтр("ru = 'Непрочтенные'")) Тогда
		ОтображаемыеСообщения = НСтр("ru = 'Все'");
	КонецЕсли;
	
	Если ОтображатьТолькоНовыеСообщения Тогда
		ОтображатьТолькоНовыеСообщения = Ложь;
		Элементы.СписокОтображатьТолькоНовыеСообщения.Пометка = Ложь;
		ОтображаемыеСообщения = НСтр("ru = 'Все'"); 	
	Иначе
		ОтображатьТолькоНовыеСообщения = Истина;
		Элементы.СписокОтображатьТолькоНовыеСообщения.Пометка = Истина;
		ОтображаемыеСообщения = НСтр("ru = 'Непрочтенные'");	
	КонецЕсли;
	
	ПараметрыОтбора = Новый Соответствие();
	Параметрыотбора.Вставить("ОтображаемыеСообщения", ОтображаемыеСообщения);
	
	УстановитьОтборСписка(Список, ПараметрыОтбора);

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПомеченныеНаУдаление(Команда)
			
	ПоказатьПомеченныеНаУдаление = Не ПоказатьПомеченныеНаУдаление;
	
	Обновить(Неопределено);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточку(Команда)

	Сообщение = ПолучитьТекущееСообщение(Ложь);
	Если Сообщение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Сообщение);
	
	ОткрытьФорму("Справочник.СообщенияОбсуждений.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВидОтображения(Команда)
	
	РежимОтображенияСообщенийДеревом = Не РежимОтображенияСообщенийДеревом;
	
	ОбновитьОтображение();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточкуТемы(Команда)
	
	Если Не ЗначениеЗаполнено(Тема) Тогда
		ТекстПредупреждения = НСтр("ru = 'Не выбрана тема обсуждения.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Тема);
	
	ОткрытьФорму("Справочник.ТемыОбсуждений.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Подписаться(Команда)
	
	Если ЗначениеЗаполнено(Тема) Тогда
		ПараметрыФормы = Новый Структура("ОбъектПодписки", Тема);
		ОткрытьФорму("ОбщаяФорма.ПодпискаНаУведомленияПоОбъекту", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьРазвернутьДеревоСообщений(Команда)
	
	СвернутьДерево = Ложь;
	
	Для Каждого ЭлементДерева Из ДеревоСообщений.ПолучитьЭлементы() Цикл
		
		Если Элементы.ДеревоСообщений.Развернут(ЭлементДерева.ПолучитьИдентификатор()) Тогда
			
			СвернутьДерево = Истина;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ЭлементДерева Из ДеревоСообщений.ПолучитьЭлементы() Цикл
		
		Если СвернутьДерево Тогда
			Элементы.ДеревоСообщений.Свернуть(ЭлементДерева.ПолучитьИдентификатор());
		Иначе
			Элементы.ДеревоСообщений.Развернуть(ЭлементДерева.ПолучитьИдентификатор(), Истина);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьРазвернутьВеткуСообщений(Команда)
	
	РазворачиваемаяСтрока = Число(Элементы.ДеревоСообщений.ТекущаяСтрока);
	
	Если Элементы.ДеревоСообщений.Развернут(РазворачиваемаяСтрока) Тогда
		
		Элементы.ДеревоСообщений.Свернуть(РазворачиваемаяСтрока);
		
	Иначе
		
		Элементы.ДеревоСообщений.Развернуть(РазворачиваемаяСтрока, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьНовыеСообщения(Команда)
	
	СписокНеразвернутыхСообщений = ПолучитьСписокНеразвернутыхСообщений();
	
	Если ЗначениеЗаполнено(СписокНеразвернутыхСообщений) Тогда
		
		РаботаСОбсуждениямиКлиент.УстановитьРазвернутостьЭлементовДерева(
			Элементы.ДеревоСообщений,
			ДеревоСообщений,
			СписокНеразвернутыхСообщений);
		
		Индекс = -1;
		РаботаСОбсуждениямиКлиентСервер.НайтиСообщениеВДеревеПоСсылке(
			ДеревоСообщений.ПолучитьЭлементы(),
			СписокНеразвернутыхСообщений[0].Значение,
			Индекс);
		Если Индекс > -1 Тогда
			Элементы.ДеревоСообщений.ТекущаяСтрока = Индекс;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьАвтообновлениеСпискаСообщений(Команда)
	
	АвтообновлениеКлиент.УстановитьПараметрыАвтообновленияСписка(ЭтаФорма, "Список");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Файлы

&НаСервере
Процедура ВложениеСообщенияПометитьНаУдалениеСервер(ФайлСсылка)
	
	ФайлОбъект = ФайлСсылка.ПолучитьОбъект();
	ЗаблокироватьДанныеДляРедактирования(ФайлСсылка);
	ФайлОбъект.УстановитьПометкуУдаления(Не ФайлОбъект.ПометкаУдаления);
	ОбновитьФайлыСообщения();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФайлыСообщенияКлиент()
	
	Если РежимОтображенияСообщенийДеревом Тогда
		
		ТекущиеДанные = Элементы.ДеревоСообщений.ТекущиеДанные;
		
	Иначе
		
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		
	КонецЕсли;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Файлы И ОбластьЧтенияВключена Тогда
		ОбновитьФайлыСообщения();
	Иначе
		ВложенияСообщения.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьФайлыСообщения()
	
	Если Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСФайламиИГолосованием Тогда
		Элемент = Элементы.ВложенияСообщенияСГолосованием;
	Иначе
		Элемент = Элементы.ВложенияСообщения;
	КонецЕсли;
	
	// Сохранение текущей строки
	ТекПозиция = Неопределено;
	Если Элемент.ТекущаяСтрока <> Неопределено Тогда
		ТекДанные = ВложенияСообщения.НайтиПоИдентификатору(Элемент.ТекущаяСтрока);
		Если ТекДанные <> Неопределено Тогда
			Если ТекДанные.Свойство("Ссылка")
				И ЗначениеЗаполнено(ТекДанные.Ссылка) Тогда
				ТекПозиция = Новый Структура("Ссылка", ТекДанные.Ссылка);
			ИначеЕсли ТекДанные.Свойство("Представление")
				И ТекДанные.Свойство("Размер") Тогда
				ТекПозиция = Новый Структура("Представление, Размер", ТекДанные.Представление, ТекДанные.Размер);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Заполнение списка файлов
	Если ЗначениеЗаполнено(ТекущееСообщение) Тогда
		ЗаполнитьВложения(ВложенияСообщения, ТекущееСообщение);
	КонецЕсли;
	
	// Восстановление текущей строки
	Если ЗначениеЗаполнено(ТекПозиция) Тогда
		Если ТипЗнч(ТекПозиция) = Тип("Структура") Тогда
			Строки = ВложенияСообщения.НайтиСтроки(ТекПозиция);
			Если Строки.Количество() > 0 Тогда
				Элемент.ТекущаяСтрока = Строки[0].ПолучитьИдентификатор();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКомандРаботыСВложением()
	
	Если Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСФайлами Тогда
		Элемент = Элементы.ВложенияСообщения;
	ИначеЕсли Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСФайламиИГолосованием Тогда
		Элемент = Элементы.ВложенияСообщенияСГолосованием;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		
		Элементы.ПросмотретьВложениеСообщения.Доступность = Ложь;
		Элементы.РедактироватьВложениеСообщения.Доступность = Ложь;
		Элементы.ЗакончитьРедактированиеВложенияСообщения.Доступность = Ложь;
		Элементы.СохранитьВложениеСообщенияКак.Доступность = Ложь;
		
		Элементы.ПросмотретьВложениеСообщенияСГолосованием.Доступность = Ложь;
		Элементы.РедактироватьВложениеСообщенияСГолосованием.Доступность = Ложь;
		Элементы.ЗакончитьРедактированиеВложенияСообщенияСГолосованием.Доступность = Ложь;
		Элементы.СохранитьВложениеСообщенияКакСГолосованием.Доступность = Ложь;
		
	Иначе
		ТекущиеДанные = Элемент.ТекущиеДанные;
		
		Элементы.ПросмотретьВложениеСообщения.Доступность = Истина;
		Элементы.РедактироватьВложениеСообщения.Доступность = Истина;
		Элементы.ЗакончитьРедактированиеВложенияСообщения.Доступность = ТекущиеДанные.РедактируетТекущийПользователь;
		Элементы.СохранитьВложениеСообщенияКак.Доступность = Истина;
		
		Элементы.ПросмотретьВложениеСообщенияСГолосованием.Доступность = Истина;
		Элементы.РедактироватьВложениеСообщенияСГолосованием.Доступность = Истина;
		Элементы.ЗакончитьРедактированиеВложенияСообщенияСГолосованием.Доступность = ТекущиеДанные.РедактируетТекущийПользователь;
		Элементы.СохранитьВложениеСообщенияКак.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВложения(Вложения, Сообщение)
	
	ФайлыСообщения = РаботаСОбсуждениями.ПолучитьФайлыСообщения(
		Сообщение, // Сообщение
		Истина, // ФормироватьРазмерПредставление
		Ложь); // ВключатьПомеченныеНаУдаление
	
	Вложения.Очистить();
	Для каждого ФайлыСообщенияСтрока Из ФайлыСообщения Цикл
		ВложенияСтрока = Вложения.Добавить();
		ЗаполнитьЗначенияСвойств(ВложенияСтрока, ФайлыСообщенияСтрока);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура УстановитьСтраницуПредпросмотра()
	
	Если РежимОтображенияСообщенийДеревом Тогда
		
		ТекущиеДанные = Элементы.ДеревоСообщений.ТекущиеДанные;
		
	Иначе
		
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		
	КонецЕсли;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Файлы И ТекущиеДанные.ДобавленоГолосование Тогда
		Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСФайламиИГолосованием;
	ИначеЕсли ТекущиеДанные.Файлы Тогда
		Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСФайлами;
	ИначеЕсли ТекущиеДанные.ДобавленоГолосование Тогда
		Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотрСГолосованием;
	Иначе
		Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотр;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписка(Список, ПараметрыОтбора)
	
	// Прочтение
	ОтображаемыеСообщения = ПараметрыОтбора.Получить("ОтображаемыеСообщения");
	Если ОтображаемыеСообщения <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(ОтображаемыеСообщения) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"Прочтен");
		Иначе
			Если ОтображаемыеСообщения = НСтр("ru = 'Прочтенные'") Тогда
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
					"Прочтен",
					Истина);
			ИначеЕсли ОтображаемыеСообщения = НСтр("ru = 'Непрочтенные'") Тогда
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
					"Прочтен",
					Ложь);
			Иначе 
				ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
					"Прочтен");				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Ответы на сообщение
	Родитель = ПараметрыОтбора.Получить("Родитель");
	Если Родитель <> Неопределено Тогда
		ЭлементыОтбора = Список.Отбор.Элементы;
		
		ЭлементОтбораДанных = Неопределено;
		Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
			Если ЭлементОтбора.Представление = "ОтборРодителя" Тогда
				ЭлементОтбораДанных = ЭлементОтбора;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ЭлементОтбораДанных = Неопределено Тогда
			ГруппаОтборРодителя = ЭлементыОтбора.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаОтборРодителя.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли; 
			ГруппаОтборРодителя.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный; 
			ГруппаОтборРодителя.Использование = Истина;
			ГруппаОтборРодителя.Представление = "ОтборРодителя";
		Иначе
			ГруппаОтборРодителя = ЭлементОтбораДанных;
			ГруппаОтборРодителя.Элементы.Очистить();
			ГруппаОтборРодителя.Использование = Истина;
		КонецЕсли;	
					
		Если ЗначениеЗаполнено(Родитель) Тогда 
			ЭлементОтбораДанных = ГруппаОтборРодителя.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
			ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбораДанных.ПравоеЗначение = Родитель;
			ЭлементОтбораДанных.Использование = Истина;

			ЭлементОтбораДанных = ГруппаОтборРодителя.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Родитель");
			ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
			ЭлементОтбораДанных.ПравоеЗначение = Родитель;
			ЭлементОтбораДанных.Использование = Истина;
		КонецЕсли;						
		
		Если ГруппаОтборРодителя.Элементы.Количество() = 0 Тогда 
			ЭлементыОтбора.Удалить(ГруппаОтборРодителя);
		КонецЕсли;
	КонецЕсли;
	
	// Пометка удаления
	ПометкаУдаления = ПараметрыОтбора.Получить("ПометкаУдаления");
	Если ПометкаУдаления <> Неопределено Тогда 
		Если ПометкаУдаления Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"ПометкаУдаления");	
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				"ПометкаУдаления",
				Ложь);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОжиданияПрочтения()
	
	Сообщение = ПолучитьТекущееСообщение(Ложь);
	Если Сообщение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Сообщение = ТекущееСообщение Тогда
		Возврат;
	КонецЕсли;
	
	ПредыдущееСообщение = ТекущееСообщение;
	ПредыдущееСообщениеПрочтено = ТекущееСообщениеПрочтено;
	ТекущееСообщение = Сообщение;
	
	Если Не ПредыдущееСообщениеПрочтено 
		И ИспользоватьАвтоматическоеПрочтение 
		И ОбластьЧтенияВключена Тогда
		
		УстановитьПрочтение(ПредыдущееСообщение);
		
	КонецЕсли;
	
	ТекущиеДанныеСообщения = ПолучитьТекущиеДанные();
	Если ТекущиеДанныеСообщения <> Неопределено Тогда
		
		Если ТекущиеДанныеСообщения.Свойство("ТекстСообщения")
			И ТекущиеДанныеСообщения.Свойство("Автор")
			И ТекущиеДанныеСообщения.Свойство("ДатаСообщения") Тогда
			
			ТекущееСообщениеТекст = 
				РаботаСОбсуждениямиКлиентСервер.СформироватьТекстовоеПредставлениеСообщения(
					ТекущиеДанныеСообщения.ТекстСообщения,
					ТекущиеДанныеСообщения.Автор,
					ТекущиеДанныеСообщения.ДатаСообщения);
			ОбработатьФормированиеПредпросмотраСообщения();
			
		Иначе
			ОчиститьТекущееСообщение();
		КонецЕсли;
		
		Если ТекущиеДанныеСообщения.Свойство("Прочтен") Тогда
			ТекущееСообщениеПрочтено = ТекущиеДанныеСообщения.Прочтен;
		Иначе
			ТекущееСообщениеПрочтено = Ложь;
		КонецЕсли;
		
	Иначе
		ОчиститьТекущееСообщение();
		ТекущееСообщениеПрочтено = Ложь;
	КонецЕсли;
	
	УстановитьСтраницуПредпросмотра();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьФормированиеПредпросмотраСообщения()
	
	Если ОбластьЧтенияВключена Тогда
		
		Если РежимОтображенияСообщенийДеревом Тогда
			
			ТекущиеДанные = Элементы.ДеревоСообщений.ТекущиеДанные;
			
		Иначе
			
			ТекущиеДанные = Элементы.Список.ТекущиеДанные;
			
		КонецЕсли;
		
		Если ТекущиеДанные<> Неопределено Тогда
			
			Если ТекущиеДанные.Файлы ИЛИ ТекущиеДанные.ДобавленоГолосование Тогда
				
				ОбработатьФормированиеПредпросмотраСообщенияСервер(ТекущиеДанные.ДобавленоГолосование, ТекущиеДанные.Файлы);
				
			КонецЕсли;
			
		Иначе
			
			ВложенияСообщения.Очистить();
			ВопросГолосования = "";
			Голосование = 0;
			ВсегоГолосов = "";
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьФормированиеПредпросмотраСообщенияСервер(ДобавленоГолосование, Файлы)
	
	Если ДобавленоГолосование И ОбластьЧтенияВключена Тогда
		ОбновитьГолосованиеСервер();
	Иначе
		ВопросГолосования = "";
		Голосование = 0;
		ВсегоГолосов = "";
	КонецЕсли;
	
	Если Файлы И ОбластьЧтенияВключена Тогда
		ОбновитьФайлыСообщения();
	Иначе
		ВложенияСообщения.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ЭтаФорма.ИмяФормы, "РежимОтображенияСообщенийДеревом", РежимОтображенияСообщенийДеревом);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ЭтаФорма.ИмяФормы, "ПоказатьПомеченныеНаУдаление", ПоказатьПомеченныеНаУдаление);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ЭтаФорма.ИмяФормы, "ПоложениеОбластиЧтения", ПоложениеОбластиЧтения);
	
	Если ЗначениеЗаполнено(Тема) Тогда
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(Тема.УникальныйИдентификатор(), "ТекущееСообщение", ТекущееСообщение);	
	КонецЕсли;
	
	Если Не ТекущееСообщениеПрочтено 
		И ИспользоватьАвтоматическоеПрочтение 
		И ОбластьЧтенияВключена Тогда 
		УстановитьПрочтениеСервер(ТекущееСообщение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьВыбранныеСообщения(ВыводитьПредупреждение = Ложь)
	
	Результат = Новый Массив;
	
	Если РежимОтображенияСообщенийДеревом Тогда
		ВыделенныеСтроки = Элементы.ДеревоСообщений.ВыделенныеСтроки;
	Иначе
		ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	КонецЕсли;

	Для каждого Строка Из ВыделенныеСтроки Цикл
		
		Если РежимОтображенияСообщенийДеревом Тогда
			ДанныеСтроки = Элементы.ДеревоСообщений.ДанныеСтроки(Строка);
			Ссылка = ДанныеСтроки.Ссылка;
		Иначе
			Ссылка = Строка;
		КонецЕсли;
		
		Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
			Результат.Добавить(Ссылка);
		КонецЕсли;
	КонецЦикла;
		
	Сообщение = ПолучитьТекущееСообщение(Ложь);
	
	Если ЗначениеЗаполнено(Сообщение)
		И Результат.Найти(Сообщение) = Неопределено Тогда
		Результат.Добавить(Сообщение);
	КонецЕсли;
	
	Если Результат.Количество() = 0 И ВыводитьПредупреждение Тогда
		ТекстПредупреждения = НСтр("ru = 'Не выбрано сообщение.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ПолучитьТекущееСообщение(ВыводитьПредупреждение = Ложь)
	
	ТекущаяСтрока = ПолучитьТекущуюСтроку();
	Если ТекущаяСтрока = Неопределено Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрано сообщение.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	ТекущиеДанныеСообщения = ПолучитьТекущиеДанные();
	Если ТекущиеДанныеСообщения = Неопределено Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрано сообщение.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТекущиеДанныеСообщения <> Неопределено И Не ТекущиеДанныеСообщения.Свойство("Ссылка") Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрано сообщение.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Сообщение = ТекущиеДанныеСообщения.Ссылка;
	Если Не ТипЗнч(Сообщение) = Тип("СправочникСсылка.СообщенияОбсуждений") Тогда
		Если ВыводитьПредупреждение Тогда
			ТекстПредупреждения = НСтр("ru = 'Не выбрано сообщение.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Сообщение;
	
КонецФункции

&НаКлиенте
Процедура УстановитьПрочтение(Сообщение, Прочтен = Истина)
	
	ПрочтениеУстановлено = УстановитьПрочтениеСервер(Сообщение, Прочтен);
	РаботаСПрочтениямиКлиент.ОповеститьОПрочтении(Сообщение, ПрочтениеУстановлено);
	
КонецПроцедуры

&НаСервере 
Функция УстановитьПрочтениеСервер(Сообщение, Прочтен = Истина)
	
	ПрочтениеУстановлено = РаботаСПрочтениями.УстановитьСвойствоПрочтен(Сообщение, Прочтен);
	
	// Не устанавливать прочтенность сообщения автоматически в случае ручной установки прочтения.
	ТекущееСообщениеПрочтено = Истина;
	
	Возврат ПрочтениеУстановлено; 

КонецФункции

&НаСервере
Процедура ОбновитьПоложениеОбластиЧтенияСервер()
	
	Если ПоложениеОбластиЧтения = "Снизу" Тогда
		
		Элементы.СтраницаПросмотрСФайлами.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		Элементы.СтраницаПросмотрСГолосованием.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		Элементы.СтраницаПросмотрСФайламиИГолосованием.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		Элементы.ГруппаСписок.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		Элементы.СтраницыПросмотр.Видимость = Истина;
		Элементы.СписокОбластьЧтенияСнизу.Пометка = Истина;
		Элементы.СписокОбластьЧтенияСправа.Пометка = Ложь;
		Элементы.СписокОбластьЧтенияОтключена.Пометка = Ложь;
		Элементы.ДеревоСообщенийОбластьЧтенияСнизу.Пометка = Истина;
		Элементы.ДеревоСообщенийОбластьЧтенияСправа.Пометка = Ложь;
		Элементы.ДеревоСообщенийОбластьЧтенияОтключена.Пометка = Ложь;
		ОбластьЧтенияВключена = Истина;
		
		ОбновитьФайлыСообщения();
		ОбновитьГолосованиеСервер();
		
	ИначеЕсли ПоложениеОбластиЧтения = "Справа" Тогда
		
		Элементы.СтраницаПросмотрСФайлами.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		Элементы.СтраницаПросмотрСГолосованием.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		Элементы.СтраницаПросмотрСФайламиИГолосованием.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		Элементы.ГруппаСписок.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		Элементы.СтраницыПросмотр.Видимость = Истина;
		Элементы.СписокОбластьЧтенияСнизу.Пометка = Ложь;
		Элементы.СписокОбластьЧтенияСправа.Пометка = Истина;
		Элементы.СписокОбластьЧтенияОтключена.Пометка = Ложь;
		Элементы.ДеревоСообщенийОбластьЧтенияСнизу.Пометка = Ложь;
		Элементы.ДеревоСообщенийОбластьЧтенияСправа.Пометка = Истина;
		Элементы.ДеревоСообщенийОбластьЧтенияОтключена.Пометка = Ложь;
		ОбластьЧтенияВключена = Истина;
		
		ОбновитьФайлыСообщения();
		ОбновитьГолосованиеСервер();
		
	ИначеЕсли ПоложениеОбластиЧтения = "Отключена" Тогда
		
		Элементы.СтраницыПросмотр.Видимость = Ложь;
		Элементы.СписокОбластьЧтенияСнизу.Пометка = Ложь;
		Элементы.СписокОбластьЧтенияСправа.Пометка = Ложь;
		Элементы.СписокОбластьЧтенияОтключена.Пометка = Истина;
		Элементы.ДеревоСообщенийОбластьЧтенияСнизу.Пометка = Ложь;
		Элементы.ДеревоСообщенийОбластьЧтенияСправа.Пометка = Ложь;
		Элементы.ДеревоСообщенийОбластьЧтенияОтключена.Пометка = Истина;
		ОбластьЧтенияВключена = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТемуПоПредмету()
	
	ЗадатьТему(РаботаСОбсуждениями.НайтиТемуПоПредмету(Предмет));

КонецПроцедуры

&НаСервере
Процедура ЗадатьТему(НоваяТема)
	
	Тема = НоваяТема;
	Если Тема <> Неопределено Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Тема", Тема);	
		Если ЗначениеЗаполнено(Тема) Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				"Тема",
				Тема);
		КонецЕсли;
		
		РеквизитыТемы = Новый Структура;
		РеквизитыТемы.Вставить("Ссылка", Тема);
		ЗаполнитьДеревоСообщений();
		
		НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(Тема);
		
	КонецЕсли;
	
	ОбновитьЗаголовок();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаголовок()
	
	Если ЗакрытаяТема Тогда
		ПредставлениеСообщенийТемы = НСтр("ru = 'Сообщения закрытой темы'");
	Иначе
		ПредставлениеСообщенийТемы = НСтр("ru = 'Сообщения темы'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Тема) Тогда
		ПредставлениеЗаголовка = " """ + Тема + """" + "("+РаботаСОбсуждениями.ПосчитатьКоличествоСообщений(Тема)+")";
	Иначе
		ПредставлениеЗаголовка = "";
	КонецЕсли;
	
	ЭтаФорма.Заголовок = ПредставлениеСообщенийТемы + ПредставлениеЗаголовка;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСервер()
	
	Если Не ЗначениеЗаполнено(Тема) И ЗначениеЗаполнено(Предмет) Тогда
		ОбновитьТемуПоПредмету();
		Возврат;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Тема) Тогда
		ЗакрытаяТема = Тема.Закрытая;
	КонецЕсли;
	
	ОбновитьЗаголовок();	
	
	Если РежимОтображенияСообщенийДеревом Тогда
		Элементы.СтраницаСписок.Видимость = Ложь;
		Элементы.СтраницаКоманднаяПанельСписок.Видимость = Ложь;
		Элементы.СтраницаДерево.Видимость = Истина;
		Элементы.СтраницаКоманднаяПанельДерево.Видимость = Истина;
		ЗаполнитьДеревоСообщений();
	Иначе
		Элементы.СтраницаСписок.Видимость = Истина;
		Элементы.СтраницаКоманднаяПанельСписок.Видимость = Истина;
		Элементы.СтраницаДерево.Видимость = Ложь;
		Элементы.СтраницаКоманднаяПанельДерево.Видимость = Ложь;
		Элементы.Список.Обновить();
	КонецЕсли;
	
	ПараметрыОтбора = Новый Соответствие();
	Параметрыотбора.Вставить("ПометкаУдаления", ПоказатьПомеченныеНаУдаление);
	
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
	Элементы.ДеревоСообщенийПоказатьПомеченныеНаУдаление.Пометка = ПоказатьПомеченныеНаУдаление;
	Элементы.СписокПоказатьПомеченныеНаУдаление.Пометка = ПоказатьПомеченныеНаУдаление;
	
	ОбновитьФайлыСообщения();
	ОбновитьГолосованиеСервер();
	
КонецПроцедуры

&НаСервере
Функция ПометитьНаУдалениеСообщения(Сообщения, ПометкаУдаления)
	
	Для Каждого СообщениеСсылка Из Сообщения Цикл
		
		Если СообщениеСсылка.Пустая() Тогда
			Продолжить;
		КонецЕсли;	
		
		СообщениеОбъект = СообщениеСсылка.ПолучитьОбъект();
		СообщениеОбъект.УстановитьПометкуУдаления(ПометкаУдаления);
	КонецЦикла;
	
	ЗаполнитьДеревоСообщений();
	
КонецФункции

&НаСервере
Функция ДеревоСообщенийПеретаскиваниеСервер(ПараметрыПеретаскиванияЗначение, Строка, Тема)
	
	КодПереноса = РаботаСОбсуждениями.ПереносСообщения(ПараметрыПеретаскиванияЗначение, Строка, Тема);
		
	ЗаполнитьДеревоСообщений();
	
	Возврат КодПереноса;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДеревоСообщений()
	
	Дерево = РеквизитФормыВЗначение("ДеревоСообщений");
	Дерево.Строки.Очистить();
	
	Если ЗначениеЗаполнено(Тема) Тогда 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СправочникСообщенияОбсуждений.ПометкаУдаления,
		|	СправочникСообщенияОбсуждений.Родитель,
		|	СправочникСообщенияОбсуждений.Ссылка КАК Ссылка,
		|	СправочникСообщенияОбсуждений.Автор,
		|	ВЫБОР
		|		КОГДА СправочникСообщенияОбсуждений.ДатаСоздания > СправочникСообщенияОбсуждений.ДатаИзменения
		|			ТОГДА СправочникСообщенияОбсуждений.ДатаСоздания
		|		ИНАЧЕ СправочникСообщенияОбсуждений.ДатаИзменения
		|	КОНЕЦ КАК ДатаСообщения,
		|	СправочникСообщенияОбсуждений.ДобавленоГолосование,
		|	ВЫБОР
		|		КОГДА КешИнформацииОбОбъектах.ЕстьЗадачи ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		КОГДА КешИнформацииОбОбъектах.ЕстьЗадачи
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Задачи,
		|	СправочникСообщенияОбсуждений.НомерСообщения КАК НомерСообщения,
		|	ЕСТЬNULL(СведенияОПрочтении.Прочтен, ЛОЖЬ) КАК Прочтен,
		|	СправочникСообщенияОбсуждений.ТекстСообщения,
		|	СправочникСообщенияОбсуждений.ТекстСообщенияСписок,
		|	СправочникСообщенияОбсуждений.ВладелецСообщения КАК Тема,
		|	ВЫБОР
		|		КОГДА КешИнформацииОбОбъектах.ЕстьФайлы ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		КОГДА КешИнформацииОбОбъектах.ЕстьФайлы
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Файлы
		|ИЗ
		|	Справочник.СообщенияОбсуждений КАК СправочникСообщенияОбсуждений
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КешИнформацииОбОбъектах КАК КешИнформацииОбОбъектах
		|		ПО СправочникСообщенияОбсуждений.Ссылка = КешИнформацииОбОбъектах.Объект
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПрочтении КАК СведенияОПрочтении
		|		ПО СправочникСообщенияОбсуждений.Ссылка = СведенияОПрочтении.Объект
		|			И (СведенияОПрочтении.Пользователь = &Пользователь)
		|ГДЕ
		|	СправочникСообщенияОбсуждений.ВладелецСообщения = &Тема
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСообщения ИЕРАРХИЯ";
		
		Запрос.УстановитьПараметр("Тема", Тема);
        Запрос.УстановитьПараметр("Пользователь", ПользователиКлиентСервер.ТекущийПользователь());
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.ПометкаУдаления И Не ПоказатьПомеченныеНаУдаление Тогда 
				Продолжить;
			КонецЕсли;	
			
			Родитель = Выборка.Родитель;
			Если Не ЗначениеЗаполнено(Родитель) Тогда 
				НоваяСтрока = Дерево.Строки.Добавить();
			Иначе	
				НайденнаяСтрока = Дерево.Строки.Найти(Родитель, "Ссылка", Истина);	
				Если НайденнаяСтрока <> Неопределено Тогда
					НоваяСтрока = НайденнаяСтрока.Строки.Добавить();	
				Иначе
					НоваяСтрока = Дерево.Строки.Добавить();	
				КонецЕсли;
			КонецЕсли;
									
			ЗаполнитьСтрокуДереваИзСообщения(НоваяСтрока, Выборка);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоСообщений");
	
	Индекс = -1;
	РаботаСОбсуждениямиКлиентСервер.НайтиСообщениеВДеревеПоСсылке(ДеревоСообщений.ПолучитьЭлементы(), ТекущееСообщение, Индекс);
	Если Индекс > -1 Тогда
		Элементы.ДеревоСообщений.ТекущаяСтрока = Индекс;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокуДереваИзСообщения(ЭлементДерева, Сообщение)
	
	Если ТипЗнч(ЭлементДерева) = Тип("Число") Тогда 
		ЭлементДерева = ДеревоСообщений.НайтиПоИдентификатору(ЭлементДерева);
	КонецЕсли;	
	
	СписокРеквизитов = 
	"ПометкаУдаления,
	|Родитель,
	|Ссылка,
	|Автор,
	|ДатаСообщения,
	|ДобавленоГолосование,
	|Задачи,
	|НомерСообщения,
	|Прочтен,
	|ТекстСообщения,
	|ТекстСообщенияСписок,
	|Тема,
	|Файлы";
	
	Реквизиты = Сообщение;
	
	СписокРеквизитов = СтрЗаменить(СписокРеквизитов, "Родитель,", "");
	
	ЗаполнитьЗначенияСвойств(ЭлементДерева, Реквизиты, СписокРеквизитов); 
	
	ЭлементДерева.РодительскоеСообщение = Реквизиты.Родитель;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДеревоСообщений()
	
	Сообщение = ПолучитьТекущееСообщение(Ложь);
	
	СписокРаскрытыхСообщений.Очистить();
	РаботаСОбсуждениямиКлиент.ПолучитьМассивРаскрытыхСообщений(Элементы.ДеревоСообщений, ДеревоСообщений.ПолучитьЭлементы(), СписокРаскрытыхСообщений);
		
	ОбновитьСервер();
	
	РаботаСОбсуждениямиКлиент.УстановитьРазвернутостьЭлементовДерева(Элементы.ДеревоСообщений, ДеревоСообщений, СписокРаскрытыхСообщений);
	РаботаСОбсуждениямиКлиент.УстановитьТекущееСообщениеВДеревеПоСсылке(Элементы.ДеревоСообщений, ДеревоСообщений, Сообщение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтображение()
	
	ОбновитьСервер();
	УстановитьДоступностьКоманд();
	
	УстановитьТекущуюСтроку(ТекущееСообщение);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьТекущуюСтроку()
	
	Если РежимОтображенияСообщенийДеревом Тогда
		Возврат Элементы.ДеревоСообщений.ТекущаяСтрока;
	Иначе
		Возврат Элементы.Список.ТекущаяСтрока;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция УстановитьТекущуюСтроку(ЗначениеТекущейСтроки)
	
	Если РежимОтображенияСообщенийДеревом Тогда
		РаботаСОбсуждениямиКлиент.УстановитьТекущееСообщениеВДеревеПоСсылке(Элементы.ДеревоСообщений, ДеревоСообщений, ЗначениеТекущейСтроки);
	Иначе
		Элементы.Список.ТекущаяСтрока = ЗначениеТекущейСтроки;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ПолучитьТекущиеДанные()
	
	Если РежимОтображенияСообщенийДеревом Тогда
		Возврат Элементы.ДеревоСообщений.ТекущиеДанные;
	Иначе
		Возврат Элементы.Список.ТекущиеДанные;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура УстановитьДоступностьКоманд()
	
	Элементы.СписокНаписать.Доступность = Не ЗакрытаяТема;
	Элементы.СписокОтветить.Доступность = Не ЗакрытаяТема;
	Элементы.СписокУстановитьПометкуУдаления.Доступность = Не ЗакрытаяТема;
	Элементы.СписокКонтекстноеМенюСоздать.Доступность = Не ЗакрытаяТема;
	Элементы.СписокКонтекстноеМенюОтветить.Доступность = Не ЗакрытаяТема;
	Элементы.СписокКонтекстноеМенюУстановитьПометкуУдаления.Доступность = Не ЗакрытаяТема;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьШрифтОбластиЧтения(УстановитьПерсональнуюНастройку)
	
	Элементы.ТекущееСообщениеТекст.Шрифт = ШрифтОбластиЧтения;
	Элементы.ТекущееСообщениеТекстСФайлами.Шрифт = ШрифтОбластиЧтения;
	Элементы.ТекущееСообщениеТекстСГолосованием.Шрифт = ШрифтОбластиЧтения;
	Элементы.ТекущееСообщениеТекстСФайламиИГолосованием.Шрифт = ШрифтОбластиЧтения;
	
	Если УстановитьПерсональнуюНастройку Тогда
		РаботаСОбсуждениями.УстановитьПерсональнуюНастройку("ШрифтОбластиЧтения", ШрифтОбластиЧтения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокНеразвернутыхСообщений()
	
	НепрочтенныеСообщения = Новый СписокЗначений();
	
	ДеревоСообщенийЗначение = РеквизитФормыВЗначение("ДеревоСообщений");
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Прочтен", Ложь);
	НепрочтенныеСтроки = ДеревоСообщенийЗначение.Строки.НайтиСтроки(ПараметрыОтбора, Истина);
	
	Для Каждого НепрочтеннаяСтрока Из НепрочтенныеСтроки Цикл
		
		НепрочтенныеСообщения.Добавить(НепрочтеннаяСтрока.Ссылка);
		
		Родитель = НепрочтеннаяСтрока.Ссылка.Родитель;
		Пока ЗначениеЗаполнено(Родитель) Цикл
			
			НепрочтенныеСообщения.Добавить(Родитель);
			Родитель = Родитель.Родитель;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат НепрочтенныеСообщения;
	
КонецФункции

&НаСервере
Процедура ОбновитьГолосованиеСервер()
	
	Элементы.Голосование.СписокВыбора.Очистить();
	Элементы.ГолосованиеСФайлами.СписокВыбора.Очистить();
	
	Если Не ЗначениеЗаполнено(ТекущееСообщение) Тогда
		
		ВопросГолосования = "";
		Голосование = 0;
		ВсегоГолосов = "";
		Элементы.Проголосовать.Доступность = Ложь;
		ПользовательПроголосовал = Ложь;
		
		Возврат;
		
	КонецЕсли;
	
	Для каждого РезультатГолосования Из РаботаСОбсуждениями.ПолучитьРезультатГолосования(ТекущееСообщение) Цикл
		
		Если РезультатГолосования.Значение = 0 Тогда
			ВсегоГолосов = РезультатГолосования.Представление;
			Продолжить;
		КонецЕсли;
		
		Элементы.Голосование.СписокВыбора.Добавить(
			РезультатГолосования.Значение,
			РезультатГолосования.Представление);
		
		Элементы.ГолосованиеСФайлами.СписокВыбора.Добавить(
			РезультатГолосования.Значение,
			РезультатГолосования.Представление);
		
	КонецЦикла;
	
	ВопросГолосования = ТекущееСообщение.ВопросГолосования;
	Голосование = РаботаСОбсуждениями.ПолучитьРезультатГолосованияТекущегоПользователя(ТекущееСообщение);
	ГолосПользователя = РаботаСОбсуждениями.ПолучитьПредставлениеГолосаПользователя(ТекущееСообщение);
	Если Голосование <> 0 Тогда
		ПользовательПроголосовал = Истина;
	Иначе
		ПользовательПроголосовал = Ложь;
	КонецЕсли;
	
	Элементы.Проголосовать.Доступность = ЗначениеЗаполнено(Голосование) И Не ЗакрытаяТема;
	Элементы.ПроголосоватьСФайлами.Доступность = ЗначениеЗаполнено(Голосование) И Не ЗакрытаяТема;
	Элементы.Прокомментировать.Доступность = ПользовательПроголосовал И Не ЗакрытаяТема;
	Элементы.ПрокомментироватьСФайлами.Доступность = ПользовательПроголосовал И Не ЗакрытаяТема;
	Элементы.Голосование.Доступность = Не ЗакрытаяТема;
	Элементы.ГолосованиеСФайлами.Доступность = Не ЗакрытаяТема;
	
КонецПроцедуры

&НаСервере
Процедура ПроголосоватьСервер()
	
	РаботаСОбсуждениями.Проголосовать(ТекущееСообщение, Голосование);
	ОбновитьГолосованиеСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТекущееСообщение()
	
	ТекущееСообщение = Неопределено;
	ТекущееСообщениеТекст = "";
	ВложенияСообщения.Очистить();
	Элементы.СтраницыПросмотр.ТекущаяСтраница = Элементы.СтраницаПросмотр;
	
КонецПроцедуры

#КонецОбласти