&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    ОтборПоВидуРабот = Параметры.ОтборПоВидуРабот;

    //Список.Параметры.УстановитьЗначениеПараметра("ОтборПоВидуРабот", ОтборПоВидуРабот);
    
    Если Параметры.Свойство("ОтборПоВидуПроверки") Тогда
        ОтборПоВидуПроверки = Параметры.ОтборПоВидуПроверки;
    Иначе
        // по умолчанию
        ОтборПоВидуПроверки = Перечисления.М_ВидыПроверкиКачества.Камеральная;
    КонецЕсли; 
    //Список.Параметры.УстановитьЗначениеПараметра("ВидПроверки", ОтборПоВидуПроверки);
    
    ЗаполнитьТаблицуДляВыбора();
	
	Если Параметры.Свойство("ТекущаяСтрока") Тогда
		ПоследнееВыбранноеЗамечание = Параметры.ТекущаяСтрока;
		//Строки = ТаблицаДляВыбора.Строки.НайтиСтроки(Новый Структура("Замечание", Параметры.ТекущаяСтрока), Истина);
		//Если Строки.Количество() > 0 Тогда
		//	Элементы.ТаблицаДляВыбора.ТекущаяСтрока =  Строки[0];
		//	Сообщить("Позиционирование на строке", СтатусСообщения.Информация); 
		//КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуДляВыбора()
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   мКлассификаторЗамечанийВидыРабот.Ссылка КАК Ссылка,
        |   мКлассификаторЗамечанийВидыРабот.Ссылка.Наименование,
        |   ВЫРАЗИТЬ(мКлассификаторЗамечанийВидыРабот.Ссылка.ПолноеНаименование КАК СТРОКА(1000)) КАК ПолноеНаименование,
        |   мКлассификаторЗамечанийВидыРабот.Ссылка.Оценка
        |ИЗ
        |   Справочник.мКлассификаторЗамечаний.ВидыРабот КАК мКлассификаторЗамечанийВидыРабот
        |ГДЕ";
        Если ЗначениеЗаполнено(ОтборПоВидуРабот.Родитель) Тогда
            Запрос.Текст = Запрос.Текст + "        
            |   мКлассификаторЗамечанийВидыРабот.ВидРабот = &ВидРабот
            | ИЛИ мКлассификаторЗамечанийВидыРабот.ВидРабот = &ВидРаботРодитель";
        Иначе
            Запрос.Текст = Запрос.Текст + "        
            |   мКлассификаторЗамечанийВидыРабот.ВидРабот = &ВидРабот";
        КонецЕсли;
        
        Запрос.Текст = Запрос.Текст + "        
        |   И мКлассификаторЗамечанийВидыРабот.ВидПроверки = &ВидПроверки
        |   И НЕ мКлассификаторЗамечанийВидыРабот.Ссылка.ПометкаУдаления
        |ИТОГИ ПО
        |   Ссылка ТОЛЬКО ИЕРАРХИЯ"; 
    
    Запрос.УстановитьПараметр("ВидПроверки", ОтборПоВидуПроверки);
    Запрос.УстановитьПараметр("ВидРабот", ОтборПоВидуРабот);
    Если ЗначениеЗаполнено(ОтборПоВидуРабот.Родитель) Тогда
        Запрос.УстановитьПараметр("ВидРаботРодитель", ОтборПоВидуРабот.Родитель);
    КонецЕсли; 
    
    Результат = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
    
    ЗначениеВДанныеФормы(Результат, ТаблицаДляВыбора);

КонецПроцедуры
 
&НаКлиенте
Процедура ОтборПоВидуРаботПриИзменении(Элемент)
    УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоВидуПроверкиПриИзменении(Элемент)
    УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтбор()

    ЗаполнитьТаблицуДляВыбора();
    
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДляВыбораВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
    СтандартнаяОбработка = Ложь;
    
    ТекДанные = Элементы.ТаблицаДляВыбора.ТекущиеДанные;
    Если ТекДанные = Неопределено  Тогда
        Возврат;
	КонецЕсли;
	
	Если ТекДанные.Оценка = 0  Тогда
		Сообщение = Новый СообщениеПользователю();	
		Сообщение.Текст = "Выберите замечание с оценкой!";
		Сообщение.Сообщить();
        Возврат;
	КонецЕсли;

	ДляВозврата = Новый Структура("Замечание, Оценка, Содержание", ТекДанные.Ссылка, ТекДанные.Оценка, ТекДанные.ПолноеНаименование); 
 	Если ЭтоПредопределенныйЭлемент(ТекДанные.Ссылка) Тогда
		ТекДанные = Элементы.МоиЗамечания.ТекущиеДанные;
		Если ТекДанные <> Неопределено Тогда
			ДляВозврата.Вставить("ЗамечаниеПроверяющего", ТекДанные.Наименование);
		КонецЕсли; 
	КонецЕсли; 
   ОповеститьОВыборе(ДляВозврата);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ЭтоПредопределенныйЭлемент(ВыбранноеЗначение.Замечание) Тогда
		ТекДанные = Элементы.МоиЗамечания.ТекущиеДанные;
		ВыбранноеЗначение.Вставить("ЗамечаниеПроверяющего", ТекДанные.Наименование);
	КонецЕсли; 
	ОповеститьОВыборе(ВыбранноеЗначение);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДляВыбораПриАктивизацииСтроки(Элемент)
	Элементы.МоиЗамечания.Видимость = Ложь;
	ТекДанные = Элементы.ТаблицаДляВыбора.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ПараметрыОтбора = Новый Соответствие();
		ПараметрыОтбора.Вставить("Замечание", ТекДанные.Ссылка);
		ПараметрыОтбора.Вставить("Пользователь", ПользователиКлиентСервер.ТекущийПользователь());
		
		УстановитьОтборЗамечаний(ПараметрыОтбора);
		Элементы.МоиЗамечания.Видимость = ЭтоПредопределенныйЭлемент(ТекДанные.Ссылка);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборЗамечаний(ПараметрыОтбора)
	
	Замечание = ПараметрыОтбора.Получить("Замечание");
	Если Замечание <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(Замечание) Тогда 
			Параметр = МоиЗамечания.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Замечание"));
			Параметр.Использование = Ложь;
		Иначе
			МоиЗамечания.Параметры.УстановитьЗначениеПараметра("Замечание", Замечание);
		КонецЕсли;	
	КонецЕсли;
	
	Пользователь = ПараметрыОтбора.Получить("Пользователь");
	Если Пользователь <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(Пользователь) Тогда 
			Параметр = МоиЗамечания.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Пользователь"));
			Параметр.Использование = Ложь;
		Иначе
			МоиЗамечания.Параметры.УстановитьЗначениеПараметра("Пользователь", Пользователь);
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры
 

&НаСервереБезКонтекста
Функция ЭтоПредопределенныйЭлемент(ЗамечаниеСсылка)
	Возврат ЗначениеЗаполнено(ЗамечаниеСсылка.ИмяПредопределенныхДанных);
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(ПоследнееВыбранноеЗамечание) Тогда
		ИдентификаторСтроки = 0;
		ПрекратитьПоиск = Ложь;
		НайтиСтрокуДерева(ТаблицаДляВыбора.ПолучитьЭлементы(), ПоследнееВыбранноеЗамечание, ИдентификаторСтроки, ПрекратитьПоиск);
		Элементы.ТаблицаДляВыбора.ТекущаяСтрока = ИдентификаторСтроки;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура НайтиСтрокуДерева(КоллекцияЭлементовДерева, ТекущиеДанные, ИдентификаторСтроки, ПрекратитьПоиск)
	
	Для Каждого СтрокаДерева Из КоллекцияЭлементовДерева Цикл
		Если ПрекратитьПоиск Тогда
			Возврат;
		КонецЕсли;
		
		Если СтрокаДерева.Ссылка = ТекущиеДанные Тогда
			ИдентификаторСтроки = СтрокаДерева.ПолучитьИдентификатор();
			ПрекратитьПоиск = Истина;
			Возврат;
		КонецЕсли;
		
		КоллекцияЭлементов = СтрокаДерева.ПолучитьЭлементы();
		
		Если КоллекцияЭлементов.Количество() > 0 Тогда
			НайтиСтрокуДерева(КоллекцияЭлементов, ТекущиеДанные, ИдентификаторСтроки, ПрекратитьПоиск);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗамечаниеПроверяющего(Команда)
	ТекДанные = Элементы.ТаблицаДляВыбора.ТекущиеДанные;
	ПараметрыФормы = Новый Структура("Замечание, Пользователь", ТекДанные.Ссылка, ПользователиКлиентСервер.ТекущийПользователь());
	ОткрытьФорму("РегистрСведений.мЗамечанияПроверяющего.ФормаЗаписи", ПараметрыФормы, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура МоиЗамечанияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ТекДанные = Элементы.ТаблицаДляВыбора.ТекущиеДанные;
	Если ТекДанные = Неопределено  Тогда
		Возврат;
	КонецЕсли;
	
	ДляВозврата = Новый Структура("Замечание, Оценка, Содержание", ТекДанные.Ссылка, ТекДанные.Оценка, ТекДанные.ПолноеНаименование); 
	Если ЭтоПредопределенныйЭлемент(ТекДанные.Ссылка) Тогда
		ТекДанные = Элементы.МоиЗамечания.ТекущиеДанные;
		Если ТекДанные <> Неопределено Тогда
			ДляВозврата.Вставить("ЗамечаниеПроверяющего", ТекДанные.Наименование);
		КонецЕсли; 
	КонецЕсли; 
	ОповеститьОВыборе(ДляВозврата);
КонецПроцедуры


