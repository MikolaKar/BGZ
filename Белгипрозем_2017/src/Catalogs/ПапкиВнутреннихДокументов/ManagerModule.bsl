
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает структуру полей папки
//
// Возвращаемое значение:
//   Структура
//     Родитель
//     Наименование
//     Описание
//     Ответственный
//     ДатаСоздания
//
Функция ПолучитьСтруктуруПапки() Экспорт
	
	ПараметрыПапки = Новый Структура;
	ПараметрыПапки.Вставить("Родитель");
	ПараметрыПапки.Вставить("Наименование");
	ПараметрыПапки.Вставить("Описание");
	ПараметрыПапки.Вставить("Ответственный");
	ПараметрыПапки.Вставить("ДатаСоздания");
	
	Возврат ПараметрыПапки;
	
КонецФункции

// Создает и записывает в БД папку внутренних документов
//
// Параметры:
//   СтруктураПапки - Структура - структура полей папки.
// Возвращаемое значение - ссылка на созданную папку
//
Функция СоздатьПапку(СтруктураПапки) Экспорт
	
	НоваяПапка = СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(НоваяПапка, СтруктураПапки);
	НоваяПапка.Записать();
	
	Возврат НоваяПапка.Ссылка;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции_УправлениеДоступом

Функция ПолучитьПоляДоступа() Экспорт
	
	Возврат "Ссылка";
	
КонецФункции

// Заполняет переданный дескриптор доступа
Процедура ЗаполнитьДескрипторДоступа(ОбъектДоступа, ДескрипторДоступа) Экспорт
	
	ДокументооборотПраваДоступа.ЗаполнитьНастройкиДескриптора(ДескрипторДоступа, ОбъектДоступа);
	
КонецПроцедуры	

Функция ЕстьМетодЗаполнитьПраваДоступа() Экспорт
	Возврат Истина;
КонецФункции

// Заполняет права по переданному дескриптору доступа 
Процедура ЗаполнитьПраваДоступа(ДескрипторДоступа, ПраваДоступа, ПротоколРасчетаПрав) Экспорт
	
	// Заполнение правил обработки настроек папки
	ПравилаОбработкиНастроек = Новый Соответствие;
	
	Настройка = "ЧтениеПапокИВнутреннихДокументов";
	РазрешенныеДействия = Новый Массив;
	РазрешенныеДействия.Добавить("Чтение");
	ПравилаОбработкиНастроек.Вставить(Настройка, РазрешенныеДействия);
	
	Настройка = "ИзменениеПапокВнутреннихДокументов";
	РазрешенныеДействия = Новый Массив;
	РазрешенныеДействия.Добавить("Добавление");
	РазрешенныеДействия.Добавить("Изменение");
	РазрешенныеДействия.Добавить("Удаление");
	ПравилаОбработкиНастроек.Вставить(Настройка, РазрешенныеДействия);
	
	Настройка = "УправлениеПравами";
	РазрешенныеДействия = Новый Массив;
	РазрешенныеДействия.Добавить("УправлениеПравами");
	ПравилаОбработкиНастроек.Вставить(Настройка, РазрешенныеДействия);
	
	// Получение прав по настройкам
	ЭтоСтарыйДескриптор = ЗначениеЗаполнено(ДескрипторДоступа.УдалитьПапка);
	Если ЭтоСтарыйДескриптор Тогда
		Справочники.ДескрипторыДоступаОбъектов.ЗаполнитьПраваПоНастройкамПапки(
			ДескрипторДоступа.УдалитьПапка, ПраваДоступа, ПравилаОбработкиНастроек);
	Иначе
		Справочники.ДескрипторыДоступаОбъектов.ЗаполнитьПраваПоНастройкамДескриптора(
			ДескрипторДоступа, ПраваДоступа, ПравилаОбработкиНастроек);
	КонецЕсли;

	// Добавление папки в протокол прав
	Если ПротоколРасчетаПрав <> Неопределено Тогда
		ПротоколРасчетаПрав.Добавить(НСтр("ru = 'Права на папку (см. Настройка прав папки)'"));
	КонецЕсли;
	
КонецПроцедуры

// Заполняет массив разрешенных прав на объекты, которые 
// хранятся в указанной папке.
Процедура ПолучитьПраваОтПапки(Папка, РазрешенныеПрава) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Поиск дескриптора папки
	ДескрипторДоступаПапки = РегистрыСведений.ДескрипторыДоступаДляОбъектов.НайтиДескрипторДляОбъекта(Папка);
	
	Если ДескрипторДоступаПапки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолучитьРазрешенныеПраваОтВладельцаПоДескриптору(ДескрипторДоступаПапки, РазрешенныеПрава);
	
КонецПроцедуры	

// Заполняет массив разрешенных прав на объекты, которые 
// хранятся папке с указанным дескриптором
Процедура ПолучитьРазрешенныеПраваОтВладельцаПоДескриптору(ДескрипторДоступаПапки, РазрешенныеПрава) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ЗначениеЗаполнено(ДескрипторДоступаПапки) Тогда
		Возврат;
	КонецЕсли;
	
	// Заполнение правил обработки настроек дескриптора
	ПравилаОбработкиНастроек = Новый Соответствие;
	
	Настройка = "ЧтениеПапокИВнутреннихДокументов";
	РазрешенныеДействия = Новый Массив;
	РазрешенныеДействия.Добавить("Чтение");
	ПравилаОбработкиНастроек.Вставить(Настройка, РазрешенныеДействия);
	
	Настройка = "ДобавлениеПапокИВнутреннихДокументов";
	РазрешенныеДействия = Новый Массив;
	РазрешенныеДействия.Добавить("Добавление");
	ПравилаОбработкиНастроек.Вставить(Настройка, РазрешенныеДействия);
	
	Настройка = "ИзменениеПапокИВнутреннихДокументов";
	РазрешенныеДействия = Новый Массив;
	РазрешенныеДействия.Добавить("Изменение");
	ПравилаОбработкиНастроек.Вставить(Настройка, РазрешенныеДействия);
	
	Настройка = "ПометкаУдаленияПапокИВнутреннихДокументов";
	РазрешенныеДействия = Новый Массив;
	РазрешенныеДействия.Добавить("Удаление");
	ПравилаОбработкиНастроек.Вставить(Настройка, РазрешенныеДействия);
	
	// Заполнение прав по настройкам
	ЭтоСтарыйДескриптор = ЗначениеЗаполнено(ДескрипторДоступаПапки.УдалитьПапка);
	Если ЭтоСтарыйДескриптор Тогда
		Справочники.ДескрипторыДоступаОбъектов.ЗаполнитьПраваПоНастройкамПапки(
			ДескрипторДоступаПапки.УдалитьПапка,
			РазрешенныеПрава,
			ПравилаОбработкиНастроек);
	Иначе
		Справочники.ДескрипторыДоступаОбъектов.ЗаполнитьПраваПоНастройкамДескриптора(
			ДескрипторДоступаПапки,
			РазрешенныеПрава,
			ПравилаОбработкиНастроек);
	КонецЕсли;
	
КонецПроцедуры	

#КонецОбласти

#КонецЕсли
