//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьДоступностьЭлементовПоПравуДоступа();
	
	ПользователиПустаяСсылка = Справочники.Пользователи.ПустаяСсылка();
	
	// Рабочие группы
	РаботаСРабочимиГруппами.ШаблонПриСозданииНаСервере(ЭтаФорма);
	
	// Протоколирование работы пользователей
	ПротоколированиеРаботыПользователей.ЗаписатьОткрытие(Объект.Ссылка);
	
	// Категории данных
	Если ПолучитьФункциональнуюОпцию("ИспользоватьКатегорииДанных") Тогда
		Для Каждого Категория Из Объект.Категории Цикл
			Категория.ПолноеНаименование = РаботаСКатегориямиДанных.ПолучитьПолныйПутьКатегорииДанных(Категория.Значение);
		КонецЦикла;
	Иначе
		Элементы.СтраницаКатегории.Видимость = Ложь;
	КонецЕсли;
	
	НазваниеОрганизации = Константы.НаименованиеПредприятия.Получить();
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда
		Элементы.ДекорацияОрганизация.Видимость = Истина;
		Элементы.ДекорацияОрганизация.Заголовок = НазваниеОрганизации;
	Иначе	
		Элементы.ДекорацияОрганизация.Видимость = Ложь;
	КонецЕсли;	

	НесколькоКонтрагентов = (Объект.Корреспонденты.Количество() > 1);
	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда 
		ВестиУчетПоКорреспондентам = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.ВидДокумента, "ВестиУчетПоКорреспондентам");
		Если ВестиУчетПоКорреспондентам Тогда
			Элементы.ДекорацияКому.Видимость = Ложь;
			Элементы.ГруппаКорреспондент.ОтображатьЗаголовок = Истина;		
		Иначе
			Элементы.ДекорацияКому.Видимость = Истина;
			Элементы.ГруппаКорреспондент.ОтображатьЗаголовок = Ложь;		
		КонецЕсли;	
	КонецЕсли;	

	ОбновитьВидимостьРеквизитов();
	
	ОбновитьИконкиУчастниковРабочейГруппыДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Строка") И ЭтоАдресВременногоХранилища(ВыбранноеЗначение) Тогда
		ЗагрузитьИсполнителейИзВременногоХранилища(ВыбранноеЗначение);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// Рабочие группы
	РаботаСРабочимиГруппами.ДокументПриЧтенииНаСервере(ЭтаФорма);
	
	// Формирование исходной рабочей группы
	Участники = РегистрыСведений.РабочиеГруппы.ПолучитьУчастниковПоОбъекту(Объект.Ссылка);
	ИсходнаяРабочаяГруппа.Очистить();
	Для каждого Эл Из Участники Цикл
		
		Строка = ИсходнаяРабочаяГруппа.Добавить();
		Строка.Участник = Эл.Участник; 
		Строка.ОсновнойОбъектАдресации = Эл.ОсновнойОбъектАдресации;
		Строка.ДополнительныйОбъектАдресации = Эл.ДополнительныйОбъектАдресации;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("ЭтоНовыйОбъект", НЕ ЗначениеЗаполнено(ТекущийОбъект.Ссылка));
	
	// Обработка рабочей группы
	РаботаСРабочимиГруппами.ОбъектПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
	// Рабочая группа
	РабочаяГруппаТаблицаКоличество = РабочаяГруппаТаблица.Количество();
	Для Инд = 1 По РабочаяГруппаТаблицаКоличество Цикл
		Строка = РабочаяГруппаТаблица[РабочаяГруппаТаблицаКоличество - Инд];
		Если Не ЗначениеЗаполнено(Строка.Участник) Тогда 
			РабочаяГруппаТаблица.Удалить(Строка);
		КонецЕсли;	
	КонецЦикла;
	
	НоваяРабочаяГруппа = РабочаяГруппаТаблица.Выгрузить();
	РабочаяГруппаДобавить = Новый Массив;
	РабочаяГруппаУдалить = Новый Массив;
	
	// Формирование списка удаленных участников рабочей группы
	Для каждого Эл Из ИсходнаяРабочаяГруппа Цикл
		
		Найден = Ложь;
		
		Для каждого Эл2 Из НоваяРабочаяГруппа Цикл
			Если Эл.Участник = Эл2.Участник 
				И Эл.ОсновнойОбъектАдресации = Эл2.ОсновнойОбъектАдресации 
				И Эл.ДополнительныйОбъектАдресации = Эл2.ДополнительныйОбъектАдресации Тогда
				
				Найден = Истина;
				Прервать;
			КонецЕсли;	
		КонецЦикла;	
		
		Если Не Найден Тогда
			РабочаяГруппаУдалить.Добавить(Новый Структура("Участник, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации", 
				Эл.Участник,
				Эл.ОсновнойОбъектАдресации,
				Эл.ДополнительныйОбъектАдресации));
		КонецЕсли;
		
	КонецЦикла;	
	
	// Формирование списка добавленных участников рабочей группы
	Для каждого Эл Из НоваяРабочаяГруппа Цикл
		
		Найден = Ложь;
		
		Для каждого Эл2 Из ИсходнаяРабочаяГруппа Цикл
			Если Эл.Участник = Эл2.Участник 
				И Эл.ОсновнойОбъектАдресации = Эл2.ОсновнойОбъектАдресации 
				И Эл.ДополнительныйОбъектАдресации = Эл2.ДополнительныйОбъектАдресации Тогда
				
				Найден = Истина;
				Прервать;
			КонецЕсли;	
		КонецЦикла;	
		
		Если Не Найден Тогда
			РабочаяГруппаДобавить.Добавить(Новый Структура("Участник, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации", 
				Эл.Участник,
				Эл.ОсновнойОбъектАдресации,
				Эл.ДополнительныйОбъектАдресации));
		КонецЕсли;
		
	КонецЦикла;	
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("РабочаяГруппаУдалить", РабочаяГруппаУдалить);	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("РабочаяГруппаДобавить", РабочаяГруппаДобавить);
	
	ИсходнаяРабочаяГруппа.Загрузить(НоваяРабочаяГруппа);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Протоколирование работы пользователей
	ПротоколированиеРаботыПользователей.ЗаписатьСоздание(Объект.Ссылка, ПараметрыЗаписи.ЭтоНовыйОбъект);
	ПротоколированиеРаботыПользователей.ЗаписатьИзменение(Объект.Ссылка);
	
	// Категории данных
	Если ПолучитьФункциональнуюОпцию("ИспользоватьКатегорииДанных") Тогда
		Для Каждого Категория Из Объект.Категории Цикл
			Категория.ПолноеНаименование = РаботаСКатегориямиДанных.ПолучитьПолныйПутьКатегорииДанных(Категория.Значение);
		КонецЦикла;
	Иначе
		Элементы.СтраницаКатегории.Видимость = Ложь;
	КонецЕсли;
	
	// Рабочая группа
	РаботаСРабочимиГруппами.ОбъектПослеЗаписиНаСервере(ЭтаФорма, ПараметрыЗаписи);	
	ОбновитьВидимостьРеквизитов();
	КоличествоУчастниковРабочейГруппы = РабочаяГруппаТаблица.Количество();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ОбщегоНазначенияДокументооборотКлиент.УдалитьПустыеСтрокиТаблицы(Объект.РабочаяГруппаДокумента, "Участник");
	ОбщегоНазначенияДокументооборотКлиент.УдалитьПустыеСтрокиТаблицы(РабочаяГруппаТаблица, "Участник");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОтветственныйНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСПользователямиКлиент.ВыбратьПользователя(Элемент, Объект.Ответственный);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)
	
	ВидДокументаПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеРеквизитыЗначениеРеквизитаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСШаблонамиДокументовКлиент.ПоказатьФормуВыбораЗначения(ЭтаФорма, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресатНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСПользователямиКлиент.ВыбратьПользователя(Элемент, Объект.Адресат);
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////// 
// Работа с номенклатурой дел

&НаКлиенте
Процедура НоменклатураДелНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Корреспонденты = Новый Массив;
	Для Каждого Строка Из Объект.Корреспонденты Цикл
		Корреспонденты.Добавить(Строка.Корреспондент);
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация", 			Объект.Организация);
	ПараметрыФормы.Вставить("ВидДокумента", 		Объект.ВидДокумента);
	ПараметрыФормы.Вставить("Корреспондент", 		Корреспонденты);
	ПараметрыФормы.Вставить("ВопросДеятельности", 	Объект.ВопросДеятельности);
	ПараметрыФормы.Вставить("ТекущаяСтрока", 		Объект.НоменклатураДел);
	ПараметрыФормы.Вставить("Подразделение", 		Неопределено);
	
	ОткрытьФорму("Справочник.НоменклатураДел.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураДелАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
		
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = Делопроизводство.СформироватьДанныеВыбораНоменклатурыДел(Текст, Объект.Организация);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураДелОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = Делопроизводство.СформироватьДанныеВыбораНоменклатурыДел(Текст, Объект.Организация);
	КонецЕсли;
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ПРИКРЕПЛЕННЫЕ ФАЙЛЫ

&НаКлиенте
Процедура ПрикрепленныеФайлыПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепленныеФайлыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	ОткрытьФорму("Справочник.Файлы.Форма.ФормаВыбораФайлаВПапках", , Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепленныеФайлыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Строка = Объект.ПрикрепленныеФайлы.Добавить();
	Строка.ФайлСсылка = ВыбранноеЗначение;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепленныеФайлыСсылкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("ТекущаяСтрока", Элемент.Родитель.Родитель.ТекущиеДанные.ФайлСсылка);
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПрикрепленныеФайлыСсылкаНачалоВыбораПродолжение",
		ЭтотОбъект,
		Новый Структура("Элемент", Элемент));

	ОткрытьФорму("Справочник.Файлы.Форма.ФормаВыбораФайлаВПапках", ПараметрыФормы, ЭтаФорма,,,,
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепленныеФайлыСсылкаНачалоВыбораПродолжение(Результат, Параметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		Элемент = Параметры.Элемент;
		Элемент.Родитель.Родитель.ТекущиеДанные.ФайлСсылка = Результат;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры
	
//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ РАБОЧАЯ ГРУППА ДОКУМЕНТА

&НаКлиенте
Процедура РабочаяГруппаДокументаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаПриНачалеРедактирования(
		Элемент, // РабочаяГруппаЭлемент
		НоваяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаДокументаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РаботаСРабочимиГруппамиКлиент.ШаблонРабочаяГруппаПриОкончанииРедактирования(
		ЭтаФорма,
		Объект.РабочаяГруппаДокумента,
		Элементы.РабочаяГруппаДокумента,
		ОтменаРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаДокументаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РабочаяГруппаДокументаОбработкаВыбораСервер(ВыбранноеЗначение);
	РаботаСРабочимиГруппамиКлиент.ШаблонРабочаяГруппаПриОкончанииРедактирования(
		ЭтаФорма,
		Объект.РабочаяГруппаДокумента,
		Элементы.РабочаяГруппаДокумента,
		Ложь); // ОтменаРедактирования
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаДокументаУчастникАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	РаботаСРабочимиГруппамиКлиент.ШаблонРабочаяГруппаУчастникАвтоПодбор(
		Элемент,
		Текст,
		ДанныеВыбора,
		Ожидание,
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаДокументаУчастникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	РаботаСРабочимиГруппамиКлиент.ШаблонРабочаяГруппаУчастникНачалоВыбора(
		ЭтаФорма,
		Элемент,
		ДанныеВыбора,
		СтандартнаяОбработка);
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ РАБОЧАЯ ГРУППА ТАБЛИЦА

&НаКлиенте
Процедура РабочаяГруппаТаблицаУчастникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	РаботаСРабочимиГруппамиКлиент.ДокументРабочаяГруппаУчастникНачалоВыбора(
		ЭтаФорма,
		Элемент,
		ДанныеВыбора,
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаУчастникАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	РаботаСРабочимиГруппамиКлиент.ДокументРабочаяГруппаУчастникАвтоПодбор(
		Элемент,
		Текст,
		ДанныеВыбора,
		Ожидание,
		СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаПередУдалением(Элемент, Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"РабочаяГруппаТаблицаПередУдалениемПродолжение",
		ЭтотОбъект);
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаТаблицаПередУдалением(ЭтаФорма, Отказ, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаПередУдалениемПродолжение(Результат, Параметры) Экспорт
	
	ТаблицаРГ = Элементы.РабочаяГруппаТаблица;
	Для Каждого Индекс Из ТаблицаРГ.ВыделенныеСтроки Цикл
		РабочаяГруппаТаблица.Удалить(ТаблицаРГ.ДанныеСтроки(Индекс));
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаПриНачалеРедактирования(Элемент, НоваяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаПриОкончанииРедактирования(
		ЭтаФорма,
		Элемент,
		ОтменаРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура РабочаяГруппаТаблицаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РабочаяГруппаТаблицаОбработкаВыбораСервер(ВыбранноеЗначение);
	РаботаСРабочимиГруппамиКлиент.РабочаяГруппаПриОкончанииРедактирования(
		ЭтаФорма,
		Элементы.РабочаяГруппаТаблица,
		Ложь);
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ИСПОЛНИТЕЛИ СОГЛАСОВАНИЯ

&НаКлиенте
Процедура ИсполнителиСогласованияИсполнительПриИзменении(Элемент)
	
	ТекущийДанные = Элементы.ИсполнителиСогласования.ТекущиеДанные;
	
	РаботаСБизнесПроцессамиКлиент.ВыбратьОбъектыАдресацииРоли(
		ТекущийДанные,
		"Исполнитель",
		"ОсновнойОбъектАдресации",
		"ДополнительныйОбъектАдресации",
		ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиСогласованияИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСПользователямиКлиент.ВыбратьИсполнителя(
		Элемент,
		Элементы.ИсполнителиСогласования.ТекущиеДанные.Исполнитель,,
		Истина,,,
		Элементы.ИсполнителиСогласования.ТекущиеДанные.ОсновнойОбъектАдресации,
		Элементы.ИсполнителиСогласования.ТекущиеДанные.ДополнительныйОбъектАдресации);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиСогласованияИсполнительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		СтандартнаяОбработка = Ложь;
		ТекущийДанные = Элементы.ИсполнителиСогласования.ТекущиеДанные;
		ТекущийДанные.Исполнитель = ВыбранноеЗначение.РольИсполнителя;
		ТекущийДанные.ОсновнойОбъектАдресации = ВыбранноеЗначение.ОсновнойОбъектАдресации;
		ТекущийДанные.ДополнительныйОбъектАдресации = ВыбранноеЗначение.ДополнительныйОбъектАдресации;
		ВыбранноеЗначение = ТекущийДанные.Исполнитель;
		Элементы.ИсполнителиСогласования.ЗакончитьРедактированиеСтроки(Ложь);
		Модифицированность = Истина;
	Иначе  
		ТекущийДанные = Элементы.ИсполнителиСогласования.ТекущиеДанные;
		ТекущийДанные.ОсновнойОбъектАдресации = Неопределено;
		ТекущийДанные.ДополнительныйОбъектАдресации = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиСогласованияИсполнительАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиСогласованияИсполнительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиСогласованияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда 
		Элементы.ИсполнителиСогласования.ТекущиеДанные.Исполнитель = ПользователиПустаяСсылка;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПодобратьСогласующих(Команда)
	
	АдресВременногоХранилища = ПоместитьИсполнителейВоВременноеХранилище();
	РаботаСПользователямиКлиент.ПодборИсполнителей(АдресВременногоХранилища, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьУчастниковРабочейГруппыДокумента(Команда)
	
	РаботаСРабочимиГруппамиКлиент.ШаблонПодобратьУчастниковРабочейГруппы(
		ЭтаФорма,
		Объект.РабочаяГруппаДокумента,
		Элементы.РабочаяГруппаДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьУчастниковРабочейГруппы(Команда)
	
	РаботаСРабочимиГруппамиКлиент.ДокументПодобратьУчастниковРабочейГруппы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОдинКорреспондент(Команда)
	
	КоличествоКонтрагентов = Объект.Корреспонденты.Количество(); 
	Для Инд = 1 По КоличествоКонтрагентов Цикл 
		Строка = Объект.Корреспонденты[КоличествоКонтрагентов - Инд]; 
		Если Не ЗначениеЗаполнено(Строка.Корреспондент) Тогда 
			Объект.Корреспонденты.Удалить(Строка); 
		КонецЕсли; 
	КонецЦикла;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОдинКорреспондентПродолжение",
		ЭтотОбъект);

	Если Объект.Корреспонденты.Количество() > 1 Тогда 
		ТекстВопроса = НСтр("ru = 'Все корреспонденты, кроме первого, будут удалены. 
			|Продолжить?'");
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе 
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Отмена);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОдинКорреспондентПродолжение(Результат, Параметры)Экспорт 

	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда
		
		Пока Объект.Корреспонденты.Количество() > 1 Цикл
			Объект.Корреспонденты.Удалить(1);
		КонецЦикла;
		
		Модифицированность = Истина;
	КонецЕсли;

	Если Объект.Корреспонденты.Количество() > 0 Тогда
		Строка = Объект.Корреспонденты[0];		
		Объект.Корреспондент = Строка.Корреспондент;
		Объект.КонтактноеЛицо = Строка.КонтактноеЛицо;
	Иначе	
		Объект.Корреспондент = Неопределено;
		Объект.КонтактноеЛицо = Неопределено;
	КонецЕсли;
	
	НесколькоКонтрагентов = Ложь;
	УстановитьВидимостьКонтрагентов();
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОсновная;

КонецПроцедуры

&НаКлиенте
Процедура МногоКонтрагентов(Команда)
	
	НесколькоКонтрагентов = Истина;
	УстановитьВидимостьКонтрагентов();

	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаКорреспонденты;
	
КонецПроцедуры

&НаКлиенте
Процедура КорреспондентПриИзменении(Элемент)
	
	СкопироватьКонтрагентаИзРеквизитовВСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактноеЛицоПриИзменении(Элемент)
	
	СкопироватьКонтрагентаИзРеквизитовВСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура КатегорииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОткрытьФормуПодбораКатегорийПродолжение",
		ЭтотОбъект,
		Новый Структура);

	РаботаСКатегориямиДанныхКлиент.ОткрытьФормуПодбораКатегорийДляСпискаКатегорий(
		Объект.Категории, ОписаниеОповещения); 
		
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПодбораКатегорийПродолжение(СписокКатегорийДанных, Параметры)Экспорт 
	
	Модифицированность = Параметры.Модифицированность Или Модифицированность;
		
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьКатегории(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОткрытьФормуПодбораКатегорийПродолжение",
		ЭтотОбъект,
		Новый Структура);

	РаботаСКатегориямиДанныхКлиент.ОткрытьФормуПодбораКатегорийДляСпискаКатегорий(
		Объект.Категории, ОписаниеОповещения); 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ВидДокументаПриИзмененииСервер()
	
	ОбновитьВидимостьРеквизитов();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВидимостьРеквизитов()
	
	// ЕдиницыИзмерения
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("ВидВнутреннегоДокумента", Объект.ВидДокумента));
	ПараметрыФункциональныхОпций = ПолучитьПараметрыФункциональныхОпцийФормы();
	Элементы.ЕдиницыИзмерения.Видимость = ПараметрыФункциональныхОпций.ВидВнутреннегоДокумента.ИспользоватьСрокИсполнения;
	
	// Доп. реквизиты
	СписокДопРеквизитов = РаботаСШаблонамиДокументовСервер.ПолучитьНаборДопРеквизитовДокумента("ВнутренниеДокументы", Объект.ВидДокумента, Объект);
	РаботаСШаблонамиДокументовСервер.ПоместитьДопРеквизитыНаФорму(Объект.ДополнительныеРеквизиты, СписокДопРеквизитов);
	КоличествоСвойств = СписокДопРеквизитов.Количество();
	
	Если КоличествоСвойств > 0 Тогда
		Элементы.ДопРеквизиты.Видимость = Истина;
	Иначе 
		Элементы.ДопРеквизиты.Видимость = Ложь;
	КонецЕсли;	
	
	Если ПараметрыФункциональныхОпций.ВидВнутреннегоДокумента.ВестиУчетПоНоменклатуреДел Тогда
		Элементы.ДекорацияХранение.Видимость = Ложь;
		Элементы.ГруппаХранение.ОтображатьЗаголовок = Истина;		
	Иначе
		Элементы.ДекорацияХранение.Видимость = Истина;
		Элементы.ГруппаХранение.ОтображатьЗаголовок = Ложь;		
	КонецЕсли;
	
    УстановитьВидимостьКонтрагентов();
	
КонецПроцедуры

&НаСервере
Функция ПоместитьИсполнителейВоВременноеХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(Объект.ИсполнителиСогласования.Выгрузить(), УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Процедура ЗагрузитьИсполнителейИзВременногоХранилища(АдресВременногоХранилища)
	
	Объект.ИсполнителиСогласования.Загрузить(ПолучитьИзВременногоХранилища(АдресВременногоХранилища));
	
КонецПроцедуры

// Устанавливает доступность элементов формы при ее открытии в зависимости от
// прав доступа к шаблону.
&НаСервере
Процедура УстановитьДоступностьЭлементовПоПравуДоступа()
	
	Если НЕ Объект.Ссылка.Пустая()
		И НЕ ДокументооборотПраваДоступа.ПолучитьПраваПоОбъекту(Объект.Ссылка).Изменение Тогда
		
		ТолькоПросмотр = Истина;
		
		Элементы.ГруппаСтраницыШаблона.ТолькоПросмотр = Истина;
		Элементы.Страницы.ТолькоПросмотр = Истина;
		
		Элементы.ФормаЗакрыть.Видимость = Истина;
		Элементы.ФормаЗакрыть.КнопкаПоУмолчанию = Истина;
		Элементы.ФормаЗаписатьИЗакрыть.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьКонтрагентаИзРеквизитовВСписок()
	
	Объект.Корреспонденты.Очистить();
	
	Строка = Объект.Корреспонденты.Добавить();
	Строка.Корреспондент = Объект.Корреспондент;
	Строка.КонтактноеЛицо = Объект.КонтактноеЛицо;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////////////
// Работа с рабочими группами

&НаСервере
Процедура РабочаяГруппаДокументаОбработкаВыбораСервер(ВыбранноеЗначение)
	
	РаботаСРабочимиГруппами.ШаблонОбработкаВыбора(
		ЭтаФорма,
		ВыбранноеЗначение,
		Объект.РабочаяГруппаДокумента,
		Элементы.РабочаяГруппаДокумента);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИконкиУчастниковРабочейГруппыДокумента()
	
	Для Каждого Строка Из  Объект.РабочаяГруппаДокумента Цикл
		Если ТипЗнч(Строка.Участник) = Тип("СправочникСсылка.РолиИсполнителей") Тогда
			Строка.Иконка = 1;
			Строка.ЭтоРоль = Истина;
		ИначеЕсли ТипЗнч(Строка.Участник) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
			Строка.Иконка = 2;
		ИначеЕсли ТипЗнч(Строка.Участник) = Тип("СправочникСсылка.Пользователи") Тогда
			Строка.Иконка = 3;
		ИначеЕсли ТипЗнч(Строка.Участник) = Тип("Строка") Тогда
			Строка.Иконка = 4;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РабочаяГруппаТаблицаОбработкаВыбораСервер(ВыбранноеЗначение)
	
	РаботаСРабочимиГруппами.ДокументОбработкаВыбора(ЭтаФорма, ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура КорреспондентыКонтактноеЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Корреспонденты.ТекущиеДанные;
	Если Не ЗначениеЗаполнено(ТекущиеДанные.Корреспондент) Тогда
		СтандартнаяОбработка = Ложь;
		
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не заполнено поле ""Корреспондент""'"),,
			"Объект.Корреспонденты["+ Формат(ТекущиеДанные.НомерСтроки-1, "ЧН=0; ЧГ=0") +"].Корреспондент",,);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКонтрагентов()
	
	Элементы.Корреспондент.Видимость = Не НесколькоКонтрагентов;
	Элементы.КонтактноеЛицо.Видимость = Не НесколькоКонтрагентов;
    Элементы.Корреспонденты.Видимость = НесколькоКонтрагентов;	
	Элементы.МногоКонтрагентов.Видимость = Не НесколькоКонтрагентов;
	
	Если Объект.ВидДокумента.ВестиУчетПоКорреспондентам Тогда
		Элементы.ДекорацияКому.Видимость = НесколькоКонтрагентов;
		Элементы.ГруппаКорреспондент.ОтображатьЗаголовок = Не НесколькоКонтрагентов;
	Иначе
		Элементы.ДекорацияКому.Видимость = Истина;
		Элементы.ГруппаКорреспондент.ОтображатьЗаголовок = Ложь;		
	Конецесли;		    
	
КонецПроцедуры	

