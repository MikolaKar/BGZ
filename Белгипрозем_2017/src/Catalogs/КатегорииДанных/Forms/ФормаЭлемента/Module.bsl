
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПротоколированиеРаботыПользователей.ЗаписатьОткрытие(Объект.Ссылка);
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Автор = ПараметрыСеанса.ТекущийПользователь;
		
		Если НЕ РольДоступна("ДобавлениеИзменениеОбщихКатегорий") 
			И НЕ РольДоступна("ПолныеПрава") Тогда
			Объект.Персональная = Истина;
			Объект.Доступ.Добавить().Пользователь = ПараметрыСеанса.ТекущийПользователь;
			Элементы.Автор.Доступность = Ложь;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Родитель)
			И Объект.Родитель <> Справочники.КатегорииДанных.ВсеКатегории
			И НЕ Объект.Родитель.Персональная 
			И НЕ РольДоступна("ДобавлениеИзменениеОбщихКатегорий") 
			И НЕ РольДоступна("ПолныеПрава") 
			ИЛИ Объект.Родитель.Пустая() Тогда
			Объект.Родитель = Справочники.КатегорииДанных.ВсеКатегории;
		ИначеЕсли ЗначениеЗаполнено(Объект.Родитель)
			И Объект.Родитель <> Справочники.КатегорииДанных.ВсеКатегории 
			И (РольДоступна("ДобавлениеИзменениеОбщихКатегорий") 
			ИЛИ РольДоступна("ПолныеПрава")) Тогда
			Объект.Персональная = Объект.Родитель.Персональная;
			Элементы.Персональная.ТолькоПросмотр = Истина;
			Если Объект.Персональная Тогда	
				Объект.Доступ.Добавить().Пользователь = ПараметрыСеанса.ТекущийПользователь;
				Элементы.ГруппаДоступ.Доступность = Ложь;
				ПодписьКЛичнойКатегории = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Пользоваться этой категорией может только %1'"),
					Объект.Автор);
			Иначе
				Элементы.ГруппаДоступ.Доступность = Истина;
				ПодписьКЛичнойКатегории = "";
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если Объект.Родитель <> Справочники.КатегорииДанных.ВсеКатегории Тогда
			Элементы.Персональная.ТолькоПросмотр = Истина;
		Иначе
			Запрос = Новый Запрос;
			Запрос.Текст =  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			 				|	КатегорииДанных.Ссылка
			 				|ИЗ
			 				|	Справочник.КатегорииДанных КАК КатегорииДанных
			 				|ГДЕ
			 				|	КатегорииДанных.Родитель = &Ссылка";
			Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
			Элементы.Персональная.ТолькоПросмотр = Запрос.Выполнить().Выбрать().Количество() > 0;
		КонецЕсли;
		
		Если НЕ Объект.Персональная
			И НЕ РольДоступна("ДобавлениеИзменениеОбщихКатегорий") 
			И НЕ РольДоступна("ПолныеПрава")
			ИЛИ Объект.Ссылка = Справочники.КатегорииДанных.ВсеКатегории Тогда
			ТолькоПросмотр = Истина;
			Элементы.ДоступПодобратьПользователейЛичныйДоступ.Доступность = Ложь;
		КонецЕсли;
		
		Права = ДокументооборотПраваДоступа.ПолучитьПраваПоОбъекту(Объект.Ссылка, ПользователиКлиентСервер.ТекущийПользователь());
		ТолькоПросмотр = Не Права.Изменение;
		Элементы.ДоступПодобратьПользователейЛичныйДоступ.Доступность = Права.Изменение;		
	КонецЕсли;
	
	Если НЕ РольДоступна("ДобавлениеИзменениеОбщихКатегорий") 
		И НЕ РольДоступна("ПолныеПрава") Тогда
		Элементы.Персональная.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Элементы.ГруппаДоступ.Доступность = НЕ Объект.Персональная;
	СтрокаПодписьЛичнойКатегории = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Пользоваться этой категорией может только %1'"),
		Объект.Автор);
	ПодписьКЛичнойКатегории = ?(Объект.Персональная, СтрокаПодписьЛичнойКатегории, "");
	ПояснениеКТаблицеДоступа = НСтр("ru = 'Пользователи, которым доступны просмотр и операции с категорией'");
	ЗаголовокТаблицыДоступа = НСтр("ru = 'Кому доступна:'");
	ПользователиПустаяСсылка = Справочники.Пользователи.ПустаяСсылка();
	
КонецПроцедуры

&НаКлиенте
Процедура ПерсональнаяПриИзменении(Элемент)
	
	Если Объект.Персональная Тогда
		Объект.Доступ.Очистить();
		Объект.Доступ.Добавить().Пользователь = Объект.Автор;
		Элементы.ГруппаДоступ.Доступность = Ложь;
		ПодписьКЛичнойКатегории = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Пользоваться этой категорией может только %1'"),
			Объект.Автор);
	Иначе
		Объект.Доступ.Очистить();
		Элементы.ГруппаДоступ.Доступность = Истина;
		ПодписьКЛичнойКатегории = "";
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ОбщегоНазначенияДокументооборотКлиент.УдалитьПустыеСтрокиТаблицы(Объект.Доступ, "Пользователь");
	НеобходимоОповеститьОбИзменении = Модифицированность;
	Если Объект.Ссылка.Пустая() Тогда
		Объект.ДатаСоздания = ТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьПользователейЛичныйДоступ(Команда)
	
	ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", Новый Структура("ЗакрыватьПриВыборе, РежимВыбора, ВыборГруппПользователей", Ложь, Истина, Истина), Элементы.Доступ);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ЕстьИзменения = Ложь;
	
	Для каждого Значение Из ВыбранноеЗначение Цикл
		Если Объект.Доступ.НайтиСтроки(Новый Структура("Пользователь", Значение)).Количество() = 0 Тогда
			Строка = Объект.Доступ.Добавить();
			Строка.Пользователь = Значение;
			ЕстьИзменения = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьИзменения Тогда
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступПользовательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	НачальноеЗначение = ?(Элементы.Доступ.ТекущиеДанные = Неопределено, Неопределено, Элементы.Доступ.ТекущиеДанные.Пользователь);
	ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", Новый Структура("РежимВыбора, ВыборГруппПользователей, ТекущаяСтрока", Истина, Истина, НачальноеЗначение), Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступПользовательАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = СформироватьДанныеВыбораПользователя(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступПользовательОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = СформироватьДанныеВыбораПользователя(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РодительОчистка(Элемент, СтандартнаяОбработка)
	
	Объект.Родитель = ПредопределенноеЗначение("Справочник.КатегорииДанных.ВсеКатегории");
	Элементы.Персональная.Доступность = Истина;
	Элементы.Персональная.ТолькоПросмотр = Ложь;
	Модифицированность = Истина;
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("ЭтоНовыйОбъект", НЕ ЗначениеЗаполнено(ТекущийОбъект.Ссылка));
	
	Если ЗначениеЗаполнено(Объект.Родитель)
		И Объект.Родитель <> Справочники.КатегорииДанных.ВсеКатегории Тогда
		Если Объект.Персональная <> Объект.Родитель.Персональная Тогда
			Если Объект.Персональная Тогда
				ТекстСообщения = НСтр("ru = 'Запрещено создавать персональные категории подчиненными по отношению к общим'");
			Иначе
				ТекстСообщения = НСтр("ru = 'Запрещено создавать общие категории подчиненными по отношению к персональным'");
			КонецЕсли;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект.Персональная", , Отказ);
		КонецЕсли;
	КонецЕсли;
		
	Для Каждого ЭлементДоступа Из Объект.Доступ Цикл
		Если НЕ ЗначениеЗаполнено(ЭлементДоступа.Пользователь) Тогда
			Сообщение = НСтр("ru = 'В списке пользователей, имеющих доступ к категории, имеются незаполненные строки'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение, , "Объект.Доступ", , Отказ);
			Прервать;
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	
	ИзменитьРодителя();
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьРодителя()
	
	Если НЕ ЗначениеЗаполнено(Объект.Родитель) Тогда
		Объект.Родитель = Справочники.КатегорииДанных.ВсеКатегории;
	ИначеЕсли Объект.Родитель = Справочники.КатегорииДанных.ВсеКатегории Тогда
		Объект.Персональная = Ложь;
		Элементы.Персональная.Доступность = Истина;
		Элементы.Персональная.ТолькоПросмотр = Ложь;
	ИначеЕсли Объект.Родитель.Персональная Тогда
		Объект.Персональная = Истина;
		Элементы.Персональная.Доступность = Ложь;
		Объект.Доступ.Очистить();
		Объект.Доступ.Добавить().Пользователь = ПараметрыСеанса.ТекущийПользователь;
	ИначеЕсли НЕ Объект.Родитель.Персональная Тогда
		Объект.Доступ.Очистить();
		Элементы.Персональная.Доступность = Ложь;
	КонецЕсли;
	Элементы.Доступ.Доступность = НЕ Объект.Персональная;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура АвторПриИзменении(Элемент)
	
	Если Объект.Персональная Тогда
		ПодписьКЛичнойКатегории = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Пользоваться этой категорией может только %1'"),
			Объект.Автор);
		Объект.Доступ.Очистить();
		Объект.Доступ.Добавить().Пользователь = Объект.Автор;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не Копирование Тогда 
		Элементы.Доступ.ТекущиеДанные.Пользователь = ПользователиПустаяСсылка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если НеобходимоОповеститьОбИзменении Тогда
		Оповестить("РедактироваласьКатегория", Объект.Ссылка, ЭтаФорма);	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПротоколированиеРаботыПользователей.ЗаписатьСоздание(Объект.Ссылка, ПараметрыЗаписи.ЭтоНовыйОбъект);
	ПротоколированиеРаботыПользователей.ЗаписатьИзменение(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подписаться(Команда)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрыФормы = Новый Структура("ОбъектПодписки", Объект.Ссылка);
		ОткрытьФорму("ОбщаяФорма.ПодпискаНаУведомленияПоОбъекту", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьДанныеВыбораПользователя(Знач Текст, Знач ВключаяГруппы = Истина, Знач ВключаяВнешнихПользователей = Неопределено, БезПользователей = Ложь)
	
	Возврат Пользователи.СформироватьДанныеВыбораПользователя(Текст, ВключаяГруппы, ВключаяВнешнихПользователей, БезПользователей);
	
КонецФункции
