
// УправлениеДоступом

Функция ПолучитьПоляДоступа() Экспорт
	
	Возврат 
		"Автор,
		|Доступ";
	
КонецФункции

// Заполняет переданный дескриптор доступа 
Процедура ЗаполнитьДескрипторДоступа(ОбъектДоступа, ДескрипторДоступа) Экспорт
	
	// Пользователи
	Если ЗначениеЗаполнено(ОбъектДоступа.Автор) Тогда
		Строка = ДескрипторДоступа.Пользователи.Добавить();
		Строка.Ключ = "Автор";
		Строка.Пользователь = ОбъектДоступа.Автор;
	КонецЕсли;
	
	Если ТипЗнч(ОбъектДоступа) = Тип("Структура") Тогда
		Если ОбъектДоступа.Доступ.Пустой() Тогда
			Строка = ДескрипторДоступа.Пользователи.Добавить();
			Строка.Ключ = "ПользовательСпискаДоступа";
			Строка.Пользователь = Справочники.ГруппыПользователей.ВсеПользователи;
		Иначе
			Выборка = ОбъектДоступа.Доступ.Выбрать();
			Пока Выборка.Следующий() Цикл
				Строка = ДескрипторДоступа.Пользователи.Добавить();
				Строка.Ключ = "ПользовательСпискаДоступа";
				Строка.Пользователь = Выборка.Пользователь;	
			КонецЦикла;
		КонецЕсли;
	Иначе
		Если ОбъектДоступа.Доступ.Количество() = 0 Тогда
			Строка = ДескрипторДоступа.Пользователи.Добавить();
			Строка.Ключ = "ПользовательСпискаДоступа";
			Строка.Пользователь = Справочники.ГруппыПользователей.ВсеПользователи;
		Иначе
			Для Каждого СтрокаДоступа Из ОбъектДоступа.Доступ Цикл
				Строка = ДескрипторДоступа.Пользователи.Добавить();
				Строка.Ключ = "ПользовательСпискаДоступа";
				Строка.Пользователь = СтрокаДоступа.Пользователь;	
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Возвращает Истина, указывая тем самым, что этот объект сам заполняет свои права 
Функция ЕстьМетодЗаполнитьПраваДоступа() Экспорт
	
	Возврат Истина;
	
КонецФункции

// Заполняет параметр ПраваДоступа правами доступа, вычисляя их на 
// основании переданного дескриптора доступа.
// Если указан параметр ПротоколРасчетаПрав, то в него 
// заносится список данных, которые были использованы для расчета прав.
Процедура ЗаполнитьПраваДоступа(ДескрипторДоступа, ПраваДоступа, ПротоколРасчетаПрав) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
		
	// Пользователи
	АвторДобавлен = Ложь;
	ПользовательСпискаДоступаДобавлен = Ложь;
	Для каждого Эл Из ДескрипторДоступа.Пользователи Цикл
		Если Эл.Ключ = "Автор" Тогда
							
			АвторДобавлен = Истина;
			
			ПраваПользователя = Новый Структура("Чтение, Добавление, Изменение, Удаление, УправлениеПравами",
											Истина, Истина, Истина, Истина, Ложь);
											
			ДокументооборотПраваДоступа.ДобавитьПользователяВСоответствиеПрав(
				ПраваДоступа,
				Эл.Пользователь,
				Эл.ОсновнойОбъектАдресации,
				Эл.ДополнительныйОбъектАдресации,
				ПраваПользователя);
				
		ИначеЕсли Эл.Ключ = "ПользовательСпискаДоступа" Тогда
			
			ПользовательСпискаДоступаДобавлен = Истина;
			
			ПраваПользователя = Новый Структура("Чтение, Добавление, Изменение, Удаление, УправлениеПравами",
											Истина, Ложь, Ложь, Ложь, Ложь);
											
			ДокументооборотПраваДоступа.ДобавитьПользователяВСоответствиеПрав(
				ПраваДоступа,
				Эл.Пользователь,
				Эл.ОсновнойОбъектАдресации,
				Эл.ДополнительныйОбъектАдресации,
				ПраваПользователя);
				
		Иначе
				
			ВызватьИсключение(НСтр("ru = 'Неизвестный ключ пользователя.'"));
			
		КонецЕсли;
	КонецЦикла;
		
	Если АвторДобавлен Тогда
		Если ПротоколРасчетаПрав <> Неопределено Тогда
			ПротоколРасчетаПрав.Добавить(НСтр("ru = 'Автор категории'"));
		КонецЕсли;	
	КонецЕсли;
		
	Если ПользовательСпискаДоступаДобавлен Тогда
		Если ПротоколРасчетаПрав <> Неопределено Тогда
			ПротоколРасчетаПрав.Добавить(НСтр("ru = 'Список доступа категории'"));
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

// Конец УправлениеДоступом

// Проверяет, подходит ли объект к шаблону процесса
Функция ШаблонПодходитДляАвтозапускаБизнесПроцессаПоОбъекту(ШаблонСсылка, ПредметСсылка, Подписчик, ВидСобытия, Условие) Экспорт
	
	Возврат БизнесСобытияВызовСервера.ШаблонПодходитДляАвтозапускаБизнесПроцессаПоДокументу(ШаблонСсылка, 
		ПредметСсылка, Подписчик, ВидСобытия, Условие);
	
КонецФункции
