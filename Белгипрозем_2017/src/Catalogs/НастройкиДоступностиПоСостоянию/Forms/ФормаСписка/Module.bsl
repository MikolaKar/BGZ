
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТипыДокументов.Добавить(Перечисления.ТипыОбъектов.ВходящиеДокументы, НСтр("ru = 'Входящие документы'"));
	ТипыДокументов.Добавить(Перечисления.ТипыОбъектов.ИсходящиеДокументы, НСтр("ru = 'Исходящие документы'"));
	ТипыДокументов.Добавить(Перечисления.ТипыОбъектов.ВнутренниеДокументы, НСтр("ru = 'Внутренние документы'"));
	
	ТекущийТипДокумента = ТипыДокументов[0].Значение;
	Элементы.ТипыДокументов.ТекущаяСтрока = ТипыДокументов[0].ПолучитьИдентификатор();
	УстановитьОтборСписка(Список, ТекущийТипДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипыДокументовПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ТипыДокументов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Значение = ТекущийТипДокумента Тогда 
		Возврат;
	КонецЕсли;	
	
	ТекущийТипДокумента = ТекущиеДанные.Значение;
	
	УстановитьОтборСписка(Список, ТекущийТипДокумента);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ТекущийТипДокумента = Настройки["ТекущийТипДокумента"];
	Если Не ЗначениеЗаполнено(ТекущийТипДокумента) Тогда 
		Возврат;
	КонецЕсли;	
	
	НайденноеЗначение = ТипыДокументов.НайтиПоЗначению(ТекущийТипДокумента);
	Если НайденноеЗначение = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
		
	Элементы.ТипыДокументов.ТекущаяСтрока = НайденноеЗначение.ПолучитьИдентификатор();
	
	УстановитьОтборСписка(Список, ТекущийТипДокумента);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписка(Список, ТекущийТипДокумента)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
		"ТипДокумента",
		ТекущийТипДокумента);
	
КонецПроцедуры	
	