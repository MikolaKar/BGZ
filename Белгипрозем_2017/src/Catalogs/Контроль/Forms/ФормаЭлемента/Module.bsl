
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Протоколирование работы пользователей
	ПротоколированиеРаботыПользователей.ЗаписатьОткрытие(Объект.Ссылка);
	
	Если ТипЗнч(Объект.Предмет) = Тип("СправочникСсылка.ВеткиПереписки") Тогда 
		ПредметСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Предмет, "КорневоеПисьмо");
	Иначе	
		ПредметСсылка = Объект.Предмет;
	КонецЕсли;	
	ПредметСтрокой = Контроль.СформироватьПредставлениеПредмета(ПредметСсылка);

	// Видимость поля "Предмет"
	Если ЗначениеЗаполнено(Объект.Предмет) Тогда 
		Элементы.ГруппаОписаниеСтраницы.ТекущаяСтраница = Элементы.ГруппаОписаниеИПредмет;
	Иначе
		Элементы.ГруппаОписаниеСтраницы.ТекущаяСтраница = Элементы.ГруппаОписание;
	КонецЕсли;	
	
	ТекущийКонтролер = Объект.Контролер;
	НачальныйСнятСКонтроля = Объект.СнятСКонтроля;
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	ТекущийПользовательПолноправный = РольДоступна("ПолныеПрава");
	
	ПредметПроцессЗадача = Ложь;
	Если ЗначениеЗаполнено(Объект.Предмет) Тогда 
		Если ОбщегоНазначения.ЭтоБизнесПроцесс(Объект.Предмет.Метаданные())
		 Или ТипЗнч(Объект.Предмет) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда 
			ПредметПроцессЗадача = Истина; 
		КонецЕсли; 
	КонецЕсли;	 
		
	ЦветЗеленый = ЦветаСтиля.ОтметкаПоложительногоВыполненияЗадачи;
	ЦветКрасный = ЦветаСтиля.ОтметкаОтрицательногоВыполненияЗадачи;
	
	СписокВыбора = Элементы.СрокИсполнения.СписокВыбора;
	Элементы.СрокИсполнения.СписокВыбора.Добавить(ТекущаяДата() + 24*3600,			НСтр("ru = 'Завтра'"));
	Элементы.СрокИсполнения.СписокВыбора.Добавить(ТекущаяДата() + 2*24*3600, 		НСтр("ru = '2 дня'"));	
	Элементы.СрокИсполнения.СписокВыбора.Добавить(ТекущаяДата() + 3*24*3600, 		НСтр("ru = '3 дня'"));	
	Элементы.СрокИсполнения.СписокВыбора.Добавить(ТекущаяДата() + 7*24*3600, 		НСтр("ru = 'Неделя'"));
	Элементы.СрокИсполнения.СписокВыбора.Добавить(ДобавитьМесяц(ТекущаяДата(), 1), 	НСтр("ru = 'Месяц'"));
	
	Если ЗначениеЗаполнено(Объект.Предмет) Тогда 
		Если ПредметПроцессЗадача Тогда 
			Элементы.Исполнители.ИзменятьСоставСтрок = Ложь;
			Элементы.Исполнители.ИзменятьПорядокСтрок = Ложь;
			Элементы.ИсполнителиИсполнитель.ТолькоПросмотр = Истина;
			Элементы.Подобрать.Видимость = Ложь;
			Элементы.Добавить.Видимость = Ложь;
			Элементы.Удалить.Видимость = Ложь;
			Элементы.ПереместитьВверх.Видимость = Ложь;
			Элементы.ПереместитьВниз.Видимость = Ложь;
		ИначеЕсли ВстроеннаяПочтаКлиентСервер.ЭтоПисьмо(ПредметСсылка) Тогда 
			Элементы.Исполнители.ИзменятьСоставСтрок = Ложь;
			Элементы.ИсполнителиИсполнитель.ТолькоПросмотр = Истина;
			Элементы.Подобрать.Видимость = Ложь;
			Элементы.Добавить.Видимость = Ложь;
			Элементы.Удалить.Видимость = Ложь;
			Если Объект.Исполнители.Количество() = 1 Тогда
				Элементы.Исполнители.ИзменятьПорядокСтрок = Ложь;
				Элементы.ПереместитьВверх.Видимость = Ложь;
				Элементы.ПереместитьВниз.Видимость = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.СнятСКонтроля Тогда 
		Элементы.СтраницыКоманды.ТекущаяСтраница = Элементы.СтраницаСнятСКонтроля;
		ЭтаФорма.ТолькоПросмотр = Истина;
		Элементы.ДекорацияСрок.Видимость = Ложь;
		Элементы.ФормаВернутьНаКонтроль.Видимость = Истина;
	Иначе	
		Элементы.СтраницыКоманды.ТекущаяСтраница = Элементы.СтраницаКоманды;
		Элементы.ФормаВернутьНаКонтроль.Видимость = Ложь;
	КонецЕсли;
	
	Если Объект.Исполнители.Количество() > 1 Тогда 
		Элементы.ИсполнителиПроконтролировано.Видимость = Истина;
	Иначе
		Элементы.ИсполнителиПроконтролировано.Видимость = Ложь;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Предмет) 
		И (ПредметПроцессЗадача
		Или ТипЗнч(Объект.Предмет) = Тип("СправочникСсылка.ВеткиПереписки")) Тогда 
		Элементы.ИсполнителиСостояниеИсполнения.Видимость = Истина;
	Иначе	
		Элементы.ИсполнителиСостояниеИсполнения.Видимость = Ложь;
	КонецЕсли;	
	ВывестиСостояниеИсполнения();
	
	// возможные контролеры
	Контроль.ЗаполнитьСписокКонтролеров(Контролеры, 
		Элементы.Контролер, 
		Элементы.КонтролерБезПользовательскойВидимости);
	Если ТипЗнч(Объект.Контролер) = Тип("СправочникСсылка.Пользователи")
		И Объект.Контролер <> ТекущийПользователь Тогда 
		Элементы.Контролер.Видимость = Истина;
		Элементы.КонтролерБезПользовательскойВидимости.Видимость = Ложь;
	КонецЕсли;	
	
	// Запись в список последних
	РаботаСПоследнимиОбъектами.ЗаписатьОбращениеКОбъекту(Объект.Ссылка);
	
	// Сохранение вводимых значений
	СохранениеВводимыхЗначений.ЗаполнитьСписокВыбора(ЭтаФорма, ЭлементыДляСохранения(), "Справочник.Контроль.ФормаЭлементаИФормаНового");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВывестиПодписьЧислаДней();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаписатьИЗакрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();	
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(РезультатВыбора, ИсточникВыбора)
	
	Если ТипЗнч(РезультатВыбора) = Тип("Строка") И ЭтоАдресВременногоХранилища(РезультатВыбора) Тогда 
		ЗагрузитьИсполнителейИзВременногоХранилища(РезультатВыбора);
		НазначитьОтветственногоИсполнителя();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ОбщегоНазначенияДокументооборотКлиент.УдалитьПустыеСтрокиТаблицы(Объект.Исполнители, "Исполнитель");
	НазначитьОтветственногоИсполнителя();
	
	Если ТекущийКонтролер <> Объект.Контролер
		И Не ПараметрыЗаписи.Свойство("ПродолжитьЗаписьПослеОтветаНаВопрос") 
		И ЗначениеЗаполнено(Объект.Предмет) 
		И Контроль.ПредметНаКонтролеУКонтролера(Объект.Предмет, Объект.Контролер, Объект.Ссылка) Тогда 
		
		Если Объект.Контролер = ТекущийПользователь Тогда 
			ТекстВопроса = НСтр("ru = 'Предмет уже находится у вас на контроле. 
                                 |Поставить на контроль еще раз?'");
		Иначе 
		    ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Предмет уже находится на контроле у %1. 
	                  |Поставить на контроль еще раз?'"),
				Объект.Контролер);
		КонецЕсли;
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ПередЗаписьюПродолжение",
			ЭтотОбъект,
			ПараметрыЗаписи);
			
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
	
	Если Не НачальныйСнятСКонтроля И Не Объект.СнятСКонтроля Тогда 
		
		Если Объект.Исполнители.Количество() = 0 Тогда 
			ВсеПроконтролированы = Ложь;
		Иначе	
			ВсеПроконтролированы = Истина;
			Для Каждого Строка Из Объект.Исполнители Цикл
				Если Не Строка.Проконтролировано Тогда 
					ВсеПроконтролированы = Ложь;
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;	
		
		Если ВсеПроконтролированы И Не ПараметрыЗаписи.Свойство("ПродолжитьЗаписьПослеПредупреждения")  Тогда
			ОповещениеОПредупреждении = Новый ОписаниеОповещения(
				"ПередЗаписьюПродолжитьПослеПредупреждения",
				ЭтотОбъект,
				ПараметрыЗаписи);
			
			ТекстПредупреждения = НСтр("ru = 'Карточка будет снята с контроля, так как все исполнители проконтролированы.'");
			ПоказатьПредупреждение(ОповещениеОПредупреждении, ТекстПредупреждения);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюПродолжитьПослеПредупреждения(ПараметрыЗаписи) Экспорт
	
	Объект.СнятСКонтроля = Истина;
	Объект.ДатаСнятияСКонтроля = ТекущаяДата();
	ПараметрыЗаписи.Вставить("ПродолжитьЗаписьПослеПредупреждения", Истина);
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюПродолжение(Результат, ПараметрыЗаписи) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	Иначе
		ПараметрыЗаписи.Вставить("ПродолжитьЗаписьПослеОтветаНаВопрос", Истина);
		Записать(ПараметрыЗаписи);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Сохранение вводимых значений
	СохранениеВводимыхЗначений.ОбновитьСпискиВыбора(ЭтаФорма, ЭлементыДляСохранения(), "Справочник.Контроль.ФормаЭлементаИФормаНового");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не НачальныйСнятСКонтроля И Объект.СнятСКонтроля Тогда 
		Элементы.СтраницыКоманды.ТекущаяСтраница = Элементы.СтраницаСнятСКонтроля;
		ЭтаФорма.ТолькоПросмотр = Истина;
		Элементы.ДекорацияСрок.Видимость = Ложь;
		Элементы.ФормаВернутьНаКонтроль.Видимость = Истина;
	КонецЕсли;	
	
	ВывестиСостояниеИсполнения();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если Не НачальныйСнятСКонтроля И Объект.СнятСКонтроля Тогда 
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Снят с контроля'"),
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка));
		НачальныйСнятСКонтроля = Объект.СнятСКонтроля;
	КонецЕсли;	
	
	ТекущийКонтролер = Объект.Контролер;
	
	КонтрольКлиент.ОповеститьОЗаписиКонтроля(Объект);
	
	Если ПараметрыЗаписи.Свойство("Закрыть") Тогда
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Изменение:'"),
			ПолучитьНавигационнуюСсылку(Объект.Ссылка),
			Строка(Объект.Ссылка),
			БиблиотекаКартинок.Информация32);
		Закрыть();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СрокИсполненияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ВывестиПодписьЧислаДней();
	
КонецПроцедуры

&НаКлиенте
Процедура СрокИсполненияПриИзменении(Элемент)
	
	ВывестиПодписьЧислаДней();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтролерПриИзменении(Элемент)
	
	РаботаСБизнесПроцессамиКлиент.ВыбратьОбъектыАдресацииРоли(
	    Объект,
		"Контролер", 
		"ОсновнойОбъектАдресацииКонтролера", 
		"ДополнительныйОбъектАдресацииКонтролера", 
		ЭтаФорма);
		
КонецПроцедуры

&НаКлиенте
Процедура КонтролерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Контролеры.Количество() = 0 Тогда 
		РаботаСПользователямиКлиент.ВыбратьИсполнителя(Элемент, Объект.Контролер,,,,, 
			Объект.ОсновнойОбъектАдресацииКонтролера, Объект.ДополнительныйОбъектАдресацииКонтролера);
	ИначеЕсли Контролеры.Количество() > 10 Тогда 		
		РаботаСПользователямиКлиент.ВыбратьИсполнителя(Элемент, Объект.Контролер,,,,, 
			Объект.ОсновнойОбъектАдресацииКонтролера, Объект.ДополнительныйОбъектАдресацииКонтролера,,,,Контролеры);
	Иначе
		ДанныеВыбора = Контролеры;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтролерОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		СтандартнаяОбработка = Ложь;
		
		Объект.Контролер = ВыбранноеЗначение.РольИсполнителя;
		Объект.ОсновнойОбъектАдресацииКонтролера = ВыбранноеЗначение.ОсновнойОбъектАдресации;
		Объект.ДополнительныйОбъектАдресацииКонтролера = ВыбранноеЗначение.ДополнительныйОбъектАдресации;
		
		Модифицированность = Истина;
	Иначе  
		Объект.ОсновнойОбъектАдресацииКонтролера = Неопределено;
		Объект.ДополнительныйОбъектАдресацииКонтролера = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтролерАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = СформироватьДанныеВыбораКонтролера(Текст, Контролеры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтролерОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = СформироватьДанныеВыбораКонтролера(Текст, Контролеры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция СформироватьДанныеВыбораКонтролера(Текст, Контролеры)
	
	Если Контролеры.Количество() = 0 Тогда 
		ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбораИсполнителя(Текст);
	Иначе
		ДанныеВыбора = Новый СписокЗначений;
		Для Каждого Строка Из Контролеры Цикл
			Если Не ЗначениеЗаполнено(Строка.Значение) Тогда 
				Продолжить;
			КонецЕсли;	
		
			Если Текст <> "" И НРег(Лев(Строка.Значение, СтрДлина(Текст))) <> НРег(Текст) Тогда 
				Продолжить;
			КонецЕсли;	
			
			ДанныеВыбора.Добавить(Строка.Значение);
		КонецЦикла;	
		
	КонецЕсли;	
	
	Возврат ДанныеВыбора;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИсполнители

&НаКлиенте
Процедура ИсполнителиПриИзменении(Элемент)
	
	НазначитьОтветственногоИсполнителя();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.Исполнители.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда 
		Элементы.Исполнители.ТекущиеДанные.Исполнитель = ПользователиПустаяСсылка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиИсполнительПриИзменении(Элемент)
	
	ТекущийДанные = Элементы.Исполнители.ТекущиеДанные;
	
	РаботаСБизнесПроцессамиКлиент.ВыбратьОбъектыАдресацииРоли(
	    ТекущийДанные,
		"Исполнитель", 
		"ОсновнойОбъектАдресации", 
		"ДополнительныйОбъектАдресации", 
		ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Исполнители.ТекущиеДанные;
	
	РаботаСПользователямиКлиент.ВыбратьИсполнителя(Элемент, ТекущиеДанные.Исполнитель,,,,,
		ТекущиеДанные.ОсновнойОбъектАдресации, 
		ТекущиеДанные.ДополнительныйОбъектАдресации);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиИсполнительОчистка(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Исполнители.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		 Возврат;
	КонецЕсли;	 
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные.Исполнитель = ПользователиПустаяСсылка;
	ТекущиеДанные.ОсновнойОбъектАдресации = Неопределено;
	ТекущиеДанные.ДополнительныйОбъектАдресации = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиИсполнительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		СтандартнаяОбработка = Ложь;
		
		ТекущийДанные = Элементы.Исполнители.ТекущиеДанные;
		ТекущийДанные.Исполнитель = ВыбранноеЗначение.РольИсполнителя;
		ТекущийДанные.ОсновнойОбъектАдресации = ВыбранноеЗначение.ОсновнойОбъектАдресации;
		ТекущийДанные.ДополнительныйОбъектАдресации = ВыбранноеЗначение.ДополнительныйОбъектАдресации;
		
		Модифицированность = Истина;
	Иначе  
		ТекущийДанные = Элементы.Исполнители.ТекущиеДанные;
		ТекущийДанные.ОсновнойОбъектАдресации = Неопределено;
		ТекущийДанные.ДополнительныйОбъектАдресации = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиИсполнительАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиИсполнительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подобрать(Команда)
	
	АдресВременногоХранилища = ПоместитьИсполнителейВоВременноеХранилище();
	РаботаСПользователямиКлиент.ПодборИсполнителей(АдресВременногоХранилища, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьСКонтроля(Команда)
	
	Объект.СнятСКонтроля = Истина;
	Объект.ДатаСнятияСКонтроля = ТекущаяДата();
	
	Для Каждого Строка Из Объект.Исполнители Цикл
		Если Не Строка.Проконтролировано Тогда 
			Строка.Проконтролировано = Истина;
			Строка.ДатаКонтроля = ТекущаяДата();
		КонецЕсли;	
	КонецЦикла;
	
	Если Записать() Тогда 
		Закрыть();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Подписаться(Команда)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрыФормы = Новый Структура("ОбъектПодписки", Объект.Ссылка);
		ОткрытьФорму("ОбщаяФорма.ПодпискаНаУведомленияПоОбъекту", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Команда)
	
	ЗаписатьИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Трудозатраты(Команда)
	
	ПараметрыФормы = Новый Структура("Источник", Объект.Ссылка);
	ОткрытьФорму("РегистрСведений.ФактическиеТрудозатраты.Форма.ФормаСпискаИсточника", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПоместитьИсполнителейВоВременноеХранилище()

	Возврат ПоместитьВоВременноеХранилище(Объект.Исполнители.Выгрузить(), УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Процедура ЗагрузитьИсполнителейИзВременногоХранилища(АдресВременногоХранилища)
	
	ТекущиеИсполнители = Объект.Исполнители.Выгрузить();
	НовыеИсполнители = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	
	Объект.Исполнители.Очистить();
	Для Каждого СтрокаНовыйИсполнитель Из НовыеИсполнители Цикл
		
		НоваяСтрока = Объект.Исполнители.Добавить();
		НоваяСтрока.Исполнитель = СтрокаНовыйИсполнитель.Исполнитель;
		НоваяСтрока.ОсновнойОбъектАдресации = СтрокаНовыйИсполнитель.ОсновнойОбъектАдресации;
		НоваяСтрока.ДополнительныйОбъектАдресации = СтрокаНовыйИсполнитель.ДополнительныйОбъектАдресации;

		СтруктураОтбора = Новый Структура("Исполнитель, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации",
			СтрокаНовыйИсполнитель.Исполнитель, 
			СтрокаНовыйИсполнитель.ОсновнойОбъектАдресации, 
			СтрокаНовыйИсполнитель.ДополнительныйОбъектАдресации);
			
		НайденныеСтроки = ТекущиеИсполнители.НайтиСтроки(СтруктураОтбора);
		
		Если НайденныеСтроки.Количество() > 0 Тогда 
			НоваяСтрока.Исполнено = НайденныеСтроки[0].Исполнено;
		КонецЕсли;			
	КонецЦикла;	
	
	Если Объект.Исполнители.Количество() > 1 Тогда 
		Элементы.ИсполнителиПроконтролировано.Видимость = Истина;
	Иначе
		Элементы.ИсполнителиПроконтролировано.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция РазностьДат(Дата1, Дата2)
	
	Возврат (НачалоДня(Дата2) - НачалоДня(Дата1)) / (24 * 3600);
	
КонецФункции	

&НаКлиенте
Процедура ВывестиПодписьЧислаДней()
	
	Если Не ЗначениеЗаполнено(Объект.СрокИсполнения) Тогда 
		Элементы.ДекорацияСрок.Заголовок = "";
	Иначе	
		ЧислоДней = РазностьДат(ТекущаяДата(), Объект.СрокИсполнения);
		Если ЧислоДней = 0 Тогда 
			Элементы.ДекорацияСрок.Заголовок = НСтр("ru = '(сегодня)'");
			Элементы.ДекорацияСрок.ЦветТекста = ЦветЗеленый;
		ИначеЕсли ЧислоДней > 0 Тогда 
			ПодписьДней = ДелопроизводствоКлиентСервер.ПолучитьПодписьДней(ЧислоДней);
			Элементы.ДекорацияСрок.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '(осталось %1 %2)'"),
				ЧислоДней,
				ПодписьДней);
			Элементы.ДекорацияСрок.ЦветТекста = ЦветЗеленый;
		Иначе
			ПодписьДней = ДелопроизводствоКлиентСервер.ПолучитьПодписьДней(-ЧислоДней);
			Элементы.ДекорацияСрок.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '(просрочено %1 %2)'"),
				-ЧислоДней,
				ПодписьДней);
			Элементы.ДекорацияСрок.ЦветТекста = ЦветКрасный;
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура НазначитьОтветственногоИсполнителя()
	
	Если ПредметПроцессЗадача Тогда 
		Возврат;
	КонецЕсли;	
	
	Для Номер = 0 По Объект.Исполнители.Количество() - 1 Цикл 
		Объект.Исполнители[Номер].Ответственный = Ложь;
	КонецЦикла;
	
	Если Объект.Исполнители.Количество() > 1 Тогда 
		Объект.Исполнители[0].Ответственный = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПоказатьЗначение(, ПредметСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока Тогда 
		Если Объект.Исполнители.Количество() > 1 Тогда 
			Элементы.ИсполнителиПроконтролировано.Видимость = Истина;
		Иначе
			Элементы.ИсполнителиПроконтролировано.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПослеУдаления(Элемент)
	
	Если Объект.Исполнители.Количество() > 1 Тогда 
		Элементы.ИсполнителиПроконтролировано.Видимость = Истина;
	Иначе
		Элементы.ИсполнителиПроконтролировано.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВернутьНаКонтроль(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ВернутьНаКонтрольПродолжение", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Вернуть контрольную карточку на контроль?'");
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ВернутьНаКонтрольПродолжение(Результат, Параметры) Экспорт 

	Если Результат <> КодВозвратаДиалога.Да Тогда 
		Возврат;
	КонецЕсли;	
		
	Объект.СнятСКонтроля = Ложь;
	Объект.ДатаСнятияСКонтроля = '00010101';
	Для Каждого Строка Из Объект.Исполнители Цикл
		Строка.Проконтролировано = Ложь;
		Строка.ДатаКонтроля = '00010101';
	КонецЦикла;	
	
	Если Не Записать() Тогда 
		Возврат;
	КонецЕсли;	
		
	Элементы.СтраницыКоманды.ТекущаяСтраница = Элементы.СтраницаКоманды;
	ЭтаФорма.ТолькоПросмотр = Ложь;
	Элементы.ДекорацияСрок.Видимость = Истина;
	Элементы.ФормаВернутьНаКонтроль.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПроконтролированоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Исполнители.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Если ТекущиеДанные.Проконтролировано Тогда 
		ТекущиеДанные.ДатаКонтроля = ТекущаяДата();
	Иначе
		ТекущиеДанные.ДатаКонтроля = '00010101';
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ВывестиСостояниеИсполнения();
	
КонецПроцедуры

&НаСервере
Процедура ВывестиСостояниеИсполнения() 
	
	Для Каждого Строка Из Объект.Исполнители Цикл
		СостояниеИсполнения = "";
		Если ЗначениеЗаполнено(Объект.Предмет) Тогда 
			Если ТипЗнч(Объект.Предмет) = Тип("СправочникСсылка.ВеткиПереписки") Тогда 
				Если ТипЗнч(Строка.Источник) = Тип("ДокументСсылка.ВходящееПисьмо") Тогда 
					СостояниеИсполнения = НСтр("ru = 'Ответ получен'");
				ИначеЕсли ТипЗнч(Строка.Источник) = Тип("ДокументСсылка.ИсходящееПисьмо") Тогда 
					СостояниеИсполнения = НСтр("ru = 'Ответ не получен'");
				КонецЕсли;
			ИначеЕсли ПредметПроцессЗадача Тогда 
				Если Строка.Исполнено Тогда 
					СостояниеИсполнения = НСтр("ru = 'Исполнено'");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;	
		Строка.СостояниеИсполнения = СостояниеИсполнения;
	КонецЦикла;	
		
КонецПроцедуры	

&НаКлиенте
Процедура ИсполнителиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ИсполнителиСостояниеИсполнения Тогда 
		СтандартнаяОбработка = Ложь;
		Строка = Объект.Исполнители.НайтиПоИдентификатору(ВыбраннаяСтрока);
		Если ЗначениеЗаполнено(Строка.Источник) Тогда 
			ПоказатьЗначение(, Строка.Источник);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть()
	
	ПараметрыЗаписи = Новый Структура();
	ПараметрыЗаписи.Вставить("Закрыть", Истина);
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Функция ЭлементыДляСохранения()
	
	СохраняемыеЭлементы = Новый Структура;
	СохраняемыеЭлементы.Вставить("Контролер", Объект.Контролер);
		
	Возврат СохранениеВводимыхЗначений.СформироватьТаблицуСохраняемыхЭлементов(СохраняемыеЭлементы);
	
КонецФункции

#КонецОбласти
