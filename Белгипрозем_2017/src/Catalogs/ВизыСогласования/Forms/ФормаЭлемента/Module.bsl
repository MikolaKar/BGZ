
//////////////////////////////////////////////////////////////////////////////// 
// ПРОЦЕДУРЫ И ФУНКЦИИ 
// 

&НаСервере
Процедура УстановитьДоступность()
	
	Элементы.ГруппаВнес.Видимость = Ложь;
	Если ЗначениеЗаполнено(Объект.УстановилРезультат) 
		И ЗначениеЗаполнено(Исполнитель)
		И Объект.УстановилРезультат <> Исполнитель Тогда 
		ВнесРезультат = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '(внес: %1)'"),
			Строка(Объект.УстановилРезультат));
		Элементы.ГруппаВнес.Видимость = Истина;
	КонецЕсли;
	
	ЭтаФорма.ТолькоПросмотр = Ложь;
	Элементы.ОтметитьРезультатЗаИсполнителя.Видимость = Истина;
	Элементы.Исполнитель.ТолькоПросмотр = Ложь;
	Элементы.РезультатСогласования.ТолькоПросмотр = Ложь;
	Элементы.ДатаИсполнения.ТолькоПросмотр = Ложь;
	Элементы.Комментарий.ТолькоПросмотр = Ложь;
	
	Если Объект.Подписана Тогда
		ПрочитатьПодпись();
		ЭтаФорма.ТолькоПросмотр = Истина;
		Элементы.ОтметитьРезультатЗаИсполнителя.Видимость = Ложь;
		Возврат;
	КонецЕсли;	
	
	Если РольДоступна("ПолныеПрава") Тогда 
		Элементы.ОтметитьРезультатЗаИсполнителя.Видимость = Ложь;
		Возврат;
	КонецЕсли;	
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	ТекущийПользовательАвтор = (Объект.Автор = ТекущийПользователь);
	ТекущийПользовательИсполнитель = РаботаСВизамиСогласования.ПользователиСовпадают(ТекущийПользователь, 
		Исполнитель, Объект.ОсновнойОбъектАдресации, Объект.ДополнительныйОбъектАдресации);
	
	Если Не ТекущийПользовательАвтор И Не ТекущийПользовательИсполнитель Тогда 
		ЭтаФорма.ТолькоПросмотр = Истина;
		Элементы.ОтметитьРезультатЗаИсполнителя.Видимость = Ложь;
		Возврат;
	КонецЕсли;	
	
	Если Не ТекущийПользовательАвтор Тогда 
		Элементы.Исполнитель.ТолькоПросмотр = Истина;
		Элементы.ОтметитьРезультатЗаИсполнителя.Видимость = Ложь;
	КонецЕсли;	
	
	Если Не ТекущийПользовательИсполнитель Тогда	
		Элементы.РезультатСогласования.ТолькоПросмотр = Истина;
		Элементы.ДатаИсполнения.ТолькоПросмотр = Истина;
		Элементы.Комментарий.ТолькоПросмотр = Истина;
	КонецЕсли;
		
	Если ТекущийПользовательАвтор И 
		ЗначениеЗаполнено(Объект.РезультатСогласования) 
	Тогда 
		Элементы.Исполнитель.ТолькоПросмотр = Истина;   
		
		Если Объект.Автор <> Объект.УстановилРезультат Тогда 
			Элементы.ОтметитьРезультатЗаИсполнителя.Видимость = Ложь;
		КонецЕсли;	
    КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Исполнитель) Или ТекущийПользовательИсполнитель Тогда 
		Элементы.ОтметитьРезультатЗаИсполнителя.Видимость = Ложь;
	КонецЕсли;	
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ЗначениеЗаполнено(Объект.Документ) Тогда 
		 
		СостояниеДокумента = Делопроизводство.ПолучитьСостояниеДокумента(Объект.Документ, "СостояниеСогласование");
		Если СостояниеДокумента <> Перечисления.СостоянияДокументов.НаСогласовании Тогда 
			ИнформационнаяНадпись = НСтр("ru = 'Установить или изменить результат согласования возможно только при состоянии документа ""На согласовании""'");
			Элементы.ИнформационнаяНадпись.Видимость = Истина;
	
			Элементы.РезультатСогласования.ТолькоПросмотр = Истина;
			Элементы.ДатаИсполнения.ТолькоПросмотр = Истина;
			Элементы.Комментарий.ТолькоПросмотр = Истина;
			Элементы.ОтметитьРезультатЗаИсполнителя.Видимость = Ложь;
		КонецЕсли;
		
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Объект.Источник) 
		И Не ЗначениеЗаполнено(Объект.РезультатСогласования) Тогда 
		
		Если (ТипЗнч(Объект.Источник) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") И Не Объект.Источник.Выполнена)
		 Или (ТипЗнч(Объект.Источник) = Тип("БизнесПроцессСсылка.Согласование") И Не Объект.Источник.Завершен) Тогда 
			ИнформационнаяНадпись = НСтр("ru = 'Результат согласования будет установлен автоматически при выполнении задачи процесса ""Согласование""'");
			Элементы.ИнформационнаяНадпись.Видимость = Истина;
	
			Элементы.Исполнитель.ТолькоПросмотр = Истина;
			Элементы.РезультатСогласования.ТолькоПросмотр = Истина;
			Элементы.ДатаИсполнения.ТолькоПросмотр = Истина;
			Элементы.Комментарий.ТолькоПросмотр = Истина;
			Элементы.ОтметитьРезультатЗаИсполнителя.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеЭП()
	
	ДанныеЭП = Новый Структура("КомуВыданСертификат, ДатаПодписи, Комментарий, Статус, Объект, АдресПодписи,
		|Отпечаток, Зашифрован, УстановившийПодпись, АдресСертификата, ПодписьВерна, Версия, Статус,
		|СертификатДействителен, ДатаПроверкиПодписи");
	
	Подпись = РаботаСЭП.ПолучитьЭлектроннуюПодпись(Объект.Ссылка); 
	
	Если Подпись = Неопределено Тогда
		Возврат ДанныеЭП;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДанныеЭП, Подпись);
	
	ДвоичныеДанные = Подпись.Подпись.Получить();
	ДанныеЭП.АдресПодписи = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
			
	ДвоичныеДанныеСертификата = Подпись.Сертификат.Получить();
	Если ДвоичныеДанныеСертификата <> Неопределено Тогда 
		ДанныеЭП.АдресСертификата = ПоместитьВоВременноеХранилище(ДвоичныеДанныеСертификата, УникальныйИдентификатор);
	КонецЕсли;
	
	ДанныеЭП.Объект = Объект.Ссылка;
	ДанныеЭП.ПодписьВерна = Истина;
	ДанныеЭП.Зашифрован = Ложь;
	
	Возврат ДанныеЭП;
	
КонецФункции

&НаСервере
Процедура ПодписатьЭПНаСервере(МассивДанныхДляЗанесенияВРегистр, МассивАдресов)
	
	Если Не ПользователиСерверПовтИсп.ЭтоПолноправныйПользовательИБ() Тогда 
		ТекущийПользовательАвтор = (Объект.Автор = ТекущийПользователь);
		ТекущийПользовательИсполнитель = РаботаСВизамиСогласования.ПользователиСовпадают(ТекущийПользователь, 
			Исполнитель, Объект.ОсновнойОбъектАдресации, Объект.ДополнительныйОбъектАдресации);
		
		Если Не ТекущийПользовательАвтор И Не ТекущийПользовательИсполнитель Тогда 
			ВызватьИсключение НСтр("ru = 'Только автор визы или согласующее лицо могут подписать визу.'");
		КонецЕсли; 		
	КонецЕсли; 
	
	ЗаписьОбъект = РеквизитФормыВЗначение("Объект");
	ЗаблокироватьДанныеДляРедактирования(Объект.Ссылка, , УникальныйИдентификатор);
	
	Для Каждого Данные Из МассивДанныхДляЗанесенияВРегистр Цикл
		
		РаботаСЭП.ЗанестиИнформациюОПодписи(Объект.Ссылка,
			Данные.НоваяПодписьДвоичныеДанные, Данные.Отпечаток, Данные.ДатаПодписи,
			Данные.Комментарий, Данные.ИмяФайлаПодписи, Данные.КомуВыданСертификат,
			Данные.ДвоичныеДанныеСертификата, УникальныйИдентификатор);
		
	КонецЦикла;	
	
	РазблокироватьДанныеДляРедактирования(Объект.Ссылка, УникальныйИдентификатор);
	
	ЗаписьОбъект.Подписана = Истина;
	ЗаписьОбъект.Записать();
	
	ЗначениеВРеквизитФормы(ЗаписьОбъект, "Объект");
	
	Для Каждого АдресФайла Из МассивАдресов Цикл
		Если ЭтоАдресВременногоХранилища(АдресФайла) Тогда
			УдалитьИзВременногоХранилища(АдресФайла);
		КонецЕсли;
	КонецЦикла;	

	УстановитьДоступность();
	
	Элементы.ПодписатьЭП.Доступность = Ложь;
	Элементы.ОткрытьЭП.Доступность = Истина;
	Элементы.ПроверитьЭП.Доступность = Истина;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьЭПНаСервере()
	
	ПрофилиНастроекКриптографии = ЭлектроннаяПодписьКлиентСервер.ОбщиеНастройки().ПрофилиНастроекКриптографии;
	
	ПодходящиеНастройкиКриптографииОпределены = Ложь;
	
	Для Каждого ПрофильНастроекКриптографии Из ПрофилиНастроекКриптографии Цикл
		
		ПровайдерЭП = ПрофильНастроекКриптографии.ПровайдерЭП;
		ПутьМодуляКриптографии = ПрофильНастроекКриптографии.ПутьМодуляКриптографии;
		ТипПровайдераЭП = ПрофильНастроекКриптографии.ТипПровайдераЭП;
		
		Попытка 
			МенеджерКриптографии = Новый МенеджерКриптографии(ПровайдерЭП, ПутьМодуляКриптографии, ТипПровайдераЭП);
			ЗаполнитьЗначенияСвойств(МенеджерКриптографии, ПрофильНастроекКриптографии);
			ПодходящиеНастройкиКриптографииОпределены = Истина;
			Прервать;
		Исключение
		КонецПопытки;
		
	КонецЦикла;
	
	Если Не ПодходящиеНастройкиКриптографииОпределены Тогда
		ВызватьИсключение НСтр("ru = 'На компьютере не найден ни один провайдер ЭП для выполнения операции.'");
	КонецЕсли;
	
	ДанныеЭП = ПолучитьДанныеЭП();
	РаботаСЭП.ПроверитьОднуПодписьНаСервере(ДанныеЭП, МенеджерКриптографии, УникальныйИдентификатор);
	
	Возврат ДанныеЭП;
	
КонецФункции	

&НаСервере
Функция ЕстьДубльВизы() 
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Справочник.ВизыСогласования КАК ВизыСогласования
	|ГДЕ
	|	ВизыСогласования.Документ = &Документ
	|	И ВизыСогласования.Исполнитель = &Исполнитель
	|	И ВизыСогласования.РольИсполнителя = &РольИсполнителя
	|	И ВизыСогласования.ОсновнойОбъектАдресации = &ОсновнойОбъектАдресации
	|	И ВизыСогласования.ДополнительныйОбъектАдресации = &ДополнительныйОбъектАдресации
	|	И ВизыСогласования.ПомещенаВИсторию = &ПомещенаВИсторию
	|	И ВизыСогласования.ДатаПомещенияВИсторию = &ДатаПомещенияВИсторию
	|	И НЕ ВизыСогласования.Удалена
	|	И НЕ ВизыСогласования.ПометкаУдаления
	|	И ВизыСогласования.Ссылка <> &Ссылка";
		
	Запрос.УстановитьПараметр("Документ", Объект.Документ);
	Запрос.УстановитьПараметр("Исполнитель", Объект.Исполнитель);
	Запрос.УстановитьПараметр("РольИсполнителя", Объект.РольИсполнителя);
	Запрос.УстановитьПараметр("ОсновнойОбъектАдресации", Объект.ОсновнойОбъектАдресации);
	Запрос.УстановитьПараметр("ДополнительныйОбъектАдресации", Объект.ДополнительныйОбъектАдресации);
	Запрос.УстановитьПараметр("ПомещенаВИсторию", Объект.ПомещенаВИсторию);
	Запрос.УстановитьПараметр("ДатаПомещенияВИсторию", Объект.ДатаПомещенияВИсторию);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Возврат Не Запрос.Выполнить().Пустой();
		
КонецФункции	

//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
// 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
	ЭтоНовый = Объект.Ссылка.Пустая();
	Если ЭтоНовый Тогда 
		Объект.Автор = ТекущийПользователь;
		
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда 
			Объект.РезультатСогласования = Неопределено;
			Объект.УстановилРезультат = Неопределено;
			Объект.ДатаИсполнения = '00010101';
			Объект.Комментарий = "";
			Объект.Источник = Неопределено;
		КонецЕсли;	
		
		Если Параметры.Свойство("Документ") Тогда
			Объект.Документ = Параметры.Документ;
		КонецЕсли;
	КонецЕсли;	
	
	Если Параметры.Свойство("Документ") Тогда
		Элементы.Документ.Видимость = Ложь;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Исполнитель) Тогда 
		Исполнитель = Объект.Исполнитель;
	ИначеЕсли ЗначениеЗаполнено(Объект.РольИсполнителя) Тогда 
		Исполнитель = Объект.РольИсполнителя;
	Иначе
		Исполнитель = Справочники.Пользователи.ПустаяСсылка();
	КонецЕсли;	
		
	Если Не ЗначениеЗаполнено(Объект.Источник) Тогда 
		Элементы.Источник.Видимость = Ложь;
	КонецЕсли;	
	
	Если Объект.Подписана Тогда 
		Элементы.ПодписатьЭП.Доступность = Ложь;
		Элементы.ОткрытьЭП.Доступность = Истина;
		Элементы.ПроверитьЭП.Доступность = Истина;
	Иначе
		Элементы.ПодписатьЭП.Доступность = Истина;
		Элементы.ОткрытьЭП.Доступность = Ложь;
		Элементы.ПроверитьЭП.Доступность = Ложь;
	КонецЕсли;	
	
	Если РольДоступна("ПолныеПрава") Тогда 
		Элементы.ОтметитьРезультатЗаИсполнителя.Видимость = Ложь;
	КонецЕсли;	
	
	УстановитьДоступность();
	
	Если Параметры.Свойство("ТолькоПросмотр") И Параметры.ТолькоПросмотр = Истина Тогда 
		ЭтаФорма.ТолькоПросмотр = Истина;
	КонецЕсли;	
	
	СтарыйРезультат = Объект.РезультатСогласования;
	СтарыйКомментарий = Объект.Комментарий;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗадачаСогласованияВыполнена" 
		И Параметр.Ссылка = Объект.Источник Тогда 
		Прочитать();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ТипЗнч(Исполнитель) = Тип("СправочникСсылка.Пользователи") Тогда 
		Объект.Исполнитель = Исполнитель;
	ИначеЕсли ТипЗнч(Исполнитель) = Тип("СправочникСсылка.РолиИсполнителей") Тогда 	
		Объект.РольИсполнителя = Исполнитель;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Объект.Ссылка.Пустая() И ЗначениеЗаполнено(Объект.Документ) Тогда 
		
		ТекущийОбъект.Наименование = РаботаСВизамиСогласования.ПолучитьНаименованиеВизы(ТекущийОбъект.Документ);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НастройкаШаблоновБизнесПроцессов.ЗапрещеноИзменение,
		|	НастройкаШаблоновБизнесПроцессов.ШаблонБизнесПроцесса
		|ИЗ
		|	РегистрСведений.НастройкаШаблоновБизнесПроцессов КАК НастройкаШаблоновБизнесПроцессов
		|ГДЕ
		|	НастройкаШаблоновБизнесПроцессов.ВидДокумента = &ВидДокумента
		|	И ТИПЗНАЧЕНИЯ(НастройкаШаблоновБизнесПроцессов.ШаблонБизнесПроцесса) = ТИП(Справочник.ШаблоныСогласования)";
		
		Запрос.УстановитьПараметр("ВидДокумента", Объект.Документ.ВидДокумента);
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда 
			Запрос.Текст = Запрос.Текст + " И Организация = &Организация ";
			Запрос.УстановитьПараметр("Организация", Объект.Документ.Организация);
			
			Результат = Запрос.Выполнить();
			Если Результат.Пустой() Тогда
				Запрос.УстановитьПараметр("Организация", Справочники.Организации.ПустаяСсылка());
			КонецЕсли;
		КонецЕсли;	
		Результат = Запрос.Выполнить();
		
		Если Результат.Пустой() Тогда 
			ЗапрещеноИзменение = Ложь;
		Иначе	
			ЗапрещеноИзменение = Истина;
		КонецЕсли;	
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Не Выборка.ЗапрещеноИзменение Тогда 
				ЗапрещеноИзменение = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;	
		
		Если ЗапрещеноИзменение Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Для данного документа запрещено согласование без использования процесса, заполненного по шаблону согласования'"),, 
				"",, Отказ);
		КонецЕсли;	
		
		// порядок визы
		ТекущийОбъект.Порядок = РаботаСВизамиСогласования.МаксимальныйПорядокВизы(ТекущийОбъект.Документ) + 1;
		
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(СтарыйРезультат) И ЗначениеЗаполнено(Объект.РезультатСогласования) Тогда 
		Если ЗначениеЗаполнено(Объект.Источник) Тогда 
			Если ТипЗнч(Объект.Источник) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") И Не Объект.Источник.Выполнена Тогда 
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Результат согласования будет установлен автоматически при выполнении задачи процесса ""Согласование""'"),, 
					"Объект.РезультатСогласования",, Отказ);
				Возврат;
			КонецЕсли;	
			Если ТипЗнч(Объект.Источник) = Тип("БизнесПроцессСсылка.Согласование") И Не Объект.Источник.Завершен Тогда 
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Результат согласования будет установлен автоматически при выполнении задачи процесса ""Согласование""'"),, 
					"Объект.РезультатСогласования",, Отказ);
				Возврат;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;	
	
	Если Не РольДоступна("ПолныеПрава") И ЗначениеЗаполнено(Объект.Документ) И Объект.РезультатСогласования <> СтарыйРезультат Тогда 
		СостояниеДокумента = Делопроизводство.ПолучитьСостояниеДокумента(Объект.Документ, "СостояниеСогласование");
		Если СостояниеДокумента <> Перечисления.СостоянияДокументов.НаСогласовании Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Установить результат согласования возможно только при состоянии документа ""На согласовании""'"),, 
				"Объект.РезультатСогласования",, Отказ);
			Возврат;	
		КонецЕсли;		
	КонецЕсли;	
	
	Если Объект.РезультатСогласования <> СтарыйРезультат 
	 Или Объект.Комментарий <> СтарыйКомментарий Тогда 
		ТекущийОбъект.УстановилРезультат = ТекущийПользователь;
	КонецЕсли;	
	
	СтарыйРезультат = Объект.РезультатСогласования;
	СтарыйКомментарий = Объект.Комментарий;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Не ЗначениеЗаполнено(Исполнитель) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Поле ""Согласующее лицо"" не заполнено'"),, "Исполнитель",, Отказ);
		Возврат;
	КонецЕсли;
	
	Если ЕстьДубльВизы() Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Виза указанного согласующего лица уже имеется в документе'"),, "Исполнитель",, Отказ);
		Возврат;	
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Объект.РезультатСогласования) Тогда 
		Если Не ЗначениеЗаполнено(Объект.ДатаИсполнения) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Поле ""Дата согласования"" не заполнено'"),, "Объект.ДатаИсполнения",, Отказ);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Объект.УстановилРезультат) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Поле ""Установил результат"" не заполнено'"),, "Объект.УстановилРезультат",, Отказ);
		КонецЕсли;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Объект.Комментарий) Или ЗначениеЗаполнено(Объект.ДатаИсполнения) Тогда 
		Если Не ЗначениеЗаполнено(Объект.РезультатСогласования) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Поле ""Результат согласования"" не заполнено'"),, "Объект.РезультатСогласования",, Отказ);
		КонецЕсли;	
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(Объект.Комментарий) Тогда 
		Если Объект.РезультатСогласования = Перечисления.РезультатыСогласования.НеСогласовано 
		 Или Объект.РезультатСогласования = Перечисления.РезультатыСогласования.СогласованоСЗамечаниями 
		Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Поле ""Комментарий"" не заполнено'"),, "Объект.Комментарий",, Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ВизыСогласования", Объект.Документ);
	ЭтоНовый = Не ЭтоНовый;
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
// 

&НаКлиенте
Процедура РезультатСогласованияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.РезультатСогласования) Тогда 
		Объект.УстановилРезультат = ТекущийПользователь;
		Объект.ДатаИсполнения = ТекущаяДата();
	Иначе
		Объект.УстановилРезультат = Неопределено;
		Объект.ДатаИсполнения = '00010101';
		Объект.Комментарий = "";
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьРезультатЗаИсполнителя(Команда)
	
	Элементы.РезультатСогласования.ТолькоПросмотр = Ложь;
	Элементы.ДатаИсполнения.ТолькоПросмотр = Ложь;
	Элементы.Комментарий.ТолькоПросмотр = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСПользователямиКлиент.ВыбратьИсполнителя(Элемент, Исполнитель,,,,, 
		Объект.ОсновнойОбъектАдресации, Объект.ДополнительныйОбъектАдресации);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		СтандартнаяОбработка = Ложь;
		
		Объект.Исполнитель = Неопределено;
		Исполнитель = ВыбранноеЗначение.РольИсполнителя;
		Объект.ОсновнойОбъектАдресации = ВыбранноеЗначение.ОсновнойОбъектАдресации;
		Объект.ДополнительныйОбъектАдресации = ВыбранноеЗначение.ДополнительныйОбъектАдресации;
		
		Модифицированность = Истина;
	Иначе  
		Объект.ОсновнойОбъектАдресации = Неопределено;
		Объект.ДополнительныйОбъектАдресации = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительПриИзменении(Элемент)
	
	ПараметрыИсполнителя = Новый Структура;
	ПараметрыИсполнителя.Вставить("Исполнитель", Исполнитель);
	ПараметрыИсполнителя.Вставить("ОсновнойОбъектАдресации", Объект.ОсновнойОбъектАдресации);
	ПараметрыИсполнителя.Вставить("ДополнительныйОбъектАдресации", Объект.ДополнительныйОбъектАдресации);
	
	ОписаниеОповещения = 
		Новый ОписаниеОповещения("ИсполнительПриИзмененииЗавершение", ЭтаФорма, ПараметрыИсполнителя);
	
	РаботаСБизнесПроцессамиКлиент.ВыбратьОбъектыАдресацииРоли(
		ПараметрыИсполнителя,
		"Исполнитель",
		"ОсновнойОбъектАдресации",
		"ДополнительныйОбъектАдресации",
		ЭтаФорма,
		ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительПриИзмененииЗавершение(Результат, Параметры) Экспорт
	
	Исполнитель = Параметры.Исполнитель;
	Объект.ОсновнойОбъектАдресации = Параметры.ОсновнойОбъектАдресации;
	Объект.ДополнительныйОбъектАдресации = Параметры.ДополнительныйОбъектАдресации;
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсточникНажатие(Элемент, СтандартнаяОбработка)
	
	Если ТипЗнч(Объект.Источник) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда 
		СтандартнаяОбработка = Ложь;
		БизнесПроцессыИЗадачиКлиент.ОткрытьФормуВыполненияЗадачи(Объект.Источник);
	КонецЕсли;	
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////// 
// ЭП
// 

&НаКлиенте
Процедура ПодписатьЭП(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.РезультатСогласования) Тогда 
		ТекстПредупреждения = НСтр("ru = 'Можно подписать только визу с заполненным результатом согласования.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;	
	
	Если НЕ ПодключитьРасширениеРаботыСКриптографией() Тогда
		РаботаСЭПКлиент.ПоказатьПредупреждениеОНеобходимостиРасширенияРаботыСКриптографией(
			, НСтр("ru = 'Подписать'"));
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПодписатьПродолжение",
		ЭтотОбъект);

	Если Объект.Ссылка.Пустая() Тогда 
		
		ТекстВопроса = НСтр("ru = 'Данные еще не записаны.
                             |Выполнение действия ""Подписать"" возможно только после записи данных.
                             |Данные будут записаны.'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	Иначе 
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.ОК);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПодписатьПродолжение(Результат, Параметры) Экспорт

	Если Результат <> КодВозвратаДиалога.ОК Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не Записать() Тогда 
		Возврат;
	КонецЕсли;
	
	МассивДанныхДляЗанесенияВРегистр = Новый Массив;
	МассивАдресов = Новый Массив;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ПодписатьЗавершение",
		ЭтотОбъект);
		
	РаботаСЭПКлиент.СформироватьПодписьОбъекта(
		Объект.Ссылка,
		УникальныйИдентификатор, 
		МассивДанныхДляЗанесенияВРегистр,
		МассивАдресов,,, ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ПодписатьЗавершение(Результат, Параметры) Экспорт
	
	Если Не Результат.Флаг Тогда
		Возврат;
	КонецЕсли;
	
	МассивДанныхДляЗанесенияВРегистр = Результат.МассивДанныхДляЗанесенияВРегистр;
	МассивАдресов = Результат.МассивАдресов;
	
	ПодписатьЭПНаСервере(МассивДанныхДляЗанесенияВРегистр, МассивАдресов);
	Оповестить("Запись_ВизыСогласования", Объект.Документ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЭП(Команда)
	
	РаботаСЭПКлиент.ОткрытьПодпись(ДанныеЭП, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЭП(Команда)
	
	ВыполнятьПроверкуЭПНаСервере = ЭлектроннаяПодписьКлиентСервер.ОбщиеНастройки().ВыполнятьПроверкуЭПНаСервере;
	
	Если ВыполнятьПроверкуЭПНаСервере Тогда
		ДанныеЭП = ПроверитьЭПНаСервере();
	Иначе	
		Если НЕ ПодключитьРасширениеРаботыСКриптографией() Тогда
			РаботаСЭПКлиент.ПоказатьПредупреждениеОНеобходимостиРасширенияРаботыСКриптографией(
				, НСтр("ru = 'Проверить'"));
			Возврат;
		КонецЕсли;
		ДанныеЭП = ПолучитьДанныеЭП();
		МенеджерКриптографии = ЭлектроннаяПодписьКлиент.ПолучитьМенеджерКриптографии();
	    РаботаСЭПКлиент.ПроверитьОднуПодпись(ДанныеЭП, МенеджерКриптографии, УникальныйИдентификатор);
	КонецЕсли;
	
	ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Результат проверки подписи: %1'"),
		ДанныеЭП.Статус);
	ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьПодпись()
	
	Подпись = РаботаСЭП.ПолучитьЭлектроннуюПодпись(Объект.Ссылка);
	Если Подпись <> Неопределено Тогда
		ДанныеЭП = Новый Структура("Объект, ДатаПодписи, УстановившийПодпись");
		ЗаполнитьЗначенияСвойств(ДанныеЭП, Подпись);
	КонецЕсли;
	
КонецПроцедуры

