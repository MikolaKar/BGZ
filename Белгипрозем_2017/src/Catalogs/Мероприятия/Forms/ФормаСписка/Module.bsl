#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВОтдельномДокументе = Перечисления.ТипыПрограммыПротокола.ВОтдельномДокументе;
	ВТаблице = Перечисления.ТипыПрограммыПротокола.ВТаблице;
	ВМатериалах = Перечисления.ТипыПрограммыПротокола.ВМатериалах;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьБизнесПроцессыИЗадачи") Тогда 
		Элементы.Задачи.Видимость = Ложь;
	КонецЕсли;
		
	// Контроль
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьКонтрольОбъектов") Тогда 
		Элементы.СостояниеКонтроля.Видимость = Ложь;
	КонецЕсли;

	Список.Параметры.УстановитьЗначениеПараметра("Участник", Справочники.Пользователи.ПустаяСсылка());
	Список.Параметры.УстановитьЗначениеПараметра("ТекущаяДата", НачалоДня(ТекущаяДатаСеанса()));
	
	ПоказыватьМероприятия = Неопределено;
	УстановитьОтбор();
	
	Если ОбщегоНазначенияДокументооборот.ПриложениеЯвляетсяВебКлиентом() Тогда
		Элементы.СписокКонтекстноеМенюАвтообновление.Видимость = Ложь;
	Иначе
		Автообновление.ЗагрузитьНастройкиАвтообновленияСписка(ЭтаФорма, "Список");
		Элементы.СписокКонтекстноеМенюАвтообновление.Видимость = Истина;
	КонецЕсли;
	
	ВидПросмотра = Перечисления.ВидыПросмотраСпискаОбъектов.ПоПапкам;
	ПредыдущийВидПросмотра = ВидПросмотра;
	ПереключитьВидПросмотра();
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаписьКонтроля" Тогда
		Если ЗначениеЗаполнено(Параметр.Предмет)
			И ТипЗнч(Параметр.Предмет) = Тип("СправочникСсылка.Мероприятия") Тогда 
			ОповеститьОбИзменении(Параметр.Предмет);
		КонецЕсли;	
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УстановитьОтборСписка(Список, Настройки);
	
	ТекущаяПапка = Настройки["ТекущаяПапка"];
	ВидПросмотра = Настройки["ВидПросмотра"];
	ПредыдущийВидПросмотра = ВидПросмотра;
	
	ПереключитьВидПросмотра();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидПросмотраПриИзменении(Элемент)
	
	Если ВидПросмотра = ПредыдущийВидПросмотра Тогда 
		Возврат;
	КонецЕсли;
	
	ПереключитьВидПросмотра();
	
	ПредыдущийВидПросмотра = ВидПросмотра;
	
	Если ВидПросмотра = ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.ПоПапкам") Тогда
		ПодключитьОбработчикОжидания("УстановитьПараметрыСписка", 0.2, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьМероприятияПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидМероприятияПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизаторПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПапки

&НаКлиенте
Процедура ПапкиПриАктивизацииСтроки(Элемент)
	
	Если ВидПросмотра = ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.ПоПапкам")
		И Элементы.Папки.Видимость
		И ТекущаяПапка <> Элементы.Папки.ТекущаяСтрока Тогда
		
		ТекущаяПапка = Элементы.Папки.ТекущаяСтрока;
		
		ПодключитьОбработчикОжидания("УстановитьПараметрыСписка", 0.2, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПапкиПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	// Запрет перетаскивания в пустую папку
	Если Не ЗначениеЗаполнено(Строка) Тогда
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПапкиПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") 
		И ПараметрыПеретаскивания.Значение.Количество() > 0 
		И ТипЗнч(ПараметрыПеретаскивания.Значение[0]) = Тип("СправочникСсылка.Мероприятия") Тогда
		
		УправлениеМероприятиямиКлиент.ИзменитьПапкуМероприятий(ПараметрыПеретаскивания.Значение, Строка);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	ПротокольноеМероприятие = ТекущиеДанные.ПротокольноеМероприятие;
	Элементы.ФормаПодготовитьПротокол.Доступность = ПротокольноеМероприятие;
	Элементы.ФормаСогласоватьПротокол.Доступность = ПротокольноеМероприятие;
	Элементы.ФормаУтвердитьПротокол.Доступность = ПротокольноеМероприятие;
	Элементы.ФормаИсполнитьПротокол.Доступность = ПротокольноеМероприятие;
	ТекущееМероприятие = ТекущиеДанные.Ссылка;
	
	Если ВидПросмотра <> ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.ПоПапкам") Тогда
		ТекущаяПапка = ТекущиеДанные.Папка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Копирование Тогда 
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполнения = ПолучитьЗначенияЗаполненияПоВидуПросмотра(); 
	Если ЗначенияЗаполнения = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	Открытьформу("Справочник.Мероприятия.ФормаОбъекта", ПараметрыФормы, Элементы.Список, Новый УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьКатегории(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ВыбратьКатегорииПродолжение",
		ЭтотОбъект);
		
	РаботаСКатегориямиДанныхКлиент.ОткрытьФормуПодбораКатегорийДляСпискаОбъектов(
		Элементы.Список, Истина, ОписаниеОповещения);
		
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКатегорииПродолжение(Результат, Параметры) Экспорт 

	Если Результат <> Неопределено Тогда
		ОповеститьОбИзменении(Элементы.Список.ТекущаяСтрока);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Автообновление(Команда)
	
	АвтообновлениеКлиент.УстановитьПараметрыАвтообновленияСписка(ЭтаФорма, "Список");
	
КонецПроцедуры

&НаКлиенте
Процедура УтвердитьПрограмму(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ТипПрограммы = ВОтдельномДокументе И ЗначениеЗаполнено(ТекущиеДанные.МатериалПрограмма) Тогда 
		ПараметрыФормы = Новый Структура("Основание", ТекущиеДанные.МатериалПрограмма);
		ОткрытьФорму("БизнесПроцесс.Утверждение.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	Иначе	
		Основание = Новый Структура;
		Основание.Вставить("ОперацияМероприятия", "УтвердитьПрограмму");
		Основание.Вставить("Мероприятие", ТекущиеДанные.Ссылка);
		
		ПараметрыФормы = Новый Структура("Основание", Основание);
		ОткрытьФорму("БизнесПроцесс.Утверждение.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПригласитьУчастников(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Если ТекущиеДанные.ТипПрограммы = ВОтдельномДокументе И ЗначениеЗаполнено(ТекущиеДанные.МатериалПрограмма) Тогда 
		ПараметрыФормы = Новый Структура("Основание", ТекущиеДанные.МатериалПрограмма);
		ОткрытьФорму("БизнесПроцесс.Приглашение.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	Иначе
		ПараметрыФормы = Новый Структура("Основание", ТекущиеДанные.Ссылка);
		ОткрытьФорму("БизнесПроцесс.Приглашение.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьМатериалы(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Основание = Новый Структура;
	Основание.Вставить("ОперацияМероприятия", "ЗапроситьМатериалы");
	Основание.Вставить("Мероприятие", ТекущиеДанные.Ссылка);
		
	ПараметрыФормы = Новый Структура("Основание", Основание);
	ОткрытьФорму("БизнесПроцесс.Исполнение.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОзнакомитьСМатериалами(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Основание = Новый Структура;
	Основание.Вставить("ОперацияМероприятия", "ОзнакомитьСМатериалами");
	Основание.Вставить("Мероприятие", ТекущиеДанные.Ссылка);
		
	ПараметрыФормы = Новый Структура("Основание", Основание);
	ОткрытьФорму("БизнесПроцесс.Ознакомление.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиМероприятие(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Основание = Новый Структура;
	Основание.Вставить("ОперацияМероприятия", "ПровестиМероприятие");
	Основание.Вставить("Мероприятие", ТекущиеДанные.Ссылка);
		
	ПараметрыФормы = Новый Структура("Основание", Основание);
	ОткрытьФорму("БизнесПроцесс.Исполнение.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьПротокол(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Основание = Новый Структура;
	Основание.Вставить("ОперацияМероприятия", "ПодготовитьПротокол");
	Основание.Вставить("Мероприятие", ТекущиеДанные.Ссылка);
		
	ПараметрыФормы = Новый Структура("Основание", Основание);
	ОткрытьФорму("БизнесПроцесс.Исполнение.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СогласоватьПротокол(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ТипПротокола = ВОтдельномДокументе И ЗначениеЗаполнено(ТекущиеДанные.МатериалПротокол) Тогда 
		ПараметрыФормы = Новый Структура("Основание", ТекущиеДанные.МатериалПротокол);
		ОткрытьФорму("БизнесПроцесс.Согласование.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	Иначе	
		Основание = Новый Структура;
		Основание.Вставить("ОперацияМероприятия", "СогласоватьПротокол");
		Основание.Вставить("Мероприятие", ТекущиеДанные.Ссылка);
		
		ПараметрыФормы = Новый Структура("Основание", Основание);
		ОткрытьФорму("БизнесПроцесс.Согласование.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура УтвердитьПротокол(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ТипПротокола = ВОтдельномДокументе И ЗначениеЗаполнено(ТекущиеДанные.МатериалПротокол) Тогда 
		ПараметрыФормы = Новый Структура("Основание", ТекущиеДанные.МатериалПротокол);
		ОткрытьФорму("БизнесПроцесс.Утверждение.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	Иначе
		Основание = Новый Структура;
		Основание.Вставить("ОперацияМероприятия", "УтвердитьПротокол");
		Основание.Вставить("Мероприятие", ТекущиеДанные.Ссылка);
		
		ПараметрыФормы = Новый Структура("Основание", Основание);
		ОткрытьФорму("БизнесПроцесс.Утверждение.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ИсполнитьПротокол(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ТипПротокола = ВОтдельномДокументе И ЗначениеЗаполнено(ТекущиеДанные.МатериалПротокол) Тогда 
		ПараметрыФормы = Новый Структура("Основание", ТекущиеДанные.МатериалПротокол);
		ОткрытьФорму("БизнесПроцесс.Исполнение.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	Иначе
		Основание = Новый Структура;
		Основание.Вставить("ОперацияМероприятия", "ИсполнитьПротокол");
		Основание.Вставить("Мероприятие", ТекущиеДанные.Ссылка);
		
		ПараметрыФормы = Новый Структура("Основание", Основание);
		ОткрытьФорму("БизнесПроцесс.Исполнение.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПапку(Команда)
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Родитель", Элементы.Папки.ТекущаяСтрока);
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ОткрытьФорму("Справочник.ПапкиМероприятий.ФормаОбъекта", ПараметрыФормы, Элементы.Папки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтбор()
	
	ПараметрыОтбора = Новый Соответствие();
	Параметрыотбора.Вставить("ПоказыватьМероприятия", ПоказыватьМероприятия);
	Параметрыотбора.Вставить("Участник", Участник);
	Параметрыотбора.Вставить("ВидМероприятия", ВидМероприятия);
	Параметрыотбора.Вставить("Организатор", Организатор);
	Параметрыотбора.Вставить("Проект", Проект);
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписка(Список, ПараметрыОтбора)
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "СостояниеМероприятия");
	Если ЗначениеЗаполнено(ПараметрыОтбора["ПоказыватьМероприятия"]) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"СостояниеМероприятия", ПараметрыОтбора["ПоказыватьМероприятия"]);
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("Участник", ПараметрыОтбора["Участник"]);
	
	ВидМероприятия = ПараметрыОтбора["ВидМероприятия"];
	Если Не ЗначениеЗаполнено(ВидМероприятия) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
			"ВидМероприятия");
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"ВидМероприятия",
			ВидМероприятия);
	КонецЕсли;
	
	Организатор = ПараметрыОтбора["Организатор"];
	Если Не ЗначениеЗаполнено(Организатор) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
			"Организатор");
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Организатор",
			Организатор);
	КонецЕсли;
	
	Проект = ПараметрыОтбора["Проект"];
	Если Не ЗначениеЗаполнено(Проект) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
			"Проект");
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Проект",
			Проект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПараметрыСписка()
	
	Если ВидПросмотра = ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.ПоПапкам") Тогда
		
		Список.Параметры.УстановитьЗначениеПараметра("Папка", ТекущаяПапка);
		Элементы.Список.ТекущаяСтрока = ТекущееМероприятие;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПереключитьВидПросмотра()
	
	Параметр = Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Папка"));
	Параметр.Использование = Ложь;
	
	Если ВидПросмотра = Перечисления.ВидыПросмотраСпискаОбъектов.Списком Тогда
		
		Элементы.Папки.Видимость = Ложь;
		
	ИначеЕсли ВидПросмотра = Перечисления.ВидыПросмотраСпискаОбъектов.ПоПапкам Тогда
		
		Элементы.Папки.Видимость = Истина;
		
		Список.Параметры.УстановитьЗначениеПараметра("Папка", Неопределено);
		Элементы.Папки.ТекущаяСтрока = ТекущаяПапка;
		ТекущаяПапка = Неопределено;
		
	Иначе
		
		ВидПросмотра = Перечисления.ВидыПросмотраСпискаОбъектов.ПоПапкам;
		ПереключитьВидПросмотра();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьЗначенияЗаполненияПоВидуПросмотра()
	
	ЗначенияЗаполнения = Новый Структура;
	
	Если ВидПросмотра = ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.ПоПапкам") Тогда
		
		Если Не ЗначениеЗаполнено(ТекущаяПапка) Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		ЗначенияЗаполнения.Вставить("Папка", ТекущаяПапка);
		
	КонецЕсли;
	
	Возврат ЗначенияЗаполнения;
	
КонецФункции

#КонецОбласти