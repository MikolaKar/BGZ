#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Реквизиты = 
		"НомерПункта,
		|Исполнитель, 
		|ОсновнойОбъектАдресации, 
		|ДополнительныйОбъектАдресации, 
		|Содержание,
		|ВремяПлан,
		|ВремяФакт,
		|Начало,
		|Окончание,
		|ТребуетПринятияРешения,
		|ВидМероприятия";
		
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, Реквизиты);
	
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("ВидМероприятия", ВидМероприятия));
	
	Если Не ЗначениеЗаполнено(ВремяПлан) Тогда 
		ВремяПланСтр = "  :  ";
	Иначе	
		ВремяПланСтр = УчетВремениКлиентСервер.ЧислоВСтроку(ВремяПлан);
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ВремяФакт) Тогда 
		ВремяФактСтр = "  :  ";
	Иначе	
		ВремяФактСтр = УчетВремениКлиентСервер.ЧислоВСтроку(ВремяФакт);
	КонецЕсли;	
	
	Если Исполнитель = Неопределено Тогда 
		Исполнитель = Справочники.Пользователи.ПустаяСсылка();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Начало) Тогда 
		Элементы.Начало.ТолькоПросмотр = Истина;
	КонецЕсли;	
	
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Пункт программы №%1'"),
		НомерПункта);
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда 
		Возврат;
	КонецЕсли;
	
	Если ВремяПлан = 0 Тогда 
		Начало = '00010101';
		Окончание = '00010101';
	КонецЕсли;	
	
	Результат = Новый Структура( 
		"НомерПункта,
		|Исполнитель, 
		|ОсновнойОбъектАдресации, 
		|ДополнительныйОбъектАдресации, 
		|Содержание,
		|ТребуетПринятияРешения,
		|Начало,
		|Окончание,
		|ВремяПлан,
		|ВремяФакт");
		
	ЗаполнитьЗначенияСвойств(Результат, ЭтаФорма);
	
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбораУчастника = СформироватьДанныеВыбораУчастника();
	
	Если ДанныеВыбораУчастника.Количество() > 10 Тогда 
		ОписаниеОповещения = Новый ОписаниеОповещения("ИсполнительНачалоВыбораЗавершение", ЭтотОбъект);
		ДанныеВыбораУчастника.ПоказатьВыборЭлемента(ОписаниеОповещения, "Укажите ответственного", Исполнитель);
	Иначе
		ДанныеВыбора = ДанныеВыбораУчастника;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Исполнитель = Результат.Значение.Исполнитель;
	ОсновнойОбъектАдресации = Результат.Значение.ОсновнойОбъектАдресации;
	ДополнительныйОбъектАдресации = Результат.Значение.ДополнительныйОбъектАдресации;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда 
		СтандартнаяОбработка = Ложь;
		
		Исполнитель = ВыбранноеЗначение.Исполнитель;
		ОсновнойОбъектАдресации = ВыбранноеЗначение.ОсновнойОбъектАдресации;
		ДополнительныйОбъектАдресации = ВыбранноеЗначение.ДополнительныйОбъектАдресации;
	Иначе  
		ОсновнойОбъектАдресации = Неопределено;
		ДополнительныйОбъектАдресации = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = СформироватьДанныеВыбораУчастника(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		ДанныеВыбораУчастника = СформироватьДанныеВыбораУчастника(Текст);
		
		Если ДанныеВыбораУчастника.Количество() = 1 Тогда 
			ВыбранноеЗначение = ДанныеВыбораУчастника[0].Значение;
			
			Исполнитель = ВыбранноеЗначение.Исполнитель;
			ОсновнойОбъектАдресации = ВыбранноеЗначение.ОсновнойОбъектАдресации;
			ДополнительныйОбъектАдресации = ВыбранноеЗначение.ДополнительныйОбъектАдресации;
		Иначе	
			СтандартнаяОбработка = Ложь;
			ДанныеВыбора = ДанныеВыбораУчастника;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяПланСтрПриИзменении(Элемент)
	
	Если Не УчетВремениКлиентСервер.ПроверитьФормат(ВремяПланСтр) Тогда
		ВремяПланСтр = "  :  ";
	КонецЕсли;
	ВремяПлан = УчетВремениКлиентСервер.ЧислоИзСтроки(ВремяПланСтр);
	
	Если ЗначениеЗаполнено(Начало) Тогда 
		Окончание = Начало + ВремяПлан;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяПланСтрНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = Элемент.СписокВыбора;
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяФактСтрПриИзменении(Элемент)
	
	Если Не УчетВремениКлиентСервер.ПроверитьФормат(ВремяФактСтр) Тогда
		ВремяФактСтр = "  :  ";
	КонецЕсли;
	ВремяФакт = УчетВремениКлиентСервер.ЧислоИзСтроки(ВремяФактСтр);
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяФактСтрНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = Элемент.СписокВыбора;
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоПриИзменении(Элемент)
	
	Окончание = Начало + ВремяПлан;
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеПриИзменении(Элемент)
	
	Если Окончание < Начало Тогда 
		Окончание = Начало;
	КонецЕсли;	
	
	ВремяПлан = (Окончание - Начало);
	ВремяПланСтр = УчетВремениКлиентСервер.ЧислоВСтроку(ВремяПлан);
	
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция СформироватьДанныеВыбораУчастника(Текст = "")
	
	Участники = ЭтаФорма.ВладелецФормы.Участники;
	
	ДанныеВыбора = Новый СписокЗначений;
	Для Каждого Строка Из Участники Цикл
		Если Не ЗначениеЗаполнено(Строка.Исполнитель) Тогда 
			Продолжить;
		КонецЕсли;	
		
		Если Текст <> "" И Нрег(Лев(Строка.Исполнитель, СтрДлина(Текст))) <> НРег(Текст) Тогда 
			Продолжить;
		КонецЕсли;	
		
		ЗначениеВыбора = Новый Структура;
		ЗначениеВыбора.Вставить("Исполнитель", Строка.Исполнитель);
		ЗначениеВыбора.Вставить("ОсновнойОбъектАдресации", Строка.ОсновнойОбъектАдресации);
		ЗначениеВыбора.Вставить("ДополнительныйОбъектАдресации", Строка.ДополнительныйОбъектАдресации);
		
		Если ТипЗнч(Строка.Исполнитель) = Тип("СправочникСсылка.Пользователи") Тогда 
			ПредставлениеВыбора = Строка(Строка.Исполнитель);
		ИначеЕсли ЗначениеЗаполнено(Строка.ОсновнойОбъектАдресации) И ЗначениеЗаполнено(Строка.ДополнительныйОбъектАдресации) Тогда 
			ПредставлениеВыбора = Строка(Строка.Исполнитель) + "(" + Строка.ОсновнойОбъектАдресации + ", " + Строка.ДополнительныйОбъектАдресации + ")";
		ИначеЕсли ЗначениеЗаполнено(Строка.ОсновнойОбъектАдресации) Тогда 
			ПредставлениеВыбора = Строка(Строка.Исполнитель) + "(" + Строка.ОсновнойОбъектАдресации + ")";
		Иначе
			ПредставлениеВыбора = Строка(Строка.Исполнитель);
		КонецЕсли;	
		
		ДанныеВыбора.Добавить(ЗначениеВыбора, ПредставлениеВыбора);
	КонецЦикла;	
	
	Возврат ДанныеВыбора;
	
КонецФункции	

#КонецОбласти