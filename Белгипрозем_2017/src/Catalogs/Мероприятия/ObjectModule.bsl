#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоГруппа Тогда 
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда 
		Организатор = ПользователиКлиентСервер.ТекущийПользователь();
		Важность = Перечисления.ВариантыВажностиЗадачи.Обычная;
		ТипПрограммы = Перечисления.ТипыПрограммыПротокола.ВТаблице;
		ТипПротокола = Перечисления.ТипыПрограммыПротокола.ВТаблице;
		
		Если Константы.ИспользоватьГрифыДоступа.Получить() Тогда
			ГрифДоступа = Константы.ГрифДоступаПоУмолчанию.Получить();
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Организация) Тогда 
			Организация = РаботаСОрганизациями.ПолучитьОрганизациюПоУмолчанию();
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Проект) Тогда 
			Проект = РаботаСПроектами.ПолучитьПроектПоУмолчанию();
		КонецЕсли;

	КонецЕсли;
	
	// Ввод на основании мероприятия
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Мероприятия") Тогда 
		ПредыдущееМероприятие = ДанныеЗаполнения.Ссылка;
		Наименование = ДанныеЗаполнения.Наименование;
		ВидМероприятия = ДанныеЗаполнения.ВидМероприятия;
		Описание = ДанныеЗаполнения.Описание;
		Важность = ДанныеЗаполнения.Важность;
		МестоПроведения = ДанныеЗаполнения.МестоПроведения;
		Предмет = ДанныеЗаполнения.Предмет;
		Проект = ДанныеЗаполнения.Проект;
		
		// Переносятся только пункты, по которым не приняты решения
		Для Каждого Строка Из ДанныеЗаполнения.Программа Цикл
			НайденныеСтроки = ДанныеЗаполнения.Протокол.НайтиСтроки(Новый Структура("НомерПунктаПрограммы", Строка.НомерПункта));
			Если НайденныеСтроки.Количество() > 0 Тогда 
				Продолжить;
			КонецЕсли;	
			
			НоваяСтрока = Программа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		КонецЦикла;	
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Проекты") Тогда 	
		Если ДанныеЗаполнения.ЭтоГруппа Тогда
			СообщениеПользователю = НСтр("ru = 'Выберите проект, а не группу.'");
			ВызватьИсключение СообщениеПользователю;
		КонецЕсли;

		Проект = ДанныеЗаполнения.Ссылка;
		Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Мероприятие по проекту %1'"),
			Строка(Проект));
			
	ИначеЕсли ВстроеннаяПочтаКлиентСервер.ЭтоПисьмо(ДанныеЗаполнения)
		Или ДелопроизводствоКлиентСервер.ЭтоДокумент(ДанныеЗаполнения) Тогда 
		
		Предмет = ДанныеЗаполнения;
		Проект = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ДанныеЗаполнения, "Проект");
		
		Если ВстроеннаяПочтаКлиентСервер.ЭтоПисьмо(ДанныеЗаполнения) Тогда
			Наименование = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ДанныеЗаполнения, "Тема");
			ОснованиеЗаполненияОбъект = ДанныеЗаполнения.ПолучитьОбъект();		
		    Описание = ОснованиеЗаполненияОбъект.ПолучитьТекстовоеПредставлениеСодержанияПисьма();	
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Массив") 
		И ДанныеЗаполнения.Количество() > 0
		И ТипЗнч(ДанныеЗаполнения[0]) = Тип("СправочникСсылка.Файлы") Тогда 
		
		Если ДанныеЗаполнения.Количество() = 1 И Не ЗначениеЗаполнено(Наименование) Тогда 
			Наименование = ДанныеЗаполнения[0].ПолноеНаименование;						
		КонецЕсли;	

		Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") И Не ЗначениеЗаполнено(Проект) Тогда
			Проекты = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(ДанныеЗаполнения, "Проект");
			Проект = Проекты.Получить(ДанныеЗаполнения[0]);
			Для Каждого Строка Из Проекты Цикл
				Если Строка.Значение <> Проект Тогда 
					Проект = Неопределено;
					Прервать;
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;	
	
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.КонтактныеЛица") Тогда
		
		Предмет = ДанныеЗаполнения.Владелец;
		
	Иначе
		Если ДанныеЗаполнения <> Неопределено И ТипЗнч(ДанныеЗаполнения) <> Тип("Структура") Тогда
			Предмет = ДанныеЗаполнения;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(ПредыдущееМероприятие) И ПредыдущееМероприятие = Ссылка Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Указана ссылка на самого себя!'"),
			ЭтотОбъект,
			"ПредыдущееМероприятие",, 
			Отказ);
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ДатаНачала) И Не ЗначениеЗаполнено(ДатаОкончания) Тогда 
		ПроверяемыеРеквизиты.Добавить("ДатаОкончания");
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания) Тогда 
		ПроверяемыеРеквизиты.Добавить("ДатаНачала");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания) Тогда 
		Если ДатаНачала = ДатаОкончания Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Указанная дата окончания совпадает с датой начала!'"),
				ЭтотОбъект,
				"ДатаОкончания",, 
				Отказ);
		ИначеЕсли ДатаОкончания < ДатаНачала Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Указанная дата окончания меньше, чем дата начала!'"),
				ЭтотОбъект,
				"ДатаОкончания",, 
				Отказ);
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка
		И ЗначениеЗаполнено(ОбменДанными.Отправитель)
		И ОбменДаннымиПовтИсп.ЭтоУзелРаспределеннойИнформационнойБазы(ОбменДанными.Отправитель) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда 
		Возврат;
	КонецЕсли;
	
	// Пометка на удаление приложенных файлов
	ПредыдущаяПометкаУдаления = Ложь;
	Если Не Ссылка.Пустая() Тогда
		ПредыдущаяПометкаУдаления = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Ссылка, "ПометкаУдаления");
	КонецЕсли;
	ДополнительныеСвойства.Вставить("ПредыдущаяПометкаУдаления", ПредыдущаяПометкаУдаления);
	
	Если ПометкаУдаления <> ПредыдущаяПометкаУдаления Тогда 
		
		Если ПометкаУдаления Тогда
			ДополнительныеСвойства.Вставить("НужноПометитьНаУдалениеБизнесСобытия", Истина);
		КонецЕсли;
		
		Если ДокументооборотПраваДоступа.ПолучитьПраваПоОбъекту(Ссылка).Удаление Тогда 
			РаботаСФайламиВызовСервера.ПометитьНаУдалениеПриложенныеФайлы(Ссылка, ПометкаУдаления);
		Иначе
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'У вас нет права ""Пометка на удаление"" мероприятия ""%1"".'"),
				Строка(Ссылка));
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
	КонецЕсли;	
	
	// Заполнение периода строкой
	Если ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания) Тогда 
		Если НачалоДня(ДатаНачала) = НачалоДня(ДатаОкончания) Тогда 
			ПериодСтрокой = Формат(ДатаНачала, "ДФ='dd MMM yyyy'") + " " + Формат(ДатаНачала, "ДФ=ЧЧ:мм") + " - " + Формат(ДатаОкончания, "ДФ=ЧЧ:мм");
		Иначе	
			ПериодСтрокой = Формат(ДатаНачала, "ДФ='dd.MM.yy ЧЧ:мм'") + " - " + Формат(ДатаОкончания, "ДФ='dd.MM.yy ЧЧ:мм'");
		КонецЕсли;
	Иначе	
		ПериодСтрокой = "";
	КонецЕсли;	
	
	// Обработка рабочей группы
	СсылкаОбъекта = Ссылка;
	// Установка ссылки нового
	Если Не ЗначениеЗаполнено(СсылкаОбъекта) Тогда
		СсылкаОбъекта = ПолучитьСсылкуНового();
		Если Не ЗначениеЗаполнено(СсылкаОбъекта) Тогда
			СсылкаНового = Справочники.Мероприятия.ПолучитьСсылку();
			УстановитьСсылкуНового(СсылкаНового);
			СсылкаОбъекта = СсылкаНового;
		КонецЕсли;
	КонецЕсли;
	
	// Подготовка рабочей группы
	РабочаяГруппа = РегистрыСведений.РабочиеГруппы.ПолучитьУчастниковПоОбъекту(СсылкаОбъекта);
	
	// Добавление автоматических участников из самого объекта
	Если РаботаСРабочимиГруппами.ПоОбъектуВедетсяАвтоматическоеЗаполнениеРабочейГруппы(ЭтотОбъект) Тогда
		
		ДобавитьУчастниковРабочейГруппыВНабор(РабочаяГруппа);
		
	КонецЕсли;
	
	// Добавление участников, переданных "снаружи", например из формы объекта
	Если ДополнительныеСвойства.Свойство("РабочаяГруппаДобавить") Тогда
		
		Для каждого Эл Из ДополнительныеСвойства.РабочаяГруппаДобавить Цикл
			
			// Добавление участника в итоговую рабочую группу
			Строка = РабочаяГруппа.Добавить();
			Строка.Участник = Эл.Участник;
			Строка.ОсновнойОбъектАдресации = Эл.ОсновнойОбъектАдресации;
			Строка.ДополнительныйОбъектАдресации = Эл.ДополнительныйОбъектАдресации;
			
		КонецЦикла;	
			
	КонецЕсли;		
	
	// Удаление участников, переданных "снаружи", например из формы объекта
	Если ДополнительныеСвойства.Свойство("РабочаяГруппаУдалить") Тогда
		
		Для каждого Эл Из ДополнительныеСвойства.РабочаяГруппаУдалить Цикл
			
			// Поиск удаляемого участника в итоговой рабочей группе
			Для каждого Эл2 Из РабочаяГруппа Цикл
				
				Если Эл2.Участник = Эл.Участник 
					И Эл2.ОсновнойОбъектАдресации = Эл.ОсновнойОбъектАдресации
					И Эл2.ДополнительныйОбъектАдресации = Эл.ДополнительныйОбъектАдресации Тогда
					
					// Удаление участника из итоговой рабочей группы
					РабочаяГруппа.Удалить(Эл2);
					Прервать;
					
				КонецЕсли;
				
			КонецЦикла;	
				
		КонецЦикла;	
			
	КонецЕсли;		
	
	// Обработка обязательного заполнения рабочих групп 
	Если РабочаяГруппа.Количество() = 0 Тогда
	
		Если РаботаСРабочимиГруппами.ОбязательноеЗаполнениеРабочихГруппДокументов(ВидМероприятия) Тогда
			Строка = РабочаяГруппа.Добавить();
			Строка.Участник = ПользователиКлиентСервер.ТекущийПользователь();
		КонецЕсли;
		
	КонецЕсли;		
	
	// Запись итоговой рабочей группы
	РаботаСРабочимиГруппами.ПерезаписатьРабочуюГруппуОбъекта(
		СсылкаОбъекта,
		РабочаяГруппа,
		Ложь); //ОбновитьПраваДоступа
	
	// Установка необходимости обновления прав доступа
	ДополнительныеСвойства.Вставить("ДополнительныеПравообразующиеЗначенияИзменены");
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка
		И ЗначениеЗаполнено(ОбменДанными.Отправитель)
		И ОбменДаннымиПовтИсп.ЭтоУзелРаспределеннойИнформационнойБазы(ОбменДанными.Отправитель) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда 
		Возврат;
	КонецЕсли;
	
	// Возможно, выполнена явная регистрация событий при загрузке объекта.
	Если Не ДополнительныеСвойства.Свойство("НеРегистрироватьБизнесСобытия") Тогда
		
		Если ДополнительныеСвойства.Свойство("ЭтоНовый") И ДополнительныеСвойства.ЭтоНовый Тогда
			БизнесСобытияВызовСервера.ЗарегистрироватьСобытие(Ссылка, Справочники.ВидыБизнесСобытий.СозданиеМероприятия);	
		Иначе
			БизнесСобытияВызовСервера.ЗарегистрироватьСобытие(Ссылка, Справочники.ВидыБизнесСобытий.ИзменениеМероприятия);
		КонецЕсли;	
		
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("НужноПометитьНаУдалениеБизнесСобытия") Тогда
		БизнесСобытияВызовСервера.ПометитьНаУдалениеСобытияПоИсточнику(Ссылка);
	КонецЕсли;	
		
	ПредыдущаяПометкаУдаления = Ложь;
	Если ДополнительныеСвойства.Свойство("ПредыдущаяПометкаУдаления") Тогда
		ПредыдущаяПометкаУдаления = ДополнительныеСвойства.ПредыдущаяПометкаУдаления;
	КонецЕсли;
	
	Если ПометкаУдаления <> ПредыдущаяПометкаУдаления Тогда
		ПротоколированиеРаботыПользователей.ЗаписатьПометкуУдаления(Ссылка, ПометкаУдаления);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Организатор = ПользователиКлиентСервер.ТекущийПользователь();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьУчастниковРабочейГруппыВНабор(ТаблицаНабора)
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		
		ИсходныеРеквизиты = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Ссылка,
			"ВидМероприятия, Председатель, Секретарь, Организатор");
			
		Если ИсходныеРеквизиты.ВидМероприятия = ВидМероприятия Тогда
			ДобавитьТолькоНовыхУчастниковРабочейГруппыВНабор(ТаблицаНабора, ИсходныеРеквизиты);
		Иначе
			ДобавитьВсехУчастниковРабочейГруппыВНабор(ТаблицаНабора);
		КонецЕсли;	
		
	Иначе	
		
		ДобавитьВсехУчастниковРабочейГруппыВНабор(ТаблицаНабора);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьТолькоНовыхУчастниковРабочейГруппыВНабор(ТаблицаНабора, ИсходныеРеквизиты)
	
	// Добавление реквизита Председатель
	Если ИсходныеРеквизиты.Председатель <> Председатель
	  И (ТипЗнч(Председатель) = Тип("СправочникСсылка.Пользователи")
	 Или ТипЗнч(Председатель) = Тип("СправочникСсылка.РолиИсполнителей")) Тогда 
		РаботаСРабочимиГруппами.ДобавитьУчастникаВТаблицуНабора(ТаблицаНабора, Председатель);		
	КонецЕсли;				
	
	// Добавление реквизита Секретарь
	Если ИсходныеРеквизиты.Секретарь <> Секретарь
	  И (ТипЗнч(Секретарь) = Тип("СправочникСсылка.Пользователи")
	 Или ТипЗнч(Секретарь) = Тип("СправочникСсылка.РолиИсполнителей")) Тогда 
		РаботаСРабочимиГруппами.ДобавитьУчастникаВТаблицуНабора(ТаблицаНабора, Секретарь);		
	КонецЕсли;
	
	// Добавление реквизита Организатор
	Если ИсходныеРеквизиты.Организатор <> Организатор Тогда
		РаботаСРабочимиГруппами.ДобавитьУчастникаВТаблицуНабора(ТаблицаНабора, Организатор);		
	КонецЕсли;
		
	// Обработка табличной части Участники
	Если ДополнительныеСвойства.Свойство("СписокУчастников") Тогда
		ИсходныеУчастники = УправлениеМероприятиями.ПолучитьУчастниковМероприятия(Ссылка, Истина);
		ТекущиеУчастники = ДополнительныеСвойства.СписокУчастников;
		Для каждого Эл Из ТекущиеУчастники Цикл
			
			// Поиск в исходной табличной части 
			Найден = Ложь;
			Для каждого Эл2 Из ИсходныеУчастники Цикл
				Если Эл.Исполнитель = Эл2.Исполнитель 
				   И Эл.ОсновнойОбъектАдресации = Эл2.ОсновнойОбъектАдресации 
				   И Эл.ДополнительныйОбъектАдресации = Эл2.ДополнительныйОбъектАдресации Тогда
					Найден = Истина;
					Прервать;
				КонецЕсли;	
			КонецЦикла;	
			
			// Добавление нового участника рабочей группы
			Если Не Найден 
				И (ТипЗнч(Эл.Исполнитель) = Тип("СправочникСсылка.Пользователи")
			   ИЛИ ТипЗнч(Эл.Исполнитель) = Тип("СправочникСсылка.РолиИсполнителей")) Тогда
				РаботаСРабочимиГруппами.ДобавитьУчастникаВТаблицуНабора(
					ТаблицаНабора, 
					Эл.Исполнитель,
					Эл.ОсновнойОбъектАдресации,
					Эл.ДополнительныйОбъектАдресации);
			КонецЕсли;	
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьВсехУчастниковРабочейГруппыВНабор(ТаблицаНабора)
	
	Если ТипЗнч(Председатель) = Тип("СправочникСсылка.Пользователи")
	 Или ТипЗнч(Председатель) = Тип("СправочникСсылка.РолиИсполнителей") Тогда 
		РаботаСРабочимиГруппами.ДобавитьУчастникаВТаблицуНабора(ТаблицаНабора, Председатель);
	КонецЕсли;	
	
	Если ТипЗнч(Секретарь) = Тип("СправочникСсылка.Пользователи")
	 Или ТипЗнч(Секретарь) = Тип("СправочникСсылка.РолиИсполнителей") Тогда 
		РаботаСРабочимиГруппами.ДобавитьУчастникаВТаблицуНабора(ТаблицаНабора, Секретарь);
	КонецЕсли;	
	
	РаботаСРабочимиГруппами.ДобавитьУчастникаВТаблицуНабора(ТаблицаНабора, Организатор);
	
	// Обработка табличной части Участники
	Если ДополнительныеСвойства.Свойство("СписокУчастников") Тогда
		ТекущиеУчастники = ДополнительныеСвойства.СписокУчастников;
		Для каждого Эл Из ТекущиеУчастники Цикл
			Если ТипЗнч(Эл.Исполнитель) = Тип("СправочникСсылка.Пользователи") 
			 Или ТипЗнч(Эл.Исполнитель) = Тип("СправочникСсылка.РолиИсполнителей") Тогда
				РаботаСРабочимиГруппами.ДобавитьУчастникаВТаблицуНабора(
					ТаблицаНабора, 
					Эл.Исполнитель,
					Эл.ОсновнойОбъектАдресации,
					Эл.ДополнительныйОбъектАдресации);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Добавление контролеров
	Контроль.ДобавитьКонтролеровВТаблицу(ТаблицаНабора, Ссылка);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли