&НаКлиенте
Перем Док;

&НаКлиенте
Перем WordApp;

&НаКлиенте
Перем Селекция, Поиск;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    // Ввод нового
    Если Объект.Ссылка.Пустая() Тогда 
        Если Параметры.Свойство("Основание") Тогда
            Объект.Владелец = Параметры.Основание;
        КонецЕсли; 
        
        // Значения по умолчанию
        Объект.Состояние = Перечисления.М_СостоянияАктовПроверки.НаПроверке;
        Объект.ДатаСправкиПроверки = ТекущаяДата();
        Объект.ВидПроверкиКачества = Перечисления.М_ВидыПроверкиКачества.Камеральная;
		//Объект.НомерСправкиПроверки = СформироватьНомерСправкиПроверкиНаСервере();
		
        
        // Реквизиты из дела
		ДелоУслуги = Объект.Владелец;
		Объект.Договор = СвязиДокументов.ПолучитьСвязанныйДокумент(ДелоУслуги, Справочники.ТипыСвязей.ОтноситсяКДоговору);
		Если ЗначениеЗаполнено(Объект.Договор) Тогда
			Объект.Корреспондент = Объект.Договор.Корреспондент;
			
			// Количество справок по договору для нумерации
			КоличествоСправок = мРазное.ПолучитьКоличествоСправокПроверкиПоДоговору(Объект.Договор);
			ПорядковыйНомер = КоличествоСправок + 1;
			
			КоличествоСправокПоДелу = мРазное.ПолучитьКоличествоСправокПроверкиПоДелу(ДелоУслуги, Объект.ВидПроверкиКачества);
			
			Объект.НомерСправкиПроверки = ""+ПорядковыйНомер;
			Если КоличествоСправокПоДелу > 0 Тогда
				Объект.Повторная = Истина;
				Объект.НомерСправкиПроверки = ""+ПорядковыйНомер + "(п)";
			КонецЕсли;
			
		КонецЕсли; 
    	Объект.Наименование = СокрЛП(Объект.НомерСправкиПроверки) + " от " + Формат(Объект.ДатаСправкиПроверки,"ДЛФ=D");
		
		Объект.Проверил = ДелоУслуги.мПроверил;
		Объект.Заказчик = ДелоУслуги.мЗаказчик;
		Объект.ОбъектРабот = ДелоУслуги.мОбъектРабот;
		Объект.ВидРабот = ДелоУслуги.мВидРабот;
		Объект.Содержание = "";
        
     КонецЕсли; 
   
    Если Объект.Состояние = Перечисления.М_СостоянияАктовПроверки.Проверен Тогда
        // редактировать нельзя
        //ЭтаФорма.ТолькоПросмотр = Истина;
    КонецЕсли; 
    
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
КонецПроцедуры

#Область Шапка

&НаКлиенте
Процедура ДатаАктаПроверкиПриИзменении(Элемент)
    СформироватьНаименование();
КонецПроцедуры

//&НаКлиенте
//Процедура СформироватьНомерСправкиПроверки()
//	//Объект.НомерСправкиПроверки = СформироватьНомерСправкиПроверкиНаСервере();
//    СформироватьНаименование();
//КонецПроцедуры
    
//&НаСервере
//Функция СформироватьНомерСправкиПроверкиНаСервере()
//    НомерСправкиПроверки = "";
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ мСправкиПроверки.Ссылка) КАК Количество
//		|ИЗ
//		|	Справочник.мСправкиПроверки КАК мСправкиПроверки
//		|ГДЕ
//		|	мСправкиПроверки.Владелец В
//		|			(ВЫБРАТЬ
//		|				СвязиДокументов.Документ
//		|			ИЗ
//		|				РегистрСведений.СвязиДокументов КАК СвязиДокументов
//		|			ГДЕ
//		|				СвязиДокументов.ТипСвязи = &ТипСвязи
//		|				И СвязиДокументов.СвязанныйДокумент = &СвязанныйДокумент)
//		|	И мСправкиПроверки.Ссылка <> &ТекСправка";
//		
//	Запрос.УстановитьПараметр("ТипСвязи", Справочники.ТипыСвязей.ОтноситсяКДоговору);
//	Запрос.УстановитьПараметр("СвязанныйДокумент", Объект.Договор);
//	Запрос.УстановитьПараметр("ТекСправка", Объект.Ссылка);
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	Выборка = РезультатЗапроса.Выбрать();
//	
//	КоличествоСправок = 0;
//	Пока Выборка.Следующий() Цикл
//		КоличествоСправок = Выборка.Количество;
//	КонецЦикла;
//	
//	НомерСправкиПроверки = КоличествоСправок + 1;
//	НомерСправкиПроверки = "" + НомерСправкиПроверки + ?(Объект.Повторная, "(п)", ""); 
//	
//    Возврат НомерСправкиПроверки;
//КонецФункции
    
&НаКлиенте
Процедура НомерСправкиПроверкиПриИзменении(Элемент)
    СформироватьНаименование();
КонецПроцедуры

&НаКлиенте
Процедура СформироватьНаименование()
    Объект.Наименование = СокрЛП(Объект.НомерСправкиПроверки) + " от " + Формат(Объект.ДатаСправкиПроверки,"ДЛФ=D");
КонецПроцедуры // СформироватьНаименование()

&НаКлиенте
Процедура ДелоПриИзменении(Элемент)
	//СформироватьНомерСправкиПроверки();
КонецПроцедуры

&НаКлиенте
Процедура ВидПроверкиКачестваПриИзменении(Элемент)
	//СформироватьНомерСправкиПроверки();
    СформироватьНаименование();
КонецПроцедуры

#КонецОбласти 

#Область Замечания

&НаКлиенте
Процедура ЗамечанияЗамечаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    СтандартнаяОбработка = Ложь;
    
	ПараметрыФормы = Новый Структура();
    ПараметрыФормы.Вставить("ОтборПоВидуРабот", ПолучитьВидРаботПоДоговорам(Объект.ВидРабот));
    ПараметрыФормы.Вставить("ОтборПоВидуПроверки", Объект.ВидПроверкиКачества);
    ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	ОткрытьФорму("Справочник.мКлассификаторЗамечаний.Форма.ФормаВыбораДляПроверки", ПараметрыФормы, Элемент);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВидРаботПоДоговорам(ВидРабот)
    Возврат ВидРабот.ВидРаботПоДоговорам;
КонецФункции // ()

&НаКлиенте
Процедура ЗамечанияПриАктивизацииСтроки(Элемент)
    ОбновитьЗамечаниеСтрокой();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗамечаниеСтрокой()
    ЗамечаниеСтрокой = "";
    ТекСтрока = Элементы.Замечания.ТекущиеДанные;
    Если ТекСтрока <> Неопределено Тогда
        ЗамечаниеСтрокой = ТекСтрока.Содержание;
    КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ЗамечанияЗамечаниеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
    Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
        СтандартнаяОбработка = Ложь;
        ТекДанные = Элементы.Замечания.ТекущиеДанные;
        ЗаполнитьЗначенияСвойств(ТекДанные, ВыбранноеЗначение); 
        
        ОбновитьЗамечаниеСтрокой();
    КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// Контроль дубля Справки проверки
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
        |   мСправкиПроверки.Ссылка
        |ИЗ
        |   Справочник.мСправкиПроверки КАК мСправкиПроверки
        |ГДЕ
        |   мСправкиПроверки.НомерСправкиПроверки = &НомерСправкиПроверки
        |   И НЕ мСправкиПроверки.ПометкаУдаления
        |   И мСправкиПроверки.Договор = &Договор
        |   И мСправкиПроверки.Код <> &Код";
	
	Запрос.УстановитьПараметр("НомерСправкиПроверки", ТекущийОбъект.НомерСправкиПроверки);
	Запрос.УстановитьПараметр("Договор", ТекущийОбъект.Договор);
	Запрос.УстановитьПараметр("Код", ТекущийОбъект.Код);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		Сообщение = Новый СообщениеПользователю();	
		Сообщение.Текст = "Справка проверки с таким номером уже есть!";
		Сообщение.Поле = "НомерСправкиПроверки";//"+Элемент.ТекущаяСтрока+"].Замечание";
		Сообщение.ПутьКДанным = "Объект";
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли; 
	
	ПараметрыЗаписи.Вставить("ЭтоНовыйОбъект", Не ЗначениеЗаполнено(ТекущийОбъект.Ссылка));
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ПротоколированиеРаботыПользователей.ЗаписатьСоздание(Объект.Ссылка, ПараметрыЗаписи.ЭтоНовыйОбъект);
	ПротоколированиеРаботыПользователей.ЗаписатьИзменение(Объект.Ссылка);
КонецПроцедуры
	
#КонецОбласти 

#Область Печать

&НаКлиенте
Процедура Печать(Команда)
	Если Модифицированность Тогда
		Ответ = Вопрос("Для печати Справки проверки она будет записана! Продолжить?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 
		Попытка
			Записать();
		Исключение
			Возврат;
		КонецПопытки;
		Если Модифицированность Тогда
			// не удалось записать
			Возврат;
		КонецЕсли; 
	КонецЕсли; 
	
	СформироватьИмяФайла();
	ИнициализироватьДокументWord();
	
	// Заполнение справки
	Город = мРазное.ПолучитьГородБазы();
	РегНомер = Объект.НомерСправкиПроверки;
	ДатаРег = Формат(Объект.ДатаСправкиПроверки,"ДЛФ=DD");
	мРазноеКлиент.Заменить(Поиск, "РегНомер", РегНомер);  
	мРазноеКлиент.Заменить(Поиск, "ДатаРег", ДатаРег); 
	мРазноеКлиент.Заменить(Поиск, "%Город", Город); 
	
	СтруктураНашихРеквизитов = мРаботаСДоговорами.ПолучитьНашиРеквизиты(Объект.Договор);
	мРазноеКлиент.Заменить(Поиск, "НашеНаименование", СтруктураНашихРеквизитов.НашеНаименование); 
	
	РеквСправки = ПолучитьРеквизитыСправки();	
	мРазноеКлиент.Заменить(Поиск, "%Договор%", РеквСправки.Договор); 
	мРазноеКлиент.Заменить(Поиск, "%НомерДела%", РеквСправки.НомерДела); 
	мРазноеКлиент.Заменить(Поиск, "%НомерДелаИсполнителя%", РеквСправки.НомерДелаИсполнителя); 
	мРазноеКлиент.Заменить(Поиск, "ЗаголовокДатаСдачи", РеквСправки.ЗаголовокДатаСдачи); 
	мРазноеКлиент.Заменить(Поиск, "%ДатаСдачиНаПроверку%", РеквСправки.ДатаСдачиНаПроверку); 
	мРазноеКлиент.Заменить(Поиск, "%ВидРаботы%", РеквСправки.ВидРаботы); 
	мРазноеКлиент.Заменить(Поиск, "%ВидПроверки%", РеквСправки.ВидПроверки); 
	
	Док.Bookmarks("Заказчик").Range.Text = РеквСправки.Заказчик; 
	Док.Bookmarks("ЗаказчикРабот").Range.Text = РеквСправки.ЗаказчикРабот; 
	Док.Bookmarks("НаименованиеОбъекта").Range.Text = РеквСправки.НаименованиеОбъекта; 
	Док.Bookmarks("Содержание").Range.Text = РеквСправки.Содержание; 
	
	Замечания = Объект.Замечания;
	Если Замечания.Количество() = 0 Тогда
		НачалоЗакладки = Док.Bookmarks("Замечания").Start;
		КонецЗакладки = Док.Bookmarks("Замечания").End;
		Селекция.Start = НачалоЗакладки;
		Селекция.End = КонецЗакладки;
		Селекция.Cut();  
	Иначе
		НачалоЗакладки = Док.Bookmarks("Замечание").Start;
		КонецЗакладки = Док.Bookmarks("Замечание").End;
		Селекция.Start = НачалоЗакладки;
		Селекция.End = КонецЗакладки;
		Селекция.Cut();   
		
		й = Замечания.Количество()-1;
		Пока й>=0 Цикл
			селекция.Start = НачалоЗакладки; // Начало вставки
			селекция.Collapse();
			селекция.Paste();
			
			НомерПП = й+1;
			мРазноеКлиент.Заменить(Поиск, "%НомерПП%", НомерПП); 
			
			НачНомер = 1;
			ДлинаЧастиСтр = 240;
			Для ц=1 По 4 Цикл
				ЧастьСтр = Сред(Замечания[й].Содержание, НачНомер, ДлинаЧастиСтр); 
				мРазноеКлиент.Заменить(Поиск, "%Зам"+ц+"%", ЧастьСтр); 
				НачНомер = НачНомер + ДлинаЧастиСтр;
			КонецЦикла; 
			й=й-1;
		КонецЦикла; 	
		//Док.Fields.Update();
	КонецЕсли; 	
	
	мРазноеКлиент.Заменить(Поиск, "ПроверилДолжность", РеквСправки.ПроверилДолжность); 
	мРазноеКлиент.Заменить(Поиск, "ПроверилФИО", РеквСправки.ПроверилФИО); 

	// Вывод на печать или в файл
	ВывестиДокумент();
КонецПроцедуры

&НаСервере
Функция Объект()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции

&НаКлиенте
Процедура ИнициализироватьДокументWord() 
	Макет = ПолучитьМакетНаСервере();
	ВременныйПуть = КаталогВременныхФайлов();
	ПутьКФайлуНаДиске = ВременныйПуть + ИмяФайла;
	
	Макет.Записать(ПутьКФайлуНаДиске);
	
	//ПутьКШаблону = ПолучитьПутьКШаблону(ШаблонДоговора); 
	//ФайлШаблона = Новый ДвоичныеДанные(ПутьКШаблону);
	//ФайлШаблона.Записать(ПутьКФайлуНаДиске);
	
	WordApp = Новый COMОбъект("Word.Application");
	Док = WordApp.Documents.ADD(ПутьКФайлуНаДиске);
	
	Селекция = WordApp.Selection;
	
	Поиск = Док.Content.Find;
	Поиск.ClearFormatting();
	Поиск.Replacement.ClearFormatting();
КонецПроцедуры 

&НаКлиенте
Процедура ВывестиДокумент() 
	//Если НЕ СоздатьДокумент Тогда
		//WordApp.Visible = Истина; 
		
		Док.SaveAs(ПутьКФайлуНаДиске);//(ПутьКФайлуНаДиске)                        
		Док.Saved = Истина;
		Док.Close(); 
		WordApp.Quit();	
		WordApp = Неопределено;
		
		ЗапуститьПриложение(ПутьКФайлуНаДиске,, , ); 
		
	//Иначе
	//	WordApp.Visible = Ложь; 
	//	
	//	Док.SaveAs(ПутьКФайлуНаДиске);//(ПутьКФайлуНаДиске)                        
	//	Док.Saved = Истина;
	//	Док.Close(); 
	//	
	//	РаботаСФайламиКлиент.СоздатьДокументНаОсновеФайла(ПутьКФайлуНаДиске, Договор, ЭтаФорма, Истина, , , , ,);
	//	
	//	WordApp.Quit();	
	//	WordApp = Неопределено;
	//	
	//	УдалитьФайлы(ПутьКФайлуНаДиске);	
	//КонецЕсли; 
КонецПроцедуры 

&НаКлиенте
Функция СформироватьИмяФайла() 
	ИмяФайла = СтрЗаменить(Объект.НомерСправкиПроверки, "/", "-");
	ИмяФайла = СтрЗаменить(ИмяФайла, "\", "-");
	ИмяФайла = "Справка "+СокрЛП(ИмяФайла)+".docx";
КонецФункции 

&НаСервере
Функция ПолучитьМакетНаСервере() 
	Возврат Объект().ПолучитьМакет("СправкаПроверки");
КонецФункции

//&НаКлиенте
//Процедура Заменить(Док, ИмяЗакладки, Значение)
//	Док.Content.Find.Execute(ИмяЗакладки,  Ложь, Истина, Ложь, , , Истина, , Ложь, Значение, 2);
//КонецПроцедуры

&НаСервере
Функция ПолучитьРеквизитыСправки() 
	Рекв = Новый Структура;
	Рекв.Вставить("Договор", ""+Объект.Договор.РегистрационныйНомер+" от "+Формат(Объект.Договор.ДатаРегистрации,"ДЛФ=D")+"г.");  
	Рекв.Вставить("Заказчик", Объект.Договор.Корреспондент.ПолноеНаименование);  
	Рекв.Вставить("ЗаказчикРабот", Объект.Заказчик.ПолноеНаименование);  
	Рекв.Вставить("НомерДела", ""+Объект.Владелец.мНомерДелаЗаказчика+" от "+Формат(Объект.Владелец.мДатаДелаЗаказчика,"ДЛФ=D")+"г.");  
	Рекв.Вставить("НомерДелаИсполнителя", ""+Объект.Владелец.РегистрационныйНомер+" от "+Формат(Объект.Владелец.ДатаРегистрации,"ДЛФ=D")+"г.");  
	Если Объект.Повторная Тогда
		Рекв.Вставить("ЗаголовокДатаСдачи", "Дата предоставления дела для повторного изучения");  
	Иначе
		Рекв.Вставить("ЗаголовокДатаСдачи", "Дата предоставления дела для изучения");  
	КонецЕсли; 
	Рекв.Вставить("ДатаСдачиНаПроверку", Формат(Объект.ДатаСдачиНаПроверку,"ДЛФ=D")+"г.");  
	Рекв.Вставить("НаименованиеОбъекта", Объект.ОбъектРабот.ПолноеНаименование);  
	Рекв.Вставить("ВидРаботы", Объект.ВидРабот.ПолноеНаименование);
	
	Если Объект.ВидПроверкиКачества = Перечисления.М_ВидыПроверкиКачества.Камеральная Тогда
		Рекв.Вставить("ВидПроверки", "Камеральный");  
	Иначе
		Рекв.Вставить("ВидПроверки", "Полевой");  
	КонецЕсли; 
	Рекв.Вставить("Содержание", Объект.Содержание);  
	Рекв.Вставить("ПроверилФИО", Объект.Проверил.ПредставлениеВДокументах);  
	Рекв.Вставить("ПроверилДолжность", ""+РаботаСПользователями.ПолучитьПодразделение(Объект.Проверил)+Символы.ПС+Символы.ВК+РаботаСПользователями.ПолучитьДолжность(Объект.Проверил));  
	Возврат Рекв;
КонецФункции

&НаКлиенте
Процедура РезультатПроверкиПриИзменении(Элемент)
	Если Объект.РезультатПроверки = ПредопределенноеЗначение("Перечисление.мРезультатыСправкиПроверки.Соответствует") Тогда
		Объект.Содержание = "Землеустроительное дело оформлено в соответствии с требованиями, установленными законодательством об охране и использовании земель, методологическими документами.";
	ИначеЕсли Объект.РезультатПроверки = ПредопределенноеЗначение("Перечисление.мРезультатыСправкиПроверки.НеСоответствует") Тогда
		Объект.Содержание = "Землеустроительное дело оформлено не в соответствии с требованиями, установленными законодательством об охране и использовании земель, методологическими документами.";
	ИначеЕсли Объект.РезультатПроверки = ПредопределенноеЗначение("Перечисление.мРезультатыСправкиПроверки.СоответствуетСЗамечаниями") Тогда
		Объект.Содержание = "Землеустроительное дело, в целом, оформлено в соответствии с требованиями, установленными законодательством об охране и использовании земель, методологическими документами. Имеются замечания в части оформления отдельных документов.";
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПовторнаяПриИзменении(Элемент)
	Если Объект.Повторная Тогда
		Объект.НомерСправкиПроверки = Объект.НомерСправкиПроверки + "(п)";
	Иначе
		Объект.НомерСправкиПроверки = СтрЗаменить(Объект.НомерСправкиПроверки,"(п)", ""); 
	КонецЕсли;
	СформироватьНаименование();
КонецПроцедуры

&НаКлиенте
Процедура ВидРаботНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	УстановитьВидДляВыбораДляВидаРабот(Элемент);
	
	СтандартнаяОбработка = Ложь;
	ПараметрыОтбора = Новый Структура("Пользователь", ПользователиКлиентСервер.ТекущийПользователь());
	
	Если Элемент.ОграничениеТипа.СодержитТип(Тип("СправочникСсылка.мВидыРаботЮрЛица")) Тогда
		ВидЛиц = "ЮрЛиц";	
	Иначе
		ВидЛиц = "ФизЛиц";	
	КонецЕсли; 
	ДанныеВыбора = мРаботаСДоговорами.ПолучитьВидыРаботДляВыбора(ПараметрыОтбора, ВидЛиц);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидДляВыбораДляВидаРабот(ЭлементВидРабот = "")
	Если ЭлементВидРабот = "" Тогда
		ИскЭлемент = Элементы.Найти("ВидРабот");
	Иначе
		ИскЭлемент = ЭлементВидРабот;
	КонецЕсли; 
	
	МассивТипов=Новый Массив();
	Если ЗначениеЗаполнено(Объект.Заказчик) и мРаботаСДоговорами.ЭтоФизЛицо(Объект.Заказчик) Тогда
		МассивТипов.Добавить(Тип("СправочникСсылка.мВидыРаботФизЛица"));
	Иначе
		МассивТипов.Добавить(Тип("СправочникСсылка.мВидыРаботЮрЛица"));
	КонецЕсли;	
	ИскЭлемент.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);

КонецПроцедуры // 	УстановитьВидДляВыбораДляВидаРабот()
#КонецОбласти 
 
 
