
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Список.Параметры.УстановитьЗначениеПараметра("СписокВидовДокументов", Справочники.ВидыВнутреннихДокументов.ДокументыТехархива);
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаОтборПриИзменении(Элемент)
	Список.Параметры.УстановитьЗначениеПараметра("ВидДокумента", ВидДокумента);
КонецПроцедуры

&НаКлиенте
Процедура ОтводОтборПриИзменении(Элемент)
	Если Отвод = 1 Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Отвод", Истина);
	ИначеЕсли Отвод = 0 Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Отвод", Ложь);
	Иначе
		ПараметрОтвод = Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Отвод"));
		Если ПараметрОтвод <> Неопределено Тогда
			ПараметрОтвод.Использование = Ложь;
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура СотрудникОтборПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Сотрудник", Сотрудник);
	Иначе
		ПараметрСотрудник = Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Сотрудник"));
		Если ПараметрСотрудник <> Неопределено Тогда
			ПараметрСотрудник.Использование = Ложь;
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДоговорПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Договор) Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Договор", Договор);
	Иначе
		ПараметрДоговор = Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Договор"));
		Если ПараметрДоговор <> Неопределено Тогда
			ПараметрДоговор.Использование = Ложь;
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПечатьРасписки(Команда)
	ТекДок = Элементы.Список.ТекущаяСтрока;
	УсловияОтбора = Новый Структура("ДокументДляПечати", ТекДок);
	ПараметрыФормы = Новый Структура("Отбор, СформироватьПриОткрытии", УсловияОтбора, Истина); 
	ОткрытьФорму("Отчет.мПечатьРаспискиВПолученииТехАрхив.Форма", ПараметрыФормы);
КонецПроцедуры

 