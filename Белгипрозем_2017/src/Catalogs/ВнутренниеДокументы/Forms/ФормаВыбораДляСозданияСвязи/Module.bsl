&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВидПросмотра = Перечисления.ВидыПросмотраСпискаОбъектов.Списком;
	Элементы.Список.ПодчиненныеЭлементы.Папка.Видимость = Истина;
	Элементы.СписокСоздать.Доступность = Истина;
	
	Документ = Параметры.Документ;
	Корреспондент = Параметры.Корреспондент;
	Организация = Параметры.Организация;
	Проект = Параметры.Проект;
	
	ВидДокумента = Неопределено;
	Если Параметры.ОбязательныеСвязи.Количество() = 1 Тогда
		
		Строка = Параметры.ОбязательныеСвязи[0];
		
		ТипСвязи = Строка.ТипСвязи;
		СсылкаНа = Строка.СсылкаНа;
		ВидДокумента = СсылкаНа;
		
	КонецЕсли;	
	
	Элементы.ДекорацияОписание.Заголовок = 
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Чтобы завершить создание документа, необходимо указать связь ""%1"". 
			|Выберите документ для создания связи.'"),
			ТипСвязи);
	
	// Виды документов
	Если ЗначениеЗаполнено(ВидДокумента) Тогда
		Если ТипЗнч(ВидДокумента) = Тип("СправочникСсылка.ВидыВнутреннихДокументов") И ВидДокумента.ЭтоГруппа Тогда
			Список.Параметры.УстановитьЗначениеПараметра("ГруппаВидаДокумента", ВидДокумента);
		Иначе
			Список.Параметры.УстановитьЗначениеПараметра("ВидДокумента", ВидДокумента);
		КонецЕсли;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Корреспондент) Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ОтборПоКонтрагенту", Истина);
		Список.Параметры.УстановитьЗначениеПараметра("КонтрагентОтбор", Корреспондент);			
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Организация",
			Организация);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Проект) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Проект",
			Проект);
	КонецЕсли;
	
	Если Параметры.Свойство("ПоказыватьКомандуСоздать") Тогда
		Элементы.СписокСоздать.Видимость = (Параметры.ПоказыватьКомандуСоздать = Истина);
	КонецЕсли;
	
	Если Параметры.Свойство("Заголовок") Тогда
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	// Кешируем количество доступных шаблонов внутренних документов.
	КоличествоДоступныхШаблоновДокументов = ОбновитьКоличествоДоступныхШаблоновВыполнить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Обработчик ожидания для периодического обновления количества доступных шаблонов документов через каждые 20 минут.
	ПодключитьОбработчикОжидания("ОбновитьКоличествоДоступныхШаблонов", 1200, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если ВидПросмотра = ПредопределенноеЗначение("Перечисление.ВидыПросмотраСпискаОбъектов.Списком") Тогда
		
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если Элементы.Список.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВозврата = Новый Структура("ТипСвязи, СсылкаНа, СвязанныйДокумент", 
		ТипСвязи, СсылкаНа, Элементы.Список.ТекущаяСтрока);
		
	МассивВозврата = Новый Массив;
	МассивВозврата.Добавить(ПараметрыВозврата);
	
	Закрыть(МассивВозврата);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыВозврата = Новый Структура("ТипСвязи, СсылкаНа, СвязанныйДокумент", 
		ТипСвязи, СсылкаНа, Элементы.Список.ТекущаяСтрока);
		
	МассивВозврата = Новый Массив;
	МассивВозврата.Добавить(ПараметрыВозврата);
	
	Закрыть(МассивВозврата);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	СоздатьНовыйДокумент(Копирование);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовыйДокумент(Копирование)
	
	ТекущийДокумент = Элементы.Список.ТекущаяСтрока;
	ПараметрыФормы = Новый Структура;
	Если Копирование Тогда 
		ПараметрыФормы.Вставить("ЗначениеКопирования", ТекущийДокумент);
		Открытьформу("Справочник.ВнутренниеДокументы.ФормаОбъекта", ПараметрыФормы, Элементы.Список);
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"СоздатьНовыйДокументПродолжение",
		ЭтотОбъект,
		ПараметрыФормы);
		
	Если КоличествоДоступныхШаблоновДокументов > 0 Тогда
		РаботаСШаблонамиДокументовКлиент.ПоказатьФормуСозданияДокументаПоШаблону(
			ОписаниеОповещения,
			"ШаблоныВнутреннихДокументов");
	Иначе
		Результат = "СоздатьПустойДокумент";
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовыйДокументПродолжение(Результат, ПараметрыФормы) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяПапка = Неопределено;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Папка", ТекущаяПапка);
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	Если ТипЗнч(Результат) = Тип("Строка") Тогда
		ПараметрыФормы.Вставить("ШаблонДокумента", Результат);
	Иначе
		ПараметрыФормы.Вставить("ШаблонДокумента", Результат.ШаблонДокумента);
	КонецЕсли;
	
	Открытьформу("Справочник.ВнутренниеДокументы.ФормаОбъекта", ПараметрыФормы, Элементы.Список);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбновитьКоличествоДоступныхШаблоновВыполнить()

	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ШаблоныДокументов.Код
					|ИЗ
					|	Справочник.ШаблоныВнутреннихДокументов КАК ШаблоныДокументов";
	Возврат Запрос.Выполнить().Выбрать().Количество();	
	
КонецФункции

&НаКлиенте
Процедура ОбновитьКоличествоДоступныхШаблонов()
	
	КоличествоДоступныхШаблоновДокументов = ОбновитьКоличествоДоступныхШаблоновВыполнить();
		
КонецПроцедуры	

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)

	Если Не ЗначениеЗаполнено(Организация) Тогда
		
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
			"Организация");
	Иначе	
			
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Организация",
			Организация);
		
	КонецЕсли;	
	
КонецПроцедуры


&НаКлиенте
Процедура ОтборКорреспондентПриИзменении(Элемент)

	Если Не ЗначениеЗаполнено(Корреспондент) Тогда	
		Список.Параметры.УстановитьЗначениеПараметра("ОтборПоКонтрагенту", Ложь);
		Список.Параметры.УстановитьЗначениеПараметра("КонтрагентОтбор", Неопределено);
	Иначе			
		Список.Параметры.УстановитьЗначениеПараметра("ОтборПоКонтрагенту", Истина);
		Список.Параметры.УстановитьЗначениеПараметра("КонтрагентОтбор", Корреспондент);			
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОтборПроектПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Проект) Тогда
		
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
			"Проект");
	Иначе	
			
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
			"Проект",
			Проект);
		
	КонецЕсли;	
	
КонецПроцедуры

