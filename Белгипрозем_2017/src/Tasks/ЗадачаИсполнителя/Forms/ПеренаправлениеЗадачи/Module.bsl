////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Исполнитель = Неопределено Тогда
		Исполнитель = Справочники.Пользователи.ПустаяСсылка();
	КонецЕсли;
	
	БизнесПроцесс = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Параметры.Задача, "БизнесПроцесс");
	
	Предметы.ЗагрузитьЗначения(МультипредметностьКлиентСервер.ПолучитьМассивПредметовОбъекта(БизнесПроцесс));
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") Тогда
		Проект = ОбщегоНазначения.ПолучитьЗначениеРеквизита(
			Параметры.Задача, "Проект");
		
		ПроектнаяЗадача = ОбщегоНазначения.ПолучитьЗначениеРеквизита(
			Параметры.Задача, "ПроектнаяЗадача");
	КонецЕсли;
	
	// Сохранение вводимых значений
	СохранениеВводимыхЗначений.ЗаполнитьСписокВыбора(ЭтаФорма, ЭлементыДляСохранения(), ЭтаФорма.ИмяФормы);
	
	УстановитьСостояниеЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ПроверяемыеРеквизиты.Добавить("Исполнитель");
	
	Если ИспользуетсяСОбъектамиАдресации и Не ИспользуетсяБезОбъектовАдресации Тогда
		
		Если Элементы.ОсновнойОбъектАдресации.АвтоОтметкаНезаполненного Тогда
			ПроверяемыеРеквизиты.Добавить("ОсновнойОбъектАдресации");
		КонецЕсли;
		
		Если Элементы.ДополнительныйОбъектАдресации.АвтоОтметкаНезаполненного Тогда
			ПроверяемыеРеквизиты.Добавить("ДополнительныйОбъектАдресации");
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипЗнч(Исполнитель) = Тип("СправочникСсылка.РолиИсполнителей")
		 и Не ИгнорироватьПредупреждения 
		 и Не БизнесПроцессыИЗадачиСервер.ЕстьИсполнителиРоли(Исполнитель, ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'На указанную роль не назначено ни одного исполнителя. (Чтобы проигнорировать это предупреждение, установите флажок.)'"),,,
			"Исполнитель",
			Отказ);
		Элементы.ИгнорироватьПредупреждения.Видимость = Истина;
	КонецЕсли;	
	
	// Проверка прав доступа участников процесса на предмет
	Если Предметы.Количество() > 0 Тогда
		
		СформированаРабочаяГруппа = Ложь;
		
		Для Каждого Элемент Из Предметы Цикл
			
			Предмет = Элемент.Значение;
			
			// Формирование рабочей группы перед проверкой прав
			Если РаботаСРабочимиГруппами.ПоОбъектуВедетсяАвтоматическоеЗаполнениеРабочейГруппы(Предмет) Тогда
				
				РабочаяГруппа = РегистрыСведений.РабочиеГруппы.ПолучитьУчастниковПоОбъекту(Предмет);
				Строка = РабочаяГруппа.Добавить();
				Строка.Участник = Исполнитель;
				Строка.ОсновнойОбъектАдресации = ОсновнойОбъектАдресации;
				Строка.ДополнительныйОбъектАдресации = ДополнительныйОбъектАдресации;
				
				// Сохранение обновленной рабочей группы
				СформированаРабочаяГруппа = Истина; 
				НачатьТранзакцию();
				РаботаСРабочимиГруппами.ПерезаписатьРабочуюГруппуОбъекта(Предмет, РабочаяГруппа, Истина);
				
			КонецЕсли;	
			
			// Проверка прав на предмет
			Если ТипЗнч(Предмет) = Тип("СправочникСсылка.Файлы") 
			   И ОбщегоНазначения.ПолучитьЗначениеРеквизита(Предмет,"ВладелецФайла") = БизнесПроцесс Тогда
				Продолжить;
			КонецЕсли;
			
			Если Не БизнесПроцессыИЗадачиПереопределяемый.ЕстьПравоДоступаУчастникаБизнесПроцесса(
				Неопределено,
				Предмет,
				"Чтение",
				Исполнитель,
				ОсновнойОбъектАдресации,
				ДополнительныйОбъектАдресации,
				"Исполнитель") Тогда
				Отказ = Истина;
			КонецЕсли;
		КонецЦикла;
		
		// Отмена транзакции, в рамках которой была создана рабочая группа для 
		// проверки прав
		Если СформированаРабочаяГруппа Тогда
			ОтменитьТранзакцию();
		КонецЕсли;	
		
	КонецЕсли;
	
	// Проверка наличия нового исполнителя среди исполнителей проектной задачи
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") Тогда
		
		Если ЗначениеЗаполнено(ПроектнаяЗадача) Тогда 
			
			Трудозатраты = Справочники.ПроектныеЗадачи.ПолучитьПлановыеТрудозатратыИсполнителяПроектнойЗадачи(
				ПроектнаяЗадача,
				Исполнитель,
				ОсновнойОбъектАдресации,
				ДополнительныйОбъектАдресации);	
			
			Если Трудозатраты = Неопределено Тогда
				СообщениеПользователю = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Исполнитель ""%1"" не найден среди исполнителей проектной задачи ""%2""'"),
					Строка(Исполнитель),
					Строка(ПроектнаяЗадача));
					
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(	
					СообщениеПользователю,
					,
					"Исполнитель",
					,
					Отказ);
			КонецЕсли;	
			
		ИначеЕсли ЗначениеЗаполнено(Проект)	Тогда 
			
			ИсполнительНайден = РаботаСПроектами.НайтиИсполнителяРольВКомандеПроекта(
					Проект,
					Исполнитель,
					ОсновнойОбъектАдресации,
					ДополнительныйОбъектАдресации);	
			
			Если Не ИсполнительНайден Тогда
				СообщениеПользователю = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Исполнитель ""%1"" не найден среди участников проектной команды проекта ""%2""'"),
					Строка(Исполнитель),
					Строка(Проект));
					
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(	
					СообщениеПользователю,
					,
					"Исполнитель",
					,
					Отказ);
			КонецЕсли;
			
		КонецЕсли;	
			
	КонецЕсли;
	
	// Сохранение вводимых значений
	СохранениеВводимыхЗначений.ОбновитьСпискиВыбора(ЭтаФорма, ЭлементыДляСохранения(), ЭтаФорма.ИмяФормы);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ИсполнительПриИзменении(Элемент)

	Если ТипЗнч(Исполнитель) = Тип("СправочникСсылка.РолиИсполнителей") И ЗначениеЗаполнено(Исполнитель) Тогда 
		
		ПараметрыИспользованияРоли = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Исполнитель,
									 "ИспользуетсяСОбъектамиАдресации, ИспользуетсяБезОбъектовАдресации");
									 
		ИспользуетсяСОбъектамиАдресации = ПараметрыИспользованияРоли.ИспользуетсяСОбъектамиАдресации;
		ИспользуетсяБезОбъектовАдресации = ПараметрыИспользованияРоли.ИспользуетсяБезОбъектовАдресации;
		
		Если ИспользуетсяСОбъектамиАдресации Тогда
			ПараметрыОткрытияФормы = Новый Структура;
			ПараметрыОткрытияФормы.Вставить("РольИсполнителя", Исполнитель);
			ПараметрыОткрытияФормы.Вставить("ОсновнойОбъектАдресации", ОсновнойОбъектАдресации);
			ПараметрыОткрытияФормы.Вставить("ДополнительныйОбъектАдресации", ДополнительныйОбъектАдресации);
			ОписаниеОповещения = Новый ОписаниеОповещения(
				"ИсполнительПриИзмененииПродолжение",
				ЭтотОбъект);
								
			ОткрытьФорму("ОбщаяФорма.ВыборРолиИсполнителя", 
				ПараметрыОткрытияФормы, 
				ЭтаФорма,,,,
				ОписаниеОповещения,
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			Возврат;
		КонецЕсли;	
	Иначе
		ИспользуетсяСОбъектамиАдресации = Ложь;
		ИспользуетсяБезОбъектовАдресации = Ложь;
	КонецЕсли;	

	УстановитьСостояниеЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительПриИзмененииПродолжение(Результат, Параметры) Экспорт 

	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Исполнитель = Результат.РольИсполнителя;
		ОсновнойОбъектАдресации = Результат.ОсновнойОбъектАдресации;
		ДополнительныйОбъектАдресации = Результат.ДополнительныйОбъектАдресации;
	ИначеЕсли Не ИспользуетсяБезОбъектовАдресации Тогда			
		Исполнитель = Неопределено;
		ОсновнойОбъектАдресации = Неопределено;
		ДополнительныйОбъектАдресации = Неопределено;	
	КонецЕсли;
	
	УстановитьСостояниеЭлементов();

КонецПроцедуры

&НаКлиенте
Процедура ИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСПользователямиКлиент.ВыбратьИсполнителя(Элемент, Исполнитель,,Истина,,,
		ОсновнойОбъектАдресации, ДополнительныйОбъектАдресации);

КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
		
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Исполнитель = ВыбранноеЗначение.РольИсполнителя;
		ОсновнойОбъектАдресации = ВыбранноеЗначение.ОсновнойОбъектАдресации;
		ДополнительныйОбъектАдресации = ВыбранноеЗначение.ДополнительныйОбъектАдресации;
		
		ПараметрыИспользованияРоли = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Исполнитель,
									 "ИспользуетсяСОбъектамиАдресации, ИспользуетсяБезОбъектовАдресации");
		ИспользуетсяСОбъектамиАдресации = ПараметрыИспользованияРоли.ИспользуетсяСОбъектамиАдресации;
		ИспользуетсяБезОбъектовАдресации = ПараметрыИспользованияРоли.ИспользуетсяБезОбъектовАдресации;
		
		УстановитьСостояниеЭлементов();
		
	Иначе  
		ОсновнойОбъектАдресации = Неопределено;
		ДополнительныйОбъектАдресации = Неопределено;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Исполнитель = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	ОсновнойОбъектАдресации = Неопределено;
	ДополнительныйОбъектАдресации = Неопределено;
	ИспользуетсяСОбъектамиАдресации = Ложь;
	ИспользуетсяБезОбъектовАдресации = Ложь;

	УстановитьСостояниеЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
		
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Перенаправить(Команда)
	
	ОчиститьСообщения();
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Закрыть(ПараметрыЗакрытия());
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Функция ЭлементыДляСохранения()
	
	СохраняемыеЭлементы = Новый Структура("Исполнитель", Исполнитель);
	
	Возврат СохранениеВводимыхЗначений.СформироватьТаблицуСохраняемыхЭлементов(СохраняемыеЭлементы);
	
КонецФункции

&НаСервере
Процедура УстановитьСостояниеЭлементов()
	
	Элементы.ОсновнойОбъектАдресации.Видимость = ИспользуетсяСОбъектамиАдресации;
	Элементы.ДополнительныйОбъектАдресации.Видимость = ИспользуетсяСОбъектамиАдресации;

	Если ИспользуетсяСОбъектамиАдресации Тогда
		
		ТипыОбъектовАдресации = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Исполнитель, 
								"ТипыОсновногоОбъектаАдресации, ТипыДополнительногоОбъектаАдресации");
		
		ТипыОсновногоОбъектаАдресации = ТипыОбъектовАдресации.ТипыОсновногоОбъектаАдресации;
		ТипыДополнительногоОбъектаАдресации = ТипыОбъектовАдресации.ТипыДополнительногоОбъектаАдресации;
		
		Если ЗначениеЗаполнено(ТипыОсновногоОбъектаАдресации) Тогда
			Элементы.ОсновнойОбъектАдресации.ОграничениеТипа = ТипыОсновногоОбъектаАдресации.ТипЗначения;
			Элементы.ОсновнойОбъектАдресации.Заголовок = ТипыОсновногоОбъектаАдресации.Наименование;
			Элементы.ОсновнойОбъектАдресации.АвтоОтметкаНезаполненного = Не ИспользуетсяБезОбъектовАдресации;
		Иначе
			Элементы.ОсновнойОбъектАдресации.Видимость = Ложь;
			Элементы.ОсновнойОбъектАдресации.АвтоОтметкаНезаполненного = Ложь;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТипыДополнительногоОбъектаАдресации) Тогда
			Элементы.ДополнительныйОбъектАдресации.ОграничениеТипа = ТипыДополнительногоОбъектаАдресации.ТипЗначения;
			Элементы.ДополнительныйОбъектАдресации.Заголовок = ТипыДополнительногоОбъектаАдресации.Наименование;
			Элементы.ДополнительныйОбъектАдресации.АвтоОтметкаНезаполненного = Не ИспользуетсяБезОбъектовАдресации;
		Иначе
			Элементы.ДополнительныйОбъектАдресации.Видимость = Ложь;
			Элементы.ДополнительныйОбъектАдресации.АвтоОтметкаНезаполненного = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры	
	
&НаКлиенте
Функция ПараметрыЗакрытия()
	
	ПереадресацияПользователю = ТипЗнч(Исполнитель) = Тип("СправочникСсылка.Пользователи");
	
	Возврат Новый Структура("Исполнитель,РольИсполнителя,ОсновнойОбъектАдресации,ДополнительныйОбъектАдресации,Комментарий",
		?(ПереадресацияПользователю, Исполнитель, Неопределено),
		?(ПереадресацияПользователю, Неопределено, Исполнитель),
		?(ЗначениеЗаполнено(ОсновнойОбъектАдресации), ОсновнойОбъектАдресации, Неопределено),
		?(ЗначениеЗаполнено(ДополнительныйОбъектАдресации), ДополнительныйОбъектАдресации, Неопределено),
		Комментарий);
	
КонецФункции