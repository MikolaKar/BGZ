
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВариантСогласованияПараллельно = Перечисления.ВариантыМаршрутизацииЗадач.Параллельно;
	ВариантСогласованияПоследовательно = Перечисления.ВариантыМаршрутизацииЗадач.Последовательно;
	ВариантСогласованияСмешанно = Перечисления.ВариантыМаршрутизацииЗадач.Смешанно;
	ПредыдущийВариантСогласования = Объект.ВариантСогласования;
	
	Предметы = МультипредметностьКлиентСервер.ПолучитьМассивПредметовОбъекта(Объект,, Истина);
	ИспользоватьДатуИВремяВСрокахЗадач = ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");

	ШаблоныПоПредметам.ЗагрузитьЗначения(МультипредметностьВызовСервера.ПолучитьШаблоныПоПредметам(Предметы, "ШаблоныСогласования"));
	УстановитьДоступностьПоШаблону();
	УстановитьВидимость();
	
	ПользователиПустаяСсылка = Справочники.Пользователи.ПустаяСсылка();
	
	ПорядокСогласованияВместеСПредыдущим = Перечисления.ПорядокВыполненияЗадач.ВместеСПредыдущим;
	ПорядокСогласованияПослеПредыдущего = Перечисления.ПорядокВыполненияЗадач.ПослеПредыдущего;
	
	Мультипредметность.ПроцессПриСозданииНаСервере(ЭтаФорма, Объект);
	
	Элементы.ИсполнителиСрокИсполненияДатой.Формат = 
		?(ИспользоватьДатуИВремяВСрокахЗадач, "ДФ='дд.ММ.гггг ЧЧ:мм'", "ДЛФ=D");
	ЗаполнитьШагСервер();
	ВыполнитьРасчетСроковСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(РезультатВыбора, ИсточникВыбора)
	
	Если ТипЗнч(РезультатВыбора) = Тип("Строка") И ЭтоАдресВременногоХранилища(РезультатВыбора) Тогда 
		ЗагрузитьИсполнителейИзВременногоХранилища(РезультатВыбора);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	МультипредметностьКлиентСервер.ЗаполнитьТаблицуПредметовФормы(Объект);
	Мультипредметность.ОбработатьОписаниеПредметовПроцесса(Объект);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не ЗначениеЗаполнено(Объект.Наименование) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Поле ""Наименование"" не заполнено'"),, "Объект.Наименование",, Отказ);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	Мультипредметность.ПроцессПослеЗаписиНаСервере(ЭтаФорма, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("БизнесПроцессИзменен", Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПорядокСогласованияПриИзменении(Элемент)
	
	ЗаполнитьШагКлиент();
	ВыполнитьРасчетСроковКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантСогласованияПриИзменении(Элемент)
	
	Если Объект.ВариантСогласования = ВариантСогласованияСмешанно Тогда 
		Для Каждого Строка Из Объект.Исполнители Цикл
			Если ПредыдущийВариантСогласования = ВариантСогласованияПоследовательно Тогда 
				Строка.ПорядокСогласования = ПорядокСогласованияПослеПредыдущего;
			ИначеЕсли ПредыдущийВариантСогласования = ВариантСогласованияПараллельно Тогда 
				Строка.ПорядокСогласования = ПорядокСогласованияВместеСПредыдущим;
			КонецЕсли;	
		КонецЦикла;	
		ЗаполнитьШагКлиент();
	КонецЕсли;	
	ПредыдущийВариантСогласования = Объект.ВариантСогласования;
	
	УстановитьВидимость();
	
	ВыполнитьРасчетСроковКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	МультипредметностьКлиент.ПредметыВыбор(Объект.Предметы, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СрокИсполненияПриИзменении(Элемент)
	
	ВыполнитьРасчетСроковКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура СрокИсполненияЧасПриИзменении(Элемент)
	
	ВыполнитьРасчетСроковКлиент();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИсполнители

&НаКлиенте
Процедура ИсполнителиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда 
		Элементы.Исполнители.ТекущиеДанные.Исполнитель = ПользователиПустаяСсылка;
		
		ТекущаяСтрока = Объект.Исполнители.НайтиПоИдентификатору(Элементы.Исполнители.ТекущаяСтрока);
		ИндексСтроки = Объект.Исполнители.Индекс(ТекущаяСтрока);
		
		Если Объект.ВариантСогласования = ВариантСогласованияСмешанно Тогда 
			Если ИндексСтроки > 0 Тогда 
				Элементы.Исполнители.ТекущиеДанные.ПорядокСогласования = Объект.Исполнители[ИндексСтроки-1].ПорядокСогласования;
			Иначе
				Элементы.Исполнители.ТекущиеДанные.ПорядокСогласования = ПорядокСогласованияВместеСПредыдущим;
			КонецЕсли;	
			ЗаполнитьШагКлиент();
		КонецЕсли;	
			
		Если Объект.РазныеСроки Тогда 
			Если ИндексСтроки > 0 Тогда 
				Элементы.Исполнители.ТекущиеДанные.СрокИсполнения = Объект.Исполнители[ИндексСтроки-1].СрокИсполнения;
				Элементы.Исполнители.ТекущиеДанные.СрокИсполненияЧас = Объект.Исполнители[ИндексСтроки-1].СрокИсполненияЧас;
				ВыполнитьРасчетСроковКлиент();
			КонецЕсли;
		КонецЕсли;	
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПослеУдаления(Элемент)
	
	ЗаполнитьШагКлиент();
	ВыполнитьРасчетСроковКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительПриИзменении(Элемент)
	
	ТекущийДанные = Элементы.Исполнители.ТекущиеДанные;
	
	ОписаниеОповещения =
		Новый ОписаниеОповещения("ИсполнительПриИзмененииЗавершение", ЭтаФорма);
	
	РаботаСБизнесПроцессамиКлиент.ВыбратьОбъектыАдресацииРоли(
		ТекущийДанные,
		"Исполнитель",
		"ОсновнойОбъектАдресации",
		"ДополнительныйОбъектАдресации",
		ЭтаФорма,
		ОписаниеОповещения);
		
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительПриИзмененииЗавершение(Результат, Параметры) Экспорт
	
	ВыполнитьРасчетСроковКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	РаботаСПользователямиКлиент.ВыбратьИсполнителя(Элемент, Элементы.Исполнители.ТекущиеДанные.Исполнитель,,Истина,,,
		Элементы.Исполнители.ТекущиеДанные.ОсновнойОбъектАдресации, 
		Элементы.Исполнители.ТекущиеДанные.ДополнительныйОбъектАдресации);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		СтандартнаяОбработка = Ложь;
		
		ТекущийДанные = Элементы.Исполнители.ТекущиеДанные;
		ТекущийДанные.Исполнитель = ВыбранноеЗначение.РольИсполнителя;
		ТекущийДанные.ОсновнойОбъектАдресации = ВыбранноеЗначение.ОсновнойОбъектАдресации;
		ТекущийДанные.ДополнительныйОбъектАдресации = ВыбранноеЗначение.ДополнительныйОбъектАдресации;
		
		Модифицированность = Истина;
	Иначе  
		ТекущийДанные = Элементы.Исполнители.ТекущиеДанные;
		ТекущийДанные.ОсновнойОбъектАдресации = Неопределено;
		ТекущийДанные.ДополнительныйОбъектАдресации = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСПользователями.СформироватьДанныеВыбораИсполнителя(Текст);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиСрокИсполненияПриИзменении(Элемент)
	
	ВыполнитьРасчетСроковКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиСрокИсполненияЧасПриИзменении(Элемент)
	
	ВыполнитьРасчетСроковКлиент();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подобрать(Команда)
	
	АдресВременногоХранилища = ПоместитьИсполнителейВоВременноеХранилище();
	РаботаСПользователямиКлиент.ПодборИсполнителей(АдресВременногоХранилища, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	Если Модифицированность Тогда 
		Если ОписаниеОповещенияОЗакрытии.ДополнительныеПараметры <> Неопределено 
			И ОписаниеОповещенияОЗакрытии.ДополнительныеПараметры.Свойство("УникальныйИдентификаторФормыИзмененияПараметров") Тогда
			ОписаниеОповещенияОЗакрытии.ДополнительныеПараметры.УникальныйИдентификаторФормыИзмененияПараметров = 
				УникальныйИдентификатор;
		КонецЕсли;
		ОбщегоНазначенияДокументооборотКлиент.УдалитьПустыеСтрокиТаблицы(Объект.Исполнители, "Исполнитель");
		ОчиститьСообщения();
		
		Если Не ПроверитьЗаполнение() Тогда 
			Возврат;
		КонецЕсли;	
		
		Если Записать() Тогда 
			ПоказатьОповещениеПользователя(
				НСтр("ru = 'Изменение:'"),
				ПолучитьНавигационнуюСсылку(Объект.Ссылка),
				Строка(Объект.Ссылка),
				БиблиотекаКартинок.Информация32);
			Закрыть(КодВозвратаДиалога.ОК);	
		КонецЕсли;
		
	Иначе
		Закрыть(КодВозвратаДиалога.ОК);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть(КодВозвратаДиалога.Отмена);
	
КонецПроцедуры

&НаКлиенте
Процедура РазныеСроки(Команда)
	
	Объект.РазныеСроки = Не Объект.РазныеСроки;
	
	Если Объект.РазныеСроки Тогда 
		Для Каждого Исполнитель Из Объект.Исполнители Цикл 
			Исполнитель.СрокИсполнения = Объект.СрокИсполнения;
			Исполнитель.СрокИсполненияЧас = ?(ИспользоватьДатуИВремяВСрокахЗадач, Объект.СрокИсполненияЧас,0);
		КонецЦикла;	
	КонецЕсли;
	
	ВыполнитьРасчетСроковКлиент();
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверх(Команда)
	
	ТекущиеДанные = Элементы.Исполнители.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Если ТекущиеДанные.НомерСтроки = 1 Тогда 
		Возврат;
	КонецЕсли;	
	
	Объект.Исполнители.Сдвинуть(ТекущиеДанные.НомерСтроки - 1, -1); 
	
	ЗаполнитьШагКлиент();
	
	ВыполнитьРасчетСроковКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз(Команда)
	
	ТекущиеДанные = Элементы.Исполнители.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	Если ТекущиеДанные.НомерСтроки = Объект.Исполнители.Количество() Тогда 
		Возврат;
	КонецЕсли;
	
	Объект.Исполнители.Сдвинуть(ТекущиеДанные.НомерСтроки - 1, 1); 
	
	ЗаполнитьШагКлиент();
	
	ВыполнитьРасчетСроковКлиент();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимость()
	
	Если Объект.ВариантСогласования = Перечисления.ВариантыМаршрутизацииЗадач.Смешанно Тогда 
		Элементы.ПорядокСогласования.Видимость = Истина;
		Элементы.Шаг.Видимость = Истина;
	Иначе
		Элементы.ПорядокСогласования.Видимость = Ложь;
		Элементы.Шаг.Видимость = Ложь;
	КонецЕсли;
	
	// Работа со сроками согласования
	Если Объект.РазныеСроки Тогда 
		Элементы.ИсполнителиСрокИсполнения.Видимость = Истина;
		Элементы.ИсполнителиСрокИсполненияЧас.Видимость = ИспользоватьДатуИВремяВСрокахЗадач;
		Элементы.СрокИсполнения.Видимость = Ложь;
		Элементы.Дней.Видимость = Ложь;
		Элементы.СрокИсполненияЧас.Видимость = Ложь;
		Элементы.Часов.Видимость = Ложь;
		Элементы.РазныеСроки.Пометка = Истина;
	Иначе 
		Элементы.ИсполнителиСрокИсполнения.Видимость = Ложь;
		Элементы.ИсполнителиСрокИсполненияЧас.Видимость = Ложь;
		Элементы.СрокИсполнения.Видимость = Истина;
		Элементы.Дней.Видимость = Истина;
		Элементы.СрокИсполненияЧас.Видимость = ИспользоватьДатуИВремяВСрокахЗадач;
		Элементы.Часов.Видимость = ИспользоватьДатуИВремяВСрокахЗадач;
		Элементы.РазныеСроки.Пометка = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПоместитьИсполнителейВоВременноеХранилище()

	Возврат ПоместитьВоВременноеХранилище(Объект.Исполнители.Выгрузить(), УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Процедура ЗагрузитьИсполнителейИзВременногоХранилища(АдресВременногоХранилища)

	Объект.Исполнители.Загрузить(ПолучитьИзВременногоХранилища(АдресВременногоХранилища));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьПоШаблону()
	
	Если Не ЗначениеЗаполнено(Объект.Шаблон) И Не ЗначениеЗаполнено(Объект.ВедущаяЗадача) Тогда 
		Возврат;
	КонецЕсли;
	
	ДоступностьПоШаблону = ШаблоныБизнесПроцессов.ДоступностьПоШаблону(Объект);
	
	Если ЗначениеЗаполнено(Объект.СрокИсполнения) Тогда 
		Элементы.СрокИсполнения.ТолькоПросмотр = Не ДоступностьПоШаблону;
		Элементы.СрокИсполненияЧас.ТолькоПросмотр = Не ДоступностьПоШаблону;
	Иначе
		Элементы.СрокИсполнения.ТолькоПросмотр = Ложь;
		Элементы.СрокИсполненияЧас.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
	Если Объект.Исполнители.Количество() > 0 Тогда
		Элементы.Исполнители.ТолькоПросмотр = Не ДоступностьПоШаблону;
		Элементы.Подобрать.Доступность = ДоступностьПоШаблону;
		Элементы.ПереместитьВверх.Доступность = ДоступностьПоШаблону;
		Элементы.ПереместитьВниз.Доступность = ДоступностьПоШаблону;
		Элементы.РазныеСроки.Доступность = ДоступностьПоШаблону;
		Элементы.ВариантСогласования.ТолькоПросмотр = Не ДоступностьПоШаблону;
	Иначе
		Элементы.Исполнители.ТолькоПросмотр = Ложь;
		Элементы.Подобрать.Доступность = Истина;
		Элементы.ВариантСогласования.ТолькоПросмотр = Ложь;
		Элементы.ПереместитьВверх.Доступность = Истина;
		Элементы.ПереместитьВниз.Доступность = Истина;
		Элементы.РазныеСроки.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьШагКлиент()
	
	Если Объект.ВариантСогласования = ВариантСогласованияСмешанно Тогда  
		РаботаСБизнесПроцессамиКлиентСервер.ЗаполнитьШагСогласования(Объект.Исполнители);
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьШагСервер()

	Если Объект.ВариантСогласования = ВариантСогласованияСмешанно Тогда  
		РаботаСБизнесПроцессамиКлиентСервер.ЗаполнитьШагСогласования(Объект.Исполнители);
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ВыполнитьРасчетСроковКлиент()
	
	Если Объект.Исполнители.Количество() = 0 Тогда 
		ОжидаемыйСрокСогласования = '00010101';
		Возврат;
	КонецЕсли;	
	
	Если Не Объект.РазныеСроки 
		И Не ЗначениеЗаполнено(Объект.СрокИсполнения)
		И Не ЗначениеЗаполнено(Объект.СрокИсполненияЧас) Тогда 
		Для Каждого Строка Из Объект.Исполнители Цикл
			Строка.СрокИсполненияДатой = '00010101';
		КонецЦикла;	
		ОжидаемыйСрокСогласования = '00010101';
		Возврат;
	КонецЕсли;	
	
	Если Объект.РазныеСроки Тогда 
		Для Каждого Строка Из Объект.Исполнители Цикл
			Если Не ЗначениеЗаполнено(Строка.СрокИсполнения)
				И Не ЗначениеЗаполнено(Строка.СрокИсполненияЧас) Тогда 
				ОжидаемыйСрокСогласования = '00010101';
				Возврат;
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;
	
	РаботаСБизнесПроцессамиКлиентСервер.ЗаполнитьСрокиСогласованияДатой(ЭтаФорма, Истина);
	
КонецПроцедуры	

&НаСервере
Процедура ВыполнитьРасчетСроковСервер()
	
	РаботаСБизнесПроцессамиКлиентСервер.ЗаполнитьСрокиСогласованияДатой(ЭтаФорма, Истина);
	
КонецПроцедуры	

#КонецОбласти
