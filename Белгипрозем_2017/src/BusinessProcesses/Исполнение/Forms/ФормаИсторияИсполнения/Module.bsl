
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСБизнесПроцессами.УстановитьФорматДаты(Элементы.ДатаИсполнения);
	
	ЗадачаСсылка = Параметры.ЗадачаСсылка;
	БизнесПроцесс = ЗадачаСсылка.БизнесПроцесс;
	
	// предметы
	ПредметыЗадачи = Мультипредметность.ПолучитьПредметыЗадачи(ЗадачаСсылка, Истина);
	Предметы.Загрузить(ПредметыЗадачи);
	Если Предметы.Количество() = 0 Тогда
		Элементы.ГруппаСтраницыПредметов.Видимость = Ложь;
	ИначеЕсли Предметы.Количество() > 1 Тогда
		Элементы.ДекорацияЕще.Видимость = Истина;
		
		ПрописьЧисла          = ЧислоПрописью(Предметы.Количество() - 1, "Л = ru_RU", НСтр("ru = ',,,,,,,,0'"));
		ПрописьЧислаИПредмета =
			ЧислоПрописью(Предметы.Количество() - 1, "Л = ru_RU", НСтр("ru = 'предмет,предмета,предметов,,,,,,0'"));
		ЧислоИПредмет = СтрЗаменить(ПрописьЧислаИПредмета, ПрописьЧисла, Формат(Предметы.Количество() - 1, "ЧГ=") + " ");
		
		Элементы.ДекорацияЕще.Заголовок = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				Элементы.ДекорацияЕще.Заголовок,ЧислоИПредмет);
	КонецЕсли;
	
	Для Каждого СтрокаПредмета Из Предметы Цикл
		СтрокаПредмета.Картинка = МультипредметностьКлиентСервер.ИндексКартинкиРолиПредмета(
			СтрокаПредмета.РольПредмета, ?(СтрокаПредмета.Предмет = Неопределено, Ложь, СтрокаПредмета.Предмет.ПометкаУдаления));
		СтрокаПредмета.Описание = ОбщегоНазначенияДокументооборот.ПредметСтрокой(СтрокаПредмета.Предмет, СтрокаПредмета.ИмяПредмета);
	КонецЦикла;
	
	Элементы.Предметы.ТекущаяСтрока = 0;
	
	НайденнаяСтрока = БизнесПроцесс.РезультатыПроверки.Найти(ЗадачаСсылка, "ЗадачаПроверяющего");
	Если НайденнаяСтрока <> Неопределено Тогда 
		НомерИтерации = НайденнаяСтрока.НомерИтерации;
	КонецЕсли;
	
	ТочкиМаршрута = Новый Массив;
	ТочкиМаршрута.Добавить(БизнесПроцессы.Исполнение.ТочкиМаршрута.Исполнить);
	ТочкиМаршрута.Добавить(БизнесПроцессы.Исполнение.ТочкиМаршрута.ОтветственноеИсполнение);
	
	ИсторияИсполнения.Параметры.УстановитьЗначениеПараметра("БизнесПроцесс", БизнесПроцесс);
	ИсторияИсполнения.Параметры.УстановитьЗначениеПараметра("НомерИтерации", НомерИтерации);
	ИсторияИсполнения.Параметры.УстановитьЗначениеПараметра("ТочкиМаршрута", ТочкиМаршрута);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Предметы[0];
	
	Если ТекущиеДанные <> Неопределено Тогда
		Если ТипЗнч(ТекущиеДанные.Предмет) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
			БизнесПроцессыИЗадачиКлиент.ОткрытьФормуВыполненияЗадачи(ТекущиеДанные.Предмет);
		Иначе	
			ПоказатьЗначение(, ТекущиеДанные.Предмет);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	Строка = Предметы.НайтиПоИдентификатору(Элемент.ТекущаяСтрока);
	Если Строка.Предмет <> Неопределено и НЕ Строка.Предмет.Пустая() Тогда
		Если ТипЗнч(Строка.Предмет) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
			БизнесПроцессыИЗадачиКлиент.ОткрытьФормуВыполненияЗадачи(Строка.Предмет);
		Иначе
			ПоказатьЗначение(, Строка.Предмет);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияИсполненияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	БизнесПроцессыИЗадачиКлиент.СписокЗадачВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияЕщеНажатие(Элемент)
	
	Элементы.ГруппаСтраницыПредметов.ТекущаяСтраница = Элементы.ГруппаПредметы;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	МультипредметностьКлиент.ПредметыВыбор(Предметы, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	
КонецПроцедуры
