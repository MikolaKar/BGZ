
&НаКлиенте
Процедура Остановить(Команда)
	
	КомандыРаботыСБизнесПроцессамиКлиент.Остановить(Элементы.Список.ВыделенныеСтроки, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьБизнесПроцесс(Команда)
	
	КомандыРаботыСБизнесПроцессамиКлиент.СделатьАктивным(Элементы.Список.ВыделенныеСтроки, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Список.Параметры.УстановитьЗначениеПараметра("ТекущаяДата", ТекущаяДатаСеанса());
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоАвторуПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоПроектуПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтбор()
	
	ПараметрыОтбора = Новый Соответствие();
	ПараметрыОтбора.Вставить("ПоАвтору", ПоАвтору);
	ПараметрыОтбора.Вставить("ПоказыватьТолькоАктивныеПроцессы", ПоказыватьТолькоАктивныеПроцессы);
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") Тогда
		ПараметрыОтбора.Вставить("ПоПроекту", ПоПроекту);
	КонецЕсли;
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьОтборСписка(Список, ПараметрыОтбора)
	
	Если ПараметрыОтбора["ПоАвтору"].Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "Автор");
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, 
			"Автор", ПараметрыОтбора["ПоАвтору"]);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") Тогда
		Если ПараметрыОтбора["ПоПроекту"] <> Неопределено 
			И ПараметрыОтбора["ПоПроекту"].Пустая() Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "Проект");
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, 
				"Проект", ПараметрыОтбора["ПоПроекту"]);
		КонецЕсли;
	КонецЕсли;	
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "Завершен");
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "Состояние");
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(
		Список.Отбор, "СтартПроцессаОтложен");
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "ПометкаУдаления");
	
	Если ПараметрыОтбора["ПоказыватьТолькоАктивныеПроцессы"] Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Завершен", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ПометкаУдаления", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Список.Отбор, 
		"Состояние", 
		Перечисления.СостоянияБизнесПроцессов.Прерван, 
		ВидСравненияКомпоновкиДанных.НеРавно);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		Список.Отбор, 
		"СтартПроцессаОтложен",
		Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьПовторение(Команда)
	
	ПовторениеБизнесПроцессовКлиент.НастроитьПовторение(Элементы.Список.ТекущаяСтрока, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьТолькоАктивныеПроцессыПриИзменении(Элемент)
	
	УстановитьОтбор();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбновитьДоступностьКоманд", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступностьКоманд()
	
	РаботаСБизнесПроцессамиКлиент.
		УстановитьДоступностьКнопокИзмененияСостоянияПроцессов(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "БизнесПроцессИзменен" Тогда
		
		Элементы.Список.Обновить();
		
		РаботаСБизнесПроцессамиКлиент.
			УстановитьДоступностьКнопокИзмененияСостоянияПроцессов(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

