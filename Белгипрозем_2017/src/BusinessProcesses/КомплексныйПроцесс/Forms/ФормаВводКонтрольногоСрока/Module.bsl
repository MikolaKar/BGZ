
&НаКлиенте
Процедура НовыйСрокИсполненияПриИзменении(Элемент)
	
	ПриИзмененииНовогоСрока();
	
КонецПроцедуры

&НаКлиенте
Процедура НовыйСрокИсполненияВремяПриИзменении(Элемент)
	
	ПриИзмененииНовогоСрока();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииНовогоСрока()
	
	Если НЕ ЗначениеЗаполнено(НовыйСрокИсполнения) Тогда
		ОписаниеИзмененияСрока = "";
		НовоеОписаниеОбщегоСрока = "";
		Возврат;
	КонецЕсли;
	
	ОписаниеИзмененияСрока = 
		ПереносСроковВыполненияЗадач.ПолучитьПодписьДлительностьПереноса(
			ТекущийПользователь, 
			СрокИсполнения, 
			НовыйСрокИсполнения);
	ОписаниеИзмененияСрока = СтрЗаменить(ОписаниеИзмененияСрока, "(", "");
	ОписаниеИзмененияСрока = СтрЗаменить(ОписаниеИзмененияСрока, ")", "");
	ОписаниеИзмененияСрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Изменение: %1'"),
		ОписаниеИзмененияСрока);
	
	Если ИспользоватьГрафикиРаботы Тогда
		
		ДлительностьВыполнения = ГрафикиРаботы.ПолучитьДлительностьПериода(
			ГрафикРаботыТекущегоПользователя,
			ДатаНачалаОтсчета,
			НовыйСрокИсполнения);
			
		Если ДлительностьВыполнения = Неопределено Тогда
			НовоеОписаниеОбщегоСрока = НСтр("ru = 'Менее 1 дня'");	
		Иначе	
			ПодписьДней = "";
			ПодписьЧасов = "";
			Если ЗначениеЗаполнено(ДлительностьВыполнения.КоличествоПолныхРабочихДней) Тогда
				ПодписьДней = ДелопроизводствоКлиентСервер.ПолучитьПодписьДней(
					ДлительностьВыполнения.КоличествоПолныхРабочихДней);		
			КонецЕсли;
			Если ЗначениеЗаполнено(ДлительностьВыполнения.КоличествоПолныхРабочихЧасов)	Тогда
				ПодписьЧасов = ДелопроизводствоКлиентСервер.ПолучитьПодписьЧасов(
					ДлительностьВыполнения.КоличествоПолныхРабочихЧасов);
			КонецЕсли;
				
			Если ЗначениеЗаполнено(ДлительностьВыполнения.КоличествоПолныхРабочихДней)
				И ЗначениеЗаполнено(ДлительностьВыполнения.КоличествоПолныхРабочихЧасов) Тогда
				
				НовоеОписаниеОбщегоСрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = '%1 %2 и %3 %4 (с учетом графиков работы)'"),
					Строка(ДлительностьВыполнения.КоличествоПолныхРабочихДней),
					ПодписьДней,
					Строка(ДлительностьВыполнения.КоличествоПолныхРабочихЧасов),
					ПодписьЧасов);
				
			ИначеЕсли ЗначениеЗаполнено(ДлительностьВыполнения.КоличествоПолныхРабочихДней) Тогда
				НовоеОписаниеОбщегоСрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = '%1 %2 (с учетом графиков работы)'"),
					Строка(ДлительностьВыполнения.КоличествоПолныхРабочихДней),
					ПодписьДней);
		
			ИначеЕсли ЗначениеЗаполнено(ДлительностьВыполнения.КоличествоПолныхРабочихЧасов) Тогда
				НовоеОписаниеОбщегоСрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = '%1 %2 (с учетом графиков работы)'"),
					Строка(ДлительностьВыполнения.КоличествоПолныхРабочихЧасов),
					ПодписьЧасов);
			КонецЕсли;	
		КонецЕсли;
	Иначе
		
		РазностьДат = НовыйСрокИсполнения - ДатаНачалаОтсчета;
		
		КоличествоПолныхДней = Цел(РазностьДат / (24 * 3600));
		КоличествоПолныхЧасов = Цел((РазностьДат - КоличествоПолныхДней * (24 * 3600)) / 3600);
		
		ПодписьДней = "";
		ПодписьЧасов = "";
		Если ЗначениеЗаполнено(КоличествоПолныхДней) Тогда
			ПодписьДней = ДелопроизводствоКлиентСервер.ПолучитьПодписьДней(КоличествоПолныхДней);		
		КонецЕсли;
		Если ЗначениеЗаполнено(КоличествоПолныхЧасов)	Тогда
			ПодписьЧасов = ДелопроизводствоКлиентСервер.ПолучитьПодписьЧасов(КоличествоПолныхЧасов);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КоличествоПолныхДней)
			И ЗначениеЗаполнено(КоличествоПолныхЧасов) Тогда
			
			НовоеОписаниеОбщегоСрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1 %2 и %3 %4'"),
				Строка(КоличествоПолныхДней),
				ПодписьДней,
				Строка(КоличествоПолныхЧасов),
				ПодписьЧасов);
			
		ИначеЕсли ЗначениеЗаполнено(КоличествоПолныхДней) Тогда
			НовоеОписаниеОбщегоСрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1 %2'"),
				Строка(КоличествоПолныхДней),
				ПодписьДней);
	
		ИначеЕсли ЗначениеЗаполнено(КоличествоПолныхЧасов) Тогда
			НовоеОписаниеОбщегоСрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1 %2'"),
				Строка(КоличествоПолныхЧасов),
				ПодписьЧасов);
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры
	
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	                          
	ИспользоватьВремяВСрокахЗадач = ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	ИспользоватьГрафикиРаботы = ПолучитьФункциональнуюОпцию("ИспользоватьГрафикиРаботы");
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();	
	ГрафикРаботыТекущегоПользователя = ГрафикиРаботы.ПолучитьГрафикРаботыПользователя(ТекущийПользователь);
	
	СрокИсполнения = Параметры.СрокИсполнения;
	ПроцессСтартован = Параметры.Стартован;
	ДатаНачалаОтсчета = Параметры.ДатаНачалаОтсчета;
	ОписаниеОбщегоСрока = Параметры.ОписаниеСрока;
	
	Элементы.СрокИсполненияВремя.Видимость = ИспользоватьВремяВСрокахЗадач;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Готово(Команда)
	
	ОчиститьСообщения();
	Если Не ЗначениеЗаполнено(НовыйСрокИсполнения) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не заполнено поле ""Новый срок""'"),
			,
			"НовыйСрокИсполнения");
		Возврат;
	КонецЕсли;
	
	ДанныеВозврата = Новый Структура;
	ДанныеВозврата.Вставить("СрокИсполнения", НовыйСрокИсполнения);
	ДанныеВозврата.Вставить("Описание", НовоеОписаниеОбщегоСрока);
	Закрыть(ДанныеВозврата);
	
КонецПроцедуры

