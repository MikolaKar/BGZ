
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Параметры.Задача) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	РеквизитыЗадачи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Параметры.Задача, "Исполнитель, СрокИсполнения, Выполнена");
		
	Если РеквизитыЗадачи.Выполнена Тогда
		Отказ = Истина;
		ТекстИсключения = НСтр("ru = 'Нельзя согласовать перенос срока завершенной задачи.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Параметры.Свойство("ЗаявкаНаПереносСрока", ЗаявкаНаПереносСрока);
	Задача = Параметры.Задача;
	Исполнитель = РеквизитыЗадачи.Исполнитель;
	СтарыйСрок = РеквизитыЗадачи.СрокИсполнения;
	ИспользоватьВремяВСрокахЗадач = ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	Если НЕ ИспользоватьВремяВСрокахЗадач Тогда
		Элементы.СтарыйСрок.Формат = "ДФ='dd.MM.yyyy'";
		Элементы.НовыйСрокВремя.Видимость = Ложь;
	КонецЕсли;
	
	РазместитьКоличествоПереносовНаФорме();
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НовыйСрокДатаПриИзменении(Элемент)
	
	ПриИзмененииНовогоСрока(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НовыйСрокВремяПриИзменении(Элемент)
	
	ПриИзмененииНовогоСрока(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПереносовНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Задача", Задача);
	ОткрытьФорму("РегистрСведений.ПереносыСроковВыполненияПроцессовИЗадач.Форма.ФормаСпискаПоЗадаче", ПараметрыФормы);	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадачаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	БизнесПроцессыИЗадачиКлиент.ОткрытьФормуВыполненияЗадачи(Задача);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиИЗакрыть(Команда)
	
	// Проверка заполнения обязательных полей
	Отказ = Ложь;
	Если НЕ ЗначениеЗаполнено(НовыйСрок) Тогда
		Текст = НСтр("ru = 'Поле ""Новый срок"" не заполнено'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			,
			"НовыйСрок",
			,
			Отказ);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Комментарий) Тогда
		Текст = НСтр("ru = 'Поле ""Комментарий"" не заполнено'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			,
			"Комментарий",
			,
			Отказ);
	КонецЕсли;
	Если СтарыйСрок = НовыйСрок Тогда
		Текст = НСтр("ru = 'Новый срок должен отличаться от старого.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			,
			"НовыйСрок",
			,
			Отказ);
	КонецЕсли;
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	ПараметрыОповещения = Новый Структура();
	ПараметрыОповещения.Вставить("ПереносСрока", Истина);
	ПараметрыОповещения.Вставить("Предмет", Задача);
	ПараметрыОповещения.Вставить("НовыйСрок", НовыйСрок);
	ПараметрыОповещения.Вставить("БизнесПроцессПереноса", ЗаявкаНаПереносСрока);
	ПараметрыОповещения.Вставить("КомментарийАвтора", Комментарий);
	ПараметрыОповещения.Вставить("Пользователь", ПользователиКлиентСервер.ТекущийПользователь());	
	ПараметрыОповещения.Вставить("СтарыйСрок", СтарыйСрок);
	
	Закрыть();
	Оповестить("Задача_ИзменениеСрока", ПараметрыОповещения);
		
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Перенос срока исполнения:'"),
		ПолучитьНавигационнуюСсылку(Задача),
		Строка(Задача),
		БиблиотекаКартинок.Информация32);
		
КонецПроцедуры
	
&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура РазместитьКоличествоПереносовНаФорме()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(ПереносыСроковВыполненияПроцессовИЗадач.Предмет) КАК Колво
		|ИЗ
		|	РегистрСведений.ПереносыСроковВыполненияПроцессовИЗадач КАК ПереносыСроковВыполненияПроцессовИЗадач
		|		ЛЕВОЕ СОЕДИНЕНИЕ Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
		|		ПО ПереносыСроковВыполненияПроцессовИЗадач.Предмет = ЗадачаИсполнителя.Ссылка
		|ГДЕ
		|	ЗадачаИсполнителя.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Задача);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() И Выборка.Колво > 0 Тогда
		КоличествоПереносов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			Нстр("ru = 'История переносов (%1)'"),
			Строка(Выборка.Колво));
		Возврат;
	КонецЕсли;
	Элементы.КоличествоПереносов.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииНовогоСрока(ИзмененаДата)
	
	// Если в поле "Новый срок" вводится только время, то в дату проставляется текущая дата.
	// При вводе только времени дата автоматически принимает значение 01.01.0001 <Время>. Это значение исправляется.
	Если ЗначениеЗаполнено(НовыйСрок) и НовыйСрок < Дата(1,1,2) Тогда
		ДатаНачалаДня = НачалоДня(ТекущаяДата());
		ГодНачалаДня = Год(ДатаНачалаДня);
		МесяцНачалаДня = Месяц(ДатаНачалаДня);
		ДеньНачалаДня = День(ДатаНачалаДня);
		ЧасДаты = Час(НовыйСрок);
		МинутаДаты = Минута(НовыйСрок);
		СекундаДаты = Секунда(НовыйСрок);
		НовыйСрок = Дата(
			ГодНачалаДня,
			МесяцНачалаДня,
			ДеньНачалаДня,
			ЧасДаты,
			МинутаДаты,
			СекундаДаты);	
	КонецЕсли;
	Если ИзмененаДата И НовыйСрок < КонецДня(НовыйСрок)
		ИЛИ НЕ ИспользоватьВремяВСрокахЗадач Тогда
		НовыйСрок = КонецДня(НовыйСрок);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НовыйСрок) Тогда
		ДлительностьПереноса = 
			ПереносСроковВыполненияЗадач.ПолучитьПодписьДлительностьПереноса(
				Исполнитель, 
				СтарыйСрок, 
				НовыйСрок);	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтарыйСрок) Тогда
		ДлительностьПереноса = "";
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти