
///////////////////////////////////////////////////////////////////////////////
// ИНТЕРФЕЙСНАЯ ЧАСТЬ ПЕРЕОПРЕДЕЛЯЕМОГО МОДУЛЯ

// Возвращает список пользовательских функций для автоподстановки исполнителей в шаблонах бизнес-процессов
// Параметры:
//	ИменаПредметовДляФункций - массив - массив имен предметов для функций автоподстановки
//
Функция ПолучитьСписокДоступныхФункций(ИменаПредметовДляФункций) Экспорт
	
	ДоступныеФункции = Новый СписокЗначений;
	//ДоступныеФункции.Добавить("ШаблоныБизнесПроцессовПереопределяемый.<ИмяФункции>(Объект)", "<Представление функции>");
	//ДоступныеФункции.Добавить("ШаблоныБизнесПроцессовПереопределяемый.ЗаместительРуководителяАвтораПроцесса(Объект)", "Заместитель руководителя автора процесса");
	
	Возврат ДоступныеФункции;
	
КонецФункции	

// Возвращает роль заместителя руководителя подразделения, в которое входит автор процесса.
// Функция является примером автоподстановки, возвращающей роль с объектом адресации.
//
// Параметры: 
//    БизнесПроцессОбъект - бизнес-процесс, в котором сработала автоподстановка
//
// Возвращаемое значение:
//    Структура со следующими полями:
//    РольИсполнителя – Справочники.РолиИсполнителей – роль "Заместитель руководителя подразделения"
//    ОсновнойОбъектАдресации - Характеристика.ОбъектыАдресацииЗадач - подразделение автора процесса
//    ДополнительныйОбъектАдресации - Характеристика.ОбъектыАдресацииЗадач - неопределено
//
//Функция ЗаместительРуководителяАвтораПроцесса(БизнесПроцессОбъект) Экспорт
//	
//	АвторБизнесПроцесса = БизнесПроцессОбъект.Автор;
//
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//	"ВЫБРАТЬ
//	|	СведенияОПользователях.Подразделение КАК Подразделение
//	|ИЗ
//	|	РегистрСведений.СведенияОПользователях КАК СведенияОПользователях
//	|ГДЕ
//	|	СведенияОПользователях.Пользователь = &Пользователь";
//	Запрос.УстановитьПараметр("Пользователь", АвторБизнесПроцесса);
//	
//	Результат = Запрос.Выполнить();
//	Подразделение = Неопределено;
//	
//	Если Не Результат.Пустой() Тогда 
//		Выборка = Результат.Выбрать();
//		Выборка.Следующий();
//		Подразделение = Выборка.Подразделение;
//	КонецЕсли;	
//	
//	СтруктураАдресации = Новый Структура;
//	СтруктураАдресации.Вставить("РольИсполнителя", 
//		Справочники.РолиИсполнителей.НайтиПоНаименованию("Заместитель руководителя подразделения"));
//	СтруктураАдресации.Вставить("ОсновнойОбъектАдресации", Подразделение);
//	СтруктураАдресации.Вставить("ДополнительныйОбъектАдресации", Неопределено);  
//		  	
//	Возврат СтруктураАдресации;
//	
//КонецФункции
