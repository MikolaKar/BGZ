
////////////////////////////////////////////////////////////////////////////////
// РаботаСКомплекснымиБизнесПроцессамиКлиентСервер: содержит процедуры работы с комплексными
//													процессами на клиенте и на сервере.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Вычисляет строковое представление предшественников для всех этапов
// Параметры:
//	Объект - объект (комплексный процесс или шаблон комплексного процесса)
Процедура ВычислитьОписаниеПредшественников(Объект) Экспорт
	
	Для Каждого ЭтапОбъекта Из Объект.Этапы Цикл
		ЭтапОбъекта.ПредшественникиЭтапаСтрокой = "";	
	КонецЦикла;
	
	Для Каждого ЭтапОбъекта Из Объект.Этапы Цикл	
		ИдентификаторЭтапа = ЭтапОбъекта.ИдентификаторЭтапа;
		СтрокаРезультат = "";
		СтрокаСвязка = " " + НСтр("ru = 'и'") + " ";
		Если ЭтапОбъекта.ПредшественникиВариантИспользования = "ОдинИзПредшественников" Тогда
			СтрокаСвязка = " " + НСтр("ru = 'или'") + " ";
		КонецЕсли;
		Для Каждого Предшественник Из Объект.ПредшественникиЭтапов Цикл			
			Если Предшественник.ИдентификаторПоследователя = ИдентификаторЭтапа Тогда
				Если ЭтапУдален(Объект, Предшественник.ИдентификаторПредшественника) Тогда
					Продолжить;
				КонецЕсли;
				СтрокаПростоеУсловие = "";
				Если ЗначениеЗаполнено(Предшественник.УсловиеРассмотрения) 
					И Предшественник.ИдентификаторПредшественника <> УникальныйИдентификаторПустой() Тогда
					
					Для Каждого ЭтапПредшественник Из Объект.Этапы Цикл
						Если ЭтапПредшественник.ИдентификаторЭтапа = Предшественник.ИдентификаторПредшественника Тогда
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
					Если ТипЗнч(ЭтапПредшественник.ШаблонБизнесПроцесса) = Тип("СправочникСсылка.ШаблоныСогласования") Тогда
						Если Предшественник.УсловиеРассмотрения = ПредопределенноеЗначение("Перечисление.УсловияРассмотренияПредшественниковЭтапа.НезависимоОтРезультатаВыполнения") Тогда
							СтрокаПростоеУсловие = НСтр("ru = 'После завершения '");
						ИначеЕсли Предшественник.УсловиеРассмотрения = ПредопределенноеЗначение("Перечисление.УсловияРассмотренияПредшественниковЭтапа.ПослеНеуспешногоВыполнения") Тогда
							СтрокаПростоеУсловие = НСтр("ru = 'Если не согласовано '");
						ИначеЕсли Предшественник.УсловиеРассмотрения = ПредопределенноеЗначение("Перечисление.УсловияРассмотренияПредшественниковЭтапа.ПослеУспешногоВыполнения") Тогда
							СтрокаПростоеУсловие = НСтр("ru = 'Если согласовано '");
						ИначеЕсли Предшественник.УсловиеРассмотрения = ПредопределенноеЗначение("Перечисление.УсловияРассмотренияПредшественниковЭтапа.ПослеУспешногоСогласованияБезЗамечаний") Тогда
							СтрокаПростоеУсловие = НСтр("ru = 'Если согласовано без замечаний'");
						ИначеЕсли Предшественник.УсловиеРассмотрения = ПредопределенноеЗначение("Перечисление.УсловияРассмотренияПредшественниковЭтапа.ПослеУспешногоСогласованияСЗамечаниями") Тогда
							СтрокаПростоеУсловие = НСтр("ru = 'Если согласовано с замечаниями'");
						КонецЕсли;
					ИначеЕсли ТипЗнч(ЭтапПредшественник.ШаблонБизнесПроцесса) = Тип("СправочникСсылка.ШаблоныУтверждения") Тогда
						Если Предшественник.УсловиеРассмотрения = ПредопределенноеЗначение("Перечисление.УсловияРассмотренияПредшественниковЭтапа.НезависимоОтРезультатаВыполнения") Тогда
							СтрокаПростоеУсловие = НСтр("ru = 'После завершения '");
						ИначеЕсли Предшественник.УсловиеРассмотрения = ПредопределенноеЗначение("Перечисление.УсловияРассмотренияПредшественниковЭтапа.ПослеНеуспешногоВыполнения") Тогда
							СтрокаПростоеУсловие = НСтр("ru = 'Если не утверждено '");
						ИначеЕсли Предшественник.УсловиеРассмотрения = ПредопределенноеЗначение("Перечисление.УсловияРассмотренияПредшественниковЭтапа.ПослеУспешногоВыполнения") Тогда
							СтрокаПростоеУсловие = НСтр("ru = 'Если утверждено '");
						КонецЕсли;
					ИначеЕсли ТипЗнч(ЭтапПредшественник.ШаблонБизнесПроцесса) = Тип("СправочникСсылка.ШаблоныРегистрации") Тогда
						Если Предшественник.УсловиеРассмотрения = ПредопределенноеЗначение("Перечисление.УсловияРассмотренияПредшественниковЭтапа.НезависимоОтРезультатаВыполнения") Тогда
							СтрокаПростоеУсловие = НСтр("ru = 'После завершения '");
						ИначеЕсли Предшественник.УсловиеРассмотрения = ПредопределенноеЗначение("Перечисление.УсловияРассмотренияПредшественниковЭтапа.ПослеНеуспешногоВыполнения") Тогда
							СтрокаПростоеУсловие = НСтр("ru = 'Если не зарегистрировано '");
						ИначеЕсли Предшественник.УсловиеРассмотрения = ПредопределенноеЗначение("Перечисление.УсловияРассмотренияПредшественниковЭтапа.ПослеУспешногоВыполнения") Тогда
							СтрокаПростоеУсловие = НСтр("ru = 'Если зарегистрировано '");
						КонецЕсли;
					ИначеЕсли ТипЗнч(ЭтапПредшественник.ШаблонБизнесПроцесса) = Тип("СправочникСсылка.ШаблоныПриглашения") Тогда
						Если Предшественник.УсловиеРассмотрения = ПредопределенноеЗначение("Перечисление.УсловияРассмотренияПредшественниковЭтапа.НезависимоОтРезультатаВыполнения") Тогда
							СтрокаПростоеУсловие = НСтр("ru = 'После завершения '");
						ИначеЕсли Предшественник.УсловиеРассмотрения = ПредопределенноеЗначение("Перечисление.УсловияРассмотренияПредшественниковЭтапа.ПослеНеуспешногоВыполнения") Тогда
							СтрокаПростоеУсловие = НСтр("ru = 'Если не принято '");
						ИначеЕсли Предшественник.УсловиеРассмотрения = ПредопределенноеЗначение("Перечисление.УсловияРассмотренияПредшественниковЭтапа.ПослеУспешногоВыполнения") Тогда
							СтрокаПростоеУсловие = НСтр("ru = 'Если принято '");
						ИначеЕсли Предшественник.УсловиеРассмотрения = ПредопределенноеЗначение("Перечисление.УсловияРассмотренияПредшественниковЭтапа.ПослеУспешногоСогласованияСЗамечаниями") Тогда
							СтрокаПростоеУсловие = НСтр("ru = 'Если принято обязательными '");
						ИначеЕсли Предшественник.УсловиеРассмотрения = ПредопределенноеЗначение("Перечисление.УсловияРассмотренияПредшественниковЭтапа.ПослеУспешногоСогласованияБезЗамечаний") Тогда
							СтрокаПростоеУсловие = НСтр("ru = 'Если принято всеми '");
						КонецЕсли;
					Иначе
						СтрокаПростоеУсловие = НСтр("ru = 'После завершения '");
					КонецЕсли;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтрокаРезультат) Тогда
					СтрокаРезультат = СтрокаРезультат + СтрокаСвязка + НРег(СтрокаПростоеУсловие) + ПолучитьПредставлениеЭтапа(Объект, Предшественник.ИдентификаторПредшественника);
				Иначе
					СтрокаРезультат = СтрокаПростоеУсловие + ПолучитьПредставлениеЭтапа(Объект, Предшественник.ИдентификаторПредшественника);
				КонецЕсли;
				Если ЗначениеЗаполнено(Предшественник.УсловиеПерехода) Тогда
					СтрокаРезультат = СтрокаРезультат + НСтр("ru = ', если '") + Строка(Предшественник.ИмяПредметаУсловия) + "." + НРег(Строка(Предшественник.УсловиеПерехода)) + ",";
				КонецЕсли;	
			КонецЕсли;
		КонецЦикла;
		ЭтапОбъекта.ПредшественникиЭтапаСтрокой = СтрокаРезультат;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЭтапУдален(Знач Объект, ИдентификаторЭтапа)
	
	Если ТипЗнч(Объект) = Тип("ДанныеФормыСтруктура") Тогда
		Для Каждого ЭтапПроцесса Из Объект.Этапы Цикл
			Если ЭтапПроцесса.ИдентификаторЭтапа = ИдентификаторЭтапа И ЭтапПроцесса.Удален Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция ПолучитьПредставлениеЭтапа(Знач Объект, ИдентификаторЭтапа) Экспорт
	
	Если ИдентификаторЭтапа = Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000") Тогда
		Возврат НСтр("ru = 'При старте процесса'");
	Иначе
		ПараметрыОтбора = Новый Структура("ИдентификаторЭтапа", ИдентификаторЭтапа);
		МассивНайденных = Объект.Этапы.НайтиСтроки(ПараметрыОтбора);
		Если МассивНайденных.Количество() > 0 Тогда
			НайденныйЭтап = МассивНайденных[0];
			Возврат Строка(Объект.Этапы.Индекс(НайденныйЭтап) + 1);
		КонецЕсли;
	КонецЕсли;
	Возврат "";
	
КонецФункции

#КонецОбласти