////////////////////////////////////////////////////////////////////////////////
// Подсистема "Базовая функциональность".
// Серверные процедуры и функции общего назначения:
// - Поддержка профилей безопасности
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Запрашивает новые разрешения на использование внешних ресурсов.
//
// Параметры:
//  Идентификаторы - Массив(УникальныйИдентификатор), идентификаторы запросов, которые требуется применить,
//  ФормаВладелец - УправляемаяФорма, форма, которая должна блокироваться до окончания применения разрешений,
//  ОповещениеОЗакрытии - ОписаниеОповещения, которое будет вызвано при успешном предоставлении разрешений.
//
Процедура ПрименитьЗапросыНаИспользованиеВнешнихРесурсов(Знач Идентификаторы, ФормаВладелец, ОповещениеОЗакрытии) Экспорт
	
	СтандартнаяОбработка = Истина;
	
	ОбработчикиСобытия = ОбщегоНазначенияКлиент.ОбработчикиСлужебногоСобытия(
		"СтандартныеПодсистемы.БазоваяФункциональность\ПриОбработкеЗапросовНаИспользованиеВнешнихРесурсов");
	
	Для Каждого Обработчик Из ОбработчикиСобытия Цикл
		Обработчик.Модуль.ПриОбработкеЗапросовНаИспользованиеВнешнихРесурсов(Идентификаторы, ФормаВладелец, ОповещениеОЗакрытии, СтандартнаяОбработка);
	КонецЦикла;
	
	Если СтандартнаяОбработка Тогда
		
		Если ОтображатьПомощникНастройкиРазрешений() Тогда
			
			ПараметрыФормы = Новый Структура("Идентификаторы,РежимВосстановления", Идентификаторы,Ложь);
			
			ОткрытьФорму(
				"Обработка.НастройкаРазрешенийНаИспользованиеВнешнихРесурсов.Форма.ИнициализацияЗапросаРазрешений",
				ПараметрыФормы,
				ФормаВладелец,
				,
				,
				,
				ОповещениеОЗакрытии,
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
			);
			
		Иначе
			
			ОповещениеПриПримененииЗапросовНаИспользованиеВнешнихРесурсов = ОповещениеОЗакрытии;
			ПодключитьОбработчикОжидания("ПрименитьЗапросыНаИспользованиеВнешнихРесурсовСейчас", 0.1, Истина);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Открывает диалог настройки режима использования профилей безопасности для
// текущей информационной базы.
//
Процедура ОткрытьДиалогНастройкиИспользованияПрофилейБезопасности() Экспорт
	
	ОткрытьФорму(
		"Обработка.НастройкаРазрешенийНаИспользованиеВнешнихРесурсов.Форма.НастройкиИспользованияПрофилейБезопасности",
		,
		,
		"Обработка.НастройкаРазрешенийНаИспользованиеВнешнихРесурсов.Форма.НастройкиИспользованияПрофилейБезопасности",
		,
		,
		,
		РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Только для внутреннего использования.
// Завершение обработки запросов на использование внешних ресурсов.
//
Процедура ПрименитьЗапросыНаИспользованиеВнешнихРесурсовЗавершение() Экспорт
	
	ОповещениеОЗакрытии = ОповещениеПриПримененииЗапросовНаИспользованиеВнешнихРесурсов;
	ОповещениеПриПримененииЗапросовНаИспользованиеВнешнихРесурсов = Неопределено;
	Если ОповещениеОЗакрытии <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ОповещениеОЗакрытии, КодВозвратаДиалога.ОК);
	КонецЕсли;
	
КонецПроцедуры

// Только для внутреннего использования.
//
Процедура ПроверкаПримененияЗапросовНаИспользованиеВнешнихРесурсов(Результат, ДополнительныеПараметры) Экспорт
	
	ОригинальноеОписаниеОповещенияОЗакрытии = ДополнительныеПараметры.ОригинальноеОписаниеОповещенияОЗакрытии;
	Если ОригинальноеОписаниеОповещенияОЗакрытии <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ОригинальноеОписаниеОповещенияОЗакрытии, Результат);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Идентификаторы", ДополнительныеПараметры.ИдентификаторыЗапросов);
	ПараметрыФормы.Вставить("РежимВосстановленияПослеПредоставленияРазрешений", Истина);
	
	ОткрытьФорму(
		"Обработка.НастройкаРазрешенийНаИспользованиеВнешнихРесурсов.Форма.ИнициализацияЗапросаРазрешений",
		ПараметрыФормы,
		,
		,
		,
		,
		,
		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс
	);
	
КонецПроцедуры

// Проверяет необходимость отображения помощника настройки разрешений на использование
//  внешних (относительно кластера серверов 1С:Предприятия) ресурсов.
//
// Возвращаемое значение: Булево.
//
Функция ОтображатьПомощникНастройкиРазрешений()
	
	Возврат СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиента().ОтображатьПомощникНастройкиРазрешений;
	
КонецФункции

// Возвращает длительность ожидания применения изменений в настройках профилей безопасности
// в кластере серверов.
//
// Возвращаемое значение - Число - длительность ожидания применения изменений (в секундах).
//
Функция ДлительностьОжиданияПримененияИзменений() Экспорт
	
	Возврат 20;
	
КонецФункции

#КонецОбласти
