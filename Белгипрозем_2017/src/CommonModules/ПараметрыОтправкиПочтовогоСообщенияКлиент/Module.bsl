// Шифрует вложения, указанные в структуре ПараметрыОтправки.
//
Функция ЗашифроватьВложения(ПараметрыОтправки, Сообщение, УникальныйИдентификатор) Экспорт
	
	Если Не ПараметрыОтправки.Шифровать Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ПараметрыОтправки.ОтпечаткиСертификатовШифрования.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
		
	МенеджерКриптографии = ЭлектроннаяПодписьКлиент.ПолучитьМенеджерКриптографии();
	МассивСертификатовДляШифрования = ПолучитьМассивСертификатовДляШифрования(
		ПараметрыОтправки.ОтпечаткиСертификатовШифрования);
	Для каждого Вложение Из Сообщение.Вложения Цикл
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(Вложение.Адрес);
		ИмяФайла = Вложение.ИмяФайла;
		Если НРег(ИмяФайла) = НРег("1C-53898-2010.xml") Тогда
			Продолжить; // Файлы обмена сообщениями не шифруются.
		КонецЕсли;
		ИмяФайлаИнфо = РаботаСоСтроками.РазложитьИмяФайла(ИмяФайла);
		Если НРег(ИмяФайлаИнфо.Расширение) = НРег(ПараметрыОтправки.РасширениеДляФайловПодписи) Тогда
			Продолжить; // Файлы подписи не шифруются.
		КонецЕсли;
		Если Вложение.Зашифрован Тогда
			ДвоичныеДанные = МенеджерКриптографии.Расшифровать(ДвоичныеДанные);
		Иначе
			ДобавитьЗначениеКСтрокеЧерезРазделитель(
				ИмяФайла,
				".",
				ПараметрыОтправки.РасширениеДляЗашифрованныхФайлов);
		КонецЕсли;
		ДвоичныеДанные = МенеджерКриптографии.Зашифровать(ДвоичныеДанные, МассивСертификатовДляШифрования);
		УдалитьИзВременногоХранилища(Вложение.Адрес);
		Вложение.Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
		Вложение.ИмяФайла = ИмяФайла;
		Вложение.Зашифрован = Истина;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

Функция ПолучитьМассивСертификатовДляШифрования(ОтпечаткиСертификатовШифрования)
	
	Результат = Новый Массив;
	Для каждого Отпечаток Из ОтпечаткиСертификатовШифрования Цикл
		Результат.Добавить(ЭлектроннаяПодписьКлиент.ПолучитьСертификатПоОтпечатку(Отпечаток));
	КонецЦикла;
	Возврат Результат;
	
КонецФункции
