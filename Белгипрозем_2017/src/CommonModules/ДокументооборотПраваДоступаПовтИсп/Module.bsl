
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Возвращает Истина, если включено использование прав доступа
Функция ВключеноИспользованиеПравДоступа() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат Константы.ДокументооборотИспользоватьОграничениеПравДоступа.Получить();
	
КонецФункции

// Возвращает Истина, если включено отложенное обновление прав доступа
Функция ОтложенноеОбновлениеПравДоступа() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат Константы.ДокументооборотИспользоватьОтложенноеОбновлениеПравДоступа.Получить();
	
КонецФункции	

// Вычисляет хэш значение по строке
// используется для заполнения реквизита дескриптора Хэш,
// который позволяет быстро находить существующий дескриптор по шаблону
//
Функция ВычислитьХэшПоСтроке(Строка) Экспорт
	
	ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.CRC32);
	ХешированиеДанных.Добавить(Строка);
	
	Возврат ХешированиеДанных.ХешСумма;
	
КонецФункции

// Возвращает состав группы пользователей
// Если указано значение Неопределено, то возвращаются
// все пользователи
Функция ПолучитьСоставГруппыПользователей(ГруппаПользователей) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ГруппаПользователей = ПредопределенноеЗначение("Справочник.ГруппыПользователей.ВсеПользователи") 
		ИЛИ ГруппаПользователей = Неопределено Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Пользователи.Ссылка КАК Пользователь
			|ИЗ
			|	Справочник.Пользователи КАК Пользователи
			|ГДЕ
			|	Пользователи.ПометкаУдаления = ЛОЖЬ";
			
		Возврат Запрос.Выполнить().Выгрузить();;
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ГруппыПользователейСостав.Пользователь КАК Пользователь
			|ИЗ
			|	Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
			|		ПО ГруппыПользователейСостав.Пользователь = Пользователи.Ссылка
			|ГДЕ
			|	ГруппыПользователейСостав.Ссылка.ПометкаУдаления = ЛОЖЬ
			|	И ГруппыПользователейСостав.Ссылка В ИЕРАРХИИ(&Ссылка)
			|	И Пользователи.ПометкаУдаления = ЛОЖЬ";
			
		Запрос.УстановитьПараметр("Ссылка", ГруппаПользователей.Ссылка);	

		Возврат Запрос.Выполнить().Выгрузить();

	КонецЕсли;
	
КонецФункции

// Функция возвращает Истина, если для указанного вида доступа
// в этой группе установлено "Разрешены все, кроме указанных",
// Ложь, если установлено "Запрещены все, кроме указанных"
// и Неопределено в противном случае
Функция ВидДоступаРазрешен(ГруппаДоступа, ВидДоступа) Экспорт
	
	// Перебор всех видов доступа
	Для Каждого ЭлементДоступа Из ГруппаДоступа.ВидыДоступа Цикл
		
		Если ЭлементДоступа.ВидДоступа = ВидДоступа Тогда
			Возврат ЭлементДоступа.ДоступРазрешен;
		КонецЕсли	
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции	

// Возвращает типы измерения "Объект" регистра ДескрипторыДоступаДляОбъектов
Функция ТипыОбъектовДляДескрипторовДоступаОбъектов() Экспорт
	
	Возврат Метаданные.РегистрыСведений.ДескрипторыДоступаДляОбъектов.Измерения.Объект.Тип;
	
КонецФункции

// Возвращает соответствие типов папок и метаданных хранящихся в них объектах. 
// Ключ - тип папки,
// Значение - массив метаданных хранящихся в ней объектов
//
Функция ТипыПапокИСодержимого() Экспорт
	
	Результат = Новый Соответствие;
	
	// Внутренние документы
	МассивМетаданныхСодержимого = Новый Массив;
	МассивМетаданныхСодержимого.Добавить(Метаданные.Справочники.ВнутренниеДокументы);
	Результат.Вставить(Тип("СправочникСсылка.ПапкиВнутреннихДокументов"), МассивМетаданныхСодержимого);
	
	// Файлы
	МассивМетаданныхСодержимого = Новый Массив;
	МассивМетаданныхСодержимого.Добавить(Метаданные.Справочники.Файлы);
	Результат.Вставить(Тип("СправочникСсылка.ПапкиФайлов"), МассивМетаданныхСодержимого);
	
	ДокументооборотПраваДоступаПереопределяемый.ДополнитьТипыПапокИСодержимого(Результат);
	
	Возврат Результат;
	
КонецФункции

#КонецЕсли
