// Сохраняет сведения о записи новой задачи для последующей обработки
// в обработчике перед записью
Процедура СтартВнешнегоПорученияПередЗаписьюЗадач(Источник, Отказ) Экспорт
	
	Если Источник.ЭтоНовый() Тогда
		Источник.ДополнительныеСвойства.Вставить("ЗаписьНовойЗадачи");
	КонецЕсли;	
		
КонецПроцедуры

// Создает и стартует внешний бизнес-процесс Поручение 
// при записи задачи другого бизнес-процесса, если эта задача 
// является внешней
Процедура СтартВнешнегоПорученияПриЗаписиЗадач(Источник, Отказ) Экспорт
	
	Если ТипЗнч(Источник.БизнесПроцесс) = Тип("БизнесПроцессСсылка.Поручение") Тогда
		Возврат;
	КонецЕсли;	
	
	Если Источник.ДополнительныеСвойства.Свойство("ЗаписьНовойЗадачи") Тогда
		ВнешняяРоль = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Источник.РольИсполнителя, "ВнешняяРоль");
		Если Не Источник.РольИсполнителя.Пустая() И ВнешняяРоль = Истина Тогда
			СтартоватьВнешнееПоручение(Источник);
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

Процедура СтартоватьВнешнееПоручение(Задача)
	
	// Создаем бизнес-процесс поручение
	Поручение = БизнесПроцессы.Поручение.СоздатьБизнесПроцесс();
	Поручение.Дата = ТекущаяДата();
	Поручение.Автор = Задача.Автор;
	Поручение.Важность = Задача.Важность;
	Поручение.Исполнитель = Задача.РольИсполнителя;
	Поручение.Наименование = Задача.Наименование;
	Поручение.Описание = Задача.Описание;
	Поручение.СрокИсполнения = Задача.СрокИсполнения;
	Поручение.ЗадачаИсточник = Задача.Ссылка;
	
	Мультипредметность.ЗаполнитьПредметыПроцессаПоЗадаче(Поручение, Задача.Ссылка);
	
	Поручение.Записать();
	Поручение.Старт();
	
КонецПроцедуры

// Помечает задачу-источник как выполненную
Процедура ВыполнитьЗадачуИсточник(БизнесПроцесс) Экспорт
	
	Если ВнешниеЗадачиВызовСервераПереопределяемый.ВыполнитьЗадачуИсточник(БизнесПроцесс) Тогда
		Возврат;
	КонецЕсли;	
	
	Если ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессОбъект.Поручение") Тогда
		Задача = БизнесПроцесс.ЗадачаИсточник.ПолучитьОбъект();
		Задача.ВыполнитьЗадачу();
	КонецЕсли;	
	
КонецПроцедуры
