////////////////////////////////////////////////////////////////////////////////
// Подсистема "Адресный классификатор".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Проверяет наличие обновлений адресного классификатора на веб сервере
// для тех объектов, которые ранее уже загружались.
//
// Возвращаемое значение:
//     Массив  - содержит структуры, описывающие адресные объекты, каждая структура имеет формат:
//         * КодАдресногоОбъекта - Строка - код адресного объекта
//         * Наименование        - Строка - наименование адресного объекта
//         * Сокращение          - Строка - сокращение адресного объекта
//         * Индекс              - Строка - индекс адресного объекта
//         * ОбновлениеДоступно  - Булево - флаг доступности обновления
//
Функция ПроверитьОбновлениеАдресныхОбъектов() Экспорт
	
	ВерсииХранимыхСведений = АдресныйКлассификаторВызовСервера.ВерсииАдресныхОбъектов();
	
	Результат = ВерсииДоступныеНаСайте1С();
	Если НЕ Результат.Статус Тогда
		Возврат Результат;
	КонецЕсли;
	ДоступныеВерсии = Результат.ДоступныеВерсии;
	
	ДоступныеОбновления = Новый Массив;
	
	Для Каждого ЭлементХранимаяВерсия Из ВерсииХранимыхСведений Цикл
		АдресныйОбъект = ЭлементХранимаяВерсия.Представление;
		АдресныеСведения = АдресныйКлассификаторВызовСервера.ИнформацияПоАдресномуОбъекту(АдресныйОбъект);
		АдресныеСведения.Вставить("ОбновлениеДоступно",
			?(ТипЗнч(ДоступныеВерсии[АдресныйОбъект]) <> Тип("Дата"),
			  Ложь,
			  ДоступныеВерсии[АдресныйОбъект] > Дата(ЭлементХранимаяВерсия.Значение)));
		ДоступныеОбновления.Добавить(АдресныеСведения);
	КонецЦикла;
	
	// Подготовка версии последнего обновления КЛАДР на сайте 1С
	Результат = ЗаполнитьРезультат(ДоступныеОбновления);
	//
	ВерсияПоследнегоОбновленияКЛАДР = ДоступныеВерсии["V0"];
	Если ТипЗнч(ВерсияПоследнегоОбновленияКЛАДР) <> Тип("Дата") Тогда
		ВерсияПоследнегоОбновленияКЛАДР = '00000000';
	КонецЕсли;
	Результат.Вставить("ВерсияПоследнегоОбновленияКЛАДР", ВерсияПоследнегоОбновленияКЛАДР);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Экспортные служебные процедуры и функции

// Получает версии, доступные на сайте 1С.
//
// Возвращаемое значение:
//	Структура - с двумя ключами:
//	  * Статус          - Булево       - статус наличия доступных версий.
//	  * ДоступныеВерсии - Соответствие - доступные версии.
//
Функция ВерсииДоступныеНаСайте1С() Экспорт
	
	URLСтрока = ПутьКФайлуОписаниюДанныхКЛАДР();
	
	// Обход особенности БТС
	СоставАдреса = ОбщегоНазначенияКлиентСервер.СтруктураURI(URLСтрока);
	Если ПустаяСтрока(СоставАдреса.Порт) Тогда
		Протокол = ВРег(СоставАдреса.Схема);
		Если Протокол = "HTTP" Тогда
			СоставАдреса.Порт = 80;
		ИначеЕсли Протокол = "HTTPS" Тогда
			СоставАдреса.Порт = 443;
		КонецЕсли;
		URLСтрока = URIПоСтруктуре(СоставАдреса);
	КонецЕсли;
	
#Если Клиент Тогда
	РезультатПолученияФайлов = ПолучениеФайловИзИнтернетаКлиент.СкачатьФайлНаКлиенте(URLСтрока);
#Иначе
	РезультатПолученияФайлов = ПолучениеФайловИзИнтернета.СкачатьФайлНаСервере(URLСтрока);
#КонецЕсли
	
	Если Не РезультатПолученияФайлов.Статус Тогда
		Возврат РезультатПолученияФайлов;
	КонецЕсли;
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.Прочитать(РезультатПолученияФайлов.Путь);
	ТекстXML = ТекстовыйДокумент.ПолучитьТекст();
	
	УдалитьФайлы(РезультатПолученияФайлов.Путь);
	
	ДоступныеВерсии = АдресныйКлассификаторВызовСервера.ПолучитьВерсииАдресныхСведений(ТекстXML);
	
	Возврат Новый Структура("Статус, ДоступныеВерсии", Истина, ДоступныеВерсии);
	
КонецФункции

// Путь к файлу на веб сервере, содержащему информацию по версиям адресных сведений
//
// Возвращаемое значение:
//	Строка - путь к файлу описания данных КЛАДР.
//
Функция ПутьКФайлуОписаниюДанныхКЛАДР() Экспорт
	
	Возврат "http://downloads.1c.ru/ipp/ITSREPV/V8Update/Configs/kladr/versions.xml";
	
КонецФункции

// Формирует структуру с ключами Статус (Истина) и Значение.
//
// Параметры:
//	Значение - ПроизвольныйТип - передаваемое значение. 
//	Статус - Булево - передаваемый статус.
//
// Возвращаемое значение:
//	Структура - возвращаемая структура.
//	
Функция ЗаполнитьРезультат(Знач Значение, Знач Статус = Истина)
	
	Если Статус Тогда
		Возврат Новый Структура("Статус, Значение", Истина, Значение);
	Иначе
		Возврат Новый Структура("Статус, СообщениеОбОшибке", Ложь, Значение);
	КонецЕсли;
	
КонецФункции

// Функция возвращает структуру с набором полей как у записи регистра сведений
//		АдресныйКлассификатор с пустым набором значений
//
// Возвращаемое значение:
//		Структура - структуру с набором полей как у записи регистра сведений
//			АдресныйКлассификатор с пустым набором значений
//
Функция ПустаяСтруктураАдреса() Экспорт
	
	СтруктураАдреса =  Новый Структура;
	СтруктураАдреса.Вставить("Код", 0);
	СтруктураАдреса.Вставить("Наименование", "");
	СтруктураАдреса.Вставить("Сокращение", "");
	СтруктураАдреса.Вставить("ТипАдресногоЭлемента", 0);
	СтруктураАдреса.Вставить("Индекс", "");
	СтруктураАдреса.Вставить("КодАдресногоОбъектаВКоде", 0);
	СтруктураАдреса.Вставить("КодРайонаВКоде", 0);
	СтруктураАдреса.Вставить("КодГородаВКоде", 0);
	СтруктураАдреса.Вставить("КодНаселенногоПунктаВКоде", 0);
	СтруктураАдреса.Вставить("КодУлицыВКоде", 0);
	СтруктураАдреса.Вставить("ПризнакАктуальности", 0);
	
	Возврат СтруктураАдреса;
	
КонецФункции

// Противоположность ОбщегоНазначенияКлиентСервер.СтруктураURI
Функция URIПоСтруктуре(Знач СтруктураURI)
	Результат = "";
	
	// Протокол
	Если Не ПустаяСтрока(СтруктураURI.Схема) Тогда
		Результат = Результат + СтруктураURI.Схема + "://";
	КонецЕсли;
	
	// Авторизация
	Если Не ПустаяСтрока(СтруктураURI.Логин) Тогда
		Результат = Результат + СтруктураURI.Логин + ":" + СтруктураURI.Пароль + "@";
	КонецЕсли;
		
	// Все остальное
	Результат = Результат + СтруктураURI.Хост;
	Если Не ПустаяСтрока(СтруктураURI.Порт) Тогда
		Результат = Результат + ":" + ?(ТипЗнч(СтруктураURI.Порт) = Тип("Число"), Формат(СтруктураURI.Порт, ""), СтруктураURI.Порт);
	КонецЕсли;
	
	Результат = Результат + "/" + СтруктураURI.ПутьНаСервере;
	Возврат Результат;
	
КонецФункции

#КонецОбласти
