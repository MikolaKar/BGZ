#Область ПриСозданииНаСервере
// ПРОЦЕДУРЫ ПРИ СОЗДАНИИ НА СЕРВЕРЕ

//Процедура для программного управления реквизитами форм при локализации
//Параметры:
//Форма - управляемая форма, для которой вызывается процедура,
//Имя - Имя метаданных объекта формы,
//Параметры - дополнительные параметры (структура)
Процедура ПриСозданииНаСервере(Форма, Отказ = Ложь) Экспорт

	Имя = Форма.ИмяФормы;
	
	Если Имя = "Справочник.ВходящиеДокументы.Форма.ФормаЭлемента" Тогда
		ПриСозданииФормыЭлементаСправочникаВходящиеДокументы(Форма);
        
    ИначеЕсли Имя = "Справочник.ВнутренниеДокументы.Форма.ФормаЭлемента" Тогда
    	ПриСозданииФормыЭлементаСправочникаВнутренниеДокументы(Форма, Отказ);
    
   ИначеЕсли Имя = "Справочник.ИсходящиеДокументы.Форма.ФормаЭлемента" Тогда
    	ПриСозданииФормыЭлементаСправочникаИсходящиеДокументы(Форма);
    
    ИначеЕсли Имя = "Справочник.Корреспонденты.Форма.ФормаЭлемента" Тогда
		ПриСозданииФормыЭлементаСправочникаКорреспонденты(Форма);
    
    ИначеЕсли Имя = "Справочник.ФизическиеЛица.Форма.ФормаЭлемента" Тогда
		ПриСозданииФормыЭлементаСправочникаФизическиеЛица(Форма);
    
    ИначеЕсли Имя = "Справочник.ВидыКонтактнойИнформации.Форма.ФормаЭлемента" Тогда
		ПриСозданииФормыЭлементаСправочникаВидыКонтактнойИнформации(Форма);
    
    ИначеЕсли Имя = "Справочник.Пользователи.Форма.ФормаЭлемента" Тогда
		ПриСозданииФормыЭлементаСправочникаПользователи(Форма);
		
    ИначеЕсли Имя = "Справочник.ВидыВнутреннихДокументов.Форма.ФормаЭлемента" Тогда
		ПриСозданииФормыЭлементаСправочникаВидыВнутреннихДокументов(Форма);
		
    ИначеЕсли Имя = "Справочник.Пользователи.Форма.ФормаПользователя" Тогда
		ПриСозданииФормыПользователяСправочникаПользователи(Форма);
		
	ИначеЕсли Имя = "БизнесПроцесс.Согласование.Форма.ФормаЗадачиИсполнителя" Тогда
		ПриСозданииФормыЭлементаЗадачи(Форма);
		
 	ИначеЕсли Имя = "БизнесПроцесс.Согласование.Форма.ФормаБизнесПроцесса" Тогда
		ПриСозданииФормыЭлементаБизнесПроцесса(Форма);
		
	ИначеЕсли Имя = "Справочник.ВнутренниеДокументы.Форма.ФормаСпискаСПапками" Тогда
    	ПриСозданииФормыСпискаСправочникаВнутренниеДокументы(Форма, Отказ);
		
	ИначеЕсли Имя = "Справочник.ВходящиеДокументы.Форма.ФормаСписка" Тогда
    	ПриСозданииФормыСпискаСправочникаВходящиеДокументы(Форма, Отказ);
    
	ИначеЕсли Имя = "Справочник.ИсходящиеДокументы.Форма.ФормаСписка" Тогда
    	ПриСозданииФормыСпискаСправочникаИсходящиеДокументы(Форма, Отказ);
    
    ИначеЕсли Имя = "Справочник.СтруктураПредприятия.Форма.ФормаЭлемента" Тогда
    	ПриСозданииФормыЭлементаСправочникаСтруктураПредприятия(Форма);
		
	КонецЕсли;
			
КонецПроцедуры 

Процедура ПриСозданииФормыЭлементаСправочникаВходящиеДокументы(Форма)
	
	Элементы = Форма.Элементы;
	Объект	 = Форма.Объект;

	ВидСоздаваемогоДокумента = Объект.ВидДокумента;
	Если НЕ ЗначениеЗаполнено(ВидСоздаваемогоДокумента) Тогда
		// Если новый, то пробуем получить из Параметры
		Если Форма.Параметры.Свойство("ВидДокумента") Тогда
	        ВидСоздаваемогоДокумента = Форма.Параметры.ВидДокумента;
			Объект.ВидДокумента = ВидСоздаваемогоДокумента;
		КонецЕсли; 
	КонецЕсли;
	
	ВидДокПоручение = Справочники.ВидыВходящихДокументов.НайтиПоНаименованию("Поручение на выполнение работ");
	
	// Добавление недостающих реквизитов
	Если ВидСоздаваемогоДокумента = ВидДокПоручение Тогда
		ДобавитьРеквизитыПоручения(Объект, Форма, Элементы);
		ДобавитьКнопкиПоручения(Объект, Форма, Элементы);
	КонецЕсли; 
	
	Элементы.ВидДокумента.Ширина = 50;
    
 	// Обработчик подсистемы "Контактная информация"
	Элемент = Элементы.Вставить("ГруппаКонтактнаяИнформация", Тип("ГруппаФормы"), Элементы.ГруппаСтраницы);
    Элемент.Заголовок = "Адрес";
    
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(Форма, Объект, "ГруппаКонтактнаяИнформация");
    
    // Перемещение Номенклатуры
    ЭлементНоменклатуры = Элементы.Найти("НоменклатураДел");
    Если ЭлементНоменклатуры <> Неопределено Тогда
        Элементы.Переместить(ЭлементНоменклатуры, Элементы.ГруппаРеквизиты, Элементы.НаименованиеКод);
        
        ЭлементНоменклатуры.УстановитьДействие("ПриИзменении", "НоменклатураДелПриИзменении");
    КонецЕсли;
    
    // Перемещение Адреса зем участка
    ЭУ = Элементы.Найти("АдресЗемельногоУчастка");
    Если ЭУ <> Неопределено Тогда
        Элементы.Переместить(ЭУ, Элементы.ГруппаОтправитель, );
    КонецЕсли;
    
    //Перемещение Категорий
    ЭУ = Элементы.Найти("ГруппаКатегории");
    Если ЭУ <> Неопределено Тогда
        Элементы.Переместить(ЭУ, Элементы.ГруппаРеквизиты, );
        
        // переопределим действия по нажатию картинки Категории
        ЭУ = Элементы.Найти("КартинкаКатегории");
        ЭУ.УстановитьДействие("Нажатие", "КартинкаКатегорииВРеквизитахНажатие");
    КонецЕсли;
    
    // Заполнение реквизитов
    Если Объект.Ссылка.Пустая() Тогда
        Форма.Объект.Ответственный = Форма.ТекущийПользователь;
        
		Если Элементы.ВопросДеятельности.Видимость Тогда
			Если Не ЗначениеЗаполнено(Форма.Объект.ВопросДеятельности) Тогда
	            Форма.Объект.ВопросДеятельности = Справочники.ВопросыДеятельности.НайтиПоНаименованию("Основной");
			КонецЕсли; 
        КонецЕсли; 
    КонецЕсли;
    
	//// Кнопка "Создать карточку"
	//Кмд = Форма.Команды.Добавить("СоздатьКарточку");
	//Кмд.Действие = "СоздатьКарточкуОбъектаРабот";
	//Кмд.Заголовок = "Создать карточку";
	//Кмд.Картинка = БиблиотекаКартинок.СоздатьЭлементСписка;
	//Кмд.Отображение = ОтображениеКнопки.КартинкаИТекст;
   
////    //Добавляем новую кнопку
	// Элемент = Элементы.Вставить("КнопкаСоздатьКарточку", Тип("КнопкаФормы"), Форма.КоманднаяПанель);
	//Элемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	//Элемент.ИмяКоманды = "СоздатьКарточку";
	//Элемент.Заголовок = "Создать карточку";
    
    // Добавление команд обработчиков
    ИскЭлемент = Элементы.Найти("ИсходящаяДата");
    Если ИскЭлемент <> Неопределено Тогда
        ИскЭлемент.УстановитьДействие("ПриИзменении", "СформироватьЗаголовок");
    КонецЕсли; 
    
    ИскЭлемент = Элементы.Найти("ИсходящийНомер");
    Если ИскЭлемент <> Неопределено Тогда
        ИскЭлемент.УстановитьДействие("ПриИзменении", "СформироватьЗаголовок");
    КонецЕсли;
	
КонецПроцедуры 

Процедура ПриСозданииФормыЭлементаСправочникаВнутренниеДокументы(Форма, Отказ)
	
    Элементы = Форма.Элементы;
    Объект	 = Форма.Объект;
    ДанныеЗаполнения = Форма.Параметры.Основание;
	ВводНаОсновании = ЗначениеЗаполнено(ДанныеЗаполнения);
	
	ВидСоздаваемогоДокумента = Объект.ВидДокумента;
	Если НЕ ЗначениеЗаполнено(ВидСоздаваемогоДокумента) Тогда
		// Если новый, то пробуем получить из Параметры
		Если Форма.Параметры.Свойство("ВидДокумента") Тогда
	        ВидСоздаваемогоДокумента = Форма.Параметры.ВидДокумента;
			Объект.ВидДокумента = ВидСоздаваемогоДокумента;
		КонецЕсли; 
	КонецЕсли;
	
	// Добавление недостающих реквизитов
	Если ВидСоздаваемогоДокумента = Справочники.ВидыВнутреннихДокументов.АктВыполненныхРабот Тогда
		
		ДобавитьРеквизитыАктВыполненныхРабот(Объект, Форма, Элементы);
		Если ВводНаОсновании Тогда
			ЗаполнитьАктВыполненныхРабот(Форма, Отказ, ДанныеЗаполнения);
		КонецЕсли; 
		СкрытьЛишниеРеквизитыДелаАктВыполненныхРабот(Элементы);
		ДобавитьКнопкиАктВыполненныхРабот(Объект, Форма, Элементы);
		
		// Проверка прав на создание акта выполненных работ
		Если Объект.Ссылка.Пустая() Тогда
			ОписаниеОшибки = "";
			ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
			Если Не мРаботаСДоговорами.РазрешеноСоздатьАктВыполненныхРабот(ДанныеЗаполнения, ТекущийПользователь, ОписаниеОшибки) Тогда
				Сообщить(ОписаниеОшибки);
				Отказ = Истина;
			КонецЕсли; 
		КонецЕсли;
	
		Если мЭСЧФ.АктВыполненныхРаботНельзяИзменять(Объект.Ссылка) Тогда
			Форма.ТолькоПросмотр = Истина;
		    Форма.Элементы.СостояниеАкта.Доступность = Истина;
			Форма.Элементы.ВрученЗаказчику.Доступность = Истина;
			Форма.Элементы.Возвращен.Доступность = Истина;
			Форма.Элементы.СуммаНДС.ТолькоПросмотр = Истина;
			Форма.Элементы.СтавкаНДС.ТолькоПросмотр = Истина;
			Форма.Элементы.ОсвобождениеОтНДС.ТолькоПросмотр = Истина;
		КонецЕсли; 
	
	ИначеЕсли ВидСоздаваемогоДокумента = Справочники.ВидыВнутреннихДокументов.Дело Тогда
		
		// Проверка прав на создание Дела
		Если Объект.Ссылка.Пустая() Тогда
			Этап = ДанныеЗаполнения;
			ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
			ОписаниеОшибки = "";
			Если Не мРаботаСДоговорами.РазрешеноСоздатьДело(Этап, ТекущийПользователь, ОписаниеОшибки) Тогда
				Сообщить(ОписаниеОшибки);
				Отказ = Истина;
			КонецЕсли; 
		КонецЕсли;
		
		ДобавитьРеквизитыДела(Объект, Форма, Элементы);
		ДобавитьКнопкиДела(Объект, Форма, Элементы);
		СкрытьЛишниеРеквизитыДела(Элементы);
		Если ВводНаОсновании Тогда
			ЗаполнитьДело(Форма, Отказ, ДанныеЗаполнения);
		КонецЕсли; 
		Форма["РегистрационныйНомерДела"] = Объект.РегистрационныйНомер;
	
	ИначеЕсли ВидСоздаваемогоДокумента = Справочники.ВидыВнутреннихДокументов.ДелоУслуги Тогда
		ДобавитьРеквизитыДелаУслуги(Объект, Форма, Элементы);
		ДобавитьКнопкиДелаУслуги(Объект, Форма, Элементы);
		СкрытьЛишниеРеквизитыДелаУслуги(Элементы);
		Если ВводНаОсновании Тогда
			ЗаполнитьДелоУслуги(Форма, Отказ, ДанныеЗаполнения);
		КонецЕсли; 
		
	ИначеЕсли ВидСоздаваемогоДокумента.ЯвляетсяДопСоглашением Тогда
		ДобавитьРеквизитыДопСоглашения(Объект, Форма, Элементы);
        Объект.ВидДокумента = Справочники.ВидыВнутреннихДокументов.ДополнительноеСоглашениеДоговораЗемлеустроительныхРабот;
		Если ВводНаОсновании Тогда
            ЗаполнитьЗначенияСвойств(Объект, Форма.Параметры);
		КонецЕсли; 
		Элементы.СрокДействияСтрока.Видимость = Истина;
		
		Форма["СрокДействияДокументИсточникИзменения"] = Объект;
		СрокДействияКомментарий = "";
		Форма["СрокДействияКомментарий"] = СрокДействияКомментарий;
		
		Форма["СрокДействияСтрока"] = ДелопроизводствоКлиентСервер.СформироватьПредставлениеСрокаДействия(
		Объект, СрокДействияКомментарий);
		
	ИначеЕсли ВидСоздаваемогоДокумента.ЯвляетсяДоговором Тогда
		ДобавитьОбщиеРеквизитыДоговоров(Объект, Форма, Элементы);
		ДобавитьКнопкиДоговоры(Объект, Форма, Элементы, ВидСоздаваемогоДокумента);
		
	ИначеЕсли ВидСоздаваемогоДокумента.Родитель = Справочники.ВидыВнутреннихДокументов.ДокументыТехархива Тогда
        // Кнопка "Печать расписки"
		СоздатьКнопку(Форма, Элементы, "мПечатьРаспискиВПолученииТехАрхив", "мПечатьРаспискиВПолученииТехАрхив", "Печать расписки", 
		 	БиблиотекаКартинок.Печать, ОтображениеКнопки.КартинкаИТекст,
		 	Форма.КоманднаяПанель);
		Если ВидСоздаваемогоДокумента = Справочники.ВидыВнутреннихДокументов.КадастроваяОценка и ВводНаОсновании Тогда
			ЗаполнитьДокКадастроваяОценка(Форма, Отказ, ДанныеЗаполнения);
		КонецЕсли; 		
		
	ИначеЕсли ВидСоздаваемогоДокумента = Справочники.ВидыВнутреннихДокументов.Нормализация Тогда
		
        // Кнопка "Печать расписки"
		СоздатьКнопку(Форма, Элементы, "мЗагрузкаПечатьОтчетаНормализации", "мЗагрузкаПечатьОтчетаНормализации", "Загрузка и печать", 
		 	БиблиотекаКартинок.Печать, ОтображениеКнопки.КартинкаИТекст,
		 	Форма.КоманднаяПанель);
			
		Объект.ВопросДеятельности = Справочники.ВопросыДеятельности.НайтиПоНаименованию("Землеустройство");
		Объект.ГрифДоступа = Справочники.ГрифыДоступа.НайтиПоНаименованию("Общий");
		Объект.Папка = Справочники.ПапкиВнутреннихДокументов.НайтиПоНаименованию("Отчеты нормализации");
		Если Объект.Ссылка.Пустая() Тогда
			Объект.Заголовок = "Отчет к " + Объект.Заголовок;
			Объект.Утвердил = Пользователи.ТекущийПользователь();
		КонецЕсли; 
	КонецЕсли; 	
	
    //Перемещение Категорий
    ЭУ = Элементы.Найти("ГруппаКатегории");
    Если ЭУ <> Неопределено Тогда
        Элементы.Переместить(ЭУ, Элементы.ГруппаРеквизиты, );
        
        // переопределим действия по нажатию картинки Категории
        ЭУ = Элементы.Найти("КартинкаКатегории");
        ЭУ.УстановитьДействие("Нажатие", "КартинкаКатегорииВРеквизитахНажатие");
    КонецЕсли;
    
    // Заполнение реквизитов
    Если Объект.Ссылка.Пустая() Тогда
        Форма.Объект.Подготовил = Форма.ТекущийПользователь;
        Форма.Объект.Ответственный = Форма.ТекущийПользователь;
         Если Не ЗначениеЗаполнено(Форма.Объект.Организация) Тогда
            Форма.Объект.Организация = РаботаСОрганизациями.ПолучитьОрганизациюПоУмолчанию();
        КонецЕсли; 
   КонецЕсли;
    
    // Добавление обработчика Номенклатуры дел
    ЭлементНоменклатуры = Элементы.Найти("НоменклатураДел");
    Если ЭлементНоменклатуры <> Неопределено Тогда
        ЭлементНоменклатуры.УстановитьДействие("ПриИзменении", "НоменклатураДелПриИзменении");
    КонецЕсли;
    
КонецПроцедуры // ПриСозданииФормыЭлементаСправочникаВнутренниеДокументы(Форма)

// Заполнение нового акта выполненных работ на основании
Процедура ЗаполнитьАктВыполненныхРабот(Форма, Отказ, ДанныеЗаполнения) 
    Объект	 = Форма.Объект;
	ВидДокумента = Справочники.ВидыВнутреннихДокументов.АктВыполненныхРабот;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ВнутренниеДокументы") Тогда
		Объект.Организация = РаботаСОрганизациями.ПолучитьОрганизациюПоУмолчанию();
		Объект.ВидДокумента = ВидДокумента;
		Договор = мРаботаСДоговорами.ПолучитьДоговорСвязанногоДокумента(ДанныеЗаполнения);
		Если ЗначениеЗаполнено(Договор) Тогда
		    ОснованиеЗаполнения = Договор; // Договор
			// если имеет право подписи только один - подставляем его, иначе из договора
			МассивПодписантов = мРаботаСДоговорами.ПолучитьИмеющихПравоПодписи(Объект.Организация, Объект.ВидДокумента);
			Если МассивПодписантов.Количество() > 0 Тогда
				Объект.Утвердил = МассивПодписантов[0]; // по умолчанию
			Иначе	
				Объект.Утвердил = Договор.Утвердил;
			КонецЕсли; 
		Иначе
			// из дела акт не создается...
		    ОснованиеЗаполнения = ДанныеЗаполнения; // Дело
		КонецЕсли; 
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.мЭтапыДоговоров") Тогда	
	    ОснованиеЗаполнения = ДанныеЗаполнения.Владелец; // Договор этапа
		// если имеет право подписи только один - подставляем его, иначе из договора
		МассивПодписантов = мРаботаСДоговорами.ПолучитьИмеющихПравоПодписи(Объект.Организация, Объект.ВидДокумента);
		Если МассивПодписантов.Количество() > 0 Тогда
			Объект.Утвердил = МассивПодписантов[0]; // по умолчанию
		Иначе	
			Объект.Утвердил = ОснованиеЗаполнения.Утвердил;
		КонецЕсли; 
	КонецЕсли; 
	
	Форма["СостояниеАкта"] = Перечисления.мСостоянияАктовВыполненныхРабот.Черновик;
	Форма["ВидАкта"] = Перечисления.мВидыАктовВыполненныхРабот.Обычный;
	Форма["РезультатПроверки"] = Справочники.мЗамечанияПроверкиАктов.НеПроверен; 
	Объект.ЭтапДоговора = ДанныеЗаполнения;
	Объект.Сумма = ДанныеЗаполнения.СтоимостьСНДС;
	РегистрационныйНомер = ОснованиеЗаполнения.РегистрационныйНомер + "/" + ДанныеЗаполнения.НомерЭтапа;
	//Если мРаботаСДоговорами.СуществуетРегНомер(РегистрационныйНомер, Объект.Ссылка, ВидДокумента) Тогда
	//	Сообщить(""+РегистрационныйНомер+" уже есть в базе данных!");
	//	Отказ = Истина;
	//	//РегистрационныйНомер = РегистрационныйНомер+"-1";
	//КонецЕсли; 
	Объект.РегистрационныйНомер = РегистрационныйНомер;
	
	Если ОснованиеЗаполнения.Корреспондент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		Объект.ДатаРегистрации = Дата(1, 1, 1);
	Иначе
		ГородБазы = мРазное.ПолучитьГородБазы();
		Объект.ДатаРегистрации = ТекущаяДата();
		Если ГородБазы = "Прилуки" Тогда
			Объект.ДатаРегистрации = Дата(1, 1, 1);
		КонецЕсли; 
	КонецЕсли; 
	Объект.Заголовок = "Акт выполненных работ " + Объект.РегистрационныйНомер + " " + Формат(Объект.ДатаРегистрации, "ДЛФ=D");
	Объект.Папка = Справочники.ПапкиВнутреннихДокументов.мАктыВыполненныхРабот;
    Объект.ВопросДеятельности = ОснованиеЗаполнения.ВопросДеятельности;
	Если ЗначениеЗаполнено(Договор) и Объект.ДатаРегистрации >= Дата(2016, 7, 1) Тогда
		Объект.Валюта = Договор.Валюта; 
	Иначе
		Объект.Валюта = Константы.ОсновнаяВалюта.Получить(); 
	КонецЕсли; 
	
	// Корреспондент заполняется в ОбработкеЗаполнения
	Объект.Корреспонденты.Очистить();
	Для каждого Строка Из ОснованиеЗаполнения.Корреспонденты Цикл				
		НоваяСтрока = Объект.Корреспонденты.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
    КонецЦикла;
    	
	Объект.Корреспондент = ОснованиеЗаполнения.Корреспондент;
    Объект.ПодписалОтКорреспондента = ОснованиеЗаполнения.ПодписалОтКорреспондента;
    Объект.КонтактноеЛицо = ОснованиеЗаполнения.КонтактноеЛицо;
	
	Объект.Инвесторы.Очистить();
	Для каждого Строка Из ОснованиеЗаполнения.Инвесторы Цикл				
		НоваяСтрока = Объект.Инвесторы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьДело(Форма, Отказ, ДанныеЗаполнения) 
    Объект	 = Форма.Объект;
    ОснованиеЗаполнения = ДанныеЗаполнения.Владелец; // Договор этапа
	
	Объект.ВидДокумента = Справочники.ВидыВнутреннихДокументов.Дело;
	
	Если ОснованиеЗаполнения.ВидДокумента = Справочники.ВидыВнутреннихДокументов.ДоговорГКИ Тогда
		// Нумерация дел по порядковому номеру в договоре
		КоличествоДел = мРазное.КоличествоДелПоДоговору(ОснованиеЗаполнения);
		ПорядковыйНомерДела = КоличествоДел + 1;
		
		Объект.РегистрационныйНомер = ОснованиеЗаполнения.РегистрационныйНомер + "/" + ПорядковыйНомерДела;
		Форма["РегистрационныйНомерДела"] = Объект.РегистрационныйНомер;
	
	Иначе
		// Нумерация дел по порядковому номеру в этапе
	
		// Если количество дел по этапу равно максимальному количеству дел, указанному в этапе,
		//  то не даем создать новое дело
		КоличествоДелПоЭтапу = мРазное.ПолучитьКоличествоДелПоЭтапу(ДанныеЗаполнения);
		Если КоличествоДелПоЭтапу = ДанныеЗаполнения.КоличествоДел Тогда
			Отказ = Истина;
			Сообщить("Количество дел по этапу договора больше предусмотренного!");
			Возврат;
		КонецЕсли; 
		
		ПостФикс = "";
		Если ДанныеЗаполнения.КоличествоДел > 1 Тогда
			// В номер дела добавляем порядковый номер дела по этапу
			ПорядковыйНомерДелаЭтапа = КоличествоДелПоЭтапу + 1;
			ПостФикс = "-"+ПорядковыйНомерДелаЭтапа;
		КонецЕсли; 
		
		Объект.РегистрационныйНомер = ОснованиеЗаполнения.РегистрационныйНомер + "/" + ДанныеЗаполнения.НомерЭтапа + ПостФикс;
		Форма["РегистрационныйНомерДела"] = Объект.РегистрационныйНомер;
	КонецЕсли; 
	
	ЭтоБрест = Константы.М_Брест.Получить();
	Если ЭтоБрест Тогда
		Объект.РегистрационныйНомер = СтрЗаменить(Объект.РегистрационныйНомер, "/", "-");
	КонецЕсли; 
	
	// Заполнение даты не нужно - регистрировать будет канцелярия
	//Объект.ДатаРегистрации = ТекущаяДата();
	//Объект.Заголовок = "Дело " + Объект.РегистрационныйНомер + " " + Формат(Объект.ДатаРегистрации, "ДЛФ=D");
	
	// Заголовок для Дела
	Источник_Заголовок = "Дело " + Объект.РегистрационныйНомер + " " + Формат(Объект.ДатаРегистрации, "ДЛФ=D") + " " + 
	ДанныеЗаполнения.ВидРабот;
	Если Делопроизводство.КорреспондентЮрЛицо(ОснованиеЗаполнения.Корреспондент) Тогда
		Источник_Заголовок = Источник_Заголовок + " " + ДанныеЗаполнения.ОбъектРабот + " " + 
		ДанныеЗаполнения.Месторасположение;
	Иначе
		Источник_Заголовок = Источник_Заголовок + " " + ДанныеЗаполнения.Месторасположение;
	КонецЕсли;             
	Объект.Заголовок = Источник_Заголовок;
	
	Объект.Папка = Справочники.ПапкиВнутреннихДокументов.мДела;
	Объект.ВопросДеятельности = Справочники.ВопросыДеятельности.НайтиПоНаименованию("Землеустройство");
	
	// Корреспондент
	Объект.Корреспондент = ОснованиеЗаполнения.Корреспондент;
	Если ОснованиеЗаполнения.Корреспонденты.Количество() > 0 Тогда
		Для каждого Стр Из ОснованиеЗаполнения.Корреспонденты Цикл
			НоваяСтрокаКорреспондента = Объект.Корреспонденты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаКорреспондента, Стр);
		КонецЦикла; 
	Иначе
		НоваяСтрокаКорреспондента = Объект.Корреспонденты.Добавить();
		НоваяСтрокаКорреспондента.Корреспондент = Объект.Корреспондент;
	КонецЕсли;
	
	// Инвесторы
	Если ОснованиеЗаполнения.Инвесторы.Количество() > 0 Тогда
		Для каждого Стр Из ОснованиеЗаполнения.Инвесторы Цикл
			НоваяСтрокаКорреспондента = Объект.Инвесторы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаКорреспондента, Стр);
		КонецЦикла; 
	КонецЕсли;
	
	// НомерГеопортала
	Объект.мНомерГеопортала = мРаботаСДоговорами.СоздатьНомерГеопортала(ОснованиеЗаполнения.ДатаРегистрации, ОснованиеЗаполнения.ЧисловойНомер, ДанныеЗаполнения.НомерЭтапа);
	
	// Этап договора
	Объект.ЭтапДоговора = ДанныеЗаполнения;
	
	// ОбъектРабот
	Объект.мОбъектРабот = ДанныеЗаполнения.ОбъектРабот;
	
	// Подразделение надо брать из Исполнителя, а не из Этапа
	Объект.Подразделение = РаботаСПользователями.ПолучитьПодразделение(Пользователи.ТекущийПользователь());
	Объект.Организация = ОснованиеЗаполнения.Организация;
	
	Объект.мСостояниеДела = Перечисления.мСостоянияДела.ВРаботе;
	
КонецПроцедуры

Процедура ЗаполнитьДелоУслуги(Форма, Отказ, ДанныеЗаполнения) 
    Объект	 = Форма.Объект;
    ОснованиеЗаполнения = ДанныеЗаполнения.Владелец; // Договор этапа
	
	Объект.ВидДокумента = Справочники.ВидыВнутреннихДокументов.ДелоУслуги;
	Объект.Папка = Справочники.ПапкиВнутреннихДокументов.мДелаУслуги;
	Объект.ВопросДеятельности = Справочники.ВопросыДеятельности.НайтиПоНаименованию("Землеустройство");
	Объект.мВидРабот = Справочники.мВидыРаботЮрЛица.РазработкаПроектаОтвода;
	
	//КоличествоДел = мРазное.ПолучитьКоличествоДелУслугиПоДоговору(ДанныеЗаполнения.Владелец);
	//ПорядковыйНомерДела = КоличествоДел + 1;
	//Объект.РегистрационныйНомер = ДанныеЗаполнения.Владелец.РегистрационныйНомер + "-" + ПорядковыйНомерДела;
	
	Объект.ДатаРегистрации = ТекущаяДата();
	
	// Заголовок для Дела
	Объект.Заголовок = "Дело-услуги " + Объект.РегистрационныйНомер + " " + Формат(Объект.ДатаРегистрации, "ДЛФ=D") + " " + 
	Объект.мВидРабот;
	
	// Корреспондент
	Объект.Корреспондент = ОснованиеЗаполнения.Корреспондент;
	Если ОснованиеЗаполнения.Корреспонденты.Количество() > 0 Тогда
		Для каждого Стр Из ОснованиеЗаполнения.Корреспонденты Цикл
			НоваяСтрокаКорреспондента = Объект.Корреспонденты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаКорреспондента, Стр);
		КонецЦикла; 
	Иначе
		НоваяСтрокаКорреспондента = Объект.Корреспонденты.Добавить();
		НоваяСтрокаКорреспондента.Корреспондент = Объект.Корреспондент;
	КонецЕсли;
	
	// Инвесторы
	Если ОснованиеЗаполнения.Инвесторы.Количество() > 0 Тогда
		Для каждого Стр Из ОснованиеЗаполнения.Инвесторы Цикл
			НоваяСтрокаКорреспондента = Объект.Инвесторы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаКорреспондента, Стр);
		КонецЦикла; 
	КонецЕсли;
	
	// Этап договора
	Объект.ЭтапДоговора = ДанныеЗаполнения;
	
	// ОбъектРабот
	//Объект.мОбъектРабот = ДанныеЗаполнения.ОбъектРабот;
	
	// Подразделение 
	Объект.Подразделение = ДанныеЗаполнения.Подразделение;
	
	Объект.мПроверил = Пользователи.ТекущийПользователь();
	
	//// Регистрация
	//Форма["СвязанныйДокументДляНумерации"] = ОснованиеЗаполнения;
	//НачальныеЗначенияРеквизитов = Форма["НачальныеЗначенияРеквизитов"];
	//СтрокаНачЗначений = НачальныеЗначенияРеквизитов.Добавить();
	//СтрокаНачЗначений.ЯвляетсяКомплектом = Ложь;
	//
	//ПараметрыЗаписи = Новый Структура;
	//ПараметрыЗаписи.Вставить("Регистрация", Истина);
	//Форма.Записать(ПараметрыЗаписи);
	
КонецПроцедуры

Процедура ЗаполнитьДокКадастроваяОценка(Форма, Отказ, ДанныеЗаполнения) 
    Объект	 = Форма.Объект;
    ОснованиеЗаполнения = ДанныеЗаполнения.Владелец; // Договор этапа
	
	Объект.ВидДокумента = Справочники.ВидыВнутреннихДокументов.КадастроваяОценка;
	
	Если Константы.М_Брест.Получить() Тогда
		Объект.РегистрационныйНомер = СтрЗаменить(Объект.РегистрационныйНомер, "/", "-");
	КонецЕсли; 
	Объект.ДатаРегистрации = ТекущаяДата();
	
	// Заголовок для Дела
	Объект.Заголовок = ""+Объект.РегистрационныйНомер+" " + СокрЛП(ДанныеЗаполнения.ОбъектРабот.Наименование) + " " + ДанныеЗаполнения.Месторасположение;
	
	Объект.Папка = Справочники.ПапкиВнутреннихДокументов.мКадастровыеОценки;
	Объект.ВопросДеятельности = Справочники.ВопросыДеятельности.НайтиПоНаименованию("Землеустройство");
	
	// Корреспондент
	Объект.Корреспондент = ОснованиеЗаполнения.Корреспондент;
	Если ОснованиеЗаполнения.Корреспонденты.Количество() > 0 Тогда
		Для каждого Стр Из ОснованиеЗаполнения.Корреспонденты Цикл
			НоваяСтрокаКорреспондента = Объект.Корреспонденты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаКорреспондента, Стр);
		КонецЦикла; 
	Иначе
		НоваяСтрокаКорреспондента = Объект.Корреспонденты.Добавить();
		НоваяСтрокаКорреспондента.Корреспондент = Объект.Корреспондент;
	КонецЕсли;
	
	// Инвесторы
	Если ОснованиеЗаполнения.Инвесторы.Количество() > 0 Тогда
		Для каждого Стр Из ОснованиеЗаполнения.Инвесторы Цикл
			НоваяСтрокаКорреспондента = Объект.Инвесторы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаКорреспондента, Стр);
		КонецЦикла; 
	КонецЕсли;
	
	// Этап договора
	Объект.ЭтапДоговора = ДанныеЗаполнения;
	
	// ОбъектРабот
	Объект.мОбъектРабот = ДанныеЗаполнения.ОбъектРабот;
	
	// Подразделение
	Объект.Подразделение = ДанныеЗаполнения.Подразделение;
	
	// ДопРеквизит Местонахождение	
	СтруктураПоиска = Новый Структура("Свойство", "Местонахождение");
	МассивСтрок = Форма.Свойства_ОписаниеДополнительныхРеквизитов.НайтиСтроки(СтруктураПоиска);
	Если МассивСтрок.Количество() > 0 Тогда
		НоваяСтрока = МассивСтрок[0];
		Форма[НоваяСтрока.ИмяРеквизитаЗначение] = ДанныеЗаполнения.Месторасположение;
	Иначе
		ДопРеквизиты = Объект.ДополнительныеРеквизиты.Добавить();
		ДопРеквизиты.Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Местонахождение");
		ДопРеквизиты.Значение = ДанныеЗаполнения.Месторасположение;
		ДопРеквизиты.ТекстоваяСтрока = ДанныеЗаполнения.Месторасположение;
		
		УправлениеСвойствами.ЗаполнитьДополнительныеРеквизитыВФорме(Форма, Объект, Истина);
	КонецЕсли;
КонецПроцедуры

Процедура ПриСозданииФормыЭлементаСправочникаИсходящиеДокументы(Форма)
	
    Элементы = Форма.Элементы;
    Объект	 = Форма.Объект;
    
     // Перемещение Номенклатуры
    ЭлементНоменклатуры = Элементы.Найти("НоменклатураДел");
    Если ЭлементНоменклатуры <> Неопределено Тогда
        Элементы.Переместить(ЭлементНоменклатуры, Элементы.ГруппаОсновные, Элементы.ГруппаСодержание);
        ЭлементНоменклатуры.УстановитьДействие("ПриИзменении", "НоменклатураДелПриИзменении");
    КонецЕсли;
    
   // Заполнение реквизитов
    Если Объект.Ссылка.Пустая() Тогда
        Объект.Ответственный = Форма.ТекущийПользователь;
        
		Если Форма.Параметры.Свойство("ШаблонДокумента") И Форма.Параметры.ШаблонДокумента <> Неопределено И
			Форма.Параметры.ШаблонДокумента <> "СоздатьПустойДокумент" Тогда
			Если ЗначениеЗаполнено(Форма.Параметры.ШаблонДокумента.ВопросДеятельности) Тогда
				Объект.ВопросДеятельности = Форма.Параметры.ШаблонДокумента.ВопросДеятельности;
			Иначе
				Если Константы.ИспользоватьВопросыДеятельности.Получить() Тогда
					Объект.ВопросДеятельности = Справочники.ВопросыДеятельности.НайтиПоНаименованию("Землеустройство");
				КонецЕсли; 
			КонецЕсли; 
		Иначе
			Если Константы.ИспользоватьВопросыДеятельности.Получить() Тогда
				Объект.ВопросДеятельности = Справочники.ВопросыДеятельности.НайтиПоНаименованию("Землеустройство");
			КонецЕсли; 
		КонецЕсли; 
		       
        // В ответ на
        Если ЗначениеЗаполнено(Форма.Параметры.Основание) Тогда // Ввод на основании
            Основание = Форма.Параметры.Основание;
            Если ТипЗнч(Основание) = Тип("СправочникСсылка.ВнутренниеДокументы") Тогда
                Если Основание.ВидДокумента = Справочники.ВидыВнутреннихДокументов.Дело Тогда
                    Договор = СвязиДокументов.ПолучитьСвязанныйДокумент(Основание, "ОтноситсяКДоговору");
                    Заявка = СвязиДокументов.ПолучитьСвязанныйДокумент(Договор, "НаОснованииПоручения");
                	Форма.ВОтветНа = Заявка;
                    Если ЗначениеЗаполнено(Заявка) Тогда 
                        Если ЗначениеЗаполнено(Заявка.РегистрационныйНомер) И ЗначениеЗаполнено(Заявка.ДатаРегистрации) Тогда
                            Форма.ВОтветНаСтрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
                            НСтр("ru = '№ %1 от %2'"), Форма.ВОтветНа.РегистрационныйНомер, Формат(Форма.ВОтветНа.ДатаРегистрации, "ДЛФ=D"));			
                        Иначе
                            Форма.ВОтветНаСтрока = Форма.ВОтветНа.Заголовок;			
                        КонецЕсли;	
                    КонецЕсли;
                КонецЕсли; 
    		КонецЕсли;        
		КонецЕсли; 
		
		Если Форма.Параметры.Свойство("Дело")И Форма.Параметры.Свойство("ВидДокумента") Тогда
			Основание = Форма.Параметры.Дело;
			Объект.ВидДокумента = Справочники.ВидыИсходящихДокументов.НайтиПоНаименованию("Расписка",Ложь);
			Объект.Подготовил = Основание.Подготовил;
			Объект.Заголовок = "Отправка " + Основание.Заголовок;
			
			// Добавить в заголовок Получателя
			ВидРаботДела = СокрЛП(Основание.ЭтапДоговора.ВидРабот.Наименование);
			НачалоВидаРабот = СтрНайти(Основание.Заголовок, ВидРаботДела); 
			Если НачалоВидаРабот > 0 Тогда
				ПозицияВставки = НачалоВидаРабот + СтрДлина(ВидРаботДела);
				ОстатокЗаголовка = Сред(Объект.Заголовок, ПозицияВставки+1);
				Объект.Заголовок = Лев(Объект.Заголовок, ПозицияВставки) + " " + Основание.Корреспондент + " " + ОстатокЗаголовка;
			Иначе
				// Добавить получателя в конец заголовка
				Объект.Заголовок = Объект.Заголовок + " " + СокрЛП(Основание.Корреспондент);
			КонецЕсли; 
			
			НовСтрока = Объект.Получатели.Добавить();
			НовСтрока.Получатель = Основание.Корреспондент; // руками надо менять на исполком
			НовСтрока.Отправлен = Истина; // Дату и способ отправки проставит позже канцелярия
		КонецЕсли; 
    КонецЕсли;
    
    Если Не Объект.Ссылка.Пустая() Тогда
        // проверить связи - может есть в основании несколько?
		ВОтветНаНесколько = СвязиДокументов.ПолучитьСвязанныеДокументы(
			Объект.Ссылка,
			Справочники.ТипыСвязей.ОтправленВОтветНаНесколько);
        //НачальноеВОтветНа = ВОтветНа;
        //
        //Если ЗначениеЗаполнено(ВОтветНа) Тогда 
        //	Если ЗначениеЗаполнено(ВОтветНа.РегистрационныйНомер) И ЗначениеЗаполнено(ВОтветНа.ДатаРегистрации) Тогда
        //		ВОтветНаСтрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
        //				НСтр("ru = '№ %1 от %2'"), ВОтветНа.РегистрационныйНомер, Формат(ВОтветНа.ДатаРегистрации, "ДЛФ=D"));			
        //	Иначе
        //		ВОтветНаСтрока = ВОтветНа.Заголовок;			
        //	КонецЕсли;	
        //КонецЕсли;
        
    КонецЕсли;
    
    Если ТипЗнч(Форма.Параметры.Основание) = Тип("Массив") Тогда
        МассивОснований = Форма.Параметры.Основание;
        //Добавление реквизитов для учета нескольких ДокументовОснований
        МассивДобавляемыхРеквизитов = Новый Массив;
        МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ДокументыОснования",
        Новый ОписаниеТипов("ТаблицаЗначений")));
        МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Основание", Новый ОписаниеТипов("СправочникСсылка.ВходящиеДокументы"),"ДокументыОснования" ,"Основание")); 
        МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Предмет", Новый ОписаниеТипов("СправочникСсылка.ВнутренниеДокументы"),"ДокументыОснования" , "Предмет"));        
        Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов, );
        
        // Добавление закладки в форму
        Элемент = Элементы.Добавить("ГруппаОснования", Тип("ГруппаФормы"), Элементы.ГруппаСтраницы);
        Элемент.Вид =  ВидГруппыФормы.Страница;
        Элемент.Заголовок = "Основания";
        Элемент.Видимость = Истина;
    	
        // Добавление таблицы документов-оснований в форму
        Элемент = Элементы.Добавить("ДокументыОснования", Тип("ТаблицаФормы"), Элементы.ГруппаОснования);
        Элемент.ПутьКДанным = "ДокументыОснования";
        Элемент.Заголовок = "Документы основания";
        Элемент.РастягиватьПоГоризонтали = Истина;
        Элемент.Видимость = Истина;
        
        // Добавление колонок в таблицу документов-оснований
        НоваяКолонка = Элементы.Добавить("ДокументыОснованияОснование", Тип("ПолеФормы"), Элементы.ДокументыОснования); 
        НоваяКолонка.Заголовок = "Основание";                                            
        НоваяКолонка.ПутьКДанным = "ДокументыОснования.Основание";
        НоваяКолонка.Вид = ВидПоляФормы.ПолеВвода; 
        НоваяКолонка.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе;    
       
        НоваяКолонка = Элементы.Добавить("ДокументыОснованияПредмет", Тип("ПолеФормы"), Элементы.ДокументыОснования); 
        НоваяКолонка.Заголовок = "Предмет";                                            
        НоваяКолонка.ПутьКДанным = "ДокументыОснования.Предмет";
        НоваяКолонка.Вид = ВидПоляФормы.ПолеВвода; 
        НоваяКолонка.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе;    
        
        // Заполнение созданной таблицы
        Для й = 0 По МассивОснований.ВГраница() Цикл
        
        	НовоеОснование = Форма["ДокументыОснования"].Добавить();
            НовоеОснование.Основание = МассивОснований[й];
            НовоеОснование.Предмет = СвязиДокументов.ПолучитьСвязанныйДокумент(НовоеОснование.Основание, Справочники.ТипыСвязей.ПредметПереписки);
        
        КонецЦикла; 
    КонецЕсли; 
КонецПроцедуры // ПриСозданииФормыЭлементаСправочникаВнутренниеДокументы(Форма)

Процедура ПриСозданииФормыЭлементаСправочникаКорреспонденты(Форма)
	
	Элементы = Форма.Элементы;
	Объект	 = Форма.Объект;
    
    Элементы.ИНН.Заголовок = "УНП";
    Элементы.ИНН1.Заголовок = "УНП";
    Элементы.ИНН2.Заголовок = "УНП";
    Элементы.КПП.Видимость = Ложь;

	Элемент = Элементы.Вставить("ИНН3", Тип("ПолеФормы"), Элементы.ГруппаКакНерезидент);
	Элемент.ПутьКДанным = "Объект.ИНН";
	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	Элемент.Заголовок = "ИНН";
	Элемент.РастягиватьПоГоризонтали = Ложь;
    
    Элементы.ОКПО.Подсказка = "Общестатистический код предприятий и организаций";
	
	//Наш банковский счет
	МассивДобавляемыхРеквизитов = Новый Массив;
	Если Элементы.Найти("мНашБанковскийСчет") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мНашБанковскийСчет", Новый ОписаниеТипов("СправочникСсылка.БанковскиеСчета")));
	КонецЕсли; 
	Если Элементы.Найти("мСтрана") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мСтрана", Новый ОписаниеТипов("СправочникСсылка.СтраныМира")));
	КонецЕсли; 
	Если Элементы.Найти("мКодФилиала") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мКодФилиала", Новый ОписаниеТипов("Строка")));
	КонецЕсли; 
	Если Элементы.Найти("мНаименованиеФилиала") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мНаименованиеФилиала", Новый ОписаниеТипов("Строка")));
	КонецЕсли; 
	Если Элементы.Найти("мВышестоящаяОрганизация") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мВышестоящаяОрганизация", Новый ОписаниеТипов("СправочникСсылка.Корреспонденты")));
	КонецЕсли; 
	Если Элементы.Найти("мЯвляетсяФилиалом") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мЯвляетсяФилиалом", Новый ОписаниеТипов("Булево")));
	КонецЕсли;
	Если Элементы.Найти("мВзаимозависимоеЛицо") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мВзаимозависимоеЛицо", Новый ОписаниеТипов("Булево")));
	КонецЕсли;
	
	Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов, );
	
	Если Элементы.Найти("мСтрана") = Неопределено Тогда
		Элемент = Элементы.Вставить("мСтрана", Тип("ПолеФормы"), Элементы.ГруппаВидКорреспондента);
		Элемент.ПутьКДанным = "Объект.мСтрана";
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.Заголовок = "Страна";
		//Элемент.РастягиватьПоГоризонтали = Истина;
		Элемент.Видимость = Истина;
		
	КонецЕсли; 
	Если Элементы.Найти("мНашБанковскийСчет") = Неопределено Тогда
		мГруппаФилиал = Элементы.Найти("мГруппаФилиал");
		//ЭлементОтступ = Элементы.Найти("Отступ");
		Элемент = Элементы.Вставить("мНашБанковскийСчет", Тип("ПолеФормы"), Элементы.ГруппаОсновныеСведения, мГруппаФилиал);
		Элемент.ПутьКДанным = "Объект.мНашБанковскийСчет";
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.Заголовок = "Наш банковский счет для расчетов";
		Элемент.РастягиватьПоГоризонтали = Истина;
		Элемент.Видимость = Истина;
		Элемент.Подсказка = "Если не указан, то будет использоваться основной банковский счет";
		
		Элемент.УстановитьДействие("НачалоВыбора", "мНашБанковскийСчетНачалоВыбора");
		НашаОрганизация = Константы.НашаОрганизация.Получить();	
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", НашаОрганизация);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элемент.ПараметрыВыбора = НовыеПараметры;
	КонецЕсли; 
	Если Элементы.Найти("мКодФилиала") = Неопределено Тогда
		мГруппаФилиал = Элементы.Найти("ГруппаКодНаименованиеФилиала");
		Элемент = Элементы.Добавить("мКодФилиала", Тип("ПолеФормы"), мГруппаФилиал);
		Элемент.ПутьКДанным = "Объект.мКодФилиала";
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.Заголовок = "Код филиала";
		//Элемент.РастягиватьПоГоризонтали = Истина;
		Элемент.Видимость = Истина;
	КонецЕсли; 
	Если Элементы.Найти("мНаименованиеФилиала") = Неопределено Тогда
		мГруппаФилиал = Элементы.Найти("ГруппаКодНаименованиеФилиала");
		Элемент = Элементы.Добавить("мНаименованиеФилиала", Тип("ПолеФормы"), мГруппаФилиал);
		Элемент.ПутьКДанным = "Объект.мНаименованиеФилиала";
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.Заголовок = "Наименование";
		//Элемент.РастягиватьПоГоризонтали = Истина;
		Элемент.Видимость = Истина;
	КонецЕсли; 
	Если Элементы.Найти("мВышестоящаяОрганизация") = Неопределено Тогда
		Элемент = Элементы.Вставить("мВышестоящаяОрганизация", Тип("ПолеФормы"), Элементы.мГруппаФилиал);
		Элемент.ПутьКДанным = "Объект.мВышестоящаяОрганизация";
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.Заголовок = "Вышестоящая организация";
		Элемент.РастягиватьПоГоризонтали = Истина;
		Элемент.Видимость = Истина;
		
		//Элемент.УстановитьДействие("НачалоВыбора", "мВышестоящаяОрганизацияНачалоВыбора");
		//НовыйПараметр = Новый ПараметрВыбора("Отбор.ИНН", Объект.ИНН);
		//НовыйМассив = Новый Массив();
		//НовыйМассив.Добавить(НовыйПараметр);
		//НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		//Элемент.ПараметрыВыбора = НовыеПараметры;
	КонецЕсли; 
	
	Если Элементы.Найти("мЯвляетсяФилиалом") = Неопределено Тогда
		ЭлементОтступ = Элементы.Найти("Отступ");
		Элемент = Элементы.Вставить("мЯвляетсяФилиалом", Тип("ПолеФормы"), Элементы.ГруппаОсновныеСведения, Элементы.мГруппаФилиал);
		Элемент.ПутьКДанным = "Объект.мЯвляетсяФилиалом";
		Элемент.Вид = ВидПоляФормы.ПолеФлажка;
		Элемент.Заголовок = "Является филиалом";
		//Элемент.РастягиватьПоГоризонтали = Истина;
		Элемент.Видимость = Истина;
		Элемент.Подсказка = "";
		
		Элемент.УстановитьДействие("ПриИзменении", "мЯвляетсяФилиаломПриИзменении");
	КонецЕсли;
	Если Элементы.Найти("мВзаимозависимоеЛицо") = Неопределено Тогда
		Элемент = Элементы.Вставить("мВзаимозависимоеЛицо", Тип("ПолеФормы"), Элементы.ГруппаВидКорреспондента);
		Элемент.ПутьКДанным = "Объект.мВзаимозависимоеЛицо";
		Элемент.Вид = ВидПоляФормы.ПолеФлажка;
		Элемент.Заголовок = "Взаимозависимое лицо";
		//Элемент.РастягиватьПоГоризонтали = Истина;
		Элемент.Видимость = Истина;
	КонецЕсли; 
	
КонецПроцедуры // ПриСозданииФормыЭлементаСправочникаКорреспонденты(Форма)

Процедура ПриСозданииФормыЭлементаСправочникаФизическиеЛица(Форма)
	
	Элементы = Форма.Элементы;
	Объект	 = Форма.Объект;
    
	Элемент = Элементы.Вставить("ЛичныйНомер", Тип("ПолеФормы"), Элементы.ГруппаПолДатаРождения);
	Элемент.ПутьКДанным = "Объект.ЛичныйНомер";
	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	Элемент.Заголовок = "Личный номер";
	Элемент.РастягиватьПоГоризонтали = Ложь;
    
КонецПроцедуры // ПриСозданииФормыЭлементаСправочникаКорреспонденты(Форма)

Процедура ПриСозданииФормыЭлементаСправочникаВидыКонтактнойИнформации(Форма)
	
	Элементы = Форма.Элементы;
	Объект	 = Форма.Объект;
    
    Элементы.АдресТолькоРоссийский.Заголовок = "Только белорусский";
     
КонецПроцедуры // ПриСозданииФормыЭлементаСправочникаКорреспонденты(Форма)

Процедура ПриСозданииФормыЭлементаСправочникаПользователи(Форма)
	
	Элементы = Форма.Элементы;
	Объект	 = Форма.Объект;
    
	Элемент = Элементы.Вставить("ТабельныйНомер", Тип("ПолеФормы"), Элементы.ОсновныеСведения);
	Элемент.ПутьКДанным = "Объект.ТабельныйНомер";
	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	Элемент.Заголовок = "Табельный номер";
	Элемент.РастягиватьПоГоризонтали = Ложь;
    
КонецПроцедуры // ПриСозданииФормыЭлементаСправочникаКорреспонденты(Форма)

Процедура ПриСозданииФормыПользователяСправочникаПользователи(Форма)
	
	Элементы = Форма.Элементы;
	Объект	 = Форма.Объект;
    
	Элемент = Элементы.Вставить("ТабельныйНомер", Тип("ПолеФормы"), Элементы.ГруппаОсновные);
	Элемент.ПутьКДанным = "Объект.ТабельныйНомер";
	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	Элемент.Заголовок = "Табельный номер";
	Элемент.РастягиватьПоГоризонтали = Ложь;
    
КонецПроцедуры // ПриСозданииФормыЭлементаСправочникаКорреспонденты(Форма)

Процедура ПриСозданииФормыЭлементаСправочникаВидыВнутреннихДокументов(Форма)
	
    Элементы = Форма.Элементы;
    Объект	 = Форма.Объект;
	
	// Добавить реквизит
	Если Элементы.Найти("ЯвляетсяДопСоглашением") = Неопределено Тогда
		МассивДобавляемыхРеквизитов = Новый Массив;
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ЯвляетсяДопСоглашением", Новый ОписаниеТипов("Булево")));
		Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов, );
		
		Элемент = Элементы.Вставить("ЯвляетсяДопСоглашением", Тип("ПолеФормы"), Элементы.ГруппаНастройки, Элементы.ЯвляетсяКомплектомДокументов);
		Элемент.ПутьКДанным = "Объект.ЯвляетсяДопСоглашением";
		Элемент.Вид = ВидПоляФормы.ПолеФлажка;
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		Элемент.Заголовок = "Является доп. соглашением";
		Элемент.Видимость = Истина;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриСозданииФормыЭлементаСправочникаСтруктураПредприятия(Форма)
	
	Элементы = Форма.Элементы;
	Объект	 = Форма.Объект;
    
	Элемент = Элементы.Вставить("Город", Тип("ПолеФормы"), , Элементы.Комментарий);
	Элемент.ПутьКДанным = "Объект.Город";
	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	Элемент.Заголовок = "Город";
	Элемент.РастягиватьПоГоризонтали = Истина;
	Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
    
КонецПроцедуры // ПриСозданииФормыЭлементаСправочникаСтруктураПредприятия(Форма)

Процедура ДобавитьРеквизитЭтапДоговора(Объект, Форма, Элементы) Экспорт 
    
	Если Элементы.Найти("ЭтапДоговора") = Неопределено Тогда
		МассивДобавляемыхРеквизитов = Новый Массив;
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ЭтапДоговора", Новый ОписаниеТипов("Строка")));
		Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов, );
		
		Элемент = Элементы.Вставить("ЭтапДоговора", Тип("ПолеФормы"), Элементы.ГруппаРеквизиты);
		Элемент.ПутьКДанным = "Объект.ЭтапДоговора";
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.Заголовок = "Этап договора";
		Элемент.РастягиватьПоГоризонтали = Истина;
		Элемент.УстановитьДействие("НачалоВыбора", "ЭтапДоговораНачалоВыбора");
		
		Договор = СвязиДокументов.ПолучитьСвязанныйДокумент(Объект.Ссылка, ПредопределенноеЗначение("Справочник.ТипыСвязей.ОтноситсяКДоговору"));	
		
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", Договор);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элемент.ПараметрыВыбора = НовыеПараметры;
		
		Элемент.Видимость = Истина;
	КонецЕсли; 
    
КонецПроцедуры

Процедура ДобавитьРеквизитыАктВыполненныхРабот(Объект, Форма, Элементы) Экспорт
	
	Если Элементы.Найти("ГруппаНДС") = Неопределено Тогда
		ЭлементГруппаНДС = Элементы.Добавить("ГруппаНДС", Тип("ГруппаФормы"), Элементы.ГруппаРеквизиты);
		ЭлементГруппаНДС.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ЭлементГруппаНДС.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ЭлементГруппаНДС.ОтображатьЗаголовок = Ложь;
		ЭлементГруппаНДС.Отображение = ОтображениеОбычнойГруппы.Нет;
		
		Элементы.Переместить(ЭлементГруппаНДС, Элементы.ГруппаРеквизиты, Элементы.СрокИсполнения);
	КонецЕсли;
	
	МассивДобавляемыхРеквизитов = Новый Массив;
	Если Элементы.Найти("ЭтапДоговора") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ЭтапДоговора", Новый ОписаниеТипов("СправочникСсылка.мЭтапыДоговоров")));
	КонецЕсли; 
	Если Элементы.Найти("СуммаНДС") = Неопределено Тогда
		КЧ = Новый КвалификаторыЧисла(16,2);
		Массив = Новый Массив;
		Массив.Добавить(Тип("Число"));
		ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("СуммаНДС", ОписаниеТиповЧ));
	КонецЕсли; 
	Если Элементы.Найти("СтавкаНДС") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("СтавкаНДС", Новый ОписаниеТипов("СправочникСсылка.мСтавкиНДС")));
	КонецЕсли; 
	Если Элементы.Найти("ОсвобождениеОтНДС") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ОсвобождениеОтНДС", Новый ОписаниеТипов("СправочникСсылка.мОсвобождениеОтНДС")));
	КонецЕсли; 
	Если Элементы.Найти("СостояниеАкта") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("СостояниеАкта", Новый ОписаниеТипов("ПеречислениеСсылка.мСостоянияАктовВыполненныхРабот")));
	КонецЕсли; 
	Если Элементы.Найти("ВрученЗаказчику") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ВрученЗаказчику", Новый ОписаниеТипов("Дата")));
	КонецЕсли; 
	Если Элементы.Найти("Возвращен") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Возвращен", Новый ОписаниеТипов("Дата")));
	КонецЕсли; 
	Если Элементы.Найти("ВидАкта") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ВидАкта", Новый ОписаниеТипов("ПеречислениеСсылка.мВидыАктовВыполненныхРабот")));
	КонецЕсли;
	Если Элементы.Найти("РезультатПроверки") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("РезультатПроверки", Новый ОписаниеТипов("СправочникСсылка.мЗамечанияПроверкиАктов")));
	КонецЕсли;
	
	Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов, );
	
	ДобавитьРеквизитДела(Элементы, "ЭтапДоговора", "Этап договора", Объект);    
	ДобавитьРеквизитАктВыполненныхРабот(Элементы, "СуммаНДС", "Сумма НДС", Объект, Элементы.ГруппаСуммаВалюта);    
	ДобавитьРеквизитАктВыполненныхРабот(Элементы, "СтавкаНДС", "Ставка НДС", Объект, ЭлементГруппаНДС);    
	ДобавитьРеквизитАктВыполненныхРабот(Элементы, "ОсвобождениеОтНДС", "Освобождение от НДС", Объект, ЭлементГруппаНДС);  
	ДобавитьРеквизитАктВыполненныхРабот(Элементы, "СостояниеАкта", "Состояние акта", Объект, Элементы.ГруппаНомер);   
	ДобавитьРеквизитАктВыполненныхРабот(Элементы, "ВидАкта", "Вид акта", Объект, Элементы.ГруппаНомер);   
	ДобавитьРеквизитАктВыполненныхРабот(Элементы, "ВрученЗаказчику", "Получен", Объект, Элементы.ГруппаКорреспондент);   
	ДобавитьРеквизитАктВыполненныхРабот(Элементы, "Возвращен", "Возвращен", Объект, Элементы.ГруппаКорреспондент);
	ДобавитьРеквизитАктВыполненныхРабот(Элементы, "РезультатПроверки", "Замечания по проверке", Объект, Элементы.ГруппаКорреспондент);
	//ДобавитьРеквизитНашРасчетныйСчет(Форма, Элементы, "НашРасчетныйСчет", "Расчетный счет", Объект, Элементы.ГруппаОрганизация, Элементы.Утвердил);
	
	ИскЭл = Элементы.Найти("Сумма");
	Если ИскЭл <> Неопределено Тогда
		ИскЭл.УстановитьДействие("ПриИзменении", "СуммаПриИзменении");
	КонецЕсли; 
КонецПроцедуры
 
Процедура ДобавитьРеквизитАктВыполненныхРабот(Элементы, ИмяРеквизита, Заголовок, Объект = Неопределено, Родитель, ПередЧем = Неопределено) 
    
	Если Элементы.Найти(ИмяРеквизита) = Неопределено Тогда
		Элемент = Элементы.Вставить(ИмяРеквизита, Тип("ПолеФормы"), Родитель, ПередЧем);
		Элемент.ПутьКДанным = ИмяРеквизита;
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.Заголовок = Заголовок;
		Элемент.РастягиватьПоГоризонтали = Истина;
		Элемент.Видимость = Истина;
		
		Если ИмяРеквизита = "СуммаНДС" Тогда
			Элемент.КнопкаВыбора = Истина;
			Элемент.УстановитьДействие("ПриИзменении", "СуммаНДСПриИзменении");
		ИначеЕсли ИмяРеквизита = "СтавкаНДС" Тогда
			Элемент.УстановитьДействие("ПриИзменении", "СтавкаНДСПриИзменении");
		ИначеЕсли ИмяРеквизита = "ОсвобождениеОтНДС" Тогда
			Элемент.УстановитьДействие("ПриИзменении", "ОсвобождениеОтНДСПриИзменении");
		ИначеЕсли ИмяРеквизита = "СостояниеАкта" Тогда
			Элемент.УстановитьДействие("ПриИзменении", "СостояниеАктаПриИзменении");
		ИначеЕсли ИмяРеквизита = "ВидАкта" Тогда
			Элемент.УстановитьДействие("ПриИзменении", "ВидАктаПриИзменении");
		ИначеЕсли ИмяРеквизита = "ВрученЗаказчику" Тогда
			Элемент.УстановитьДействие("ПриИзменении", "ВрученЗаказчикуПриИзменении");
		ИначеЕсли ИмяРеквизита = "Возвращен" Тогда
			Элемент.УстановитьДействие("ПриИзменении", "ВозвращенПриИзменении");
		ИначеЕсли ИмяРеквизита = "РезультатПроверки" Тогда
			Элемент.УстановитьДействие("ПриИзменении", "РезультатПроверкиПриИзменении");
		КонецЕсли; 
	КонецЕсли; 
    
КонецПроцедуры
Процедура СкрытьЛишниеРеквизитыДелаАктВыполненныхРабот(Элементы) 
	Элементы.ДелоТекст.Видимость = Ложь;
	Элементы.СостояниеТекст.Видимость = Ложь;
КонецПроцедуры
Процедура ДобавитьКнопкиАктВыполненныхРабот(Объект, Форма, Элементы)
		
	//// Создание кнопки "Создать Акт выполненных работ" 
	//Если Элементы.Найти("СоздатьАктВыполненныхРабот") = Неопределено Тогда
	//	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	//	Если ДокументооборотПраваДоступа.ЕстьРоль("мРаботаСАктамиВыполненныхРабот",,ТекущийПользователь) Тогда
	//		СоздатьКнопку(Форма, Элементы, "СоздатьАктВыполненныхРабот", "СоздатьАктВыполненныхРабот", "Создать Акт вып. работ", 
	//		БиблиотекаКартинок.СоздатьЭлементСписка, ОтображениеКнопки.КартинкаИТекст,
	//		Форма.КоманднаяПанель);
	//	КонецЕсли; 
	//КонецЕсли; 
		
КонецПроцедуры

Процедура ДобавитьРеквизитыДела(Объект, Форма, Элементы) Экспорт
    
    МассивДобавляемыхРеквизитов = Новый Массив;
	Если Элементы.Найти("ЭтапДоговора") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ЭтапДоговора", Новый ОписаниеТипов("СправочникСсылка.мЭтапыДоговоров")));
	КонецЕсли; 
	Если Элементы.Найти("мСостояниеДела") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мСостояниеДела", Новый ОписаниеТипов("ПеречислениеСсылка.мСостоянияДела")));
	КонецЕсли; 
	Если Элементы.Найти("мСистемаКоординат") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мСистемаКоординат", Новый ОписаниеТипов("СправочникСсылка.мСистемаКоординат")));
	КонецЕсли; 
	Если Элементы.Найти("мНомерГеопортала") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мНомерГеопортала", Новый ОписаниеТипов("Строка")));
	КонецЕсли; 
	//Если Элементы.Найти("мНомерТехархива") = Неопределено Тогда
	//	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мНомерТехархива", Новый ОписаниеТипов("Число")));
	//КонецЕсли; 
	Если Элементы.Найти("мИнвентарныйНомерТехархива") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мИнвентарныйНомерТехархива", Новый ОписаниеТипов("Строка")));
	КонецЕсли; 
	Если Элементы.Найти("мОбъектРабот") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мОбъектРабот", Новый ОписаниеТипов("СправочникСсылка.мОбъектыРабот")));
	КонецЕсли; 
    
    Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов, );
    
    ДобавитьРеквизитДела(Элементы, "ЭтапДоговора", "Этап договора", Объект);    
    ДобавитьРеквизитДела(Элементы, "мСостояниеДела", "Состояние дела");    
    ДобавитьРеквизитДела(Элементы, "мСистемаКоординат", "Система координат");    
    ДобавитьРеквизитДела(Элементы, "мНомерГеопортала", "Номер геопортала");    
	//ДобавитьРеквизитДела(Элементы, "мНомерТехархива", "Номер техархива");    
    ДобавитьРеквизитДела(Элементы, "мИнвентарныйНомерТехархива", "Инв. номер техархива");    
    ДобавитьРеквизитДела(Элементы, "мОбъектРабот", "Объект работ", Объект);    

КонецПроцедуры
Процедура ДобавитьКнопкиДела(Объект, Форма, Элементы) 
	// Создание кнопки "Создать Акт проверки" для Дел
	ЕстьПравоСозданияАктПроверки = ПравоДоступа("Добавление", Метаданные.Справочники.мАктыПроверки);

	Если ЕстьПравоСозданияАктПроверки Тогда
		СоздатьКнопку(Форма, Элементы, "СоздатьАктПроверки", "СоздатьАктПроверки", "Создать Акт проверки", 
		БиблиотекаКартинок.СоздатьЭлементСписка, ОтображениеКнопки.КартинкаИТекст,
		Форма.КоманднаяПанель);
	КонецЕсли; 
		
	// Создание кнопки "Отправить На Проверку" для Дел
	СоздатьКнопку(Форма, Элементы, "ОтправитьНаПроверку", "ОтправитьНаПроверку", "Отправить на проверку", 
		БиблиотекаКартинок.ПроверитьОрфографию, ОтображениеКнопки.КартинкаИТекст,
		Форма.КоманднаяПанель);
		
	//// Создание кнопки "Создать Акт выполненных работ" для Дел
	//СоздатьКнопку(Форма, Элементы, "СоздатьАктВыполненныхРабот", "СоздатьАктВыполненныхРабот", "Создать Акт вып. работ", 
	//	БиблиотекаКартинок.СоздатьЭлементСписка, ОтображениеКнопки.КартинкаИТекст,
	//	Форма.КоманднаяПанель);
	//	
	//// Создание кнопки "Записать файл в архив" для сканированных Дел
	//СоздатьКнопку(Форма, Элементы, "СохранитьВАрхив", "СохранитьВАрхив", "Сохранить в архив", 
	//	БиблиотекаКартинок.СохранитьФайл, ОтображениеКнопки.КартинкаИТекст,
	//	Элементы.ГруппаКоманды, Элементы.ГруппаКоманды.ПодчиненныеЭлементы.СоздатьФайл);
		
	// Создание кнопки "Добавить со сканера" 
	СоздатьКнопку(Форма, Элементы, "ДобавитьСкан", "ДобавитьСкан", "Добавить скан", 
		БиблиотекаКартинок.ПотоковоеСканирование32, ОтображениеКнопки.КартинкаИТекст,
		Элементы.ГруппаКоманды, Элементы.ГруппаКоманды.ПодчиненныеЭлементы.СоздатьФайл);
		
	// Создание кнопки "Добавить со сканера" на закладке Файлы 
	СоздатьКнопку(Форма, Элементы, "ДобавитьСкан1", "ДобавитьСкан", "Добавить скан", 
		БиблиотекаКартинок.СохранитьФайл, ОтображениеКнопки.КартинкаИТекст,
		Элементы.ФайлыСоздание.КоманднаяПанель);
		
	// Создание кнопки "Создать Отчет нормализации" для Дел
	Если Пользователи.РолиДоступны("ПолныеПрава, мРаботаСОтчетомНормализации") Тогда
		СоздатьКнопку(Форма, Элементы, "СоздатьОтчетНормализации", "СоздатьОтчетНормализации", "Создать Отчет нормализации", 
		БиблиотекаКартинок.СоздатьЭлементСписка, ОтображениеКнопки.КартинкаИТекст,
		Форма.КоманднаяПанель);
	КонецЕсли; 
	
КонецПроцедуры
Процедура СкрытьЛишниеРеквизитыДела(Элементы) 
	Элементы.ДелоТекст.Видимость = Ложь;
	Элементы.СостояниеТекст.Видимость = Ложь;
	
	//ИскКоманда = Элементы.Найти("ФормаОбработкамПечатьДоговоровмПечатьДоговоров");
	//Если ИскКоманда <> Неопределено Тогда
	//	ИскКоманда.Видимость = Ложь;
	//КонецЕсли; 
	//ИскКоманда = Элементы.Найти("Элементы.ФормаОбработкамСозданиеПечатьАктовВыполненныхРаботАктВыполненныхРабот");
	//Если ИскКоманда <> Неопределено Тогда
	//	ИскКоманда.Видимость = Ложь;
	//КонецЕсли; 
	//ИскКоманда = Элементы.Найти("Элементы.ФормаОбработкамИнформацияДляОплатыДоговораИнформацияДляОплатыДоговора");
	//Если ИскКоманда <> Неопределено Тогда
	//	ИскКоманда.Видимость = Ложь;
	//КонецЕсли; 
КонецПроцедуры
 
Процедура ДобавитьРеквизитДела(Элементы, ИмяРеквизита, Заголовок, Объект = Неопределено) 
    
	Если Элементы.Найти(ИмяРеквизита) = Неопределено Тогда
		Элемент = Элементы.Вставить(ИмяРеквизита, Тип("ПолеФормы"), Элементы.ГруппаРеквизиты);
		Элемент.ПутьКДанным = "Объект." + ИмяРеквизита;
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.Заголовок = Заголовок;
		Элемент.РастягиватьПоГоризонтали = Истина;
		Элемент.Видимость = Истина;
		
		Если ИмяРеквизита = "мОбъектРабот" Тогда
			Элемент.УстановитьДействие("НачалоВыбора", "мОбъектРаботНачалоВыбора");
			
			НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", Объект.Корреспондент);
			НовыйМассив = Новый Массив();
			НовыйМассив.Добавить(НовыйПараметр);
			НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
			Элемент.ПараметрыВыбора = НовыеПараметры;
			
		ИначеЕсли ИмяРеквизита = "ЭтапДоговора" Тогда
			
			Элемент.УстановитьДействие("НачалоВыбора", "ЭтапДоговораНачалоВыбора");
		
			Договор = СвязиДокументов.ПолучитьСвязанныйДокумент(Объект.Ссылка, ПредопределенноеЗначение("Справочник.ТипыСвязей.ОтноситсяКДоговору"));	
			
			НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", Договор);
			НовыйМассив = Новый Массив();
			НовыйМассив.Добавить(НовыйПараметр);
			НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
			Элемент.ПараметрыВыбора = НовыеПараметры;
	
		КонецЕсли; 
	КонецЕсли; 
    
КонецПроцедуры

Процедура ДобавитьРеквизитыПоручения(Объект, Форма, Элементы) Экспорт
    
	МассивДобавляемыхРеквизитов = Новый Массив;
	Если Элементы.Найти("ВидРабот") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ВидРабот",
		Новый ОписаниеТипов("СправочникСсылка.мВидыРаботЮрЛица, СправочникСсылка.мВидыРаботФизЛица")));
	КонецЕсли; 
	Если Элементы.Найти("Исполком") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Исполком",
		Новый ОписаниеТипов("СправочникСсылка.Корреспонденты")));
	КонецЕсли; 
	Если Элементы.Найти("мОбъектРабот") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мОбъектРабот",
		Новый ОписаниеТипов("СправочникСсылка.мОбъектыРабот")));
	КонецЕсли; 
	Если Элементы.Найти("мСостояниеПоручения") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мСостояниеПоручения",
		Новый ОписаниеТипов("ПеречислениеСсылка.мСостоянияПоручения")));
	КонецЕсли; 
	Если Элементы.Найти("мПричинаВозвратаПоручения") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мПричинаВозвратаПоручения",
		Новый ОписаниеТипов("СправочникСсылка.мПричиныВозвратаПоручений")));
	КонецЕсли; 
	
	Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов, );
	
	ДобавитьРеквизитПоручения(Элементы, "мОбъектРабот", "Объект работ", Объект, Элементы.ГруппаОтправитель);   
	ДобавитьРеквизитПоручения(Элементы, "ВидРабот", "Вид работ", Объект, Элементы.ГруппаОтправитель);   
	ДобавитьРеквизитПоручения(Элементы, "Исполком", "Исполком", Объект, Элементы.ГруппаОтправитель);   
	ДобавитьРеквизитПоручения(Элементы, "мСостояниеПоручения", "Поручение", Объект, Элементы.НомерДата);   
	ДобавитьРеквизитПоручения(Элементы, "мПричинаВозвратаПоручения", "Причина", Объект, Элементы.НомерДата);   
	
КонецПроцедуры
Процедура ДобавитьКнопкиПоручения(Объект, Форма, Элементы)
		
    // Кнопка "Создать карточку"
    Кмд = Форма.Команды.Добавить("СоздатьКарточку");
    Кмд.Действие = "СоздатьКарточкуОбъектаРабот";
    Кмд.Заголовок = "Создать карточку";
    Кмд.Картинка = БиблиотекаКартинок.СоздатьЭлементСписка;
    Кмд.Отображение = ОтображениеКнопки.КартинкаИТекст;
   
    //Добавляем новую кнопку
 	Элемент = Элементы.Вставить("КнопкаСоздатьКарточку", Тип("КнопкаФормы"), Форма.КоманднаяПанель);
    Элемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
    Элемент.ИмяКоманды = "СоздатьКарточку";
	Элемент.Заголовок = "Создать карточку";
		
КонецПроцедуры

Процедура ДобавитьРеквизитПоручения(Элементы, ИмяРеквизита, Заголовок, Объект = Неопределено, Родитель, ПередЧем = Неопределено) 
    
	Если Элементы.Найти(ИмяРеквизита) = Неопределено Тогда
		Элемент = Элементы.Вставить(ИмяРеквизита, Тип("ПолеФормы"), Родитель, ПередЧем);
		Если ИмяРеквизита = "мСостояниеПоручения"
			ИЛИ ИмяРеквизита = "мПричинаВозвратаПоручения" Тогда
			Элемент.ПутьКДанным = ИмяРеквизита;
		Иначе
			Элемент.ПутьКДанным = "Объект." + ИмяРеквизита;
		КонецЕсли; 
			
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.Заголовок = Заголовок;
		Элемент.РастягиватьПоГоризонтали = Истина;
		Элемент.Видимость = Истина;
		
		Если ИмяРеквизита = "мОбъектРабот" Тогда
			Элемент.УстановитьДействие("НачалоВыбора", "мОбъектРаботНачалоВыбора");
			Элемент.УстановитьДействие("ПриИзменении", "мОбъектРаботПриИзменении");
		ИначеЕсли ИмяРеквизита = "ВидРабот" Тогда
			Элемент.УстановитьДействие("НачалоВыбора", "ВидРаботНачалоВыбора");
			Элемент.УстановитьДействие("ПриИзменении", "ВидРаботПриИзменении");
		ИначеЕсли ИмяРеквизита = "мСостояниеПоручения" Тогда
			Элемент.УстановитьДействие("ПриИзменении", "мСостояниеПорученияПриИзменении");
		ИначеЕсли ИмяРеквизита = "мПричинаВозвратаПоручения" Тогда
			Элемент.УстановитьДействие("ПриИзменении", "мПричинаВозвратаПорученияПриИзменении");
		КонецЕсли; 
	КонецЕсли; 
    
КонецПроцедуры

Процедура СоздатьКнопку(Форма, Элементы, НазваниеКоманды, ИмяКоманды, Заголовок, 
		Картинка = Неопределено, Отображение = Неопределено,
		МестоВставки, ВставкаПередЭлементом = Неопределено) Экспорт

	Кмд = Форма.Команды.Добавить(НазваниеКоманды);
	Кмд.Действие = ИмяКоманды;
	Кмд.Заголовок = Заголовок;
	Кмд.Картинка = Картинка;
	Кмд.Отображение = Отображение;
	Элемент = Элементы.Вставить(НазваниеКоманды, Тип("КнопкаФормы"), МестоВставки, ВставкаПередЭлементом);
	Элемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	Элемент.ИмяКоманды = ИмяКоманды;
	Элемент.Заголовок = Заголовок;
		
КонецПроцедуры
  
Процедура ДобавитьРеквизитыДелаУслуги(Объект, Форма, Элементы) Экспорт
    
    МассивДобавляемыхРеквизитов = Новый Массив;
	Если Элементы.Найти("ЭтапДоговора") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ЭтапДоговора", Новый ОписаниеТипов("СправочникСсылка.мЭтапыДоговоров")));
	КонецЕсли; 
	Если Элементы.Найти("мЗаказчик") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мЗаказчик", Новый ОписаниеТипов("СправочникСсылка.Корреспонденты")));
	КонецЕсли; 
	Если Элементы.Найти("мДатаДелаЗаказчика") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мДатаДелаЗаказчика", Новый ОписаниеТипов("Дата")));
	КонецЕсли; 
	Если Элементы.Найти("мНомерДелаЗаказчика") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мНомерДелаЗаказчика", Новый ОписаниеТипов("Строка")));
	КонецЕсли; 
	Если Элементы.Найти("мОбъектРабот") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мОбъектРабот", Новый ОписаниеТипов("СправочникСсылка.мОбъектыРабот")));
	КонецЕсли; 
	Если Элементы.Найти("мПроверил") = Неопределено Тогда
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мПроверил", Новый ОписаниеТипов("СправочникСсылка.Пользователи")));
	КонецЕсли; 
	Если Элементы.Найти("мВидРабот") = Неопределено Тогда
		Массив = Новый Массив;  
		Массив.Добавить(Новый ОписаниеТипов("СправочникСсылка.мВидыРаботФизЛица"));
		Массив.Добавить(Новый ОписаниеТипов("СправочникСсылка.мВидыРаботЮрЛица"));
		ОписаниеТиповВидРабот = Новый ОписаниеТипов(Массив);
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мВидРабот", ОписаниеТиповВидРабот));
	КонецЕсли; 
    
    Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов, );
    
    ДобавитьРеквизитДелаУслуги(Элементы, "ЭтапДоговора", "Этап договора", Объект, Элементы.ГруппаРеквизиты);    
    ДобавитьРеквизитДелаУслуги(Элементы, "мЗаказчик", "Заказчик", , Элементы.ГруппаКорреспондент);    
    ДобавитьРеквизитДелаУслуги(Элементы, "мНомерДелаЗаказчика", "Номер дела", , Элементы.ГруппаКорреспондент);    
    ДобавитьРеквизитДелаУслуги(Элементы, "мДатаДелаЗаказчика", "Дата дела", , Элементы.ГруппаКорреспондент);    
    ДобавитьРеквизитДелаУслуги(Элементы, "мОбъектРабот", "Объект работ", Объект, Элементы.ГруппаКорреспондент);    
    ДобавитьРеквизитДелаУслуги(Элементы, "мВидРабот", "Вид работ", Объект, Элементы.ГруппаКорреспондент);    
    ДобавитьРеквизитДелаУслуги(Элементы, "мПроверил", "Проверил", Объект, Элементы.ГруппаОрганизация, Элементы.Подразделение);    

КонецПроцедуры
Процедура ДобавитьКнопкиДелаУслуги(Объект, Форма, Элементы) 
	
	// Создание кнопки "Создать Справку" для Дел
	СоздатьКнопку(Форма, Элементы, "СоздатьСправку", "СоздатьСправку", "Создать Справку", 
		БиблиотекаКартинок.СоздатьЭлементСписка, ОтображениеКнопки.КартинкаИТекст,
		Форма.КоманднаяПанель);
		
КонецПроцедуры
Процедура СкрытьЛишниеРеквизитыДелаУслуги(Элементы) 
	Элементы.ДелоТекст.Видимость = Ложь;
	Элементы.СостояниеТекст.Видимость = Ложь;
	Элементы.Подготовил.Видимость = Ложь;
	Элементы.Утвердил.Видимость = Ложь;
	Элементы.ПодписалОтКорреспондента.Видимость = Ложь;
	Элементы.КонтактноеЛицо.Видимость = Ложь;
	Элементы.ГруппаКатегории.Видимость = Ложь;
КонецПроцедуры
 
Процедура ДобавитьРеквизитДелаУслуги(Элементы, ИмяРеквизита, Заголовок, Объект = Неопределено, Родитель, ПередЧем = Неопределено) 
    
	Если Элементы.Найти(ИмяРеквизита) = Неопределено Тогда
		Элемент = Элементы.Вставить(ИмяРеквизита, Тип("ПолеФормы"), Родитель, ПередЧем);
		Элемент.ПутьКДанным = "Объект." + ИмяРеквизита;
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.Заголовок = Заголовок;
		Элемент.РастягиватьПоГоризонтали = Истина;
		Элемент.Видимость = Истина;
		
		Если ИмяРеквизита = "мОбъектРабот" Тогда
			Элемент.УстановитьДействие("НачалоВыбора", "мОбъектРаботНачалоВыбора");
			Элемент.УстановитьДействие("ПриИзменении", "мОбъектРаботПриИзменении");
			
		ИначеЕсли ИмяРеквизита = "мВидРабот" Тогда
			Элемент.УстановитьДействие("НачалоВыбора", "мВидРаботНачалоВыбора");
			Элемент.УстановитьДействие("Создание", "мВидРаботСоздание");
			
		ИначеЕсли ИмяРеквизита = "мПроверил" Тогда
			Элемент.УстановитьДействие("ПриИзменении", "мПроверилПриИзменении");
			
		ИначеЕсли ИмяРеквизита = "ЭтапДоговора" Тогда
			
			Элемент.УстановитьДействие("НачалоВыбора", "ЭтапДоговораНачалоВыбора");
			Элемент.УстановитьДействие("ПриИзменении", "ЭтапДоговораПриИзменении");
		
			Договор = СвязиДокументов.ПолучитьСвязанныйДокумент(Объект.Ссылка, ПредопределенноеЗначение("Справочник.ТипыСвязей.ОтноситсяКДоговору"));	
			
			НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", Договор);
			НовыйМассив = Новый Массив();
			НовыйМассив.Добавить(НовыйПараметр);
			НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
			Элемент.ПараметрыВыбора = НовыеПараметры;
			
		КонецЕсли; 
	КонецЕсли; 
    
КонецПроцедуры

Процедура ДобавитьРеквизитыДопСоглашения(Объект, Форма, Элементы) 
	
	ДобавитьРеквизитДатаНачалаДействияДокумента(Форма, Элементы);
	ДобавитьПолеФормыСостояниеДоговора(Форма, Элементы);
	
КонецПроцедуры
Процедура ДобавитьОбщиеРеквизитыДоговоров(Объект, Форма, Элементы) 
    
	ДобавитьРеквизитДатаНачалаДействияДокумента(Форма, Элементы);
	ДобавитьРеквизитмДокументыВозвращеныЗаказчику(Форма, Элементы);
	ДобавитьПолеФормыСостояниеДоговора(Форма, Элементы);

КонецПроцедуры
Процедура ДобавитьКнопкиДоговоры(Объект, Форма, Элементы, ВидСоздаваемогоДокумента)
     // Кнопка "Создать Дело"
	 Если Элементы.Найти("СоздатьДело") = Неопределено Тогда
		 СоздатьКнопку(Форма, Элементы, "СоздатьДело", "СоздатьДело", "Создать дело", 
		 БиблиотекаКартинок.СоздатьЭлементСписка, ОтображениеКнопки.КартинкаИТекст,
		 Форма.КоманднаяПанель);
	 КонецЕсли; 
		
	// Создание кнопки "Создать Акт выполненных работ" 
	Если Элементы.Найти("СоздатьАктВыполненныхРабот") = Неопределено Тогда
		ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
		Если ДокументооборотПраваДоступа.ЕстьРоль("мРаботаСАктамиВыполненныхРабот",,ТекущийПользователь) Тогда
			СоздатьКнопку(Форма, Элементы, "СоздатьАктВыполненныхРабот", "СоздатьАктВыполненныхРабот", "Создать Акт вып. работ", 
			БиблиотекаКартинок.СоздатьЭлементСписка, ОтображениеКнопки.КартинкаИТекст,
			Форма.КоманднаяПанель);
		КонецЕсли; 
	КонецЕсли; 
		
	Если ВидСоздаваемогоДокумента <> Справочники.ВидыВнутреннихДокументов.ДоговорКонтрольКачества Тогда
		ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
		Если мРазное.УПользователяЕстьРоль(ТекущийПользователь, "мТехАрхив") Тогда
			// Кнопка "Создать ДелоТехАрхив" Кадастровая оценка
			СоздатьКнопку(Форма, Элементы, "СоздатьДелоТехАрхив", "СоздатьДелоТехАрхив", "Создать дело Техархив", 
			БиблиотекаКартинок.СоздатьЭлементСписка, ОтображениеКнопки.КартинкаИТекст,
			Форма.КоманднаяПанель);
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

Процедура ДобавитьРеквизитДатаНачалаДействияДокумента(Форма, Элементы) Экспорт
    Если Элементы.Найти("мДатаНачалаДействияДокумента") = Неопределено Тогда
        МассивДобавляемыхРеквизитов = Новый Массив;
        МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мДатаНачалаДействияДокумента", Новый ОписаниеТипов("Дата")));
        Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов, );
        
        Элемент = Элементы.Вставить("мДатаНачалаДействияДокумента", Тип("ПолеФормы"), Элементы.ГруппаРеквизиты);
        Элемент.ПутьКДанным = "Объект.мДатаНачалаДействияДокумента";
        Элемент.Вид = ВидПоляФормы.ПолеВвода;
        Элемент.Заголовок = "Дата начала действия документа";
        Элемент.РастягиватьПоГоризонтали = Истина;
        Элемент.УстановитьДействие("ПриИзменении", "мДатаНачалаДействияДокументаПриИзменении");
        Элемент.Видимость = Истина;
    КонецЕсли; 
КонецПроцедуры

Процедура ДобавитьРеквизитмДокументыВозвращеныЗаказчику(Форма, Элементы) Экспорт
    Если Элементы.Найти("мДокументыВозвращеныЗаказчику") = Неопределено Тогда
        МассивДобавляемыхРеквизитов = Новый Массив;
        МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мДокументыВозвращеныЗаказчику", Новый ОписаниеТипов("Дата")));
        Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов, );
        
        Элемент = Элементы.Вставить("мДокументыВозвращеныЗаказчику", Тип("ПолеФормы"), Элементы.ГруппаОтменен);
        Элемент.ПутьКДанным = "Объект.мДокументыВозвращеныЗаказчику";
        Элемент.Вид = ВидПоляФормы.ПолеВвода;
        Элемент.Заголовок = "Дата возврата";
        Элемент.Подсказка = "Дата возврата документов заказчику";
        Элемент.РастягиватьПоГоризонтали = Истина;
        Элемент.Видимость = Истина;
    КонецЕсли; 
КонецПроцедуры

Процедура ДобавитьПолеФормыСостояниеДоговора(Форма, Элементы) Экспорт
	Если Элементы.Найти("СостояниеДоговора") = Неопределено Тогда
		МассивДобавляемыхРеквизитов = Новый Массив;
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("СостояниеДоговора", Новый ОписаниеТипов("ПеречислениеСсылка.мСостоянияДоговоров")));
		
		Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов, );
		
		ГруппаНомер = Элементы.Найти("ГруппаНомер");
		Элемент = Элементы.Вставить("СостояниеДоговора", Тип("ПолеФормы"), ГруппаНомер);
		Элемент.ПутьКДанным = "СостояниеДоговора";
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.Заголовок = "Состояние";
		Элемент.РастягиватьПоГоризонтали = Истина;
		Элемент.Видимость = Истина;
		Элемент.КнопкаВыбора = Истина;
		Элемент.УстановитьДействие("ПриИзменении", "СостояниеДоговораПриИзменении");
		
	КонецЕсли; 

КонецПроцедуры

Процедура ДобавитьРеквизитНашРасчетныйСчет(Форма, Элементы, ИмяРеквизита, Заголовок, Объект = Неопределено, Родитель, ПередЧем = Неопределено) Экспорт
    
	Если Элементы.Найти(ИмяРеквизита) = Неопределено Тогда
        МассивДобавляемыхРеквизитов = Новый Массив;
        МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("НашРасчетныйСчет", Новый ОписаниеТипов("СправочникСсылка.БанковскиеСчета")));
        Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов, );
		
		Элемент = Элементы.Вставить(ИмяРеквизита, Тип("ПолеФормы"), Родитель, ПередЧем);
		Элемент.ПутьКДанным = ИмяРеквизита;
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.Заголовок = Заголовок;
		Элемент.РастягиватьПоГоризонтали = Истина;
		//Элемент.ОтметкаНезаполненного = Истина;
		Элемент.Видимость = Истина;
		Элемент.КнопкаВыбора = Истина;
		Элемент.УстановитьДействие("ПриИзменении", "НашРасчетныйСчетПриИзменении");
		Элемент.УстановитьДействие("НачалоВыбора", "НашРасчетныйСчетНачалоВыбора");
		
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Владелец", Объект.Организация);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элемент.ПараметрыВыбора = НовыеПараметры;
		
		НовыйПараметрСвязи = Новый СвязьПараметраВыбора("Отбор.Владелец", "Объект.Организация", РежимИзмененияСвязанногоЗначения.Очищать); 
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметрСвязи);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элемент.СвязиПараметровВыбора = НовыеПараметры;
	КонецЕсли; 
    
КонецПроцедуры

Процедура ДобавитьРеквизитДопСоглашения(Элементы, ИмяРеквизита, Заголовок, Объект = Неопределено, Родитель, ПередЧем = Неопределено)
    
	//Если Элементы.Найти(ИмяРеквизита) = Неопределено Тогда
	//	Элемент = Элементы.Вставить(ИмяРеквизита, Тип("ПолеФормы"), Родитель, ПередЧем);
	//	Элемент.ПутьКДанным = "Объект." + ИмяРеквизита;
	//	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	//	Элемент.Заголовок = Заголовок;
	//	Элемент.РастягиватьПоГоризонтали = Истина;
	//	Элемент.Видимость = Истина;
	//	
	//	Если ИмяРеквизита = "мДатаНачалаДействияДокумента" Тогда
	//		
	//    	Элемент.УстановитьДействие("ПриИзменении", "мДатаНачалаДействияДокументаПриИзменении");
	//
	//	КонецЕсли; 
	//КонецЕсли; 
КонецПроцедуры

Процедура ПриСозданииФормыЭлементаЗадачи(Форма) Экспорт
	
	Если НЕ М_УправлениеФормамиДОРБСервер.ЭтоПроцессПроверкиДела(Форма.Объект.БизнесПроцесс) Тогда
		Возврат;		
	КонецЕсли; 
	
	// Добавляем флаг Максимальный уровень проверки дела
	НадоДобавлять = Истина;
	Для каждого Эл Из Форма.Элементы.ГруппаРеквизиты.ПодчиненныеЭлементы Цикл
		Если Эл.Имя = "мМаксУровеньПроверкиДел" Тогда
			НадоДобавлять = Ложь;
		КонецЕсли; 
	КонецЦикла; 
	
	Если НадоДобавлять Тогда
		МассивДобавляемыхРеквизитов = Новый Массив;
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мМаксУровеньПроверкиДел", Новый ОписаниеТипов("Булево")));
		Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов, );
		
		Элемент = Форма.Элементы.Вставить("мМаксУровеньПроверкиДел", Тип("ПолеФормы"), Форма.Элементы.ГруппаРеквизиты);
		Элемент.ПутьКДанным = "Объект.мМаксУровеньПроверкиДел";
		Элемент.Вид = ВидПоляФормы.ПолеФлажка;
		Элемент.Заголовок = "Максимальный уровень проверки";
		Элемент.Видимость = Истина;
	КонецЕсли; 
	
КонецПроцедуры // ПриСозданииФормыЭлементаСправочникаКорреспонденты(Форма)

Процедура ПриСозданииФормыЭлементаБизнесПроцесса(Форма) Экспорт
	
	Если НЕ М_УправлениеФормамиДОРБСервер.ЭтоПроцессПроверкиДела(Форма.Объект) Тогда
		Возврат;		
	КонецЕсли; 
	
	// Добавляем флаг НеУведомлять
	НадоДобавлять = Истина;
	Если Форма.Элементы.Найти("мОзнакомить") = Неопределено Тогда
		МассивДобавляемыхРеквизитов = Новый Массив;
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("мОзнакомить", Новый ОписаниеТипов("Булево")));
		Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов, );
		
		Элемент = Форма.Элементы.Вставить("мОзнакомить", Тип("ПолеФормы"), Форма.Элементы.ГруппаАвтор);
		Элемент.ПутьКДанным = "Объект.мОзнакомить";
		Элемент.Вид = ВидПоляФормы.ПолеФлажка;
		Элемент.Заголовок = "Ознакомить";
		Элемент.Видимость = Истина;
	КонецЕсли; 
	
КонецПроцедуры // ПриСозданииФормыЭлементаСправочникаКорреспонденты(Форма)

Процедура ПриСозданииФормыСпискаСправочникаВнутренниеДокументы(Форма, Отказ) Экспорт
	
    Элементы = Форма.Элементы;
	
	// Кнопка "Структура связей"
	Кмд = Форма.Команды.Добавить("СтруктураСвязей");
	Кмд.Действие = "СтруктураСвязей";
	Кмд.Заголовок = "Структура связей";
	Кмд.Картинка = БиблиотекаКартинок.Отчет;
	Кмд.Отображение = ОтображениеКнопки.КартинкаИТекст;
	Элемент = Элементы.Вставить("СтруктураСвязей", Тип("КнопкаФормы"), Элементы.ГруппаКоманднаяПанель);
	Элемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	Элемент.ИмяКоманды = "СтруктураСвязей";
	Элемент.Заголовок = "Структура связей";
	
КонецПроцедуры // ПриСозданииФормыСпискаСправочникаВнутренниеДокументы(Форма)

Процедура ПриСозданииФормыСпискаСправочникаВходящиеДокументы(Форма, Отказ) Экспорт
	
    Элементы = Форма.Элементы;
	
	// Кнопка "Структура связей"
	Кмд = Форма.Команды.Добавить("СтруктураСвязей");
	Кмд.Действие = "СтруктураСвязей";
	Кмд.Заголовок = "Структура связей";
	Кмд.Картинка = БиблиотекаКартинок.Отчет;
	Кмд.Отображение = ОтображениеКнопки.КартинкаИТекст;
	Элемент = Элементы.Вставить("СтруктураСвязей", Тип("КнопкаФормы"), Элементы.ГруппаКоманднаяПанель);
	Элемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	Элемент.ИмяКоманды = "СтруктураСвязей";
	Элемент.Заголовок = "Структура связей";
	
КонецПроцедуры // ПриСозданииФормыСпискаСправочникаВнутренниеДокументы(Форма)

Процедура ПриСозданииФормыСпискаСправочникаИсходящиеДокументы(Форма, Отказ) Экспорт
	
    Элементы = Форма.Элементы;
	
	// Кнопка "Структура связей"
	Кмд = Форма.Команды.Добавить("СтруктураСвязей");
	Кмд.Действие = "СтруктураСвязей";
	Кмд.Заголовок = "Структура связей";
	Кмд.Картинка = БиблиотекаКартинок.Отчет;
	Кмд.Отображение = ОтображениеКнопки.КартинкаИТекст;
	Элемент = Элементы.Вставить("СтруктураСвязей", Тип("КнопкаФормы"), Элементы.ГруппаКоманднаяПанель);
	Элемент.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	Элемент.ИмяКоманды = "СтруктураСвязей";
	Элемент.Заголовок = "Структура связей";
	
КонецПроцедуры // ПриСозданииФормыСпискаСправочникаВнутренниеДокументы(Форма)

#КонецОбласти

#Область ПослеЗаписиНаСервере
// ПРОЦЕДУРЫ ПОСЛЕ ЗАПИСИ НА СЕРВЕРЕ

//Процедура для программного управления реквизитами форм при локализации
// ТекущийОбъект - ссылка на записанный объект
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи) Экспорт

	// Запись инвентарного номера в Дело 
	Если ТекущийОбъект.ВидДокумента.Родитель = Справочники.ВидыВнутреннихДокументов.ДокументыТехархива Тогда
		Дело = СвязиДокументов.ПолучитьСвязанныйДокумент(ТекущийОбъект.Ссылка, Справочники.ТипыСвязей.ДелоВАрхиве);
		Если ЗначениеЗаполнено(Дело) Тогда
			Если СокрЛП(Дело.мИнвентарныйНомерТехархива) <> СокрЛП(ТекущийОбъект.РегистрационныйНомер) Тогда
				ДелоОбъект = Дело.ПолучитьОбъект();
				ДелоОбъект.мИнвентарныйНомерТехархива = СокрЛП(ТекущийОбъект.РегистрационныйНомер);
				ДелоОбъект.ОбменДанными.Загрузка = Истина;
				ДелоОбъект.Записать();
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры 

Процедура ПослеЗаписиНаСервереВнутреннегоДокумента(ТекущийОбъект, ПараметрыЗаписи)
    
КонецПроцедуры

#КонецОбласти

Функция ЭтоДело(Предмет) Экспорт
	ЭтоДело = Ложь;
	Если Предмет.ВидДокумента = ПредопределенноеЗначение("Справочник.ВидыВнутреннихДокументов.Дело") Тогда
		ЭтоДело = Истина;
	КонецЕсли;
	Возврат ЭтоДело;
КонецФункции

Функция ЭтоПроцессПроверкиДела(ЗадачаИлиПроцесс) Экспорт
	Если ТипЗнч(ЗадачаИлиПроцесс) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		Процесс = ЗадачаИлиПроцесс.БизнесПроцесс;
	ИначеЕсли ТипЗнч(ЗадачаИлиПроцесс) = Тип("БизнесПроцессСсылка.Согласование") Тогда
		Процесс = ЗадачаИлиПроцесс;
	ИначеЕсли ТипЗнч(ЗадачаИлиПроцесс) = Тип("ДанныеФормыСтруктура") Тогда
		Процесс = ЗадачаИлиПроцесс;
	Иначе
		// Тип не подходит
		Возврат Ложь;
	КонецЕсли; 
	
	Шаблон1 = Справочники.ШаблоныСогласования.ПроверкаДела1Уровня;
	Шаблон2 = Справочники.ШаблоныСогласования.ПроверкаДела2Уровня;
	Шаблон3 = Справочники.ШаблоныСогласования.ПроверкаДела3Уровня;
	Шаблон4 = Справочники.ШаблоныСогласования.ПроверкаДела4Уровня;
	Шаблон5 = Справочники.ШаблоныСогласования.ПроверкаДелаФилиал;
	
	Шаблон = Процесс.Шаблон;
	Если Шаблон = Шаблон1 ИЛИ Шаблон = Шаблон2 
		ИЛИ Шаблон = Шаблон3 ИЛИ Шаблон = Шаблон4 ИЛИ Шаблон = Шаблон5 Тогда
		Возврат Истина;
	КонецЕсли; 
	//Если Найти(Процесс.Шаблон.Наименование, "Проверка дела") > 0 Тогда
	//	Возврат Истина;
	//КонецЕсли; 
	Возврат Ложь;
КонецФункции // ЭтоЗадачаПроверкиДела()

