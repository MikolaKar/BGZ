////////////////////////////////////////////////////////////////////////////////
// Подсистема "Свойства"
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Заполняет наборы свойств объекта. Обычно требуется, если наборов более одного.
//
// Параметры:
//  Объект       - Ссылка на владельца свойств.
//                 Объект владельца свойств.
//                 ДанныеФормыСтруктура (по типу объекта владельца свойств).
//
//  ТипСсылки    - Тип - тип ссылки владельца свойств.
//
//  НаборыСвойств - ТаблицаЗначений с колонками:
//                    Набор - СправочникСсылка.НаборыДополнительныхРеквизитовИСведений.
//
//                    // Далее свойства элемента формы типа ГруппаФормы вида обычная группа
//                    // или страница, которая создается, если наборов больше одного без учета
//                    // пустого набора, который описывает свойства группы удаленных реквизитов.
//                    
//                    // Если значение Неопределено, значит использовать значение по умолчанию.
//                    
//                    // Для любой группы управляемой формы.
//                    Высота                   - Число.
//                    Заголовок                - Строка.
//                    Подсказка                - Строка.
//                    РастягиватьПоВертикали   - Булево.
//                    РастягиватьПоГоризонтали - Булево.
//                    ТолькоПросмотр           - Булево.
//                    ЦветТекстаЗаголовка      - Цвет.
//                    Ширина                   - Число.
//                    ШрифтЗаголовка           - Шрифт.
//                    
//                    // Для обычной группы и страницы.
//                    Группировка              - ГруппировкаПодчиненныхЭлементовФормы.
//                    
//                    // Для обычной группы.
//                    Отображение                - ОтображениеОбычнойГруппы.
//                    ШиринаПодчиненныхЭлементов - ШиринаПодчиненныхЭлементовФормы.
//                    
//                    // Для страницы.
//                    Картинка                 - Картинка.
//                    ОтображатьЗаголовок      - Булево.
//
//  СтандартнаяОбработка - Булево - начальное значение Истина. Указывает получать ли
//                         основной набор, когда НаборыСвойств.Количество() равно нулю.
//
//  КлючНазначения   - Неопределено - (начальное значение) - указывает вычислить ключ
//                      назначения автоматически и добавить к значению свойства формы
//                      КлючНазначенияИспользования, чтобы изменения формы сохранялись
//                      отдельно для разного состава наборов.
//                      Например, для каждого вида номенклатуры - свой состав наборов.
//
//                    - Строка - (не более 32 символа) - использовать указанный ключ назначения
//                      для добавления к значению свойства формы КлючНазначенияИспользования.
//                      Пустая строка - не изменять КлючНазначенияИспользования, т.к.
//                      он устанавливается в форме и уже учитывает различия состава наборов.
//
//                    Добавка имеет формат "КлючНаборовСвойств<КлючНазначения>", чтобы
//                    <КлючНазначения> можно было обновлять без повторной добавки.
//                    При автоматическом вычислении <КлючНазначения> содержит хэш
//                    идентификаторов ссылок упорядоченных наборов свойств.
//
Процедура ЗаполнитьНаборыСвойствОбъекта(Объект, ТипСсылки, НаборыСвойств, СтандартнаяОбработка, КлючНазначения) Экспорт
	
	КлючНазначения = "";
	
	Если ТипСсылки = Тип("СправочникСсылка.ВнутренниеДокументы") Тогда
		ЗаполнитьНаборыСвойствПоВидуВнутреннегоДокумента(Объект.ВидДокумента, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.ВходящиеДокументы") Тогда
		ЗаполнитьНаборыСвойствПоВидуВходящегоДокумента(Объект.ВидДокумента, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.ИсходящиеДокументы") Тогда
		ЗаполнитьНаборыСвойствПоВидуИсходящегоДокумента(Объект.ВидДокумента, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.Корреспонденты") Тогда	
		ЗаполнитьНаборыСвойствПоВидуКорреспондента(Объект.ЮрФизЛицо, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.БанковскиеСчета") Тогда 
		ЗаполнитьНаборыСвойствБанковскогоСчета(Объект.Владелец, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.Проекты") Тогда
		ЗаполнитьНаборыСвойствПоВидуПроекта(Объект.ВидПроекта, НаборыСвойств);
		//Возврат ПолучитьНаборыСвойствПоВидуПроекта(Объект.ВидПроекта);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.ПроектныеЗадачи") Тогда
		ЗаполнитьНаборыСвойствПоПроекту(Объект.Владелец, НаборыСвойств);
		//Возврат ПолучитьНаборыСвойствПоПроекту(Объект.Владелец);
		
	ИначеЕсли ТипСсылки = Тип("БизнесПроцессСсылка.Исполнение")
		ИЛИ ТипСсылки = Тип("БизнесПроцессСсылка.ОбработкаВнутреннегоДокумента")
		ИЛИ ТипСсылки = Тип("БизнесПроцессСсылка.ОбработкаВходящегоДокумента")
		ИЛИ ТипСсылки = Тип("БизнесПроцессСсылка.ОбработкаИсходящегоДокумента")
		ИЛИ ТипСсылки = Тип("БизнесПроцессСсылка.Ознакомление")
		ИЛИ ТипСсылки = Тип("БизнесПроцессСсылка.Поручение")
		ИЛИ ТипСсылки = Тип("БизнесПроцессСсылка.Приглашение")
		ИЛИ ТипСсылки = Тип("БизнесПроцессСсылка.Рассмотрение")
		ИЛИ ТипСсылки = Тип("БизнесПроцессСсылка.Регистрация")
		ИЛИ ТипСсылки = Тип("БизнесПроцессСсылка.Согласование")
		ИЛИ ТипСсылки = Тип("БизнесПроцессСсылка.Утверждение")
		ИЛИ ТипСсылки = Тип("БизнесПроцессСсылка.КомплексныйПроцесс")
		ИЛИ ТипСсылки = Тип("БизнесПроцессСсылка.РешениеВопросовВыполненияЗадач") Тогда
		
		ЗаполнитьДоступныеНаборыСвойствБизнесПроцесса(Объект.Ссылка, НаборыСвойств);
		
	ИначеЕсли ТипСсылки = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		ЗаполнитьДоступныеНаборыСвойствЗадачи(Объект, НаборыСвойств);
		
	КонецЕсли;
	
КонецПроцедуры

// Устарела. Будет удалена в следующей редакции БСП.
// 
// Теперь вместо указания имени реквизита, содержащего вид владельца свойств,
// например, ВидНоменклатуры типа СправочникСсылка.ВидыНоменклатуры,
// у которого должен быть реквизит НаборСвойств типа
// СправочникСсылка.НаборыДополнительныхРеквизитовИСведений
// следует заполнить набор свойств для объекта СправочникСсылка.Номенклатура
// в процедуре ЗаполнитьНаборыСвойствОбъекта, как и в случае нескольких
// наборов свойств. Отличие лишь в том, что набор будет получен из реквизита
// объекта вида владельца самостоятельно, что позволяет использовать несколько
// разных реквизитов с удобными именами для разных типов объектов у которых
// один вид объектов. Например, Справочник.Проекты это вид владельца свойств
// у Справочник.Ошибки и Справочник.Задачи, для которых в справочнике Проекты
// будут реквизиты НаборСвойствОшибок, НаборСвойствЗадач.
//
Функция ПолучитьИмяРеквизитаВидаОбъекта(Ссылка) Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры и функции

Процедура ЗаполнитьНаборыСвойствПоВидуВнутреннегоДокумента(ВидДокумента, НаборыСвойств) Экспорт
	
	ДобавитьСтрокуНабора(НаборыСвойств,	
		Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ВнутренниеДокументы_Общие);

	Если ЗначениеЗаполнено(ВидДокумента) И ЗначениеЗаполнено(ВидДокумента.НаборСвойств) Тогда
		ДобавитьСтрокуНабора(НаборыСвойств,	ВидДокумента.НаборСвойств);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствПоВидуВходящегоДокумента(ВидДокумента, НаборыСвойств) Экспорт
	
	ДобавитьСтрокуНабора(НаборыСвойств,	
		Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ВходящиеДокументы_Общие);

	Если ЗначениеЗаполнено(ВидДокумента) И ЗначениеЗаполнено(ВидДокумента.НаборСвойств) Тогда
		ДобавитьСтрокуНабора(НаборыСвойств,	ВидДокумента.НаборСвойств);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствПоВидуИсходящегоДокумента(ВидДокумента, НаборыСвойств) Экспорт
	
	ДобавитьСтрокуНабора(НаборыСвойств,	
		Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ИсходящиеДокументы_Общие);

	Если ЗначениеЗаполнено(ВидДокумента) И ЗначениеЗаполнено(ВидДокумента.НаборСвойств) Тогда
		ДобавитьСтрокуНабора(НаборыСвойств,	ВидДокумента.НаборСвойств);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствПоВидуКорреспондента(ЮрФизЛицо, НаборыСвойств) Экспорт
	
	ДобавитьСтрокуНабора(НаборыСвойств,	
		Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Корреспонденты_Общие);

	Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		ДобавитьСтрокуНабора(НаборыСвойств,	
			Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_КорреспондентыЮрЛицо);
	ИначеЕсли ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		ДобавитьСтрокуНабора(НаборыСвойств,	
			Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_КорреспондентыФизЛицо);
	ИначеЕсли ЮрФизЛицо = Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель Тогда	
		ДобавитьСтрокуНабора(НаборыСвойств,	
			Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_КорреспондентыИП);
	ИначеЕсли ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент Тогда
		ДобавитьСтрокуНабора(НаборыСвойств,	
			Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_КорреспондентыНерезидент);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствБанковскогоСчета(Владелец, НаборыСвойств) Экспорт
	
	ДобавитьСтрокуНабора(НаборыСвойств,	
		Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_БанковскиеСчета_Общие);
	
	Если ТипЗнч(Владелец) = Тип("СправочникСсылка.Корреспонденты") Тогда
		ДобавитьСтрокуНабора(НаборыСвойств,	
			Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_БанковскиеСчетаКорреспондента);
	ИначеЕсли ТипЗнч(Владелец) = Тип("СправочникСсылка.Организации") Тогда
		ДобавитьСтрокуНабора(НаборыСвойств,	
			Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_БанковскиеСчетаОрганизации);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ЗаполнитьДоступныеНаборыСвойствБизнесПроцесса(Объект, НаборыСвойств) Экспорт
	
	ТипЗначения = ТипЗнч(Объект.Ссылка);
	Попытка
		Если ТипЗначения = Тип("БизнесПроцессСсылка.ОбработкаВнутреннегоДокумента")
			ИЛИ ТипЗначения = Тип("БизнесПроцессСсылка.ОбработкаВходящегоДокумента")
			ИЛИ ТипЗначения = Тип("БизнесПроцессСсылка.ОбработкаИсходящегоДокумента") Тогда
	        ДобавитьСтрокуНабора(НаборыСвойств,	ПредопределенноеЗначение(
				"Справочник.НаборыДополнительныхРеквизитовИСведений.БизнесПроцесс_" + Объект.Метаданные().Имя));
		Иначе
			ДобавитьСтрокуНабора(НаборыСвойств,	ПредопределенноеЗначение(
				"Справочник.НаборыДополнительныхРеквизитовИСведений.БизнесПроцесс_" + Объект.Метаданные().Имя + "_Общие"));
		КонецЕсли;
	Исключение
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не выполнена настройка дополнительных реквизитов для процессов ""%1.""'"), 
			Строка(ТипЗначения));
		ВызватьИсключение Текст;
	КонецПопытки;
		
КонецПроцедуры

Процедура ЗаполнитьДоступныеНаборыСвойствЗадачи(Объект, НаборыСвойств) Экспорт
	
	ДобавитьСтрокуНабора(НаборыСвойств,	
		Справочники.НаборыДополнительныхРеквизитовИСведений.Задача_ЗадачаИсполнителя);
	
	БизнесПроцесс = Объект.БизнесПроцесс;
	ТипЗначения = ТипЗнч(БизнесПроцесс);
	
	Если ТипЗначения = Тип("БизнесПроцессСсылка.ОбработкаВнутреннегоДокумента")
		ИЛИ ТипЗначения = Тип("БизнесПроцессСсылка.ОбработкаВходящегоДокумента")
		ИЛИ ТипЗначения = Тип("БизнесПроцессСсылка.ОбработкаИсходящегоДокумента") Тогда
		ДобавитьСтрокуНабора(НаборыСвойств,	ПредопределенноеЗначение(
			"Справочник.НаборыДополнительныхРеквизитовИСведений.БизнесПроцесс_" + БизнесПроцесс.Метаданные().Имя));
	Иначе
		ИмяНабора = "БизнесПроцесс_" +
			БизнесПроцесс.Метаданные().Имя 
			+ "_"
			+ Объект.ТочкаМаршрута.Имя;
			
		Попытка
			ДобавитьСтрокуНабора(НаборыСвойств,	Справочники.НаборыДополнительныхРеквизитовИСведений[ИмяНабора]);
		Исключение
			// обработчик пустой, так как для ведущих задач доп.реквизиты не задаются
		КонецПопытки;
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствПоВидуПроекта(ВидПроекта, НаборыСвойств) Экспорт
	
	ДобавитьСтрокуНабора(НаборыСвойств,	
		Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Проекты_Общие);

	Если ЗначениеЗаполнено(ВидПроекта) И ЗначениеЗаполнено(ВидПроекта.НаборСвойствПроектов) Тогда
		ДобавитьСтрокуНабора(НаборыСвойств,	ВидПроекта.НаборСвойствПроектов);
	КонецЕсли;	

КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствПоПроекту(Проект, НаборыСвойств) Экспорт
	
	ДобавитьСтрокуНабора(НаборыСвойств,
		Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ПроектныеЗадачи_Общие);
	
	Если ЗначениеЗаполнено(Проект) 
		И ЗначениеЗаполнено(Проект.ВидПроекта)
		И ЗначениеЗаполнено(Проект.ВидПроекта.НаборСвойствПроектныхЗадач) Тогда
		
		ДобавитьСтрокуНабора(НаборыСвойств,	Проект.ВидПроекта.НаборСвойствПроектныхЗадач);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьСтрокуНабора(НаборыСвойств, ЗначениеНабора)
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = ЗначениеНабора;
	
КонецПроцедуры
