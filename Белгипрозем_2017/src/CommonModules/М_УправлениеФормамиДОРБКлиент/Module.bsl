#Область ПриОткрытииФормыЭлемента
Процедура ПриОткрытииФормыЭлемента(Форма, Отказ) Экспорт
	Имя = Форма.ИмяФормы;
	
	Если Имя = "Справочник.ВнутренниеДокументы.Форма.ФормаЭлемента" Тогда
    	ПриОткрытииФормыЭлементаСправочникаВнутренниеДокументы(Форма, Отказ);
	ИначеЕсли Имя = "Справочник.ВходящиеДокументы.Форма.ФормаЭлемента" Тогда
    	ПриОткрытииФормыЭлементаСправочникаВходящиеДокументы(Форма, Отказ);
	ИначеЕсли Имя = "БизнесПроцесс.Согласование.Форма.ФормаЗадачиИсполнителя" Тогда
    	ПриОткрытииФормыЭлементаБизнесПроцессСогласование(Форма, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытииФормыЭлементаСправочникаВнутренниеДокументы(Форма, Отказ) 
	Форма.Элементы.мВнесеноЗис.Видимость = Ложь;
	Форма.Элементы.мКомментарийЗИС.Видимость = Ложь;
	
	Если Форма.Объект["ВидДокумента"] = ПредопределенноеЗначение("Справочник.ВидыВнутреннихДокументов.Дело") Тогда
		Форма.Элементы.ФормаОбщаяКомандаДобавитьВнешнийШтрихкод.Видимость = Ложь;
		Форма.Элементы.ФормаОбщаяКомандаПечатьНаклейкиШтрихкод.Видимость = Ложь;
		Форма.Элементы.ФормаОбщаяКомандаПечатьШтрихкода.Видимость = Ложь;
		Форма.Элементы.ФормаОбщаяКомандаПечатьРегистрационногоШтампа.Видимость = Ложь;
		Рекв = мПроверкаДела.ПолучитьВнесениеЗИС(Форма.Объект.Ссылка);
		Если Рекв <> Неопределено Тогда
			Форма["мВнесеноЗИС"] = Рекв.ВнесеноЗИС;
			Форма["мКомментарийЗИС"] = Рекв.КомментарийЗИС;
		КонецЕсли; 
		Форма.Элементы.мВнесеноЗис.Видимость = Истина;
		Форма.Элементы.мКомментарийЗИС.Видимость = Истина;
		Форма.Элементы.мКомментарийЗИС.Доступность = Форма["мВнесеноЗИС"];
		
	ИначеЕсли Форма.Объект["ВидДокумента"] = ПредопределенноеЗначение("Справочник.ВидыВнутреннихДокументов.ДелоУслуги") Тогда
		Форма.КоманднаяПанель.ПодчиненныеЭлементы.ФормаСтандартныеКоманды.ПодчиненныеЭлементы.ФормаСоздатьНаОсновании.Видимость = Ложь;
		//Форма.Элементы.ФормаОбработкамСозданиеПечатьАктовВыполненныхРаботАктВыполненныхРабот.Видимость = Ложь;
		//Форма.Элементы.ФормаОбработкамИнформацияДляОплатыДоговораИнформацияДляОплатыДоговора.Видимость = Ложь;
		//Форма.Элементы.ФормаОбработкамПечатьДоговоровмПечатьДоговоров.Видимость = Ложь;
		Форма.Элементы.ФормаОбщаяКомандаДобавитьВнешнийШтрихкод.Видимость = Ложь;
		Форма.Элементы.ФормаОбщаяКомандаПечатьНаклейкиШтрихкод.Видимость = Ложь;
		Форма.Элементы.ФормаОбщаяКомандаПечатьШтрихкода.Видимость = Ложь;
		Форма.Элементы.ФормаОбщаяКомандаПечатьРегистрационногоШтампа.Видимость = Ложь;
		// Скрытие лишних реквизитов
		Форма.Элементы.Подготовил.Видимость = Ложь;
		Форма.Элементы.Утвердил.Видимость = Ложь;
		Форма.Элементы.КонтактноеЛицо.Видимость = Ложь;
		Форма.Элементы.ПодписалОтКорреспондента.Видимость = Ложь;
		//Форма.Элементы.ФормаРегистрСведениймОбменЕРИПЗарегистрироватьДляОтправкиЕРИП.Видимость = Ложь;
		
	ИначеЕсли Форма.Объект["ВидДокумента"] = ПредопределенноеЗначение("Справочник.ВидыВнутреннихДокументов.АктВыполненныхРабот") Тогда
		//Форма.Элементы.ФормаОбработкамИнформацияДляОплатыДоговораИнформацияДляОплатыДоговора.Видимость = Ложь;
		//Форма.Элементы.ФормаОбработкамПечатьДоговоровмПечатьДоговоров.Видимость = Ложь;
		Форма.Элементы.ФормаОбщаяКомандаДобавитьВнешнийШтрихкод.Видимость = Ложь;
		Форма.Элементы.ФормаОбщаяКомандаПечатьНаклейкиШтрихкод.Видимость = Ложь;
		Форма.Элементы.СрокИсполнения.Видимость = Ложь;
		Форма.Элементы.СостояниеТекст.Видимость = Ложь;
		Форма.Элементы.ФормаОбщаяКомандаПечатьРегистрационногоШтампа.Видимость = Ложь;
		
		Если Форма.Объект.Ссылка.Пустая() Тогда
			// Заполнение сумм акта из этапа
			РеквСтоимости = мРаботаСДоговорами.ПолучитьРеквизитыСтоимостиЭтапаДоговора(Форма.Объект["ЭтапДоговора"]);
			Форма.Объект["Сумма"] = РеквСтоимости.СтоимостьСНДС;
			ЗаполнитьЗначенияСвойств(Форма, РеквСтоимости);

			Форма["СостояниеАкта"] = ПредопределенноеЗначение("Перечисление.мСостоянияАктовВыполненныхРабот.Черновик");
			Форма["ВидАкта"] = ПредопределенноеЗначение("Перечисление.мВидыАктовВыполненныхРабот.Обычный");
			Форма["РезультатПроверки"] = ПредопределенноеЗначение("Справочник.мЗамечанияПроверкиАктов.НеПроверен");
		Иначе
			// берем все из реквизитов
			РеквАкта = мРаботаСДоговорами.ПолучитьРеквизитыАктаВыполненныхРабот(Форма.Объект.Ссылка);
			ЗаполнитьЗначенияСвойств(Форма, РеквАкта);
			Форма["РезультатПроверки"] = мРаботаСДоговорами.ЗамечаниеПроверкиАкта(Форма.Объект.Ссылка);
			//ЗаполнитьЗначенияСвойств(Форма, РеквАкта, , "СуммаНДС, СтавкаНДС, ОсвобождениеОтНДС");
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры	

Процедура ПриОткрытииФормыЭлементаСправочникаВходящиеДокументы(Форма, Отказ) 
	// Задаем вид справочника Виды работ
	Если Форма.Элементы.Найти("ВидРабот") <> Неопределено Тогда
		Если Форма.Элементы["ВидРабот"].Видимость Тогда
		//Если Форма["ВидРабот"].Видимость Тогда
			Отправитель = Форма.Объект["Отправитель"];
			Если ЗначениеЗаполнено(Отправитель) Тогда
				ИскЭлемент = Форма.Элементы["ВидРабот"];
				
				МассивТипов=Новый Массив();
				
				Если мРаботаСДоговорами.ЭтоФизЛицо(Отправитель) Тогда
					МассивТипов.Добавить(Тип("СправочникСсылка.мВидыРаботФизЛица"));
				Иначе
					МассивТипов.Добавить(Тип("СправочникСсылка.мВидыРаботЮрЛица"));
				КонецЕсли;	
				ИскЭлемент.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры	

Процедура ПриОткрытииФормыЭлементаБизнесПроцессСогласование(Форма, Отказ) 
	Если М_УправлениеФормамиДОРБСервер.ЭтоПроцессПроверкиДела(Форма.Объект.БизнесПроцесс) Тогда
		// Для Проверок качества убираем видимость кнопки Согласовано с замечаниями
		Форма.Элементы["СогласованоСЗамечаниями"].Видимость = Ложь;
		
	КонецЕсли; 
КонецПроцедуры


#КонецОбласти

#Область ПриОткрытииФормыСписка

Процедура ПриОткрытииФормыСписка(Форма, Отказ) Экспорт
	Имя = Форма.ИмяФормы;
	
	Если Имя = "Справочник.ВходящиеДокументы.Форма.ФормаСписка" Тогда
    	ПриОткрытииФормыСпискаСправочникаВходящиеДокументы(Форма, Отказ);
	ИначеЕсли Имя = "Справочник.ВнутренниеДокументы.Форма.ФормаСпискаСПапками" Тогда
    	ПриОткрытииФормыСпискаСправочникаВнутренниеДокументы(Форма, Отказ);
	ИначеЕсли Имя = "Справочник.ИсходящиеДокументы.Форма.ФормаСписка" Тогда
    	ПриОткрытииФормыСпискаСправочникаИсходящиеДокументы(Форма, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытииФормыСпискаСправочникаВходящиеДокументы(Форма, Отказ) 
	УстановкаФильтраПоПодразделению(Форма, Отказ);
КонецПроцедуры	

Процедура ПриОткрытииФормыСпискаСправочникаВнутренниеДокументы(Форма, Отказ) 
	УстановкаФильтраПоПодразделению(Форма, Отказ);
КонецПроцедуры	

Процедура ПриОткрытииФормыСпискаСправочникаИсходящиеДокументы(Форма, Отказ)
	УстановкаФильтраПоПодразделению(Форма, Отказ);
КонецПроцедуры	

Процедура УстановкаФильтраПоПодразделению(Форма, Отказ)
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
	Если мРазное.ПолучитьИспользоватьОтборПоПодразделениям() Тогда
		// Проверяем права доступа
		Если ДокументооборотПраваДоступа.ЕстьРоль("мИзменениеПодразделения") Тогда
			Форма.Элементы["ОтборПодразделение"].ТолькоПросмотр = Ложь;
		Иначе	
			// Установка отбора по Подразделению
			Если Форма.Элементы["ОтборПодразделение"].Видимость Тогда
				Форма.Подразделение = РаботаСПользователями.ПолучитьПодразделение(ТекущийПользователь);
				Форма.Элементы["ОтборПодразделение"].ТолькоПросмотр = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры
#КонецОбласти

 
 
