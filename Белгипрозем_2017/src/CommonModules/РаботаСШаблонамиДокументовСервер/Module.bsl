Функция ПолучитьНаборДопРеквизитовДокумента(ТипДокумента, ВидДокумента, ОбъектШаблон) Экспорт
	
	ОбъектДО = Справочники[ТипДокумента].СоздатьЭлемент();
	ОбъектДО.ВидДокумента = ВидДокумента;
	
	НаборСвойств = УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(ОбъектДО);  
	
	Результат = Новый СписокЗначений;
	НаборСвойствОбъекта = Новый Массив;
	
	Для Каждого Элемент Из НаборСвойств Цикл
		Для Каждого ДопРеквизит Из Элемент.Набор.ДополнительныеРеквизиты Цикл
			Если НаборСвойствОбъекта.Найти(ДопРеквизит.Свойство) = Неопределено Тогда
				НаборСвойствОбъекта.Добавить(ДопРеквизит.Свойство);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
		
	Для Каждого ДопРеквизит Из НаборСвойствОбъекта Цикл
		ДанныеОДополнительномРеквизите = Новый Структура;
		ДанныеОДополнительномРеквизите.Вставить("Свойство", ДопРеквизит);
		
		Если ОбъектШаблон.ДополнительныеРеквизиты.Количество() > 0 Тогда
			СтруктураПоиска = Новый Структура("Реквизит", ДопРеквизит);
			СтрокиТаблицыЗначений = ОбъектШаблон.ДополнительныеРеквизиты.НайтиСтроки(СтруктураПоиска);
			Если СтрокиТаблицыЗначений.Количество() > 0 Тогда
				СтрокаТаблицыЗначений = СтрокиТаблицыЗначений[0];
				Если СтрокаТаблицыЗначений <> Неопределено Тогда
					ДанныеОДополнительномРеквизите.Вставить("Значение", СтрокаТаблицыЗначений.ЗначениеРеквизита);
				Иначе
					ДанныеОДополнительномРеквизите.Вставить("Значение", Неопределено);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		ДанныеОДополнительномРеквизите.Вставить("ТипРеквизита", ДопРеквизит.ТипЗначения);
		Результат.Добавить(ДанныеОДополнительномРеквизите);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ПоместитьДопРеквизитыНаФорму(ТабличнаяЧастьДопРеквизиты, СписокДопРеквизитов) Экспорт
	
	ТабличнаяЧастьДопРеквизиты.Очистить();
	Для Каждого Реквизит Из СписокДопРеквизитов Цикл
		НоваяСтрока = ТабличнаяЧастьДопРеквизиты.Добавить();
		НоваяСтрока.Реквизит = Реквизит.Значение.Свойство;
		Если Реквизит.Значение.Свойство("Значение") И ЗначениеЗаполнено(Реквизит.Значение.Значение) Тогда
			НоваяСтрока.ЗначениеРеквизита = Реквизит.Значение.Значение;
		КонецЕсли;
		НоваяСтрока.ТипЗначения = Реквизит.Значение.ТипРеквизита;
	КонецЦикла;
	
КонецПроцедуры

// Прописывает персональным шаблонам Автора в табличную часть Доступ
//
Процедура ОбновлениеИнформационнойБазыПерейтиНаверсию_1_2_1_6() Экспорт
	
	Выборка = Справочники.ШаблоныВнутреннихДокументов.Выбрать();
	Пока Выборка.Следующий() Цикл
		Объект = Выборка.ПолучитьОбъект();
		Если ЗначениеЗаполнено(Объект.Автор) Тогда
			Объект.Ответственный = Объект.Автор;
			Объект.Записать();
		КонецЕсли;
	КонецЦикла;
	
	Выборка = Справочники.ШаблоныВходящихДокументов.Выбрать();
	Пока Выборка.Следующий() Цикл
		Объект = Выборка.ПолучитьОбъект();
		Если ЗначениеЗаполнено(Объект.Автор) Тогда
			Объект.Ответственный = Объект.Автор;
			Объект.Записать();
		КонецЕсли;
	КонецЦикла;
	
	Выборка = Справочники.ШаблоныИсходящихДокументов.Выбрать();
	Пока Выборка.Следующий() Цикл
		Объект = Выборка.ПолучитьОбъект();
		Если ЗначениеЗаполнено(Объект.Автор) Тогда
			Объект.Ответственный = Объект.Автор;
			Объект.Записать();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Возвращает количество доступных пользователю шаблонов документов
//
Функция ПолучитьКоличествоДоступныхШаблоновДокументов(ИмяСправочникаШаблонов) Экспорт

	ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(ШаблоныДокументов.Код) КАК КоличествоШаблонов
		|ИЗ
		|	Справочник.[ИмяСправочникаШаблонов] КАК ШаблоныДокументов";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "[ИмяСправочникаШаблонов]", ИмяСправочникаШаблонов);
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Возврат Запрос.Выполнить().Выгрузить()[0][0];
	
КонецФункции
