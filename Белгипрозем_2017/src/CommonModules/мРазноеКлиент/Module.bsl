#Область ФункцииДляПечатиВВорд

// Заменяет строку символов ИмяЗакладки значением Значение в Док (документ Ворд)
&НаКлиенте
Процедура Заменить(Поиск, ИмяЗакладки, Значение, ЗаменятьВезде = 2) Экспорт
	стрЗаменить = "%***%";//уникальная последовательность символов
	Если СтрДлина(Значение) > 255  Тогда//больше 255 вставить нельзя
		//вставим первые 250 символов нашей строки и последовательность %***%, которую заменим рекурсивным вызовом
		Поиск.Execute(ИмяЗакладки,  Ложь, Истина, Ложь, , , Истина, , Ложь, Лев(Значение,250) + стрЗаменить, ЗаменятьВезде);
		//передаем остаток строки для вставки
		Заменить(Поиск, стрЗаменить, Сред(Значение,251), ЗаменятьВезде);
	Иначе
		//ЗаменятьВезде = ?(ЗаменятьВезде=0, "", ЗаменятьВезде);
		Поиск.Execute(ИмяЗакладки,  Ложь, Истина, Ложь, , , Истина, , Ложь, Значение, ЗаменятьВезде);
	КонецЕсли;
КонецПроцедуры


// Возвращает Ставку НДС для прописи и Льготу по НДС
&НаКлиенте
Функция ПолучитьЛьготуНДС(ЭтапыДоговора) Экспорт
	
	ЛьготаНДС = "";
	СтавкаНДСДляПрописи = "";
	Ст33 = ПредопределенноеЗначение("Справочник.мСтавкиНДС.Ст33");
	
	Для Каждого Стр Из ЭтапыДоговора Цикл
		Если Стр.СуммаНДС > 0 Тогда
			СтавкаНДСДляПрописи = Стр.СтавкаНДС;
		Иначе	
			// может быть Ст.33 НК РБ
			Если Стр.СтавкаНДС = Ст33 Тогда
				СтавкаНДСДляПрописи = Стр.СтавкаНДС;
			КонецЕсли; 
		КонецЕсли; 
		
		Если Стр.СуммаНДС = 0 Тогда
			Если Стр.СтавкаНДС <> Ст33 Тогда
				ЛьготаНДС = "В соответствии с "+СокрЛП(Стр.ОсвобождениеОтНДСДляПечати)+" вышеуказанные работы освобождаются от обложения налогом на добавленную стоимость."+Символы.ПС;
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
	
	РеквизитыЛьготы = Новый Структура(); 
	РеквизитыЛьготы.Вставить("ЛьготаНДС", ЛьготаНДС);
	РеквизитыЛьготы.Вставить("СтавкаНДСДляПрописи", СтавкаНДСДляПрописи);
	Возврат РеквизитыЛьготы;
	
КонецФункции // ПолучитьЛьготуНДС(ЭтапыДоговора)

// Возвращает Ставку НДС для прописи и Льготу по НДС
&НаКлиенте
Функция ПолучитьЛьготуНДСНоменклатуры(ЭтапыДоговора) Экспорт
	
	ЛьготаНДС = "";
	СтавкаНДСДляПрописи = "";
	Ст33 = ПредопределенноеЗначение("Справочник.мСтавкиНДС.Ст33");
	
	Для Каждого Стр Из ЭтапыДоговора Цикл
		Если Стр.НДС > 0 Тогда
			СтавкаНДСДляПрописи = Стр.СтавкаНДС;
		Иначе	
			// может быть Ст.33 НК РБ
			Если Стр.СтавкаНДС = Ст33 Тогда
				СтавкаНДСДляПрописи = Стр.СтавкаНДС;
			КонецЕсли; 
		КонецЕсли; 
		
		Если Стр.НДС = 0 Тогда
			Если Стр.СтавкаНДС <> Ст33 Тогда
				ЛьготаНДС = "В соответствии с "+СокрЛП(Стр.ОсвобождениеОтНДСДляПечати)+" вышеуказанные работы освобождаются от обложения налогом на добавленную стоимость."+Символы.ПС;
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
	
	РеквизитыЛьготы = Новый Структура(); 
	РеквизитыЛьготы.Вставить("ЛьготаНДС", ЛьготаНДС);
	РеквизитыЛьготы.Вставить("СтавкаНДСДляПрописи", СтавкаНДСДляПрописи);
	Возврат РеквизитыЛьготы;
	
КонецФункции  

// Возвращает порядковый номер
//
// Параметры:
//  Номер  - <Число> - Число, порядковый ноер которого надо получить
//  Падеж - 1 - Именительный, 2-Родительный, 3-Дательный (вместо второй-другой "стороны") 
//  Род - м - мужской, ж - женский 
//
// Возвращаемое значение:
//   <Строка>   - порядковый номер
//
&НаКлиенте
Функция ПорядковыйНомер(Номер, Падеж = 1, Род = "м") Экспорт
	
	Если Не ЗначениеЗаполнено(Номер) или Номер > 999 Тогда
		Возврат "";	
	КонецЕсли; 
	
    //Массив = Новый Массив ();
    Если Падеж = 1 Тогда
        Если Род = "м" Тогда
            СтрокаЗнач = "первый,второй,третий,четвертый,пятый,шестой,седьмой,восьмой,девятый,десятый,
            |одиннадцатый,двенадцатый,тринадцатый,четырнадцатый,пятнадцатый,шестнадцатый,семнадцатый,восемнадцатый,девятнадцатый,двадцатый";
        Иначе
            СтрокаЗнач = "первая,вторая,третья,четвертая,пятая,шестая,седьмая,восьмая,девятая,десятая,
            |одиннадцатая,двенадцатая,тринадцатая,четырнадцатая,пятнадцатая,шестнадцатая,семнадцатая,восемнадцатая,девятнадцатая,двадцатая";
        КонецЕсли; 
	ИначеЕсли Падеж = 2 Тогда
        Если Род = "м" Тогда
            СтрокаЗнач = "первого,второго,третьего,четвертого,пятого,шестого,седьмого,восьмого,девятого,десятого,
            |одиннадцатого,двенадцатого,тринадцатого,четырнадцатого,пятнадцатого,шестнадцатого,семнадцатого,восемнадцатого,девятнадцатого,двадцатого";
        Иначе
             СтрокаЗнач = "первой,второй,третьей,четвертой,пятой,шестой,седьмой,восьмой,девятой,десятой,
            |одиннадцатой,двенадцатой,тринадцатой,четырнадцатой,пятнадцатой,шестнадцатой,семнадцатой,восемнадцатой,девятнадцатой,двадцатой";
        КонецЕсли; 
	ИначеЕсли Падеж = 3 Тогда
        Если Род = "м" Тогда
             СтрокаЗнач = "первому,второму,третьему,четвертому,пятому,шестому,седьмому,восьмому,девятому,десятому,
            |одиннадцатому,двенадцатому,тринадцатому,четырнадцатому,пятнадцатому,шестнадцатому,семнадцатому,восемнадцатому,девятнадцатому,двадцатому";
        Иначе
             СтрокаЗнач = "первой,другой,третьей,четвертой,пятой,шестой,седьмой,восьмой,девятой,десятой,
            |одиннадцатой,двенадцатой,тринадцатой,четырнадцатой,пятнадцатой,шестнадцатой,семнадцатой,восемнадцатой,девятнадцатой,двадцатой";
        КонецЕсли; 
    КонецЕсли; 
    
    Массив = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаЗнач);
	
    //Массив10 = Новый Массив ();
	Если Падеж = 1 Тогда
        Если Род = "м" Тогда
            СтрокаЗнач = "десятый,двадцатый,тридцатый,сороковой,пятидесятый,шестидесятый,семидесятый,восьмидесятый,девяностый";
        Иначе
            СтрокаЗнач = "десятая,двадцатая,тридцатая,сороковая,пятидесятая,шестидесятая,семидесятая,восьмидесятая,девяностая";
        КонецЕсли; 
	ИначеЕсли Падеж = 2 Тогда
        Если Род = "м" Тогда
            СтрокаЗнач = "десятого,двадцатого,тридцатого,сорокового,пятидесятого,шестидесятого,семидесятого,восьмидесятого,девяностого";
        Иначе
            СтрокаЗнач = "десятой,двадцатой,тридцатой,сороковой,пятидесятой,шестидесятой,семидесятой,восьмидесятой,девяностой";
        КонецЕсли; 
	ИначеЕсли Падеж = 3 Тогда
        Если Род = "м" Тогда
            СтрокаЗнач = "десятому,двадцатому,тридцатому,сороковому,пятидесятому,шестидесятому,семидесятому,восьмидесятому,девяностому";
        Иначе
            СтрокаЗнач = "десятой,двадцатой,тридцатой,сороковой,пятидесятой,шестидесятой,семидесятой,восьмидесятой,девяностой";
        КонецЕсли; 
    КонецЕсли;
    
    Массив10 = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаЗнач);
    
    Массив100 = Новый Массив ();
	Если Падеж = 1 Тогда
        Если Род = "м" Тогда
            СтрокаЗнач = "сотый,двухсотый,трехсотый,четырехсотый,пятисотый,шестисотый,семисотый,восьмисотый,девятисотый";
        Иначе
            СтрокаЗнач = "сотая,двухсотая,трехсотая,четырехсотая,пятисотая,шестисотая,семисотая,восьмисотая,девятисотая";
        КонецЕсли; 
	ИначеЕсли Падеж = 2 Тогда
        Если Род = "м" Тогда
            СтрокаЗнач = "сотого,двухсотого,трехсотого,четырехсотого,пятисотого,шестисотого,семисотого,восьмисотого,девятисотого";
        Иначе
            СтрокаЗнач = "сотой,двухсотой,трехсотой,четырехсотой,пятисотой,шестисотой,семисотой,восьмисотой,девятисотой";
        КонецЕсли; 
	ИначеЕсли Падеж = 3 Тогда
        Если Род = "м" Тогда
            СтрокаЗнач = "сотому,двухсотому,трехсотому,четырехсотому,пятисотому,шестисотому,семисотому,восьмисотому,девятисотому";
        Иначе
            СтрокаЗнач = "сотой,двухсотой,трехсотой,четырехсотой,пятисотой,шестисотой,семисотой,восьмисотой,девятисотой";
        КонецЕсли; 
    КонецЕсли; 
    
    Массив100 = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаЗнач);
    
	Если Номер <= 20 Тогда
		Возврат Массив[Номер-1];
	Иначе
		Кратно10 = ?(Номер%10 = 0, Истина, Ложь);
		
		Если Номер >= 100 Тогда
			Кратно100 = ?(Номер%100 = 0, Истина, Ложь);
			Если Кратно100 Тогда
				Индекс100 = Цел(Номер/100)-1;
				Возврат Массив100[Индекс100]; // сотый
				
			ИначеЕсли Кратно10 Тогда
				Знач100 = Цел(Номер/100)*100;
				Индекс10 = Цел((Номер - Знач100)/10) - 1;
				Возврат ЧислоПрописью(Знач100, ,",,,,,,,,0") + Массив10[Индекс10]; // сто десятый
			Иначе
				Знач100 = Цел(Номер/100)*100;
				Знач10 = Цел((Номер - Знач100)/10)*10;
				Если Знач10 < 20 Тогда
					Индекс = Номер - Знач100 - 1;
					Возврат ЧислоПрописью(Знач100, ,",,,,,,,,0") + Массив[Индекс]; // сто первый 
				Иначе	
					Индекс = Номер - Знач100 - Знач10 - 1;
					Возврат ЧислоПрописью(Знач100+Знач10, ,",,,,,,,,0") + Массив[Индекс]; // сто двадцать первый 
				КонецЕсли; 
			КонецЕсли; 
		Иначе
			Если Кратно10 Тогда
				Индекс10 = Цел(Номер/10) - 1;
				Возврат Массив10[Индекс10]; // тридцатый
			Иначе
				Знач10 = Цел(Номер/10)*10;         
				Индекс = Номер - Знач10 - 1;
				Возврат ЧислоПрописью(Знач10, ,",,,,,,,,0") + Массив[Индекс]; // тридцать первый 
			КонецЕсли;			
		КонецЕсли; 
	КонецЕсли; 
	Возврат "";
КонецФункции // ПорядковыйНомер()

// Дней - число,
// ВидДней - перечисление.ВидыДней
&НаКлиенте
Функция ДлительностьВыполненияРаботСтрокой(Дней, ВидДней) Экспорт
	Если Дней <= 0 Тогда
		Сообщить("Не задана длительность выполнения работ!");
		Возврат "";
	КонецЕсли; 
	
	СтрокаТекста = "" + Дней;
	ЧислоЕдиницДней = Дней - Цел(Дней/10)*10;
	Если ЧислоЕдиницДней = 1 Тогда
		Если ВидДней = ПредопределенноеЗначение("Перечисление.ВидыДней.Календарные") Тогда
			СтрокаТекста = СтрокаТекста + " календарного дня";
		Иначе
			СтрокаТекста = СтрокаТекста + " рабочего дня";
		КонецЕсли; 
	Иначе
		Если ВидДней = ПредопределенноеЗначение("Перечисление.ВидыДней.Календарные") Тогда
			СтрокаТекста = СтрокаТекста + " календарных дней";
		Иначе
			СтрокаТекста = СтрокаТекста + " рабочих дней";
		КонецЕсли; 
	КонецЕсли;
	Возврат СтрокаТекста;
КонецФункции



#КонецОбласти 

#Область РаботаСИндикатором

&НаКлиенте
Функция ПолучитьИндикаторПроцесса(КоличествоПроходов, ПредставлениеПроцесса = "Выполнено", ВнутреннийСчетчик = Истина,
	КоличествоОбновлений = 100, ЛиВыводитьВремя = Истина, РазрешитьПрерывание = Истина) Экспорт 
	
	Индикатор = Новый Структура;
	Индикатор.Вставить("КоличествоПроходов", КоличествоПроходов);
	Индикатор.Вставить("ДатаНачалаПроцесса", ТекущаяДата());
	Индикатор.Вставить("ПредставлениеПроцесса", ПредставлениеПроцесса);
	Индикатор.Вставить("ЛиВыводитьВремя", ЛиВыводитьВремя);
	Индикатор.Вставить("РазрешитьПрерывание", РазрешитьПрерывание);
	Индикатор.Вставить("ВнутреннийСчетчик", ВнутреннийСчетчик);
	Индикатор.Вставить("Шаг", КоличествоПроходов / КоличествоОбновлений);
	Индикатор.Вставить("СледующийСчетчик", 0);
	Индикатор.Вставить("Счетчик", 0);
	Возврат Индикатор;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьИндикатор(Индикатор, Счетчик = 0) Экспорт 
	
	Если Индикатор.ВнутреннийСчетчик Тогда
		Индикатор.Счетчик = Индикатор.Счетчик + 1;
		Счетчик = Индикатор.Счетчик;
	КонецЕсли;
	Если Индикатор.РазрешитьПрерывание Тогда
		ОбработкаПрерыванияПользователя();
	КонецЕсли;
	
	Если Счетчик > Индикатор.СледующийСчетчик Тогда
		Индикатор.СледующийСчетчик = Цел(Счетчик + Индикатор.Шаг);
		Если Индикатор.ЛиВыводитьВремя Тогда
			ПрошлоВремени = ТекущаяДата() - Индикатор.ДатаНачалаПроцесса;
			Осталось = ПрошлоВремени * (Индикатор.КоличествоПроходов / Счетчик - 1);
			Часов = Цел(Осталось / 3600);
			Осталось = Осталось - (Часов * 3600);
			Минут = Цел(Осталось / 60);
			Секунд = Цел(Цел(Осталось - (Минут * 60)));
			ОсталосьВремени = Формат(Часов, "ЧЦ=2; ЧН=00; ЧВН=") + ":" 
			+ Формат(Минут, "ЧЦ=2; ЧН=00; ЧВН=") + ":" 
			+ Формат(Секунд, "ЧЦ=2; ЧН=00; ЧВН=");
			ТекстОсталось = "Осталось: ~" + ОсталосьВремени;
		Иначе
			ТекстОсталось = "";
		КонецЕсли;
		
		Если Индикатор.КоличествоПроходов > 0 Тогда
			ТекстСостояния = ТекстОсталось;
		Иначе
			ТекстСостояния = "";
		КонецЕсли;
		
		Состояние(Индикатор.ПредставлениеПроцесса, Счетчик / Индикатор.КоличествоПроходов * 100, ТекстСостояния);
	КонецЕсли;
	
	Если Счетчик = Индикатор.КоличествоПроходов Тогда
		Состояние(Индикатор.ПредставлениеПроцесса, 100, ТекстСостояния);
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти 
 
#Область РаботаСоСметами
&НаКлиенте
Функция ПолучитьСтруктуруРеквизитовСметнойСтоимости() Экспорт

	Рекв = Новый Структура(); 	
	Рекв.Вставить("ДатаПоследнейЗаписи", Дата(1,1,1));	
	Рекв.Вставить("Цена", 0);	
	Рекв.Вставить("КоличествоУчастков", 0);	
	Рекв.Вставить("Стоимость", 0);	
	Рекв.Вставить("СуммаНДС", 0);	
	Рекв.Вставить("СтоимостьСНДС", 0);	
	Рекв.Вставить("СтавкаНДС", Неопределено);	
	Рекв.Вставить("ОсвобождениеОтНДС", Неопределено);	
	Рекв.Вставить("Смета", Неопределено);	
	Возврат Рекв;

КонецФункции // ПолучитьСтруктуруРеквизитовСметнойСтоимости()
 
#КонецОбласти  

// Проверка банковского счета
&НаКлиенте
Функция ПравильныйКодИБАН(Знач КодИБАН, ОбъектДанных) Экспорт
	// Первые четыре символа IBAN переносятся из начала в конец
	КодИБАН = Прав(КодИБАН, 24) + Лев(КодИБАН, 4);
	
	//Буквенные символы преобразуются в цифровые в соответствии со следующей таблицей:
	КодыСимволов = Новый Соответствие;
	КодыСимволов.Вставить("A", "10");
	КодыСимволов.Вставить("B", "11");
	КодыСимволов.Вставить("C", "12");
	КодыСимволов.Вставить("D", "13");
	КодыСимволов.Вставить("E", "14");
	КодыСимволов.Вставить("F", "15");
	КодыСимволов.Вставить("G", "16");
	КодыСимволов.Вставить("H", "17");
	КодыСимволов.Вставить("I", "18");
	КодыСимволов.Вставить("J", "19");
	КодыСимволов.Вставить("K", "20");
	КодыСимволов.Вставить("L", "21");
	КодыСимволов.Вставить("M", "22");
	КодыСимволов.Вставить("N", "23");
	КодыСимволов.Вставить("O", "24");
	КодыСимволов.Вставить("P", "25");
	КодыСимволов.Вставить("Q", "26");
	КодыСимволов.Вставить("R", "27");
	КодыСимволов.Вставить("S", "28");
	КодыСимволов.Вставить("T", "29");
	КодыСимволов.Вставить("U", "30");
	КодыСимволов.Вставить("V", "31");
	КодыСимволов.Вставить("W", "32");
	КодыСимволов.Вставить("X", "33");
	КодыСимволов.Вставить("Y", "34");
	КодыСимволов.Вставить("Z", "35");
	
	СтрокаЦифр = "0123456789";
	
	НовыйКод = "";
	Для й = 1 По 28 Цикл
		Символ = Сред(КодИБАН, й, 1);
		КодСимвола = КодыСимволов.Получить(Символ);
		Если КодСимвола = Неопределено Тогда
			// Это должна быть только цифра
			Если СтрНайти(СтрокаЦифр, Символ) = 0 Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Недопустимый символ "+Символ+" в позиции: "+й;
				Сообщение.Поле = "СчетИБАН";
				Сообщение.УстановитьДанные(ОбъектДанных);
				Сообщение.Сообщить(); 
				Возврат Ложь;
			КонецЕсли; 
			НовыйКод = НовыйКод + Символ;
		Иначе	
			НовыйКод = НовыйКод + КодСимвола;
		КонецЕсли; 
	КонецЦикла; 
	
	ЧисловойКод = Число(НовыйКод);
	
	// Вычисляем остаток от деления полученного числа на 97. 
	//  Если контрольные цифры верны, то остаток будет равен 1
	Если ЧисловойКод%97 = 1 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли; 
КонецФункции
