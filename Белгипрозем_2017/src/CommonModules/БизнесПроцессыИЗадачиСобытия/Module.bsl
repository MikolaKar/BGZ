// Обработчик подписки на событие ЗаписатьВСписокБизнесПроцессов.
//
Процедура ЗаписатьВСписокБизнесПроцессов(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли; 
	
	СписокПолей = "Номер,Дата,Завершен,Стартован,Автор,ДатаЗавершения,Наименование,
		|ПометкаУдаления,ВедущаяЗадача,СрокИсполнения,Важность,ГлавнаяЗадача,Состояние,НомерИтерации,ДатаНачала";
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") Тогда
		СписокПолей = СписокПолей + ",Проект,ПроектнаяЗадача";
	КонецЕсли;
	
	ЗначенияПолей = Новый Структура(СписокПолей);
	
	МетаданныеИсточника = Источник.Метаданные();
	
	Если МетаданныеИсточника.Реквизиты.Найти("СрокИсполнения") <> Неопределено Тогда
		Если ТипЗнч(Источник.СрокИсполнения) = Тип("Число") Тогда
			ЗначенияПолей.СрокИсполнения = Источник.СрокИсполненияДатой;
			СписокПолей = СтрЗаменить(СписокПолей, ",СрокИсполнения" , "");
		КонецЕсли;
	Иначе
		ЗначенияПолей.Удалить("СрокИсполнения");
		СписокПолей = СтрЗаменить(СписокПолей, ",СрокИсполнения" , "");
	КонецЕсли;
	
	Если МетаданныеИсточника.Реквизиты.Найти("НомерИтерации") = Неопределено Тогда
		ЗначенияПолей.Удалить("НомерИтерации");
		СписокПолей = СтрЗаменить(СписокПолей, ",НомерИтерации" , "");
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЗначенияПолей, Источник, СписокПолей);
	
	ЗначенияПолей.Вставить("ОсновнойПредмет", "");
	
	Отбор = Новый Структура;
	Отбор.Вставить("РольПредмета", Перечисления.РолиПредметов.Основной);
	НайденныеСтроки = Источник.Предметы.НайтиСтроки(Отбор);
	КоличествоОсновныхПредметов = НайденныеСтроки.Количество();
	ОбщееКоличествоПредметов = Источник.Предметы.Количество();
	
	КоличествоПредметов = 0;
	
	Если КоличествоОсновныхПредметов = 1 Тогда
		ЗначенияПолей.ОсновнойПредмет = НайденныеСтроки[0].Предмет;
		КоличествоПредметов = 1;
	ИначеЕсли КоличествоОсновныхПредметов > 0 Тогда
		КоличествоПредметов = КоличествоОсновныхПредметов;
	ИначеЕсли ОбщееКоличествоПредметов = 1 Тогда
		ЗначенияПолей.ОсновнойПредмет = Источник.Предметы[0].Предмет;
		КоличествоПредметов = 1;
	ИначеЕсли ОбщееКоличествоПредметов > 0 Тогда
		КоличествоПредметов = ОбщееКоличествоПредметов;
	КонецЕсли;
	
	Если КоличествоПредметов > 1 Тогда
		ПодписьПредмет = ОбщегоНазначенияДокументооборотКлиентСервер.ПредметИсчисленияПрописью(
			КоличествоПредметов,
			НСтр("ru = 'предмет'") + "," + НСтр("ru = 'предмета'") + "," + НСтр("ru = 'предметов'"));
			
		ЗначенияПолей.ОсновнойПредмет = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1 %2'"),
			КоличествоПредметов,
			ПодписьПредмет);
	ИначеЕсли КоличествоПредметов = 0 Или Не ЗначениеЗаполнено(ЗначенияПолей.ОсновнойПредмет) Тогда
		ЗначенияПолей.ОсновнойПредмет = НСтр("ru = 'Нет предметов'");
	КонецЕсли;
	
	БизнесПроцессыИЗадачиВызовСервера.ЗаписатьВСписокБизнесПроцессов(Источник.Ссылка,
		ЗначенияПолей);
	
КонецПроцедуры

// Обработчик подписки на событие УстановитьПометкуУдаленияЗадач.
//
Процедура УстановитьПометкуУдаленияЗадач(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда 
        Возврат;  
	КонецЕсли; 
	
	Если Источник.ЭтоНовый() Тогда 
        Возврат;  
	КонецЕсли; 
	
	ПредыдущаяПометкаУдаления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник.Ссылка, "ПометкаУдаления");
	Если Источник.ПометкаУдаления <> ПредыдущаяПометкаУдаления Тогда
		УстановитьПривилегированныйРежим(Истина);
		БизнесПроцессыИЗадачиСервер.УстановитьПометкуУдаленияЗадач(Источник.Ссылка, Источник.ПометкаУдаления);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ЗадачаПриЗаписиПриЗаписи(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	БизнесПроцессыИЗадачиСервер.ПриЗаписиЗадачиСервер(Источник);
	
КонецПроцедуры

Процедура БизнесПроцессПриКопировании(Источник, ОбъектКопирования) Экспорт
	
	Источник.Состояние = Перечисления.СостоянияБизнесПроцессов.Активен;
	
	Мультипредметность.БизнесПроцессПриКопировании(Источник);
	
КонецПроцедуры

// Обработчик подписки на событие ПередЗаписьюБизнесПроцесса.
//
Процедура ОбновитьСостояниеБизнесПроцесса(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли;
	
	Если Источник.Метаданные().Реквизиты.Найти("Состояние") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	НовоеСостояние = Источник.Состояние;
	СтароеСостояние = ПолучитьСостояниеБизнесПроцесса(Источник);
	
	Если НовоеСостояние = СтароеСостояние Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Источник.ДополнительныеСвойства.Свойство("ИзменениеСостоянияВложенногоПроцесса") Тогда
	
		Если НовоеСостояние = Перечисления.СостоянияБизнесПроцессов.Остановлен Тогда
			
			Если ЗначениеЗаполнено(Источник.ВедущаяЗадача) Тогда
				
				ВызватьИсключение
					НСтр("ru = 'Нельзя останавливать процессы являющийся частью комплексного или составного процесса.'");
				
			КонецЕсли;
			
			Если Источник.Завершен = Истина Тогда
				ВызватьИсключение НСтр("ru = 'Нельзя останавливать завершенные процессы.'");
			КонецЕсли;
			
			Если Источник.Стартован <> Истина Тогда
				ВызватьИсключение НСтр("ru = 'Нельзя останавливать не стартовавшие процессы.'");
			КонецЕсли;
			
			Если СтароеСостояние = Перечисления.СостоянияБизнесПроцессов.Остановлен Тогда
				ВызватьИсключение НСтр("ru = 'Процесс уже остановлен.'");
			КонецЕсли;
			
			Если СтароеСостояние = Перечисления.СостоянияБизнесПроцессов.Прерван Тогда
				ВызватьИсключение НСтр("ru = 'Нельзя останавливать прерванные процессы.'");
			КонецЕсли;
			
			Если Не БизнесПроцессыИЗадачиВызовСервера.ЕстьПраваНаОстановкуБизнесПроцесса(
					Источник.Ссылка) Тогда
					
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Вашего уровня прав недостаточно для остановки процесса ""%1"".'"),
				Строка(Источник.Ссылка));
				ВызватьИсключение ТекстСообщения;
				
			КонецЕсли;
			
		ИначеЕсли НовоеСостояние = Перечисления.СостоянияБизнесПроцессов.Активен Тогда
			
			Если ЗначениеЗаполнено(Источник.ВедущаяЗадача) Тогда
				
				ВызватьИсключение 
					НСтр("ru = 'Нельзя сделать активными процессы являющийся частью комплексного или составного процесса.'");
				
			КонецЕсли;
			
			Если СтароеСостояние = Перечисления.СостоянияБизнесПроцессов.Активен Тогда
				ВызватьИсключение НСтр("ru = 'Процесс уже активен.'");
			КонецЕсли;
			
			Если Источник.Завершен Тогда
				ВызватьИсключение НСтр("ru = 'Невозможно сделать активными завершенные процессы.'");
			КонецЕсли;
			
			Если Не Источник.Стартован Тогда
				ВызватьИсключение НСтр("ru = 'Невозможно сделать активными не стартовавшие процессы.'");
			КонецЕсли;
			
			Если СтароеСостояние = Перечисления.СостоянияБизнесПроцессов.Прерван Тогда		
				ВызватьИсключение НСтр("ru = 'Нельзя активировать прерванные процессы.'");
			КонецЕсли;
			
			Если Не БизнесПроцессыИЗадачиВызовСервера.ЕстьПраваНаОстановкуБизнесПроцесса(Источник.Ссылка) Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Вашего уровня прав недостаточно для того, чтобы сделать активным процесс ""%1"".'"),
				Строка(Источник.Ссылка));
				ВызватьИсключение ТекстСообщения;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	
	БизнесПроцессыИЗадачиСервер.ПриИзмененииСостоянияБизнесПроцесса(Источник, СтароеСостояние, НовоеСостояние);
	
КонецПроцедуры

Функция ПолучитьСостояниеБизнесПроцесса(БизнесПроцесс)
	
	Возврат ОбщегоНазначения.ПолучитьЗначениеРеквизита(БизнесПроцесс.Ссылка, "Состояние");
	
КонецФункции
