////////////////////////////////////////////////////////////////////////////////
// Подсистема "Варианты отчетов" (клиент)
// 
// Выполняется на клиенте.
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Открывает панель отчетов. Используется в модуле общей команды.
//
// Параметры:
//   ПутьКПодсистеме (Строка) Имя раздела или путь к подсистеме, для которой открывается панель отчетов.
//       Задается в формате: "ИмяРаздела[.ИмяВложеннойПодсистемы1][.ИмяВложеннойПодсистемы2][...]".
//       NB! Раздел должен быть описан в ВариантыОтчетовПереопределяемый.ОпределитьРазделыСВариантамиОтчетов.
//   ПараметрыВыполненияКоманды (ПараметрыВыполненияКоманды) Передается "как есть" из параметров обработчика команды.
//   Заголовок (Строка) Необязательный. Заголовок панели отчетов.
//
Процедура ПоказатьПанельОтчетов(ПутьКПодсистеме, ПараметрыВыполненияКоманды, Заголовок = "") Экспорт
	ФормаПараметры = Новый Структура("ПутьКПодсистеме", ПутьКПодсистеме);
	Если ЗначениеЗаполнено(Заголовок) Тогда
		ФормаПараметры.Вставить("Заголовок", Заголовок);
	КонецЕсли;
	
	ФормаВладелец     = ПараметрыВыполненияКоманды.Источник;
	ФормаУникальность = ПутьКПодсистеме + "." + ПараметрыВыполненияКоманды.Уникальность;
	ФормаОкно         = ПараметрыВыполненияКоманды.Окно;
	
	ОткрытьФорму("ОбщаяФорма.ПанельОтчетов", ФормаПараметры, ФормаВладелец, ФормаУникальность, ФормаОкно);
КонецПроцедуры

// Устарела: следует использовать процедуру ПоказатьПанельОтчетов.
//
Процедура ОткрытьПанельОтчетов(ИмяРаздела, ЗаголовокПанелиОтчетов, ПараметрыВыполненияКоманды,
	КартинкаФормы = Неопределено) Экспорт
	ПоказатьПанельОтчетов(ИмяРаздела, ПараметрыВыполненияКоманды, ЗаголовокПанелиОтчетов);
КонецПроцедуры

// Открывает диалог настройки размещения нескольких вариантов в разделах.
// Проверки рекомендуется осуществлять до вызова.
//
// Параметры:
//   МассивВариантов (Массив) из (СправочникСсылка.ВариантыОтчетов)
//   ДополнительныеПараметры (*) Необязательный.
//
Процедура ОткрытьДиалогРазмещенияВариантовВРазделах(МассивВариантов, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ТипЗнч(МассивВариантов) <> Тип("Массив") ИЛИ МассивВариантов.Количество() < 1 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Выберите варианты отчетов, которые необходимо разместить в разделах.'"));
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура("МассивВариантов, ДополнительныеПараметры", МассивВариантов, ДополнительныеПараметры);
	ОткрытьФорму("Справочник.ВариантыОтчетов.Форма.РазмещениеВРазделах", ПараметрыОткрытия);
	
КонецПроцедуры

// Оповещает открытые панели отчетов, формы списков и элементов о изменениях.
//
// Параметры:
//  см. справку к Оповестить (Глобальный контекст)
//
Процедура ОбновитьОткрытыеФормы(Параметр = Неопределено, Источник = Неопределено) Экспорт
	
	Оповестить(ВариантыОтчетовКлиентСервер.ИмяСобытияИзменениеВарианта(), Параметр, Источник);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Открывает вариант отчета.
//
// Параметры:
//   ЭтаФорма (УправляемаяФорма)
//
Процедура ОткрытьВариантОтчета(ЭтаФорма) Экспорт
	Если ЭтаФорма.ИмяФормы = "Справочник.ВариантыОтчетов.Форма.ФормаСписка" Тогда
		Вариант = ЭтаФорма.Элементы.Список.ТекущиеДанные;
	ИначеЕсли ЭтаФорма.ИмяФормы = "Справочник.ВариантыОтчетов.Форма.ФормаЭлемента" Тогда
		Вариант = ЭтаФорма.Объект;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если Вариант = Неопределено ИЛИ Вариант.Ссылка.Пустая() Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'Выберите вариант отчета.'"));
		
	ИначеЕсли Вариант.ТипОтчета = ПредопределенноеЗначение("Перечисление.ТипыОтчетов.Внешний") Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'Вариант внешнего отчета можно открыть только из формы отчета.'"));
		
	ИначеЕсли Вариант.ТипОтчета = ПредопределенноеЗначение("Перечисление.ТипыОтчетов.Дополнительный") Тогда
		
		ПараметрыОткрытия = Новый Структура("Ссылка, Отчет, КлючВарианта");
		ЗаполнитьЗначенияСвойств(ПараметрыОткрытия, Вариант);
		ОткрытьВариантДополнительногоОтчета(ПараметрыОткрытия);
		
	Иначе
		
		Если ЭтаФорма.ИмяФормы = "Справочник.ВариантыОтчетов.Форма.ФормаСписка" Тогда
			ИмяОтчета = Вариант.ИмяОтчета;
		Иначе
			ИмяОтчета = ЭтаФорма.ИмяОтчета;
		КонецЕсли;
		
		Уникальность = "Отчет." + ИмяОтчета;
		Если ЗначениеЗаполнено(Вариант.КлючВарианта) Тогда
			Уникальность = Уникальность + "/КлючВарианта." + Вариант.КлючВарианта;
		КонецЕсли;
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("КлючВарианта", Вариант.КлючВарианта);
		ПараметрыОткрытия.Вставить("КлючПараметровПечати", Уникальность);
		ПараметрыОткрытия.Вставить("КлючСохраненияПоложенияОкна", Уникальность);
		
		ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыОткрытия, Неопределено, Уникальность);
		
	КонецЕсли;
КонецПроцедуры

// Выводит пользователю результат выполнения какой-либо операции, при необходимости
//   оповещает об изменении типа или ссылки.
//
Процедура ПоказатьРезультат(Результат) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Оповестить  = ?(Результат.Свойство("Оповестить"),  Результат.Оповестить,  Истина);
	Заголовок   = ?(Результат.Свойство("Заголовок"),   Результат.Заголовок,   "");
	Текст       = ?(Результат.Свойство("Текст"),       Результат.Текст,       "");
	Картинка    = ?(Результат.Свойство("Картинка"),    Результат.Картинка,    Неопределено);
	ТекстОшибок = ?(Результат.Свойство("ТекстОшибок"), Результат.ТекстОшибок, "");
	Ссылка      = ?(Результат.Свойство("Ссылка"),      Результат.Ссылка,      "");
	
	Если Оповестить = Истина Тогда
		ПоказатьОповещениеПользователя(Заголовок, Ссылка, Текст, Картинка);
	Иначе
		Если ЗначениеЗаполнено(ТекстОшибок) Тогда
			ПараметрыОбработчика = Новый Структура;
			ПараметрыОбработчика.Вставить("Результат", Результат);
			ПараметрыОбработчика.Вставить("Оповестить", Оповестить);
			ПараметрыОбработчика.Вставить("Заголовок", Заголовок);
			ПараметрыОбработчика.Вставить("Текст", Текст);
			ПараметрыОбработчика.Вставить("Картинка", Картинка);
			ПараметрыОбработчика.Вставить("ТекстОшибок", ТекстОшибок);
			ПараметрыОбработчика.Вставить("Ссылка", Ссылка);
			ОписаниеОповещения = Новый ОписаниеОповещения(
				"ПоказатьРезультатПродолжение",
				ЭтотОбъект,
				ПараметрыОбработчика);
			Кнопки = Новый СписокЗначений;
			Кнопки.Добавить(1, НСтр("ru = 'Показать ошибки'"));
			Кнопки.Добавить(КодВозвратаДиалога.Отмена);
			ПоказатьВопрос(ОписаниеОповещения, Текст, Кнопки, , 1, Заголовок);
			Возврат;
		Иначе
			ПоказатьПредупреждение(, Текст);
		КонецЕсли;
	КонецЕсли;
	
	Если Результат.Свойство("ТипДляОбновления") Тогда
		ОповеститьОбИзменении(Результат.ТипДляОбновления);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьРезультатПродолжение(Ответ, Параметры) Экспорт
	
	Результат = Параметры.Результат;
	Оповестить  = Параметры.Оповестить;
	Заголовок   = Параметры.Заголовок;
	Текст       = Параметры.Текст;
	Картинка    = Параметры.Картинка;
	ТекстОшибок = Параметры.ТекстОшибок;
	Ссылка = Параметры.Ссылка;
	Если Ответ = 1 Тогда
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.УстановитьТекст(ТекстОшибок);
		Если ЗначениеЗаполнено(Заголовок) Тогда
			ТекстовыйДокумент.Показать(Заголовок);
		Иначе
			ТекстовыйДокумент.Показать();
		КонецЕсли;
	КонецЕсли;	
	
	Если Результат.Свойство("ТипДляОбновления") Тогда
		ОповеститьОбИзменении(Результат.ТипДляОбновления);
	КонецЕсли;
	
КонецПроцедуры

// Процедура обслуживает событие реквизита ДеревоПодсистем в формах редактирования.
//
Процедура ДеревоПодсистемИспользованиеПриИзменении(ЭтаФорма, Элемент) Экспорт
	СтрокаДерева = ЭтаФорма.Элементы.ДеревоПодсистем.ТекущиеДанные;
	Если СтрокаДерева = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Пропуск корневой строки
	Если СтрокаДерева.Приоритет = "" Тогда
		СтрокаДерева.Использование = 0;
		Возврат;
	КонецЕсли;
	
	Если СтрокаДерева.Использование = 2 И СтрокаДерева.ИспользованиеПоУмолчанию <> 2 Тогда
		СтрокаДерева.Использование = 0;
	КонецЕсли;
	
	УстановитьИзмененПользователем(ЭтаФорма, СтрокаДерева);
КонецПроцедуры

// Процедура обслуживает событие реквизита ДеревоПодсистем в формах редактирования.
//
Процедура ДеревоПодсистемВажностьПриИзменении(ЭтаФорма, Элемент) Экспорт
	СтрокаДерева = ЭтаФорма.Элементы.ДеревоПодсистем.ТекущиеДанные;
	Если СтрокаДерева = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Пропуск корневой строки
	Если СтрокаДерева.Приоритет = "" Тогда
		СтрокаДерева.Важность = "";
		Возврат;
	КонецЕсли;
	
	Если СтрокаДерева.Важность <> СтрокаДерева.ВажностьПоУмолчанию Тогда
		СтрокаДерева.Использование = 1;
	КонецЕсли;
	
	УстановитьИзмененПользователем(ЭтаФорма, СтрокаДерева);
КонецПроцедуры

// Вспомогательная процедура для обработки изменений ДеревоПодсистем.
//
Процедура УстановитьИзмененПользователем(ЭтаФорма, СтрокаДерева)
	Если СтрокаДерева.Использование = СтрокаДерева.ИспользованиеПоУмолчанию
		И СтрокаДерева.Важность = СтрокаДерева.ВажностьПоУмолчанию Тогда
		СтрокаДерева.ИзмененПользователем = Ложь;
	Иначе
		СтрокаДерева.ИзмененПользователем = Истина;
		Если ЭтаФорма.ИмяФормы = "Справочник.ВариантыОтчетов.Форма.ФормаЭлемента" Тогда
			ЭтаФорма.Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики условных вызовов в другие подсистемы

// Открывает форму дополнительного отчета с заданным вариантом.
//
// Параметры
//   Вариант (Структура)
//       |- Ссылка (СправочникСсылка.ВариантыОтчетов)
//       |- Отчет (*) см. тип реквизита Отчет справочника ВариантыОтчетов.
//       |- КлючВарианта (Строка)
//
Процедура ОткрытьВариантДополнительногоОтчета(Вариант) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки") Тогда
		Модуль = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("ДополнительныеОтчетыИОбработкиКлиент");
		Модуль.ОткрытьВариантДополнительногоОтчета(Вариант.Отчет, Вариант.КлючВарианта);
	КонецЕсли;
	
КонецПроцедуры

// Обработчик команд, добавленных динамически.
//
// Параметры:
//   ЭтаФорма  (УправляемаяФорма) Форма отчета.
//   Команда   (КомандаФормы)     Команда, которая была вызвана.
//   Результат (Булево)           Истина, если вызов команды обработан.
//
Процедура ФормаОтчетаОбработчикКоманды(ЭтаФорма, Команда, Результат) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("СтандартныеПодсистемы.РассылкаОтчетов") Тогда
		Модуль = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("РассылкаОтчетовКлиент");
		Модуль.ФормаОтчетаОбработчикКоманды(ЭтаФорма, Команда, Результат);
	КонецЕсли;
	
КонецПроцедуры

// Обработчик результата выбора подчиненной формы.
//
// Параметры:
//   ЭтаФорма          (УправляемаяФорма) Форма отчета.
//   ВыбранноеЗначение (*)                Результат выбора в подчиненной форме.
//   ИсточникВыбора    (УправляемаяФорма) Форма, где осуществлен выбор. 
//   Результат         (Булево)           Истина, если результат выбора обработан.
//
Процедура ФормаОтчетаОбработкаВыбора(ЭтаФорма, ВыбранноеЗначение, ИсточникВыбора, Результат) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("СтандартныеПодсистемы.РассылкаОтчетов") Тогда
		Модуль = ОбщегоНазначенияКлиентСервер.ОбщийМодуль("РассылкаОтчетовКлиент");
		Модуль.ФормаОтчетаОбработкаВыбора(ЭтаФорма, ВыбранноеЗначение, ИсточникВыбора, Результат);
	КонецЕсли;
	
КонецПроцедуры
