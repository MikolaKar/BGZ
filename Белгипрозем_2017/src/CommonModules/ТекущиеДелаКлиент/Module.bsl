////////////////////////////////////////////////////////////////////////////////
// Клиентские процедуры и функции для обработки ТекущиеДела
//  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Возвращает имя формы, которую требуется открывать для указанного показателя
//
// Параметры
//  ИмяПоказателя	- Строка - имя показателя, для которого требуется получить имя формы
//
// Возвращаемое значение:
//  Строка			- имя формы соответствующей показателю
//
Функция ПолучитьИмяФормы(ИмяПоказателя, РежимОткрытия, УникальныйИдентификаторФормы = Неопределено) Экспорт
	
	Перем ИмяОткрываемойФормы;
	
	РежимОткрытия = "ПоИмениФормы";
	
	Если Лев(ИмяПоказателя, СтрДлина("Почта")) = "Почта" Тогда
		
		ИмяОткрываемойФормы = "e1cib/navigationpoint/desktop/ОбщаяКоманда.ЭлектроннаяПочта";
		РежимОткрытия = "ПоНавигационнойСсылке";
		
	ИначеЕсли ИмяПоказателя = "Задачи" Тогда
		
		ИмяОткрываемойФормы = "e1cib/navigationpoint/desktop/Задача.ЗадачаИсполнителя.Команда.МоиЗадачи";
		РежимОткрытия = "ПоНавигационнойСсылке";
		
	ИначеЕсли ИмяПоказателя = "ЗадачиНеПринятые"
		Или ИмяПоказателя = "ЗадачиПросроченные"
		Или ИмяПоказателя = "ЗадачиПодчиненныхНеПринятые"
		Или ИмяПоказателя = "ЗадачиПодчиненныхПросроченные" Тогда
		
		ИмяОткрываемойФормы = "Отчет.ОтчетПоЗадачам.Форма";
		
		УникальныйИдентификаторФормы = ИмяПоказателя;
		
	ИначеЕсли ИмяПоказателя = "ЗадачиПодчиненных" Тогда
		
		ИмяОткрываемойФормы = "Задача.ЗадачаИсполнителя.Форма.ФормаЗадачиОтдела";
		
	ИначеЕсли ИмяПоказателя = "Мероприятия" Тогда
		
		ИмяОткрываемойФормы = "Справочник.Мероприятия.Форма.МоиМероприятия";
		
	ИначеЕсли ИмяПоказателя = "Календарь" Тогда
		
		ИмяОткрываемойФормы = "e1cib/navigationpoint/desktop/Справочник.ЗаписиРабочегоКалендаря.Команда.ОткрытьКалендарь";
		РежимОткрытия = "ПоНавигационнойСсылке";
		
	ИначеЕсли ИмяПоказателя = "Форум" Тогда
		
		ИмяОткрываемойФормы = "e1cib/navigationpoint/desktop/Справочник.ТемыОбсуждений.Команда.ОткрытьФормуПросмотраОбсуждений";
		РежимОткрытия = "ПоНавигационнойСсылке";
		
	ИначеЕсли ИмяПоказателя = "ФорумНовыеОтветыНаСообщенияПользователя" Тогда
		
		ИмяОткрываемойФормы = 
			"Справочник.СообщенияОбсуждений.Форма.ФормаНовыеСообщенияДляРабочегоСтола";
		
	ИначеЕсли ИмяПоказателя = "ВнутренниеДокументы" Тогда
		
		ИмяОткрываемойФормы = "e1cib/navigationpoint/desktop/Справочник.ВнутренниеДокументы.Команда.СписокВнутреннихДокументов";
		РежимОткрытия = "ПоНавигационнойСсылке";
		
	ИначеЕсли ИмяПоказателя = "ВнутренниеДокументыСИстекающийСрокомДействия"
		Или ИмяПоказателя = "ВнутренниеДокументыСИстекшимСрокомДействия"
		Или ИмяПоказателя = "ВнутренниеДокументыСИстекающимСрокомИсполнения"
		Или ИмяПоказателя = "ВнутренниеДокументыПросроченные" Тогда
		
		ИмяОткрываемойФормы = "Отчет.ВнутренниеДокументы.Форма";
		УникальныйИдентификаторФормы = ИмяПоказателя;
		
	ИначеЕсли ИмяПоказателя = "ВходящиеДокументы" Тогда
		
		ИмяОткрываемойФормы = "e1cib/navigationpoint/desktop/Справочник.ВходящиеДокументы.Команда.СписокВходящихДокументов";
		РежимОткрытия = "ПоНавигационнойСсылке";
		
	ИначеЕсли ИмяПоказателя = "ВходящиеДокументыЗагруженныеНаПроверку" Тогда
		
		ИмяОткрываемойФормы = "ОбщаяФорма.ПроверкаЗагруженныхДанных";
		
	ИначеЕсли ИмяПоказателя = "ВходящиеДокументыПросроченные" Тогда
		
		ИмяОткрываемойФормы = "Отчет.ВходящиеДокументы.Форма";
		УникальныйИдентификаторФормы = ИмяПоказателя;
		
	ИначеЕсли ИмяПоказателя = "ИсходящиеДокументы" Тогда
		
		ИмяОткрываемойФормы = "e1cib/navigationpoint/desktop/Справочник.ИсходящиеДокументы.Команда.СписокИсходящихДокументов";
		РежимОткрытия = "ПоНавигационнойСсылке";
		
	ИначеЕсли ИмяПоказателя = "ИсходящиеДокументыВСВДСОшибкой"
		Или ИмяПоказателя = "ИсходящиеДокументыБезОтвета" Тогда
		
		ИмяОткрываемойФормы = "Отчет.ИсходящиеДокументы.Форма";
		УникальныйИдентификаторФормы = ИмяПоказателя;
	
	ИначеЕсли ИмяПоказателя = "ИсходящиеДокументыГотовыеКОтправкеПоСВД" Тогда
		
		ИмяОткрываемойФормы = "Обработка.ОтправкаДокументовПоСВД.Форма";
	
	ИначеЕсли ИмяПоказателя = "УчетВремени" Тогда
		
		ИмяОткрываемойФормы = "e1cib/navigationpoint/УчетВремени/Документ.ЕжедневныйОтчет.Команда.ОткрытьСвоиОтчеты";
		РежимОткрытия = "ПоНавигационнойСсылке";
		
	ИначеЕсли ИмяПоказателя = "УчетВремениУчтеноСегодня" Тогда
		
		ИмяОткрываемойФормы = "Документ.ЕжедневныйОтчет.ФормаОбъекта";
		
	ИначеЕсли ИмяПоказателя = "РедактируемыеФайлы" Тогда
		
		ИмяОткрываемойФормы = "Справочник.Файлы.Форма.РедактируемыеФайлы";

	ИначеЕсли ИмяПоказателя = "Контроль" Тогда
		
		ИмяОткрываемойФормы = "e1cib/navigationpoint/desktop/Справочник.Контроль.Команда.НаКонтроле";
		РежимОткрытия = "ПоНавигационнойСсылке";
		
	КонецЕсли;
	
	Возврат ИмяОткрываемойФормы;

КонецФункции

// Формирует и возвращает структуру параметров формы,
// которая будет открыта с этими параметрами для указанного показателя
//
// Параметры:
//  ИмяПоказателя			- Строка - имя показателя, для которого требуется получить структуру
//
// Возвращаемое значение:
//  Структура				- структура параметров формы
//
Функция ПолучитьПараметрыФормы(ИмяПоказателя) Экспорт

	СтруктураПараметров	= Новый Структура;
	
	Если ИмяПоказателя = "ИсходящиеДокументыВСВДСОшибкой" Тогда
		СтруктураПараметров.Вставить("СформироватьПриОткрытии", Истина);
		СтруктураПараметров.Вставить("КлючВарианта", "ОшибкиОтправкиДокументовПоСВД");
	ИначеЕсли ИмяПоказателя = "ИсходящиеДокументыГотовыеКОтправкеПоСВД" Тогда
		СтруктураПараметров.Вставить("СформироватьПриОткрытии", Истина);
		СтруктураПараметров.Вставить("КлючВарианта", "ГотовыеКОтправкеДокументыПоСВД");
	ИначеЕсли ИмяПоказателя = "ВнутренниеДокументыСИстекающийСрокомДействия" Тогда
		СтруктураПараметров.Вставить("СформироватьПриОткрытии", Истина);
		СтруктураПараметров.Вставить("КлючВарианта", "СписокВнутреннихДокументовСИстекающимСрокомДействия");
	ИначеЕсли ИмяПоказателя = "ВнутренниеДокументыСИстекшимСрокомДействия" Тогда
		СтруктураПараметров.Вставить("СформироватьПриОткрытии", Истина);
		СтруктураПараметров.Вставить("КлючВарианта", "СписокВнутреннихДокументовСИстекшимСрокомДействия");
	ИначеЕсли ИмяПоказателя = "ВнутренниеДокументыСИстекающимСрокомИсполнения" Тогда
		СтруктураПараметров.Вставить("СформироватьПриОткрытии", Истина);
		СтруктураПараметров.Вставить("КлючВарианта", "СписокВнутреннихДокументовСИстекающимСрокомИсполнения");
	ИначеЕсли ИмяПоказателя = "ВнутренниеДокументыПросроченные" Тогда
		СтруктураПараметров.Вставить("СформироватьПриОткрытии", Истина);
		СтруктураПараметров.Вставить("КлючВарианта", "СписокПросроченныхВнутреннихДокументов");
	ИначеЕсли ИмяПоказателя = "ВходящиеДокументыПросроченные" Тогда
		СтруктураПараметров.Вставить("СформироватьПриОткрытии", Истина);
		СтруктураПараметров.Вставить("КлючВарианта", "СписокПросроченныхВходящихДокументов");
	ИначеЕсли ИмяПоказателя = "ИсходящиеДокументыБезОтвета" Тогда
		СтруктураПараметров.Вставить("СформироватьПриОткрытии", Истина);
		СтруктураПараметров.Вставить("КлючВарианта", "МоиДокументыОжидающиеОтвета");
	ИначеЕсли ИмяПоказателя = "ЗадачиНеПринятые" Тогда
		СтруктураПараметров.Вставить("СформироватьПриОткрытии", Истина);
		СтруктураПараметров.Вставить("КлючВарианта", "СписокМоихНепринятыхЗадач");
	ИначеЕсли ИмяПоказателя = "ЗадачиПросроченные" Тогда
		СтруктураПараметров.Вставить("СформироватьПриОткрытии", Истина);
		СтруктураПараметров.Вставить("КлючВарианта", "СписокМоихИстекающихЗадач");
	ИначеЕсли ИмяПоказателя = "ЗадачиПодчиненныхНеПринятые" Тогда
		СтруктураПараметров.Вставить("СформироватьПриОткрытии", Истина);
		СтруктураПараметров.Вставить("КлючВарианта", "СписокНепринятыхЗадачПодчиненными");
	ИначеЕсли ИмяПоказателя = "ЗадачиПодчиненныхПросроченные" Тогда
		СтруктураПараметров.Вставить("СформироватьПриОткрытии", Истина);
		СтруктураПараметров.Вставить("КлючВарианта", "СписокИстекающихЗадачПодчиненных");
	КонецЕсли;
	
	Возврат СтруктураПараметров;
	
КонецФункции

// Возвращает строку дерева показателей, содержащую указанный показатель
//
// Параметры
//  ДеревоПоказателей			- ДанныеФормыДерево - дерево показателей 
//  ИмяПоказателя 				- Строка - имя показателя, для которого требуется получить строку
//
// Возвращаемое значение:
//  ДанныеФормыЭлементДерева	- строка дерева показателей
//
Функция ПолучитьСтрокуДереваПоказателей(ДеревоПоказателей, ИмяПоказателя) Экспорт
	
	ЭлементыДереваПоказателей = ДеревоПоказателей.ПолучитьЭлементы();
	
	Для Каждого СтрокаГруппы Из ЭлементыДереваПоказателей Цикл
		Если СтрокаГруппы.Показатель = ИмяПоказателя Тогда
			Возврат СтрокаГруппы;
		КонецЕсли;		

		ЭлементыГруппы = СтрокаГруппы.ПолучитьЭлементы();
		
		Для Каждого СтрокаПоказателя Из ЭлементыГруппы Цикл
			Если СтрокаПоказателя.Показатель = ИмяПоказателя Тогда
				Возврат СтрокаПоказателя;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции
