Функция РеквизитыФизЛица(ФизЛицо, Дата=Неопределено) Экспорт
    //РезультатОбработки = "Паспорт: " + СерияНомер + "
    //|Выдан: " + Выдан + "
    //|Адрес постоянного местожительства: " + Адрес + "
    //|" + Телефон; 
	
	РезультатОбработки = "";
	
	Если Константы.мПечататьПаспортныеДанныеФизЛиц.Получить() Тогда
    	ДанныеПаспорта = РегистрыСведений.ДокументыФизическихЛиц.ПаспортныеДанныеФизлица(ФизЛицо, Дата);
    	СерияНомер = "" + ДанныеПаспорта.Серия +" №"+ ДанныеПаспорта.Номер + ", ";
    	Выдан = Формат(ДанныеПаспорта.ДатаВыдачи, "ДЛФ=D") + " " + ДанныеПаспорта.КемВыдан;
    	РезультатОбработки = РезультатОбработки + "Паспорт: " + СерияНомер + Символы.ПС + 
		"Выдан: " + Выдан + Символы.ПС;
    КонецЕсли; 
		
    Адрес = УправлениеКонтактнойИнформацией.ПолучитьКонтактнуюИнформацияОбъекта(ФизЛицо, Справочники.ВидыКонтактнойИнформации.ДомашнийАдресФизическогоЛица);
    ДомТелефон = УправлениеКонтактнойИнформацией.ПолучитьКонтактнуюИнформацияОбъекта(ФизЛицо, Справочники.ВидыКонтактнойИнформации.ДомашнийТелефонФизическогоЛица);
    СотТелефон = УправлениеКонтактнойИнформацией.ПолучитьКонтактнуюИнформацияОбъекта(ФизЛицо, Справочники.ВидыКонтактнойИнформации.МобильныйТелефонФизическогоЛица);
    Телефон = ?(СокрЛП(ДомТелефон)<>"", "Тел.: "+СокрЛП(ДомТелефон) + "", "");
    Если СокрЛП(Телефон)="" Тогда
        Телефон = ?(СокрЛП(СотТелефон)<>"", "Моб. тел.: "+СокрЛП(СотТелефон), "");
    Иначе
        Телефон = Телефон + ?(СокрЛП(СотТелефон)<>"", ", моб. тел.: "+СокрЛП(СотТелефон), "");
    КонецЕсли; 
    
	Город = мРазное.ПолучитьГородБазы();
	Если Город = "Брест" Тогда
		РезультатОбработки = РезультатОбработки + "Адрес: " + Адрес + Символы.ПС + Телефон; 
	Иначе
		РезультатОбработки = РезультатОбработки + "Адрес постоянного местожительства: " + Адрес + Символы.ПС + Телефон; 
	КонецЕсли; 
    
    Возврат РезультатОбработки;
КонецФункции

// меняет слово Руководитель в тексте:
//именуемое в дальнейшем «Подрядчик», в лице Руководитель, с одной стороны
Функция Руководитель(ВладелецФайла) Экспорт
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |	ВнутреннийДокумент.Утвердил КАК Утвердил,
    |	СведенияОПользователях.Должность КАК Должность,
	|	ДействиеДоверенностей.НомерДоверенности КАК НомерДоверенности,
	|	ДействиеДоверенностей.Период КАК ДатаДоверенности
    |ИЗ
    |	Справочник.ВнутренниеДокументы КАК ВнутреннийДокумент
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПользователях КАК СведенияОПользователях
    |		ПО ВнутреннийДокумент.Утвердил = СведенияОПользователях.Пользователь
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействиеДоверенностей КАК ДействиеДоверенностей
	|		ПО ВнутреннийДокумент.Утвердил = ДействиеДоверенностей.Пользователь
    |ГДЕ
    |	ВнутреннийДокумент.Ссылка В(&МассивОбъектов)
	|	И ВнутреннийДокумент.ДатаРегистрации МЕЖДУ ДействиеДоверенностей.ДатаНачала И ДействиеДоверенностей.ДатаОкончания";
    
    Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
    
    ВыборкаШапкаДоговора = Запрос.Выполнить().Выбрать();
    ВыборкаШапкаДоговора.Следующий();
    РезультатОбработки = СклонениеПоПадежам.обСклонениеСтроки(ВыборкаШапкаДоговора.Должность, "Р", "Должность");
    РезультатОбработки = РезультатОбработки + " " + СклонениеПоПадежам.ПросклонятьСтрокуФИО(ВладелецФайла.Утвердил, "", "Р", "ФИО");
    ПолСсылка = СклонениеПоПадежам.ПолучитьПол(ВладелецФайла.Утвердил);
    Если ПолСсылка = Перечисления.ПолФизическогоЛица.Женский тогда 
        РезультатОбработки = РезультатОбработки + ", действующей на основании ";
    Иначе
        РезультатОбработки = РезультатОбработки + ", действующего на основании ";
    КонецЕсли;
    
    НомерДоверенности = СокрЛП(ВыборкаШапкаДоговора.НомерДоверенности) ;
    Если Лев(НомерДоверенности, 5) = "Устав" Тогда
        РезультатОбработки = РезультатОбработки + "Устава";
    Иначе
        РезультатОбработки = РезультатОбработки + НомерДоверенности+ " от "+Формат(ВыборкаШапкаДоговора.ДатаДоверенности, "ДЛФ = DD");
    КонецЕсли;    
    
    Возврат РезультатОбработки;
КонецФункции // Руководитель()

// Меняет доверенность в тексте договора
//  Если использовался Руководитель, то вызывать эту функцию нет смысла
Функция Доверенность(ВладелецФайла) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВнутреннийДокумент.Ссылка,
	|	ВнутреннийДокумент.ДатаРегистрации КАК ДатаРегистрации,
	|	ВнутреннийДокумент.Утвердил КАК Утвердил,
	|	ДействиеДоверенностей.НомерДоверенности КАК НомерДоверенности,
	|	ДействиеДоверенностей.Период КАК ДатаДоверенности
	|ИЗ
	|	Справочник.ВнутренниеДокументы КАК ВнутреннийДокумент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействиеДоверенностей КАК ДействиеДоверенностей
	|		ПО ВнутреннийДокумент.Утвердил = ДействиеДоверенностей.Пользователь
	|ГДЕ
	|	ВнутреннийДокумент.Ссылка В(&МассивОбъектов)
	|	И ВнутреннийДокумент.ДатаРегистрации МЕЖДУ ДействиеДоверенностей.ДатаНачала И ДействиеДоверенностей.ДатаОкончания";
	Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
	ВыборкаШапкаДоговора = Запрос.Выполнить().Выбрать();
    ВыборкаШапкаДоговора.Следующий();
    
    НомерДоверенности = СокрЛП(ВыборкаШапкаДоговора.НомерДоверенности) ;
    Если НомерДоверенности = "Устав" Тогда
        РезультатОбработки = "Устава";
    Иначе
        РезультатОбработки = "доверенности № "+НомерДоверенности+ " от "+Формат(ВыборкаШапкаДоговора.ДатаДоверенности, "ДЛФ = DD");
    КонецЕсли;    
    
    Возврат РезультатОбработки;
КонецФункции // Руководитель()

// Возвращает долность Утвердившего договор
Функция ДолжностьПодрядчика(ВладелецФайла) Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ РАЗРЕШЕННЫЕ
    |	СведенияОПользователях.Должность КАК Должность
    |ИЗ
    |	Справочник.ВнутренниеДокументы КАК ВнутреннийДокумент
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПользователях КАК СведенияОПользователях
    |		ПО ВнутреннийДокумент.Утвердил = СведенияОПользователях.Пользователь
    |ГДЕ
    |	ВнутреннийДокумент.Ссылка В(&МассивОбъектов)";
    
    Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
    
    ВыборкаШапкаДоговора = Запрос.Выполнить().Выбрать();
    ВыборкаШапкаДоговора.Следующий();
    РезультатОбработки = ВыборкаШапкаДоговора.Должность; 
    
    Возврат РезультатОбработки;
КонецФункции // ДолжностьПодрядчика()

// Возвращает предмет договора из вида работ соответствующего этапа
// Если НомерЭтапа = 0, значит по всем этапам договора
// ВидЛица Строка "ЮрЛица", "ФизЛица"
Функция ПереченьРабот(ВладелецФайла, НомерЭтапа=0, ВидЛица) Экспорт
    РезультатОбработки = "";
    
    Если НомерЭтапа = 0 Тогда
        Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ
        |	ВидыРаботПоДоговорам.ПредметДоговора КАК ВидРабот
        |ИЗ
        |	Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.мВидыРабот"+ВидЛица+" КАК ВидыРаботПоДоговорам
        |		ПО ЭтапыДоговоров.ВидРабот = ВидыРаботПоДоговорам.Ссылка
        |ГДЕ
        |	НЕ ЭтапыДоговоров.ПометкаУдаления И
        |	ЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0) И
        |	ЭтапыДоговоров.Владелец В(&МассивОбъектов)
        |УПОРЯДОЧИТЬ ПО ЭтапыДоговоров.НомерЭтапа";
        
        Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
        ТаблицаЭтапы = Запрос.Выполнить().Выгрузить();
        
        ШаблонСтроки = "
        |<w:pPr>
        |  <w:widowControl w:val=""0"" /> 
        |  <w:autoSpaceDE w:val=""0"" /> 
        |  <w:autoSpaceDN w:val=""0"" /> 
        |  <w:adjustRightInd w:val=""0"" /> 
        |  <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto""/> 
        |  <w:ind w:firstLine=""567"" /> 
        |  <w:jc w:val=""both"" /> 
        |  </w:pPr>
        
        |<w:r>
        | <w:rPr>
        |  <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
        |  <w:sz w:val=""20"" /> 
        |  </w:rPr>
        |<w:t>%1</w:t>
        |</w:r>";
        
        Если ТаблицаЭтапы.Количество() = 1 Тогда
            РезультатОбработки = " - " + НРег(ТаблицаЭтапы[0].ВидРабот);
        Иначе
            РезультатОбработки = "</w:t></w:r>"; //</w:p><w:p>";
            //	РезультатОбработки = ""; //": " + Символы.ПС;
            Для й=0 По ТаблицаЭтапы.Количество()-1 Цикл
                ТекстПункта = " - " + НРег(ТаблицаЭтапы[й].ВидРабот);
                
                Если й < ТаблицаЭтапы.Количество()-1 Тогда
                    //				РезультатОбработки = 	РезультатОбработки + ";" + Символы.ПС;
                    ТекстПункта = 	ТекстПункта + ";";
                    РезультатОбработки = 	РезультатОбработки + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
                    ШаблонСтроки, ТекстПункта)+ "</w:p><w:p>";  
                Иначе
                    РезультатОбработки = 	РезультатОбработки + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
                    ШаблонСтроки, ТекстПункта);  
                КонецЕсли;
            КонецЦикла;
            
            // Откроем теги, т.к. в структуре документа они закрываются сразу за вставкой.
            РезультатОбработки = РезультатОбработки + "<w:r><w:t>";    //"<w:p><w:r><w:t>";</w:p><w:p></w:p><w:p>
        КонецЕсли;
    Иначе
        
        Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ
        |   ВидыРаботПоДоговорам.ПредметДоговора КАК ВидРабот,
        |   ЭтапыДоговоров.НомерЭтапа
        |ИЗ
        |   Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
        |       ЛЕВОЕ СОЕДИНЕНИЕ Справочник.мВидыРабот"+ВидЛица+" КАК ВидыРаботПоДоговорам
        |       ПО ЭтапыДоговоров.ВидРабот = ВидыРаботПоДоговорам.Ссылка
        |ГДЕ
        |   НЕ ЭтапыДоговоров.ПометкаУдаления
        |   И ЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0)
        |   И ЭтапыДоговоров.Владелец В(&МассивОбъектов)
        |   И ЭтапыДоговоров.НомерЭтапа = &НомерЭтапа";
        
        Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
        Запрос.УстановитьПараметр("НомерЭтапа", НомерЭтапа);
        ТаблицаЭтапы = Запрос.Выполнить().Выгрузить();
        Если ТаблицаЭтапы.Количество() > 0 Тогда
            РезультатОбработки = НРег(ТаблицаЭтапы[0].ВидРабот)+" ";
        КонецЕсли; 
    
    КонецЕсли; 

    Возврат РезультатОбработки;
КонецФункции // ПереченьРабот()

// Возвращает подпункты 1.2 договора
// ВидЛица Строка "ЮрЛица", "ФизЛица"
Функция Подпункты12(ВладелецФайла, ВидЛица) Экспорт
    РезультатОбработки = "";
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |	ВидыРаботПоДоговорам.ПредметДоговора КАК ВидРабот
    |ИЗ
    |	Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
    |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.мВидыРабот"+ВидЛица+" КАК ВидыРаботПоДоговорам
    |		ПО ЭтапыДоговоров.ВидРабот = ВидыРаботПоДоговорам.Ссылка
    |ГДЕ
    |	НЕ ЭтапыДоговоров.ПометкаУдаления И
    |	ЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0) И
    |	ЭтапыДоговоров.Владелец В(&МассивОбъектов)
    |УПОРЯДОЧИТЬ ПО ЭтапыДоговоров.НомерЭтапа";
    
    Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
    ТаблицаЭтапы = Запрос.Выполнить().Выгрузить();
    
    ШаблонСтроки = "
    |<w:pPr>
    |  <w:widowControl w:val=""0"" /> 
    |  <w:autoSpaceDE w:val=""0"" /> 
    |  <w:autoSpaceDN w:val=""0"" /> 
    |  <w:adjustRightInd w:val=""0"" /> 
    |  <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto""/> 
    |  <w:ind w:firstLine=""567"" /> 
    |  <w:jc w:val=""both"" /> 
    |  </w:pPr>
    
    |<w:r>
    | <w:rPr>
    |  <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    |  <w:sz w:val=""20"" /> 
    | </w:rPr>
    |<w:t>%1</w:t>
    
    |</w:r>";
    
    // Закроем открытые теги
    РезультатОбработки = "</w:t></w:r>"; //</w:p><w:p>";
    
    Для й=0 По ТаблицаЭтапы.Количество()-1 Цикл
        НомерПункта = й + 1;
        Порядковый = мРаботаСДоговорами.ПорядковыйНомер(НомерПункта);

        ТекстПункта =  "1.2." + НомерПункта + ". " + Порядковый + " этап - " + НРег(ТаблицаЭтапы[й].ВидРабот);
        
        Если й < ТаблицаЭтапы.Количество()-1 Тогда
            ТекстПункта = 	ТекстПункта + ";";// + "<w:сr/>";  //Символы.ПС;"</w:t><w:сr/><w:t>"
            РезультатОбработки = 	РезультатОбработки + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
            ШаблонСтроки, ТекстПункта)+ "</w:p><w:p>";  
        Иначе
            ТекстПункта = ТекстПункта + ".";
            РезультатОбработки = 	РезультатОбработки + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
            ШаблонСтроки, ТекстПункта);  
        КонецЕсли;
    КонецЦикла;
    
    // Откроем теги, т.к. в структуре документа они закрываются сразу за вставкой.
    РезультатОбработки = РезультатОбработки + "<w:r><w:t>";    //"<w:p><w:r><w:t>";</w:p><w:p></w:p><w:p>
    
    Возврат РезультатОбработки;
КонецФункции // Подпункты12()

// Возвращает Месторасположение
Функция Месторасположение(ВладелецФайла) Экспорт
    РезультатОбработки = "";
    
    Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭтапыДоговоров.Месторасположение КАК Месторасположение,
		|	ЭтапыДоговоров.НомерЭтапа	
		|ИЗ
		|	Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
		|ГДЕ
		|	Не ЭтапыДоговоров.ПометкаУдаления И
		|	ЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0) И
  		|	ЭтапыДоговоров.Владелец В(&МассивОбъектов)
		|УПОРЯДОЧИТЬ ПО
		|	ЭтапыДоговоров.НомерЭтапа";

	Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
	ТаблицаЭтапы = Запрос.Выполнить().Выгрузить();
    Если ТаблицаЭтапы.Количество() > 0 Тогда
	    РезультатОбработки = ТаблицаЭтапы[0].Месторасположение;
    КонецЕсли; 
    
    Возврат РезультатОбработки;
КонецФункции // Месторасположение()

// Возвращает подпункты 2.1 договора
// ВидЛица Строка "ЮрЛица", "ФизЛица"
Функция Подпункты21(ВладелецФайла, ВидЛица) Экспорт
    РезультатОбработки = "";
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |	ЭтапыДоговоров.ОбъектРабот КАК ОбъектРабот,
    |	ЭтапыДоговоров.ДлительностьВыполненияРабот КАК Дней,
    |	ЭтапыДоговоров.ВидДней КАК ВидДней,
    |	ВидыРаботПоДоговорам.ПредметДоговора КАК ВидРабот,
    |	ВидыРаботПоДоговорам.РезультатРаботы КАК РезультатРаботы,
    |	ПараметрыВидовРаботПоДоговорамСрезПоследних.ПредУсловие КАК ПредУсловие,
    |	ПараметрыВидовРаботПоДоговорамСрезПоследних.ПостУсловие КАК ПостУсловие
    |ИЗ
    |	Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыВидовРаботПоДоговорам.СрезПоследних(&ДатаСреза, ) КАК ПараметрыВидовРаботПоДоговорамСрезПоследних
    |		ПО ЭтапыДоговоров.ВидРабот = ПараметрыВидовРаботПоДоговорамСрезПоследних.ВидРабот
    |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.мВидыРабот"+ВидЛица+" КАК ВидыРаботПоДоговорам
    |		ПО ЭтапыДоговоров.ВидРабот = ВидыРаботПоДоговорам.Ссылка
    |ГДЕ
    |	НЕ ЭтапыДоговоров.ПометкаУдаления
	|	И ЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0)
	|	И ЭтапыДоговоров.Владелец В(&МассивОбъектов)
    |
    |УПОРЯДОЧИТЬ ПО
    |	ЭтапыДоговоров.НомерЭтапа";
    
    Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
    Запрос.УстановитьПараметр("ДатаСреза", ТекущаяДата());
    
    ТаблицаЭтапы = Запрос.Выполнить().Выгрузить();
    
    ШаблонСтроки = "
    |<w:pPr>
    |  <w:widowControl w:val=""0"" /> 
    |  <w:autoSpaceDE w:val=""0"" /> 
    |  <w:autoSpaceDN w:val=""0"" /> 
    |  <w:adjustRightInd w:val=""0"" /> 
    |  <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto""/> 
    |  <w:ind w:firstLine=""567"" /> 
    |  <w:jc w:val=""both"" /> 
    |  </w:pPr>
    
    |<w:r>
    | <w:rPr>
    |  <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    |  <w:sz w:val=""20"" /> 
    |  </w:rPr>
    |<w:t>%1</w:t>
    |</w:r>";
    
    //Если ТаблицаЭтапы.Количество() = 1 Тогда
    //    РезультатОбработки = " - " + НРег(ТаблицаЭтапы[0].ВидРабот);
    //Иначе
        // Закроем открытые теги
        РезультатОбработки = "</w:t></w:r>"; //</w:p><w:p>";
        
        Для й=0 По ТаблицаЭтапы.Количество()-1 Цикл
            НомерПункта = й + 1;
            Порядковый = мРаботаСДоговорами.ПорядковыйНомер(НомерПункта, 1);
            ПорядковыйРодПадеж = мРаботаСДоговорами.ПорядковыйНомер(НомерПункта, 2);
            ВидДней = ?(ТаблицаЭтапы[й].ВидДней = Перечисления.ВидыДней.Рабочие, "рабочих", "календарных");
            
            ПунктУсловие = "";
            Если ЗначениеЗаполнено(ТаблицаЭтапы[й].ПредУсловие) Тогда
                ПунктУсловие = НРег(ТаблицаЭтапы[й].ПредУсловие);
                Если ЗначениеЗаполнено(ТаблицаЭтапы[й].ПостУсловие) Тогда
                    ПунктУсловие = ПунктУсловие + " и " + НРег(ТаблицаЭтапы[0].ПостУсловие);
                КонецЕсли; 
            Иначе
                Если ВидЛица = "ЮрЛицо" Тогда
                    ПунктУсловие = "в течение " + ТаблицаЭтапы[й].Дней + " " + ВидДней 
                    + " дней со дня оплаты Заказчиком работ по договору за выполнение работ "+ ПорядковыйРодПадеж 
                    + " этапа и предоставления необходимых документов. ";
                Иначе
                    
                    ПунктУсловие = "в течение " + ТаблицаЭтапы[й].Дней + " " + ВидДней 
                        + " дней со дня оплаты Заказчиком работ по договору за выполнение работ "+ ПорядковыйРодПадеж 
                        + " этапа ";
                        
                    Если й=0 Тогда
                        ПунктУсловие = ПунктУсловие +"и предоставления необходимых документов. ";
                    ИначеЕсли й=1 Тогда
                        ПунктУсловие = ПунктУсловие +"и получения Подрядчиком копии решения (выписки из решения) исполнительного комитета об изъятии и предоставлении земельного участка. ";
                    ИначеЕсли й=2 Тогда
                        ПунктУсловие = ПунктУсловие +"и оформлению материалов по второму этапу. ";
                    КонецЕсли; 
                КонецЕсли; 
                Если ЗначениеЗаполнено(ТаблицаЭтапы[й].ПостУсловие) Тогда
                    ПунктУсловие = ПунктУсловие + ТаблицаЭтапы[й].ПостУсловие;
                КонецЕсли; 
            КонецЕсли;
            
            ТекстПункта =  "2.1." + НомерПункта + ". " + Порядковый + " этап - " + ПунктУсловие + ТаблицаЭтапы[й].РезультатРаботы; 
            
            РезультатОбработки = 	РезультатОбработки + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
            ШаблонСтроки, ТекстПункта);  
            
            // Вставляем абзацы между строками (пунктами)
            Если й < ТаблицаЭтапы.Количество()-1 Тогда
                РезультатОбработки = 	РезультатОбработки +  "</w:p><w:p>";  
            КонецЕсли;
        КонецЦикла;
        
        // Откроем теги, т.к. в структуре документа они закрываются сразу за вставкой.
        РезультатОбработки = РезультатОбработки + "<w:r><w:t>";    //"<w:p><w:r><w:t>";</w:p><w:p></w:p><w:p>
    //КонецЕсли;
    
    Возврат РезультатОбработки;
КонецФункции // Подпункты21()

// Возвращает строку прейскуранта в договоре
Функция Прейскурант(ВладелецФайла) Экспорт
    РезультатОбработки = "";
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |	ПрейскурантСрезПоследних.Регистратор.НомерПриказа КАК НомерПриказа,
    |	ПрейскурантСрезПоследних.Регистратор.ДатаПриказа КАК ДатаПриказа,
    |	ПрейскурантСрезПоследних.Регистратор.ДолжностьУтвердившего КАК ДолжностьУтвердившего,
    |	ПрейскурантСрезПоследних.Регистратор.Номер КАК НомерПрейскуранта
    |ИЗ
    |	Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.мПрейскурант.СрезПоследних(&ДатаСреза, ) КАК ПрейскурантСрезПоследних
    |		ПО ЭтапыДоговоров.ВидРабот = ПрейскурантСрезПоследних.ВидРаботФизЛица
    |ГДЕ
    |	ЭтапыДоговоров.Владелец В(&МассивОбъектов)";
    
    Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
    Запрос.УстановитьПараметр("ДатаСреза", ВладелецФайла.ДатаРегистрации);
    ТаблицаЭтапы = Запрос.Выполнить().Выгрузить();
    РезультатОбработки = СокрЛП(ТаблицаЭтапы[0].НомерПрейскуранта) + ", утвержденным приказом " +
    НРег(СклонениеПоПадежам.обСклонениеСтроки(СокрЛП(ТаблицаЭтапы[0].ДолжностьУтвердившего), 2, "Должность"))+ " УП «Проектный институт Белгипрозем» от ";
    РезультатОбработки = РезультатОбработки + Формат(ТаблицаЭтапы[0].ДатаПриказа, "ДЛФ = DD");
    РезультатОбработки = РезультатОбработки + " № "+ СокрЛП(ТаблицаЭтапы[0].НомерПриказа) ;  
    
    Возврат РезультатОбработки;
КонецФункции // Прейскурант()

// Возвращает строку СтоимостьДоговора
Функция СтоимостьДоговора(ВладелецФайла) Экспорт
    РезультатОбработки = "";
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |	ЭтапыДоговоров.СтоимостьСНДС КАК Стоимость,
    |	ЭтапыДоговоров.СуммаНДС КАК СуммаНДС,
    |	ЭтапыДоговоров.СтавкаНДС КАК СтавкаНДС
    |ИЗ
    |	Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
    |ГДЕ
    |	НЕ ЭтапыДоговоров.ПометкаУдаления И
    |	ЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0) И
    |	ЭтапыДоговоров.Владелец В(&МассивОбъектов)";
    
    Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
    ТаблицаЭтапы = Запрос.Выполнить().Выгрузить();
    
    СтоимостьДоговора = ТаблицаЭтапы.Итог("Стоимость");
    
    РублиРБ = Константы.ОсновнаяВалюта.Получить();
    СтоимостьДоговораПрописьюПолная = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ТаблицаЭтапы.Итог("Стоимость"), РублиРБ, Истина);
    ПозицияРублей = Найти(СтоимостьДоговораПрописьюПолная, "бело");
    СтоимостьДоговораПрописью = Лев(СтоимостьДоговораПрописьюПолная, ПозицияРублей-2);
    Рубли = СокрП(Сред(СтоимостьДоговораПрописьюПолная, ПозицияРублей));
    
    РезультатОбработки = "" + СтоимостьДоговора + " (" + СтоимостьДоговораПрописью + ") " + Рубли;
    
    Если ТаблицаЭтапы.Итог("СуммаНДС") > 0 Тогда
        СуммаНДСПрописьюПолная = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ТаблицаЭтапы.Итог("СуммаНДС"), РублиРБ, Истина);
        ПозицияРублей = Найти(СуммаНДСПрописьюПолная, "бело");
        СуммаНДСПрописью = Лев(СуммаНДСПрописьюПолная, ПозицияРублей-2);
        Рубли = СокрП(Сред(СуммаНДСПрописьюПолная, ПозицияРублей));
        
        ЗначениеСтавки = "";
        Для каждого Стр Из ТаблицаЭтапы Цикл
            Если ЗначениеЗаполнено(Стр.СтавкаНДС) Тогда
                Если Стр.СтавкаНДС.Ставка > 0 Тогда
                    ЗначениеСтавки = Стр.СтавкаНДС.Ставка; 
                    Прервать;
                КонецЕсли; 
            КонецЕсли; 
        КонецЦикла; 
        
        РезультатОбработки = РезультатОбработки + ", в том числе НДС по ставке " + ЗначениеСтавки +"% в сумме "+ ТаблицаЭтапы.Итог("СуммаНДС") + " (" + СуммаНДСПрописью + ") " + Рубли;
    Иначе
        РезультатОбработки = РезультатОбработки + ", без НДС"
    КонецЕсли;

    
    Возврат РезультатОбработки;
КонецФункции // СтоимостьДоговора()

Функция ПолучитьСуммуРублейЧисломИПрописью(Сумма) Экспорт
    РублиРБ = Константы.ОсновнаяВалюта.Получить();
    СуммаПрописьюПолная = РаботаСКурсамиВалют.СформироватьСуммуПрописью(Сумма, РублиРБ, Истина);
    ПозицияРублей = Найти(СуммаПрописьюПолная, "бело");
    СуммаПрописью = Лев(СуммаПрописьюПолная, ПозицияРублей-2);
    Рубли = СокрП(Сред(СуммаПрописьюПолная, ПозицияРублей));
    
    РезультатОбработки = "" + Сумма + " (" + СуммаПрописью + ") " + Рубли;
	Возврат РезультатОбработки;
КонецФункции // ()
 

Функция ПодготовитьЗаголовокТаблицыЮрЛиц()
    ШаблонЗаголовка =  "<w:tbl>
        | <w:tblPr>
        |  <w:tblW w:w=""9500"" w:type=""dxa"" /> 
        | <w:tblBorders>
        |  <w:top w:val=""double"" w:sz=""4"" w:space=""0"" w:color=""auto"" /> 
        |  <w:left w:val=""double"" w:sz=""4"" w:space=""0"" w:color=""auto"" /> 
        |  <w:bottom w:val=""double"" w:sz=""4"" w:space=""0"" w:color=""auto"" /> 
        |  <w:right w:val=""double"" w:sz=""4"" w:space=""0"" w:color=""auto"" /> 
        |  <w:insideH w:val=""single"" w:sz=""6"" w:space=""0"" w:color=""auto"" /> 
        |  <w:insideV w:val=""single"" w:sz=""6"" w:space=""0"" w:color=""auto"" /> 
        |  </w:tblBorders>
        |  <w:tblLayout w:type=""fixed"" /> 
        |  <w:tblLook w:val=""04A0"" w:firstRow=""1"" w:lastRow=""0"" w:firstColumn=""1"" w:lastColumn=""0"" w:noHBand=""0"" w:noVBand=""1"" /> 
        |  </w:tblPr>
        | <w:tblGrid>
        |  <w:gridCol w:w=""700"" /> 
        |  <w:gridCol w:w=""5000"" /> 
        |  <w:gridCol w:w=""1700"" /> 
        |  <w:gridCol w:w=""900"" /> 
        |  <w:gridCol w:w=""1200"" /> 
        |  <w:gridCol w:w=""1500"" /> 
        |  </w:tblGrid>
        | <w:tr>
        
        | <w:tc>
        | <w:tcPr>
        |  <w:vMerge w:val=""restart"" /> 
        |  <w:vAlign w:val=""center"" /> 
        | </w:tcPr>
        
        | <w:p>
        | <w:pPr>
        |  <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
        |  <w:jc w:val=""center"" /> 
        | </w:pPr>
        
        | <w:r>
        | <w:rPr>
        |  <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
        |  <w:b /> 
        |  <w:sz w:val=""16"" /> 
        |  <w:szCs w:val=""16"" /> 
        |  <w:lang w:eastAsia=""ru-RU"" /> 
        | </w:rPr>
        | <w:t>№ этапа</w:t> 
        | </w:r>
        | </w:p>
        | </w:tc>
        
        | <w:tc>
        | <w:tcPr>
        |  <w:vMerge w:val=""restart"" /> 
        |  <w:vAlign w:val=""center"" /> 
        | </w:tcPr>
        
        | <w:p>
        | <w:pPr>
        |  <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
        |  <w:jc w:val=""center"" /> 
        | </w:pPr>
        
        | <w:r>
        | <w:rPr>
        |  <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
        |  <w:b /> 
        |  <w:sz w:val=""16"" /> 
        |  <w:szCs w:val=""16"" /> 
        |  <w:lang w:eastAsia=""ru-RU"" /> 
        | </w:rPr>
        | <w:t>Этапы работ</w:t> 
        | </w:r>
        | </w:p>
        | </w:tc>
        
        | <w:tc>
        | <w:tcPr>
        |  <w:vMerge w:val=""restart"" /> 
        |  <w:vAlign w:val=""center"" /> 
        | </w:tcPr>
        
        | <w:p>
        | <w:pPr>
        |  <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
        |  <w:jc w:val=""center"" /> 
        | </w:pPr>
        
        | <w:r>
        | <w:rPr>
        |  <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
        |  <w:b /> 
        |  <w:sz w:val=""16"" /> 
        |  <w:szCs w:val=""16"" /> 
        |  <w:lang w:eastAsia=""ru-RU"" /> 
        | </w:rPr>
        |  <w:t>Стоимость без НДС, руб.</w:t> 
        |  </w:r>
        |  </w:p>
        |  </w:tc>
        
        
        | <w:tc>
        | <w:tcPr>
        |  <w:gridSpan w:val=""2"" /> 
        |  <w:vAlign w:val=""center"" /> 
        | </w:tcPr>
        
        | <w:p>
        | <w:pPr>
        |  <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
        |  <w:jc w:val=""center"" /> 
        | </w:pPr>
        
        | <w:r>
        | <w:rPr>
        |  <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
        |  <w:b /> 
        |  <w:sz w:val=""16"" /> 
        |  <w:szCs w:val=""16"" /> 
        |  <w:lang w:eastAsia=""ru-RU"" /> 
        | </w:rPr>
        |  <w:t>НДС</w:t> 
        |  </w:r>
        |  </w:p>
        |  </w:tc>
        
        
        | <w:tc>
        | <w:tcPr>
        |  <w:vMerge w:val=""restart"" /> 
        |  <w:vAlign w:val=""center"" /> 
        | </w:tcPr>
        
        | <w:p>
        | <w:pPr>
        |  <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
        |  <w:jc w:val=""center"" /> 
        | </w:pPr>
        
        | <w:r>
        | <w:rPr>
        |  <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
        |  <w:b /> 
        |  <w:sz w:val=""16"" /> 
        |  <w:szCs w:val=""16"" /> 
        |  <w:lang w:eastAsia=""ru-RU"" /> 
        | </w:rPr>
        |  <w:t>Общая стоимость с НДС, руб.</w:t> 
        |  </w:r>
        
        |  </w:p>
        
        |  </w:tc>
        |  </w:tr>
        
        // Вторая строка заголовка
        | <w:tr>
        
        | <w:tc>
        | <w:tcPr>
        |  <w:vMerge /> 
        | </w:tcPr>
        | <w:p>
        | </w:p>
        | </w:tc>
        
        | <w:tc>
        | <w:tcPr>
        |  <w:vMerge /> 
        | </w:tcPr>
        | <w:p>
        | </w:p>
        | </w:tc>
        
        | <w:tc>
        | <w:tcPr>
        |  <w:vMerge /> 
        | </w:tcPr>
        | <w:p>
        | </w:p>
        | </w:tc>
        
        | <w:tc>
        | <w:tcPr>
        |  <w:vAlign w:val=""center"" /> 
        | </w:tcPr>
        | <w:p>
        | <w:pPr>
        |  <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
        |  <w:jc w:val=""center"" /> 
        | </w:pPr>
        | <w:r>
        | <w:rPr>
        |  <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
        |  <w:b /> 
        |  <w:bCs /> 
        |  <w:sz w:val=""16"" /> 
        |  <w:szCs w:val=""16"" /> 
        |  <w:lang w:eastAsia=""ru-RU"" /> 
        |  </w:rPr>
        |  <w:t>%</w:t> 
        |  </w:r>
        |  </w:p>
        |  </w:tc>
        
        | <w:tc>
        | <w:tcPr>
        |  <w:vAlign w:val=""center"" /> 
        | </w:tcPr>
        | <w:p>
        | <w:pPr>
        |  <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
        |  <w:jc w:val=""center"" /> 
        |  </w:pPr>
        | <w:r>
        | <w:rPr>
        |  <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
        |  <w:b /> 
        |  <w:bCs /> 
        |  <w:sz w:val=""16"" /> 
        |  <w:szCs w:val=""16"" /> 
        |  <w:lang w:eastAsia=""ru-RU"" /> 
        |  </w:rPr>
        |  <w:t>Сумма, руб.</w:t> 
        |  </w:r>
        |  </w:p>
        |  </w:tc>
        
        | <w:tc>
        | <w:tcPr>
        |  <w:vMerge /> 
        | </w:tcPr>
        | <w:p>
        | </w:p>
        | </w:tc>
        
        |  </w:tr>";
    Возврат ШаблонЗаголовка;    
КонецФункции    

Функция ПодготовитьЗаголовокТаблицыФизЛиц()
    ШаблонЗаголовка =  "<w:tbl>
 | <w:tblPr>
 | <w:tblW w:w=""0"" w:type=""auto"" /> 
 | <w:tblBorders>
 | <w:top w:val=""double"" w:sz=""4"" w:space=""0"" w:color=""auto"" /> 
 | <w:left w:val=""double"" w:sz=""4"" w:space=""0"" w:color=""auto"" /> 
 | <w:bottom w:val=""double"" w:sz=""4"" w:space=""0"" w:color=""auto"" /> 
 | <w:right w:val=""double"" w:sz=""4"" w:space=""0"" w:color=""auto"" /> 
 | <w:insideH w:val=""single"" w:sz=""6"" w:space=""0"" w:color=""auto"" /> 
 | <w:insideV w:val=""single"" w:sz=""6"" w:space=""0"" w:color=""auto"" /> 
 | </w:tblBorders>
 | <w:tblLook w:val=""04A0"" w:firstRow=""1"" w:lastRow=""0"" w:firstColumn=""1"" w:lastColumn=""0"" w:noHBand=""0"" w:noVBand=""1"" /> 
 | </w:tblPr>
 | <w:tblGrid>
 | <w:gridCol w:w=""700"" /> 
 | <w:gridCol w:w=""7322"" /> 
 | <w:gridCol w:w=""2003"" /> 
 | </w:tblGrid>
 | <w:tr>
 
 | <w:tc>
 
 | <w:tcPr>
 | <w:tcW w:w=""700"" w:type=""dxa"" /> 
 | <w:tcBorders>
 | <w:top w:val=""double"" w:sz=""4"" w:space=""0"" w:color=""auto"" /> 
 | <w:bottom w:val=""double"" w:sz=""4"" w:space=""0"" w:color=""auto"" /> 
 | </w:tcBorders>
 | <w:shd w:val=""clear"" w:color=""auto"" w:fill=""auto"" /> 
 | <w:vAlign w:val=""center"" /> 
 | <w:hideMark /> 
 | </w:tcPr>
 
 | <w:p>
 | <w:pPr>
 | <w:widowControl w:val=""0"" /> 
 | <w:tabs>
 | <w:tab w:val=""left"" w:pos=""1276"" /> 
 | </w:tabs>
 | <w:autoSpaceDE w:val=""0"" /> 
 | <w:autoSpaceDN w:val=""0"" /> 
 | <w:adjustRightInd w:val=""0"" /> 
 | <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
 | <w:jc w:val=""center"" /> 
 
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:b /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""20"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | </w:pPr>
 
 | <w:r>
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:b /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""20"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | <w:t>№ этапа</w:t> 
 | </w:r>
 | </w:p>
 | </w:tc>
 
 | <w:tc>
 | <w:tcPr>
 | <w:tcW w:w=""7709"" w:type=""dxa"" /> 
 | <w:tcBorders>
 | <w:top w:val=""double"" w:sz=""4"" w:space=""0"" w:color=""auto"" /> 
 | <w:bottom w:val=""double"" w:sz=""4"" w:space=""0"" w:color=""auto"" /> 
 | </w:tcBorders>
 | <w:shd w:val=""clear"" w:color=""auto"" w:fill=""auto"" /> 
 | <w:vAlign w:val=""center"" /> 
 | <w:hideMark /> 
 | </w:tcPr>
 | <w:p>
 | <w:pPr>
 | <w:widowControl w:val=""0"" /> 
 | <w:tabs>
 | <w:tab w:val=""left"" w:pos=""1276"" /> 
 | </w:tabs>
 | <w:autoSpaceDE w:val=""0"" /> 
 | <w:autoSpaceDN w:val=""0"" /> 
 | <w:adjustRightInd w:val=""0"" /> 
 | <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
 | <w:jc w:val=""center"" /> 
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:b /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""20"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | </w:pPr>
 | <w:r>
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:b /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""20"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | <w:t>Этапы работ</w:t> 
 | </w:r>
 | </w:p>
 | </w:tc>
 
 | <w:tc>
 | <w:tcPr>
 | <w:tcW w:w=""2003"" w:type=""dxa"" /> 
 | <w:tcBorders>
 | <w:top w:val=""double"" w:sz=""4"" w:space=""0"" w:color=""auto"" /> 
 | <w:bottom w:val=""double"" w:sz=""4"" w:space=""0"" w:color=""auto"" /> 
 | </w:tcBorders>
 | <w:shd w:val=""clear"" w:color=""auto"" w:fill=""auto"" /> 
 | <w:vAlign w:val=""center"" /> 
 | <w:hideMark /> 
 | </w:tcPr>
 | <w:p>
 | <w:pPr>
 | <w:widowControl w:val=""0"" /> 
 | <w:tabs>
 | <w:tab w:val=""left"" w:pos=""1276"" /> 
 | </w:tabs>
 | <w:autoSpaceDE w:val=""0"" /> 
 | <w:autoSpaceDN w:val=""0"" /> 
 | <w:adjustRightInd w:val=""0"" /> 
 | <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
 | <w:jc w:val=""center"" /> 
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:b /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""20"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | </w:pPr>
 | <w:r>
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:b /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""20"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | <w:t>Стоимость работ без НДС, руб.</w:t> 
 | </w:r>
 | </w:p>
 | </w:tc>
 | </w:tr>";

    Возврат ШаблонЗаголовка;    
КонецФункции    

// Возвращает строку СтоимостьДоговора
// ВидЛица Строка "ЮрЛица", "ФизЛица"
Функция ТаблицаДоговора(ВладелецФайла, ВидЛица) Экспорт
    РезультатОбработки = "";
    // Закроем открытые теги
    РезультатОбработки = "</w:t></w:r></w:p>";		//</w:p>";
    
    //Если ВидЛица = "ЮрЛица" Тогда
        
        // Заголовок таблицы
        РезультатОбработки = РезультатОбработки + ПодготовитьЗаголовокТаблицыЮрЛиц();
        
        ШаблонСтроки = "<w:tr>";
        Для й=1  По 6 Цикл
            
            ШаблонСтроки = ШаблонСтроки + "
            | <w:tc>
            | <w:tcPr>
            |  <w:vAlign w:val=""center"" /> 
            | </w:tcPr>
            | <w:p>
            | <w:pPr>
            |  <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" />";
            Если й=2 Тогда
                ШаблонСтроки = ШаблонСтроки + "
                |  <w:jc w:val=""both"" />"; 
            Иначе	
                ШаблонСтроки = ШаблонСтроки + "
                |  <w:jc w:val=""center"" />"; 
            КонецЕсли; 
            ШаблонСтроки = ШаблонСтроки + "
            | </w:pPr>
            | <w:r>
            | <w:rPr>
            | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
            | <w:noProof />"; 
            Если й<7 Тогда	
                ШаблонСтроки = ШаблонСтроки + "
                | <w:sz w:val=""16"" /> 
                | <w:szCs w:val=""16"" />"; 
            Иначе
                // Итоговая строка
                ШаблонСтроки = ШаблонСтроки + "
                | <w:b /> 
                | <w:sz w:val=""28"" /> 
                | <w:szCs w:val=""284"" />"; 
            КонецЕсли;
            ШаблонСтроки = ШаблонСтроки + "
            | <w:lang w:eastAsia=""ru-RU"" /> 
            | </w:rPr>
            | <w:t>%" + й + "</w:t> 
            | </w:r>
            | </w:p>
            | </w:tc>";
            
        КонецЦикла; 
        
        ШаблонСтроки = ШаблонСтроки + "
        | </w:tr>";
        
        ШаблонИтоговойСтроки = "<w:tr>";
        Для й=1  По 6 Цикл
            
            ШаблонИтоговойСтроки = ШаблонИтоговойСтроки + "
            | <w:tc>
            | <w:tcPr>
            |  <w:vAlign w:val=""center"" /> 
            | </w:tcPr>
            | <w:p>
            | <w:pPr>
            |  <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" />
            |  <w:jc w:val=""center"" />
            | </w:pPr>
            | <w:r>
            | <w:rPr>
            | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
            | <w:noProof /> 
            | <w:b /> 
            | <w:sz w:val=""20"" /> 
            | <w:szCs w:val=""20"" /> 
            | <w:lang w:eastAsia=""ru-RU"" /> 
            | </w:rPr>
            | <w:t>%" + й + "</w:t> 
            | </w:r>
            | </w:p>
            | </w:tc>";
            
        КонецЦикла; 
        
        ШаблонИтоговойСтроки = ШаблонИтоговойСтроки + "
        | </w:tr>";
        
        // Вывод строк
        
        Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ
        |	ВидыРаботПоДоговорам.ПредметДоговора КАК ВидРабот,
        |	ЭтапыДоговоров.НомерЭтапа КАК НомерЭтапа,
        |	ЭтапыДоговоров.Стоимость КАК Стоимость,
        |	ЭтапыДоговоров.СтоимостьСНДС КАК Всего,
        |	ЭтапыДоговоров.СуммаНДС КАК СуммаНДС,
        |	ЭтапыДоговоров.СтавкаНДС КАК СтавкаНДС
        |ИЗ
        |	Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.мВидыРабот" + ВидЛица + " КАК ВидыРаботПоДоговорам
        |		ПО ЭтапыДоговоров.ВидРабот = ВидыРаботПоДоговорам.Ссылка
        |ГДЕ
        |	НЕ ЭтапыДоговоров.ПометкаУдаления И
        |	ЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0) И
        |	ЭтапыДоговоров.Владелец В(&МассивОбъектов)
        |УПОРЯДОЧИТЬ ПО ЭтапыДоговоров.НомерЭтапа";
        
        Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
        ТаблицаЭтапы = Запрос.Выполнить().Выгрузить();
        
        Для й=0 По ТаблицаЭтапы.Количество()-1 Цикл
            ВидРабот = ВРег(Лев(ТаблицаЭтапы[й].ВидРабот, 1))+Сред(ТаблицаЭтапы[й].ВидРабот, 2);
            РезультатОбработки = 	РезультатОбработки + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
            ШаблонСтроки,
            ТаблицаЭтапы[й].НомерЭтапа,  
            ВидРабот,  
            ТаблицаЭтапы[й].Стоимость,  
            ТаблицаЭтапы[й].СтавкаНДС,  
            ТаблицаЭтапы[й].СуммаНДС,  
            ТаблицаЭтапы[й].Всего);  
        КонецЦикла;
        // Итоговая строка
        РезультатОбработки = 	РезультатОбработки + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
        ШаблонИтоговойСтроки,
        "",  
        "ВСЕГО",  
        ТаблицаЭтапы.Итог("Стоимость"),  
        "",  
        ТаблицаЭтапы.Итог("СуммаНДС"),  
        ТаблицаЭтапы.Итог("Всего"));  
        
    //Иначе
    //
    //    // Заголовок таблицы
    //    РезультатОбработки = РезультатОбработки + ПодготовитьЗаголовокТаблицыФизЛиц();
    //	
    //    ШаблонСтроки = "<w:tr>";
    //    Для й=1  По 3 Цикл
    //        
    //        ШаблонСтроки = ШаблонСтроки + "
    //        | <w:tc>
    //        | <w:tcPr>
    //        |  <w:vAlign w:val=""center"" /> 
    //        | </w:tcPr>
    //        | <w:p>
    //        | <w:pPr>
    //        |  <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" />";
    //        Если й=2 Тогда
    //            ШаблонСтроки = ШаблонСтроки + "
    //            |  <w:jc w:val=""both"" />"; 
    //        Иначе	
    //            ШаблонСтроки = ШаблонСтроки + "
    //            |  <w:jc w:val=""center"" />"; 
    //        КонецЕсли; 
    //        ШаблонСтроки = ШаблонСтроки + "
    //        | </w:pPr>
    //        | <w:r>
    //        | <w:rPr>
    //        | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    //        | <w:noProof />
    //        | <w:sz w:val=""16"" /> 
    //        | <w:szCs w:val=""16"" />"; 
    //        
    //        ШаблонСтроки = ШаблонСтроки + "
    //        | <w:lang w:eastAsia=""ru-RU"" /> 
    //        | </w:rPr>
    //        | <w:t>%" + й + "</w:t> 
    //        | </w:r>
    //        | </w:p>
    //        | </w:tc>";
    //        
    //    КонецЦикла; 
    //    
    //    ШаблонСтроки = ШаблонСтроки + "
    //    | </w:tr>";
    //    
    //    ШаблонИтоговойСтроки = "<w:tr>";
    //    Для й=1  По 3 Цикл
    //        
    //        ШаблонИтоговойСтроки = ШаблонИтоговойСтроки + "
    //        | <w:tc>
    //        | <w:tcPr>
    //        |  <w:vAlign w:val=""center"" /> 
    //        | </w:tcPr>
    //        | <w:p>
    //        | <w:pPr>
    //        |  <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" />
    //        |  <w:jc w:val=""center"" />
    //        | </w:pPr>
    //        | <w:r>
    //        | <w:rPr>
    //        | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    //        | <w:noProof /> 
    //        | <w:b /> 
    //        | <w:sz w:val=""20"" /> 
    //        | <w:szCs w:val=""20"" /> 
    //        | <w:lang w:eastAsia=""ru-RU"" /> 
    //        | </w:rPr>
    //        | <w:t>%" + й + "</w:t> 
    //        | </w:r>
    //        | </w:p>
    //        | </w:tc>";
    //        
    //    КонецЦикла; 
    //    
    //    ШаблонИтоговойСтроки = ШаблонИтоговойСтроки + "
    //    | </w:tr>";
    //    
    //    // Вывод строк
    //    
    //    Запрос = Новый Запрос;
    //    Запрос.Текст = 
    //    "ВЫБРАТЬ
    //    |	ВидыРаботПоДоговорам.ПредметДоговора КАК ВидРабот,
    //    |	ЭтапыДоговоров.НомерЭтапа КАК НомерЭтапа,
    //    //|	ЭтапыДоговоров.Стоимость КАК Стоимость,
    //    |	ЭтапыДоговоров.СтоимостьСНДС КАК Всего
    //    //|	ЭтапыДоговоров.СуммаНДС КАК СуммаНДС,
    //    //|	ЭтапыДоговоров.СтавкаНДС КАК СтавкаНДС
    //    |ИЗ
    //    |	Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
    //    |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.мВидыРаботФизЛица КАК ВидыРаботПоДоговорам
    //    |		ПО ЭтапыДоговоров.ВидРабот = ВидыРаботПоДоговорам.Ссылка
    //    |ГДЕ
    //    |	НЕ ЭтапыДоговоров.ПометкаУдаления И
    //    |	ЭтапыДоговоров.Владелец В(&МассивОбъектов)
    //    |УПОРЯДОЧИТЬ ПО ЭтапыДоговоров.НомерЭтапа";
    //    
    //    Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
    //    ТаблицаЭтапы = Запрос.Выполнить().Выгрузить();
    //    
    //    Для й=0 По ТаблицаЭтапы.Количество()-1 Цикл
    //        ВидРабот = ВРег(Лев(ТаблицаЭтапы[й].ВидРабот, 1))+Сред(ТаблицаЭтапы[й].ВидРабот, 2);
    //        РезультатОбработки = 	РезультатОбработки + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
    //        ШаблонСтроки,
    //        ТаблицаЭтапы[й].НомерЭтапа,  
    //        ВидРабот,  
    //        //ТаблицаЭтапы[й].Стоимость,  
    //        //ТаблицаЭтапы[й].СтавкаНДС,  
    //        //ТаблицаЭтапы[й].СуммаНДС,  
    //        ТаблицаЭтапы[й].Всего);  
    //    КонецЦикла;
    //    // Итоговая строка
    //    РезультатОбработки = 	РезультатОбработки + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
    //    ШаблонИтоговойСтроки,
    //    "",  
    //    "ВСЕГО",  
    //    //ТаблицаЭтапы.Итог("Стоимость"),  
    //    //"",  
    //    //ТаблицаЭтапы.Итог("СуммаНДС"),  
    //    ТаблицаЭтапы.Итог("Всего"));  
    //
    //КонецЕсли; 

    // Закроем таблицу
    РезультатОбработки = РезультатОбработки + " </w:tbl>";
    // Откроем теги, т.к. в структуре документа они закрываются сразу за вставкой.
    РезультатОбработки = РезультатОбработки + "<w:p><w:r><w:t>";	//<w:p>
    
    Возврат РезультатОбработки;
КонецФункции // ТаблицаДоговора()

// Возвращает подпункты 3 договора
// ВидЛица Строка "ЮрЛица", "ФизЛица"
// НомерПодпункта Строка "3" или "5" В договоре: 3.<НомерПодпункта>.НомерПодПодпунктв
Функция Подпункты3(ВладелецФайла, ВидЛица, НомерПодпункта) Экспорт
    РезультатОбработки = "";
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   УсловияДоговоров.ПроцентПредоплаты КАК ПроцентПредоплаты,
    |   УсловияДоговоров.ЭтапДоговора КАК ЭтапДоговора
    |ИЗ
    |   РегистрСведений.мУсловияДоговоров.СрезПоследних(&ДатаСреза, Договор В (&МассивОбъектов)) КАК УсловияДоговоров
    |ГДЕ
    |   НЕ УсловияДоговоров.ЭтапДоговора.ПометкаУдаления
	|	И УсловияДоговоров.ЭтапДоговора.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0)
    |
    |УПОРЯДОЧИТЬ ПО
    |   УсловияДоговоров.ЭтапДоговора.НомерЭтапа";
    
    Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
    Запрос.УстановитьПараметр("ДатаСреза", ТекущаяДата());
    
    ТаблицаЭтапы = Запрос.Выполнить().Выгрузить();
    
    ШаблонСтроки = "
    |<w:pPr>
    |  <w:widowControl w:val=""0"" /> 
    |  <w:autoSpaceDE w:val=""0"" /> 
    |  <w:autoSpaceDN w:val=""0"" /> 
    |  <w:adjustRightInd w:val=""0"" /> 
    |  <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto""/> 
    |  <w:ind w:firstLine=""567"" /> 
    |  <w:jc w:val=""both"" /> 
    |  </w:pPr>
    
    |<w:r>
    | <w:rPr>
    |  <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    |  <w:sz w:val=""20"" /> 
    |  </w:rPr>
    |<w:t>%1</w:t>
    |</w:r>";
    
    // Закроем открытые теги
    РезультатОбработки = "</w:t></w:r>"; //</w:p><w:p>";
    
    Для й=0 По ТаблицаЭтапы.Количество()-1 Цикл
        НомерПункта = й + 1;
        Порядковый = мРаботаСДоговорами.ПорядковыйНомер(НомерПункта, 1);
        ПорядковыйДатПадеж = мРаботаСДоговорами.ПорядковыйНомер(НомерПункта, 3, "м");
        
        Если ВидЛица = "ЮрЛицо" Тогда
            // для всех одинаковый текст
            ТекстПункта =  "3." + НомерПодпункта + "." + НомерПункта + ". по " + ПорядковыйДатПадеж 
            + " этапу - в размере " + ТаблицаЭтапы[й].ПроцентПредоплаты +" % от цены работ по "
            +ПорядковыйДатПадеж+" этапу, предусмотренной в п.3.1. настоящего договора, путем перечисления денежных средств на расчетный счет Подрядчика в течение 10 (десяти) рабочих дней с момента подписания настоящего договора";
        Иначе
            ТекстПункта =  "3." + НомерПодпункта + "." + НомерПункта + ". по " + ПорядковыйДатПадеж 
            + " этапу - в размере " + ТаблицаЭтапы[й].ПроцентПредоплаты +" % от цены работ по "
            +ПорядковыйДатПадеж+" этапу, предусмотренной в п.3.1. настоящего договора, путем перечисления денежных средств на расчетный счет Подрядчика в течение 10 (десяти) рабочих дней ";
            
            Если й=0 Тогда
                ТекстПункта = ТекстПункта + "с момента подписания настоящего договора";    
            Иначе
                ТекстПункта = ТекстПункта + "после предоставления Подрядчику копии решения (выписки из решения) исполнительного комитета об изъятии и предоставлении земельного участка";
            КонецЕсли; 
        КонецЕсли; 
        
        // Вставляем абзацы между строками (пунктами)
        Если й < ТаблицаЭтапы.Количество()-1 Тогда
            ТекстПункта = ТекстПункта + ";";
            РезультатОбработки = 	РезультатОбработки + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
            ШаблонСтроки, ТекстПункта);  
            
            РезультатОбработки = 	РезультатОбработки +  "</w:p><w:p>";  
        Иначе
            ТекстПункта = ТекстПункта + ".";
            
            РезультатОбработки = 	РезультатОбработки + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
            ШаблонСтроки, ТекстПункта);  
        КонецЕсли;
    КонецЦикла;
    
    // Откроем теги, т.к. в структуре документа они закрываются сразу за вставкой.
    РезультатОбработки = РезультатОбработки + "<w:r><w:t>";    //"<w:p><w:r><w:t>";</w:p><w:p></w:p><w:p>
    
    Возврат РезультатОбработки;
КонецФункции // Подпункты3()

// Возвращает Наши реквизиты
Функция НашиРеквизиты(ВладелецФайла = Неопределено) Экспорт
    РезультатОбработки = "";
    
    ШаблонСтроки = "
    //| <w:p>
    | <w:pPr>
    | <w:keepNext /> 
    | <w:keepLines /> 
    | <w:widowControl w:val=""0"" /> 
    | <w:autoSpaceDE w:val=""0"" /> 
    | <w:autoSpaceDN w:val=""0"" /> 
    | <w:adjustRightInd w:val=""0"" /> 
    | <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
    | <w:rPr>
    | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    | <w:sz w:val=""20"" /> 
    | <w:szCs w:val=""20"" /> 
    | <w:lang w:eastAsia=""ru-RU"" /> 
    | </w:rPr>
    | </w:pPr>
    | <w:r w:rsidRPr=""001132E0"">
    | <w:rPr>
    | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    | <w:b /> 
    | <w:sz w:val=""20"" /> 
    | <w:szCs w:val=""20"" /> 
    | <w:lang w:eastAsia=""ru-RU"" /> 
    | </w:rPr>
    | <w:t>%1</w:t> 
    | </w:r>
    | <w:r>
    | <w:rPr>
    | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    | <w:sz w:val=""20"" /> 
    | <w:szCs w:val=""20"" /> 
    | <w:lang w:eastAsia=""ru-RU"" /> 
    | </w:rPr>
    | <w:t xml:space=""preserve""></w:t> 
    | </w:r>
    | </w:p>
    | <w:p>
    | <w:pPr>
    | <w:keepNext /> 
    | <w:keepLines /> 
    | <w:widowControl w:val=""0"" /> 
    | <w:autoSpaceDE w:val=""0"" /> 
    | <w:autoSpaceDN w:val=""0"" /> 
    | <w:adjustRightInd w:val=""0"" /> 
    | <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
    | <w:rPr>
    | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    | <w:sz w:val=""20"" /> 
    | <w:szCs w:val=""20"" /> 
    | <w:lang w:eastAsia=""ru-RU"" /> 
    | </w:rPr>
    | </w:pPr>
    | <w:r>
    | <w:rPr>
    | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    | <w:b /> 
    | <w:sz w:val=""20"" /> 
    | <w:szCs w:val=""20"" /> 
    | <w:lang w:eastAsia=""ru-RU"" /> 
    | </w:rPr>
    | <w:t>Адрес:</w:t> 
    | </w:r>
    | <w:r>
    | <w:rPr>
    | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    | <w:sz w:val=""20"" /> 
    | <w:szCs w:val=""20"" /> 
    | <w:lang w:eastAsia=""ru-RU"" /> 
    | </w:rPr>
    | <w:t xml:space=""preserve"">%2</w:t> 
    | </w:r>
    | </w:p>
    | <w:p>
    | <w:pPr>
    | <w:keepNext /> 
    | <w:keepLines /> 
    | <w:widowControl w:val=""0"" /> 
    | <w:autoSpaceDE w:val=""0"" /> 
    | <w:autoSpaceDN w:val=""0"" /> 
    | <w:adjustRightInd w:val=""0"" /> 
    | <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
    | <w:rPr>
    | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    | <w:sz w:val=""20"" /> 
    | <w:szCs w:val=""20"" /> 
    | <w:lang w:eastAsia=""ru-RU"" /> 
    | </w:rPr>
    | </w:pPr>
    | <w:r>
    | <w:rPr>
    | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    | <w:b /> 
    | <w:sz w:val=""20"" /> 
    | <w:szCs w:val=""20"" /> 
    | <w:lang w:eastAsia=""ru-RU"" /> 
    | </w:rPr>
    | <w:t>Расчетный счет:</w:t> 
    | </w:r>
    | <w:r>
    | <w:rPr>
    | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    | <w:sz w:val=""20"" /> 
    | <w:szCs w:val=""20"" /> 
    | <w:lang w:eastAsia=""ru-RU"" /> 
    | </w:rPr>
    | <w:t xml:space=""preserve"">%3</w:t> 
    | </w:r>
    | </w:p>
    | <w:p>
    | <w:pPr>
    | <w:keepNext /> 
    | <w:keepLines /> 
    | <w:widowControl w:val=""0"" /> 
    | <w:autoSpaceDE w:val=""0"" /> 
    | <w:autoSpaceDN w:val=""0"" /> 
    | <w:adjustRightInd w:val=""0"" /> 
    | <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
    | <w:rPr>
    | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    | <w:sz w:val=""20"" /> 
    | <w:szCs w:val=""20"" /> 
    | <w:lang w:eastAsia=""ru-RU"" /> 
    | </w:rPr>
    | </w:pPr>
    | <w:r>
    | <w:rPr>
    | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    | <w:b /> 
    | <w:sz w:val=""20"" /> 
    | <w:szCs w:val=""20"" /> 
    | <w:lang w:eastAsia=""ru-RU"" /> 
    | </w:rPr>
    | <w:t xml:space=""preserve"">УНП</w:t> 
    | </w:r>
    | <w:r>
    | <w:rPr>
    | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    | <w:sz w:val=""20"" /> 
    | <w:szCs w:val=""20"" /> 
    | <w:lang w:eastAsia=""ru-RU"" /> 
    | </w:rPr>
    | <w:t xml:space=""preserve"">%4</w:t> 
    | </w:r>
    | <w:r>
    | <w:rPr>
    | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    | <w:b /> 
    | <w:sz w:val=""20"" /> 
    | <w:szCs w:val=""20"" /> 
    | <w:lang w:eastAsia=""ru-RU"" /> 
    | </w:rPr>
    | <w:t xml:space=""preserve"">ОКПО</w:t> 
    | </w:r>
    | <w:r>
    | <w:rPr>
    | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    | <w:sz w:val=""20"" /> 
    | <w:szCs w:val=""20"" /> 
    | <w:lang w:eastAsia=""ru-RU"" /> 
    | </w:rPr>
    | <w:t xml:space=""preserve"">%5</w:t> 
    | </w:r>
    | </w:p>
    | <w:p>
    | <w:pPr>
    | <w:keepNext /> 
    | <w:keepLines /> 
    | <w:widowControl w:val=""0"" /> 
    | <w:autoSpaceDE w:val=""0"" /> 
    | <w:autoSpaceDN w:val=""0"" /> 
    | <w:adjustRightInd w:val=""0"" /> 
    | <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
    | <w:rPr>
    | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    | <w:sz w:val=""20"" /> 
    | <w:szCs w:val=""20"" /> 
    | <w:lang w:eastAsia=""ru-RU"" /> 
    | </w:rPr>
    | </w:pPr>
    | <w:r w:rsidRPr=""001132E0"">
    | <w:rPr>
    | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    | <w:b /> 
    | <w:sz w:val=""20"" /> 
    | <w:szCs w:val=""20"" /> 
    | <w:lang w:eastAsia=""ru-RU"" /> 
    | </w:rPr>
    | <w:t xml:space=""preserve"">Тел/факс:</w:t> 
    | </w:r>
    | <w:r>
    | <w:rPr>
    | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
    | <w:sz w:val=""20"" /> 
    | <w:szCs w:val=""20"" /> 
    | <w:lang w:eastAsia=""ru-RU"" /> 
    | </w:rPr>
    | <w:t xml:space=""preserve"">%6</w:t> 
    | </w:r>";
    //| </w:p>";
    
    РезультатОбработки = "</w:t></w:r>";     //</w:p>";        //</w:p><w:p>";
	
	ВладелецРеквизитов = М_ПравилаАвтозаполненияШаблонов.ПолучитьВладельцаРеквизитов(ВладелецФайла);
	НашеНазвание = ВладелецРеквизитов.ПолноеНаименование;
	
    РезультатОбработки = 	РезультатОбработки + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
    ШаблонСтроки, 
    НашеНазвание,
    " "+М_ПравилаАвтозаполненияШаблонов.ПолучитьЮридическийАдрес(ВладелецРеквизитов),
    " "+М_ПравилаАвтозаполненияШаблонов.ПолучитьРасчетныйСчет(ВладелецРеквизитов) + ", ",
    " "+ВладелецРеквизитов.ИНН + ", ",
    " "+ВладелецРеквизитов.КодПоОКПО + ", ",
    " "+М_ПравилаАвтозаполненияШаблонов.ПолучитьТелефон(ВладелецРеквизитов));  
    
    // Откроем теги, т.к. в структуре документа они закрываются сразу за вставкой.
    РезультатОбработки = РезультатОбработки + "<w:r><w:t>";    //"<w:p><w:r><w:t>";</w:p><w:p></w:p><w:p>
    
    
    Возврат РезультатОбработки;
КонецФункции // НашиРеквизиты()

// Возвращает ссылку либо на Корреспондента, либо на Организацию
//  в зависимости от ФО ИспользоватьУчетПоОрганизациям
// Параметры ВладелецФайла - ссылка на документ с организацией
Функция ПолучитьВладельцаРеквизитов(ВладелецФайла = Неопределено) Экспорт
	ВладелецРеквизитов = "";
	
	// Попытка получить из документа из реквизита Организация или из константы М_ОсновнаяОрганизация
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда
		Если ВладелецФайла = Неопределено Тогда
			// Документ не указан - берем Организацию по умолчанию
			ВладелецРеквизитов = Константы.М_ОсновнаяОрганизация.Получить();
		Иначе	
			Если ТипЗнч(ВладелецФайла) = Тип("СправочникСсылка.ВнутренниеДокументы") Тогда
				Если ЗначениеЗаполнено(ВладелецФайла.Организация) Тогда
					ВладелецРеквизитов = ВладелецФайла.Организация;
				Иначе
					ВладелецРеквизитов = Константы.М_ОсновнаяОрганизация.Получить();
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли; 
	
	// Попытка получить из константы НашаОрганизация
	Если Не ЗначениеЗаполнено(ВладелецРеквизитов) Тогда
		ВладелецРеквизитов = Константы.НашаОрганизация.Получить();
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(ВладелецРеквизитов) Тогда
		Сообщить("Не удалось получить владельца реквизитов!", СтатусСообщения.ОченьВажное);
	КонецЕсли; 
	
	Возврат ВладелецРеквизитов;
КонецФункции // ПолучитьНашеНазвание()

Функция ПолучитьНашеНазвание(ВладелецРеквизитов) Экспорт
	Возврат ВладелецРеквизитов.ПолноеНаименование;
КонецФункции // ПолучитьНашеНазвание()
 

// Возвращает реквизиты Заказчика физ лица
Функция ЗаказчикиФизЛица(ВладелецФайла) Экспорт
    РезультатОбработки = "";
    
    ШаблонСтроки = "
// | <w:p>
 | <w:pPr>
 | <w:widowControl w:val=""0"" /> 
 | <w:autoSpaceDE w:val=""0"" /> 
 | <w:autoSpaceDN w:val=""0"" /> 
 | <w:adjustRightInd w:val=""0"" /> 
 | <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
 | <w:ind w:left=""252"" w:hanging=""77"" /> 
 | <w:jc w:val=""center"" /> 
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""20"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | </w:pPr>
 | <w:r>
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:b /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""20"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | <w:t>Заказчик %1</w:t> 
 | </w:r>
 | <w:r>
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""20"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | <w:t>:</w:t> 
 | </w:r>
 | </w:p>
 
 | <w:p>
 | <w:pPr>
 | <w:widowControl w:val=""0"" /> 
 | <w:autoSpaceDE w:val=""0"" /> 
 | <w:autoSpaceDN w:val=""0"" /> 
 | <w:adjustRightInd w:val=""0"" /> 
 | <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
 | <w:ind w:left=""252"" w:firstLine=""65"" /> 
 | <w:jc w:val=""both"" /> 
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:b /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""20"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | </w:pPr>
 | <w:r>
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:b /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""20"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | <w:t>%2</w:t> 
 | </w:r>
 | </w:p>";
 
 Если Константы.мПечататьПаспортныеДанныеФизЛиц.Получить() Тогда
    ШаблонСтроки = ШаблонСтроки + "
 | <w:p>
 | <w:pPr>
 | <w:widowControl w:val=""0"" /> 
 | <w:autoSpaceDE w:val=""0"" /> 
 | <w:autoSpaceDN w:val=""0"" /> 
 | <w:adjustRightInd w:val=""0"" /> 
 | <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
 | <w:ind w:left=""317"" /> 
 | <w:jc w:val=""both"" /> 
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""20"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | </w:pPr>
 | <w:r>
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""20"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | <w:t xml:space=""preserve"">Паспорт:%3</w:t> 
 | </w:r>
 | </w:p>
 
 | <w:p>
 | <w:pPr>
 | <w:widowControl w:val=""0"" /> 
 | <w:autoSpaceDE w:val=""0"" /> 
 | <w:autoSpaceDN w:val=""0"" /> 
 | <w:adjustRightInd w:val=""0"" /> 
 | <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
 | <w:ind w:left=""317"" /> 
 | <w:jc w:val=""both"" /> 
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""20"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | </w:pPr>
 | <w:r>
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""20"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | <w:t xml:space=""preserve"">Выдан:%4</w:t> 
 | </w:r>
 | </w:p>";
 КонецЕсли;
 
    ШаблонСтроки = ШаблонСтроки + " 
 | <w:p>
 | <w:pPr>
 | <w:widowControl w:val=""0"" /> 
 | <w:autoSpaceDE w:val=""0"" /> 
 | <w:autoSpaceDN w:val=""0"" /> 
 | <w:adjustRightInd w:val=""0"" /> 
 | <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
 | <w:ind w:left=""317"" /> 
 | <w:jc w:val=""both"" /> 
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""20"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | </w:pPr>
 | <w:r>
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""20"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | <w:t>Адрес постоянного местожительства: %5</w:t> 
 | </w:r>
 | </w:p>
 | <w:p>
 | <w:pPr>
 | <w:widowControl w:val=""0"" /> 
 | <w:autoSpaceDE w:val=""0"" /> 
 | <w:autoSpaceDN w:val=""0"" /> 
 | <w:adjustRightInd w:val=""0"" /> 
 | <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
 | <w:ind w:left=""252"" w:firstLine=""567"" /> 
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""20"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | </w:pPr>
 | </w:p>
 | <w:p>
 | <w:pPr>
 | <w:widowControl w:val=""0"" /> 
 | <w:autoSpaceDE w:val=""0"" /> 
 | <w:autoSpaceDN w:val=""0"" /> 
 | <w:adjustRightInd w:val=""0"" /> 
 | <w:spacing w:after=""0"" w:line=""240"" w:lineRule=""auto"" /> 
 | <w:ind w:left=""252"" w:firstLine=""65"" /> 
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""20"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | </w:pPr>
 | <w:r>
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""20"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | <w:t xml:space=""preserve"">__________________</w:t> 
 | </w:r>
 | <w:r>
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:b /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""16"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 | </w:rPr>
 | <w:t>%6</w:t> 
 | </w:r>
 | </w:p>
 | <w:p>
 | <w:pPr>
 | <w:ind w:left=""800"" /> 
 | </w:pPr>
 | <w:r>
 | <w:rPr>
 | <w:rFonts w:ascii=""Times New Roman"" w:hAnsi=""Times New Roman"" /> 
 | <w:sz w:val=""20"" /> 
 | <w:szCs w:val=""16"" /> 
 | <w:vertAlign w:val=""superscript"" /> 
 | <w:lang w:eastAsia=""ru-RU"" /> 
 //| <w:ind w:left=""1440"" />
 //| <w:tab />
 | </w:rPr>
 | <w:t xml:space=""preserve"">(подпись)</w:t> 
 | </w:r>"; 
// | </w:p>";
    
    РезультатОбработки = "</w:t></w:r>";     //</w:p>";        //</w:p><w:p>";
    
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
      	|	Корреспонденты.Корреспондент.ФизЛицо КАК ФизЛицо,
      	|	Корреспонденты.Корреспондент.Наименование КАК ФИО
		|ИЗ
		|	Справочник.ВнутренниеДокументы.Корреспонденты КАК Корреспонденты
		|ГДЕ
		|	Корреспонденты.Ссылка В(&МассивОбъектов)";

	Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();  
    
    Для й=0 По ТаблицаЗапроса.Количество()-1 Цикл
        ФизЛицо = ТаблицаЗапроса[й].ФизЛицо;
        
        НомерЗаказчика = й + 1;
        ФИО = ТаблицаЗапроса[й].ФИО;
        
		Если Константы.мПечататьПаспортныеДанныеФизЛиц.Получить() Тогда
			ДанныеПаспорта = РегистрыСведений.ДокументыФизическихЛиц.ПаспортныеДанныеФизлица(ФизЛицо, ТекущаяДата());
			СерияНомер = "" + ДанныеПаспорта.Серия +" №"+ ДанныеПаспорта.Номер;
			Выдан = Формат(ДанныеПаспорта.ДатаВыдачи, "ДЛФ=D") + " " + ДанныеПаспорта.КемВыдан;
		Иначе
			СерияНомер = "";
			Выдан = "";
		КонецЕсли;
		
		Адрес = УправлениеКонтактнойИнформацией.ПолучитьКонтактнуюИнформацияОбъекта(ФизЛицо, Справочники.ВидыКонтактнойИнформации.ДомашнийАдресФизическогоЛица);
        ФИОКратко = ФизическиеЛица.ФамилияИнициалыФизЛица(ФИО);
        
        РезультатОбработки = 	РезультатОбработки + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
        ШаблонСтроки, 
        НомерЗаказчика,
        " "+ФИО,
        " "+СерияНомер,
        " "+Выдан,
        " "+Адрес,
        " "+ФИОКратко);
        
        Если й < ТаблицаЗапроса.Количество()-1 Тогда
            РезультатОбработки = 	РезультатОбработки +  "</w:p><w:p>";  
        КонецЕсли;
    КонецЦикла;
    
    // Откроем теги, т.к. в структуре документа они закрываются сразу за вставкой.
    РезультатОбработки = РезультатОбработки + "<w:r><w:t>";    //"<w:p><w:r><w:t>";</w:p><w:p></w:p><w:p>
    
    Возврат РезультатОбработки;
КонецФункции // НашиРеквизиты()

// Возвращает название работ соответствующего этапа
Функция ПереченьРаботЭтапа(ВладелецФайла, НомерЭтапа) Экспорт
    РезультатОбработки = "";
    
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыРаботПоДоговорам.ПолноеНаименование КАК ВидРабот
		|ИЗ
		|	Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.мВидыРаботФизЛица КАК ВидыРаботПоДоговорам
		|		ПО ЭтапыДоговоров.ВидРабот = ВидыРаботПоДоговорам.Ссылка
		|ГДЕ
		|	НЕ ЭтапыДоговоров.ПометкаУдаления И
		|	ЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0) И
		|	ЭтапыДоговоров.Владелец В(&МассивОбъектов)
        |   И ЭтапыДоговоров.НомерЭтапа = &НомерЭтапа";

	Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
	Запрос.УстановитьПараметр("НомерЭтапа", НомерЭтапа);
	ТаблицаЭтапы = Запрос.Выполнить().Выгрузить();
    Если ТаблицаЭтапы.Количество() > 0 Тогда
        РезультатОбработки = НРег(ТаблицаЭтапы[0].ВидРабот);
    КонецЕсли; 

    Возврат РезультатОбработки;
КонецФункции // ПереченьРаботЭтапа()

// Возвращает наименование вида работ соответствующего этапа для акта
Функция НаименованиеРабот(ВладелецФайла, НомерЭтапа) Экспорт
    РезультатОбработки = "";
    
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыРаботПоДоговорам.ПолноеНаименование КАК ВидРабот,
		|	ЭтапыДоговоров.НомерЭтапа	
		|ИЗ
		|	Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.мВидыРаботФизЛица КАК ВидыРаботПоДоговорам
		|		ПО ЭтапыДоговоров.ВидРабот = ВидыРаботПоДоговорам.Ссылка
		|ГДЕ
		|	НЕ ЭтапыДоговоров.ПометкаУдаления И
		|	ЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0) И
 		|	ЭтапыДоговоров.Владелец В(&МассивОбъектов)
        |   И ЭтапыДоговоров.НомерЭтапа = &НомерЭтапа";

	Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
	Запрос.УстановитьПараметр("НомерЭтапа", НомерЭтапа);
    
	ТаблицаЭтапы = Запрос.Выполнить().Выгрузить();
    Если ТаблицаЭтапы.Количество() > 0 Тогда
        РезультатОбработки = ТаблицаЭтапы[0].ВидРабот;
    КонецЕсли; 
    
    Возврат РезультатОбработки;
КонецФункции // НаименованиеРабот()

// Возвращает условие выполнения работ соответствующего этапа
Функция ПредУсловие(ВладелецФайла, НомерЭтапа) Экспорт
    РезультатОбработки = "";
    
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
        |   ЭтапыДоговоров.ОбъектРабот КАК ОбъектРабот,
        |   ПараметрыВидовРаботПоДоговорамСрезПоследних.ПредУсловие КАК ПредУсловие,
        |   ПараметрыВидовРаботПоДоговорамСрезПоследних.ПостУсловие КАК ПостУсловие,
        |   ПараметрыВидовРаботПоДоговорамСрезПоследних.ВидДней КАК ВидДней,
        |   ОбъектыРаботКонтактнаяИнформация.Город КАК Город,
        |   ВЫБОР
        |       КОГДА ЭтапыДоговоров.ПорядокВыполненияСовместно
        |           ТОГДА ПараметрыВидовРаботПоДоговорамСрезПоследних.ДнейПоГородуСовместно
        |       ИНАЧЕ ПараметрыВидовРаботПоДоговорамСрезПоследних.ДнейПоГороду
        |   КОНЕЦ КАК ДнейПоГороду,
        |   ВЫБОР
        |       КОГДА ЭтапыДоговоров.ПорядокВыполненияСовместно
        |           ТОГДА ПараметрыВидовРаботПоДоговорамСрезПоследних.ДнейПоОбластиСовместно
        |       ИНАЧЕ ПараметрыВидовРаботПоДоговорамСрезПоследних.ДнейПоОбласти
        |   КОНЕЦ КАК ДнейПоОбласти
        |ИЗ
        |   Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
        |       ЛЕВОЕ СОЕДИНЕНИЕ Справочник.мОбъектыРабот.КонтактнаяИнформация КАК ОбъектыРаботКонтактнаяИнформация
        |       ПО ЭтапыДоговоров.ОбъектРабот = ОбъектыРаботКонтактнаяИнформация.Ссылка
        |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыВидовРаботПоДоговорам.СрезПоследних(&ДатаСреза, ) КАК ПараметрыВидовРаботПоДоговорамСрезПоследних
        |       ПО ЭтапыДоговоров.ВидРабот = ПараметрыВидовРаботПоДоговорамСрезПоследних.ВидРабот
        |ГДЕ
        |   НЕ ЭтапыДоговоров.ПометкаУдаления
        |   И ЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0)
        |   И ЭтапыДоговоров.Владелец В(&МассивОбъектов)
        |   И ЭтапыДоговоров.НомерЭтапа = &НомерЭтапа";

	Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
	Запрос.УстановитьПараметр("ДатаСреза", ВладелецФайла.ДатаРегистрации);
	Запрос.УстановитьПараметр("НомерЭтапа", НомерЭтапа);
	ТаблицаЭтапы = Запрос.Выполнить().Выгрузить();
	
    Если ТаблицаЭтапы.Количество() > 0 Тогда
        ОсновнойГород = СокрЛП(Константы.ОсновнойГород.Получить());
        РезультатОбработки = НРег(ТаблицаЭтапы[0].ПредУсловие);
        Если СокрЛП(ТаблицаЭтапы[0].Город) = ОсновнойГород Тогда
            Дней = ТаблицаЭтапы[0].ДнейПоГороду;
        Иначе
            Дней = ТаблицаЭтапы[0].ДнейПоОбласти;
        КонецЕсли;
        ВидДней = ?(ТаблицаЭтапы[0].ВидДней = Перечисления.ВидыДней.Рабочие, " рабочих ", " календарных ");
        РезультатОбработки = РезультатОбработки + " " + Дней + ВидДней + "дней ";
        Если ЗначениеЗаполнено(ТаблицаЭтапы[0].ПостУсловие) Тогда
            РезультатОбработки = РезультатОбработки + " и " + НРег(ТаблицаЭтапы[0].ПостУсловие);
        КонецЕсли; 
    КонецЕсли; 
    
    Возврат РезультатОбработки;
КонецФункции

// возвращает льготандс
Функция ЛьготаНДС(ВладелецФайла) Экспорт
    
    РезультатОбработки = "";
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   ЭтапыДоговоров.ОсвобождениеОтНДС.ДляПечати КАК ЛьготаНДС,
    |   ЭтапыДоговоров.СуммаНДС КАК СуммаНДС
    |ИЗ
    |   Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
    |ГДЕ
    |   НЕ ЭтапыДоговоров.ПометкаУдаления
    |   И ЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0)
    |   И ЭтапыДоговоров.Владелец В(&МассивОбъектов)
    |   И ЭтапыДоговоров.СуммаНДС = 0";
    
    Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
    ТаблицаЭтапы = Запрос.Выполнить().Выгрузить();
    Если ТаблицаЭтапы.Количество() > 0 Тогда
        Если ТаблицаЭтапы[0].СуммаНДС = 0 Тогда
            //РезультатОбработки = ""+Символы.ПС+"Основание освобождения от НДС: "+ТаблицаЭтапы[0].ЛьготаНДС+".";
            РезультатОбработки = ""+Символы.ПС+"В соответствии с "+ТаблицаЭтапы[0].ЛьготаНДС+
            " вышеуказанные работы освобождаются от обложения налогом на добавленную стоимость.";
        КонецЕсли;    
    КонецЕсли; 
    Возврат РезультатОбработки;
КонецФункции // ЛьготаНДС()

// возвращает Стоимость Договора Цифрами
Функция СтоимостьДоговораЦифрами(ВладелецФайла) Экспорт
    
    РезультатОбработки = "";
    
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭтапыДоговоров.СтоимостьСНДС КАК Стоимость
		|ИЗ
		|	Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
		|ГДЕ
		|	НЕ ЭтапыДоговоров.ПометкаУдаления И
		|	ЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0) И
		|	ЭтапыДоговоров.Владелец В(&МассивОбъектов)";

	Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
	ТаблицаЭтапы = Запрос.Выполнить().Выгрузить();
    РезультатОбработки = Формат(ТаблицаЭтапы.Итог("Стоимость"),"ЧДЦ=; ЧРГ=' '") ;

    Возврат РезультатОбработки;
КонецФункции // СтоимостьДоговораЦифрами()

// возвращает Стоимость Договора Цифрами
Функция КоличествоЭкземпляров(ВладелецФайла) Экспорт
    
    РезультатОбработки = "";
    
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
      	|	Корреспонденты.Корреспондент.ФизЛицо КАК ФизЛицо
		|ИЗ
		|	Справочник.ВнутренниеДокументы.Корреспонденты КАК Корреспонденты
		|ГДЕ
		|	Корреспонденты.Ссылка В(&МассивОбъектов)";

	Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();  

    КоличествоЭкземпляров = ТаблицаЗапроса.Количество()+1;
    
    РезультатОбработки = мРаботаСДоговорами.КоличествоЭкземпляровДляДоговоров(КоличествоЭкземпляров);

    Возврат РезультатОбработки;
КонецФункции // КоличествоЭкземпляров()

#Область ДляИсходящихПисем
// возвращает ВОтветНа
Функция ВОтветНа(ВладелецФайла) Экспорт
    
    РезультатОбработки = "№ _______ ад _________";
    
	ВОтветНа = СвязиДокументов.ПолучитьСвязанныйДокумент(
		ВладелецФайла.Ссылка,
		Справочники.ТипыСвязей.ОтправленВОтветНа);
		
    Если ЗначениеЗаполнено(ВОтветНа) Тогда 
        Если ЗначениеЗаполнено(ВОтветНа.РегистрационныйНомер) И ЗначениеЗаполнено(ВОтветНа.ДатаРегистрации) Тогда
            РезультатОбработки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
            НСтр("ru = '№ %1 ад %2'"), ВОтветНа.РегистрационныйНомер, Формат(ВОтветНа.ДатаРегистрации, "ДЛФ=D"));			
        КонецЕсли;	
    КонецЕсли;

    Возврат РезультатОбработки;
КонецФункции // ВОтветНа()
#КонецОбласти 

#Область ДляЗаполненияАктаВыполненныхРаботФизЛиц

// Возвращает единицу измерения соответствующего этапа для акта выполненных работ
Функция ЕдиницаИзмеренияЭтапа(ВладелецФайла, НомерЭтапа) Экспорт
    
    РезультатОбработки = "";
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |	ЭтапыДоговоров.СтоимостьСНДС КАК Стоимость,
    |	ЭтапыДоговоров.КоличествоУчастков КАК КоличествоУчастков,
    |	ПараметрыВидовРаботПоДоговорамСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения
    |ИЗ
    |	Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыВидовРаботПоДоговорам.СрезПоследних(&ДатаСреза, ) КАК ПараметрыВидовРаботПоДоговорамСрезПоследних
    |		ПО ЭтапыДоговоров.ВидРабот = ПараметрыВидовРаботПоДоговорамСрезПоследних.ВидРабот
    |ГДЕ
    |	НЕ ЭтапыДоговоров.ПометкаУдаления И
    |	ЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0) И
    |	ЭтапыДоговоров.Владелец В(&МассивОбъектов)
    |   И ЭтапыДоговоров.НомерЭтапа = &НомерЭтапа";
    
    Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
    Запрос.УстановитьПараметр("ДатаСреза", ВладелецФайла.ДатаРегистрации);
	Запрос.УстановитьПараметр("НомерЭтапа", НомерЭтапа);
    ТаблицаЭтапы = Запрос.Выполнить().Выгрузить();
    РезультатОбработки = ТаблицаЭтапы[0].ЕдиницаИзмерения;
    
    Возврат РезультатОбработки;

КонецФункции // ЕдиницаИзмеренияЭтапа()
	
// Возвращает единицу измерения соответствующего этапа для акта выполненных работ
Функция КоличествоУчастковЭтапа(ВладелецФайла, НомерЭтапа) Экспорт
    
    РезультатОбработки = "";
    
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭтапыДоговоров.КоличествоУчастков КАК КоличествоУчастков
		|ИЗ
		|	Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
		|ГДЕ
		|	НЕ ЭтапыДоговоров.ПометкаУдаления И
		|	ЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0) И
		|	ЭтапыДоговоров.Владелец В(&МассивОбъектов)
        |   И ЭтапыДоговоров.НомерЭтапа = &НомерЭтапа";


	Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
	Запрос.УстановитьПараметр("НомерЭтапа", НомерЭтапа);
	ТаблицаЭтапы = Запрос.Выполнить().Выгрузить();
    РезультатОбработки = ТаблицаЭтапы[0].КоличествоУчастков;
    
    Возврат РезультатОбработки;
КонецФункции // ЕдиницаИзмеренияЭтапа()

// Возвращает цель предоставления земучастка физ лицу
Функция ЦельПредоставленияЗемУчасткаФизЛицу(ВладелецФайла) Экспорт
    
    РезультатОбработки = "";
    
    ИскСвойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Цель предоставления зем. участка физлицам");
    МасСвойств = Новый Массив;
    МасСвойств.Добавить(ИскСвойство);
    ТаблСвойств = УправлениеСвойствами.ПолучитьЗначенияСвойств(ВладелецФайла, Истина, Ложь, МасСвойств); 
    Если ТаблСвойств.Количество() > 0 Тогда
        РезультатОбработки = НРег(ТаблСвойств[0].Значение);
    КонецЕсли; 
    
    Возврат РезультатОбработки;
КонецФункции // ЕдиницаИзмеренияЭтапа()

// Возвращает отдел исполнителя
Функция ОтделИсполнителя(ВладелецФайла, НомерЭтапа) Экспорт
    
    РезультатОбработки = "";
    
	Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |	ВЫБОР
    |		КОГДА ЭтапыДоговоров.Подразделение.Родитель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
    |			ТОГДА ЭтапыДоговоров.Подразделение
    |		КОГДА ЭтапыДоговоров.Подразделение.Родитель.Родитель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
    |			ТОГДА ЭтапыДоговоров.Подразделение.Родитель
    |		КОГДА ЭтапыДоговоров.Подразделение.Родитель.Родитель.Родитель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
    |			ТОГДА ЭтапыДоговоров.Подразделение.Родитель.Родитель
    |		КОГДА ЭтапыДоговоров.Подразделение.Родитель.Родитель.Родитель.Родитель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
    |			ТОГДА ЭтапыДоговоров.Подразделение.Родитель.Родитель.Родитель
    |		КОГДА ЭтапыДоговоров.Подразделение.Родитель.Родитель.Родитель.Родитель.Родитель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
    |			ТОГДА ЭтапыДоговоров.Подразделение.Родитель.Родитель.Родитель.Родитель
    |		ИНАЧЕ ЭтапыДоговоров.Подразделение.Родитель.Родитель.Родитель.Родитель.Родитель
    |	КОНЕЦ КАК Отдел
    |ИЗ
    |	Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
    |ГДЕ
    |	НЕ ЭтапыДоговоров.ПометкаУдаления И
    |	ЭтапыДоговоров.ДатаИсключенИзДоговора=ДатаВремя(1,1,1,0,0,0) И
    |	ЭтапыДоговоров.Владелец В(&МассивОбъектов)
    |   И ЭтапыДоговоров.НомерЭтапа = &НомерЭтапа";

	Запрос.УстановитьПараметр("МассивОбъектов", ВладелецФайла);
	Запрос.УстановитьПараметр("НомерЭтапа", НомерЭтапа);
	ТаблицаЭтапы = Запрос.Выполнить().Выгрузить();
    РезультатОбработки = ТаблицаЭтапы[0].Отдел;
    
    Возврат РезультатОбработки;
КонецФункции // ЕдиницаИзмеренияЭтапа()

#КонецОбласти 

#Область НашиРеквизиты

Функция ПолучитьТипЗнчВладельцаРеквизитов(ВладелецРеквизитов)
	ВидСправочника = "";
	Если ТипЗнч(ВладелецРеквизитов) = Тип("СправочникСсылка.Корреспонденты") Тогда
		ВидСправочника = "Корреспонденты";
	ИначеЕсли ТипЗнч(ВладелецРеквизитов) = Тип("СправочникСсылка.Организации") Тогда
		ВидСправочника = "Организации";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВидСправочника) Тогда
		Сообщить("Не удалось определить тип значения для владельца реквизитов: "+ ВладелецРеквизитов+"!");
	КонецЕсли; 

    Возврат ВидСправочника;
КонецФункции // ПолучитьТипЗнчВладельцаРеквизитов()
 

// Возвращает юридический адрес
Функция ПолучитьЮридическийАдрес(ВладелецРеквизитов) Экспорт
    РезультатОбработки = "";
	ВидСправочника = ПолучитьТипЗнчВладельцаРеквизитов(ВладелецРеквизитов);
	Если ВидСправочника = "Корреспонденты" Тогда
		ВидКИ = Справочники.ВидыКонтактнойИнформации.ЮридическийАдресКорреспондента;
	ИначеЕсли ВидСправочника = "Организации" Тогда
    	ВидКИ = Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации;    
	Иначе
		Сообщить("Юридический адрес не определен для "+ВладелецРеквизитов+"!");
    	Возврат РезультатОбработки;
	КонецЕсли;
	
	РезультатОбработки = УправлениеКонтактнойИнформацией.ПолучитьКонтактнуюИнформацияОбъекта(ВладелецРеквизитов, ВидКИ);    
	
    Возврат РезультатОбработки;

КонецФункции // ПолучитьЮридическийАдрес()
 
// Возвращает расчетный счет для ВладелецРеквизитов
Функция ПолучитьРасчетныйСчет(ВладелецРеквизитов) Экспорт
    РезультатОбработки = "";
	
	ВидСправочника = ПолучитьТипЗнчВладельцаРеквизитов(ВладелецРеквизитов);
	
	Если Не ЗначениеЗаполнено(ВидСправочника) Тогда
    	Возврат РезультатОбработки;
	КонецЕсли; 
	
    Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВладелецРеквизитов.ОсновнойБанковскийСчет.НомерСчета КАК ПолучательСчет,
		|	ВладелецРеквизитов.ОсновнойБанковскийСчет.Банк.Код КАК ПолучательМФО,
		|	ВладелецРеквизитов.ОсновнойБанковскийСчет.Банк.Адрес КАК ПолучательАдрес,
		|	ВладелецРеквизитов.ОсновнойБанковскийСчет.Банк.Наименование КАК ПолучательБанк
		|ИЗ
		|	Справочник."+ВидСправочника+" КАК ВладелецРеквизитов
		|ГДЕ
		|	ВладелецРеквизитов.Ссылка =  &МассивСсылка";

	Запрос.УстановитьПараметр("МассивСсылка", ВладелецРеквизитов);

	Результат = Запрос.Выполнить().Выгрузить();
    
    Если Результат.Количество() > 0 Тогда
        РезультатОбработки = ""+Результат[0].ПолучательСчет+ " " + Результат[0].ПолучательБанк + " " + Результат[0].ПолучательАдрес + ", МФО " + Результат[0].ПолучательМФО;
    КонецЕсли; 
    
    Возврат РезультатОбработки;

КонецФункции // ПолучитьРасчетныйСчет()
	
// Возвращает телефон
Функция ПолучитьТелефон(ВладелецРеквизитов) Экспорт
    РезультатОбработки = "";
    
	ВидСправочника = ПолучитьТипЗнчВладельцаРеквизитов(ВладелецРеквизитов);
	
	Если ВидСправочника = "Корреспонденты" Тогда
		ВидКИ = Справочники.ВидыКонтактнойИнформации.ТелефонКорреспондента;
	ИначеЕсли ВидСправочника = "Организации" Тогда
    	ВидКИ = Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации;    
	Иначе
		Сообщить("Телефон не определен для "+ВладелецРеквизитов+"!");
    	Возврат РезультатОбработки;
	КонецЕсли;
	
	РезультатОбработки = УправлениеКонтактнойИнформацией.ПолучитьКонтактнуюИнформацияОбъекта(ВладелецРеквизитов, ВидКИ);    
	
    Возврат РезультатОбработки;
    
КонецФункции // ПолучитьТелефон()

// Возвращает наш город
Функция ПолучитьГород() Экспорт
    РезультатОбработки = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА М_Брест.Значение
		|			ТОГДА ""г.Брест""
		|		КОГДА М_Витебск.Значение
		|			ТОГДА ""г.Витебск""
		|		КОГДА М_Гомель.Значение
		|			ТОГДА ""г.Гомель""
		|		КОГДА М_Гродно.Значение
		|			ТОГДА ""г.Гродно""
		|		КОГДА М_Минск.Значение
		|			ТОГДА ""г.Минск""
		|		КОГДА М_Могилев.Значение
		|			ТОГДА ""г.Могилев""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК Город
		|ИЗ
		|	Константа.М_Брест КАК М_Брест,
		|	Константа.М_Витебск КАК М_Витебск,
		|	Константа.М_Гомель КАК М_Гомель,
		|	Константа.М_Гродно КАК М_Гродно,
		|	Константа.М_Минск КАК М_Минск,
		|	Константа.М_Могилев КАК М_Могилев";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		РезультатОбработки = ВыборкаДетальныеЗаписи.Город;
	КонецЦикла;
	
    Если Не ЗначениеЗаполнено (РезультатОбработки) Тогда
        РезультатОбработки = "____________";
    КонецЕсли;
    
    Возврат РезультатОбработки;
    
КонецФункции // ПолучитьГород()

Функция ПолучитьНашиРеквизиты(ВладелецФайла = Неопределено) Экспорт
	
	СтруктураРеквизитов = Новый Структура("Наименование, Адрес, Счет, УНП, ОКПО, Телефон, Город",
	"", "", "", "", "", "", ""); 
	
	Если ТипЗнч(ВладелецФайла) = Тип("СправочникСсылка.ВнутренниеДокументы") Тогда
		Если ВладелецФайла.ВидДокумента.Родитель = Справочники.ВидыВнутреннихДокументов.ДоговораЗемлеустроительныхРабот Тогда
			Договор = ВладелецФайла;
		Иначе	
			Договор = мРаботаСДоговорами.ПолучитьДоговорСвязанногоДокумента(ВладелецФайла);
		КонецЕсли; 
	Иначе
		Договор = Неопределено;
	КонецЕсли;
	
	//Если ЗначениеЗаполнено(ВладелецФайла.Организация) Тогда
	//	ВладелецРеквизитов = ВладелецФайла.Организация;
	//Иначе
	//	ВладелецРеквизитов = Константы.М_ОсновнаяОрганизация.Получить();
	//КонецЕсли; 
	
	СтрРекв = мРаботаСДоговорами.ПолучитьНашиРеквизиты(Договор, Ложь);
	Для каждого Рекв Из СтрРекв Цикл
		Если Рекв.Ключ = "НашеНаименование" Тогда
			СтруктураРеквизитов.Наименование = Рекв.Значение;
		ИначеЕсли Рекв.Ключ = "НашАдрес" Тогда
			СтруктураРеквизитов.Адрес = Рекв.Значение;	
		ИначеЕсли Рекв.Ключ = "НашРасчетныйСчет" Тогда
			СтруктураРеквизитов.Счет = Рекв.Значение;	
		ИначеЕсли Рекв.Ключ = "НашУНП" Тогда
			СтруктураРеквизитов.УНП = Рекв.Значение;	
		ИначеЕсли Рекв.Ключ = "НашОКПО" Тогда
			СтруктураРеквизитов.ОКПО = Рекв.Значение;	
		ИначеЕсли Рекв.Ключ = "НашТелефон" Тогда
			СтруктураРеквизитов.Телефон = Рекв.Значение;	
		ИначеЕсли Рекв.Ключ = "НашГород" Тогда
			СтруктураРеквизитов.Город = Рекв.Значение;	
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат СтруктураРеквизитов;
	
	//Сообщить("Не удалось получить наши реквизиты для: "+ВладелецФайла);
	
	//ВладелецРеквизитов = ПолучитьВладельцаРеквизитов(ВладелецФайла);
	//
	//ВидСправочника = ПолучитьТипЗнчВладельцаРеквизитов(ВладелецРеквизитов);
	//
	//Если ВидСправочника = "Корреспонденты" Тогда
	//	СтруктураРеквизитов = ПолучитьНашиРеквизитыПоКорреспонденту(ВладелецРеквизитов);
	//ИначеЕсли ВидСправочника = "Организации" Тогда
	//	СтруктураРеквизитов = ПолучитьНашиРеквизитыПоОрганизации(ВладелецРеквизитов);    
	//Иначе
	//	Сообщить("Реквизиты не определены для "+ВладелецРеквизитов+"!");
	//	Возврат СтруктураРеквизитов;
	//КонецЕсли;
	
	//Возврат СтруктураРеквизитов;
КонецФункции

Функция ПолучитьНашиРеквизитыПоКорреспонденту(ВладелецРеквизитов)
	СтруктураРеквизитов = Новый Структура("Наименование, Адрес, Счет, УНП, ОКПО, Телефон, Город",
	"", "", "", "", "", "", ""); 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА М_Брест.Значение
		|			ТОГДА ""г.Брест""
		|		КОГДА М_Витебск.Значение
		|			ТОГДА ""г.Витебск""
		|		КОГДА М_Гомель.Значение
		|			ТОГДА ""г.Гомель""
		|		КОГДА М_Гродно.Значение
		|			ТОГДА ""г.Гродно""
		|		КОГДА М_Минск.Значение
		|			ТОГДА ""г.Минск""
		|		КОГДА М_Могилев.Значение
		|			ТОГДА ""г.Могилев""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК Город
		|ПОМЕСТИТЬ Города
		|ИЗ
		|	Константа.М_Брест КАК М_Брест,
		|	Константа.М_Витебск КАК М_Витебск,
		|	Константа.М_Гомель КАК М_Гомель,
		|	Константа.М_Гродно КАК М_Гродно,
		|	Константа.М_Минск КАК М_Минск,
		|	Константа.М_Могилев КАК М_Могилев
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Корреспонденты.ПолноеНаименование,
		|	Корреспонденты.ИНН,
		|	Корреспонденты.КодПоОКПО
		|ПОМЕСТИТЬ НашеНаименование
		|ИЗ
		|	Константа.НашаОрганизация КАК НашаОрганизация
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Корреспонденты КАК Корреспонденты
		|		ПО НашаОрганизация.Значение = Корреспонденты.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорреспондентыКонтактнаяИнформация.Представление КАК Адрес
		|ПОМЕСТИТЬ ЮрАдрес
		|ИЗ
		|	Константа.НашаОрганизация КАК НашаОрганизация
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
		|		ПО НашаОрганизация.Значение = КорреспондентыКонтактнаяИнформация.Ссылка
		|ГДЕ
		|	КорреспондентыКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
		|	И КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮридическийАдресКорреспондента)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорреспондентыКонтактнаяИнформация.Представление КАК Телефон
		|ПОМЕСТИТЬ НашТелефон
		|ИЗ
		|	Константа.НашаОрганизация КАК НашаОрганизация
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Корреспонденты.КонтактнаяИнформация КАК КорреспондентыКонтактнаяИнформация
		|		ПО НашаОрганизация.Значение = КорреспондентыКонтактнаяИнформация.Ссылка
		|ГДЕ
		|	КорреспондентыКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
		|	И КорреспондентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКорреспондента)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Корреспонденты.ОсновнойБанковскийСчет.НомерСчета КАК ПолучательСчет,
		|	Корреспонденты.ОсновнойБанковскийСчет.Банк.Код КАК ПолучательМФО,
		|	Корреспонденты.ОсновнойБанковскийСчет.Банк.Адрес КАК ПолучательАдрес,
		|	Корреспонденты.ОсновнойБанковскийСчет.Банк.Наименование КАК ПолучательБанк
		|ПОМЕСТИТЬ НашСчет
		|ИЗ
		|	Константа.НашаОрганизация КАК НашаОрганизация
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Корреспонденты КАК Корреспонденты
		|		ПО НашаОрганизация.Значение = Корреспонденты.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Города.Город КАК Город,
		|	НашеНаименование.ПолноеНаименование КАК Наименование,
		|	ЮрАдрес.Адрес КАК Адрес,
		|	НашТелефон.Телефон КАК Телефон,
		|	"""" + НашСчет.ПолучательСчет + "" "" + НашСчет.ПолучательБанк + "" "" + НашСчет.ПолучательАдрес + "", МФО "" + НашСчет.ПолучательМФО КАК Счет,
		|	НашеНаименование.ИНН КАК УНП,
		|	НашеНаименование.КодПоОКПО КАК ОКПО
		|ИЗ
		|	Города КАК Города,
		|	НашеНаименование КАК НашеНаименование,
		|	НашТелефон КАК НашТелефон,
		|	НашСчет КАК НашСчет,
		|	ЮрАдрес КАК ЮрАдрес";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураРеквизитов, Выборка);
	КонецЕсли;
    Возврат СтруктураРеквизитов;
КонецФункции // ПолучитьНашиРеквизитыПоКорреспонденту()

Функция ПолучитьНашиРеквизитыПоОрганизации(ВладелецРеквизитов)
	СтруктураРеквизитов = Новый Структура("Наименование, Адрес, Счет, УНП, ОКПО, Телефон, Город",
	"", "", "", "", "", "", ""); 

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА М_Брест.Значение
		|			ТОГДА ""г.Брест""
		|		КОГДА М_Витебск.Значение
		|			ТОГДА ""г.Витебск""
		|		КОГДА М_Гомель.Значение
		|			ТОГДА ""г.Гомель""
		|		КОГДА М_Гродно.Значение
		|			ТОГДА ""г.Гродно""
		|		КОГДА М_Минск.Значение
		|			ТОГДА ""г.Минск""
		|		КОГДА М_Могилев.Значение
		|			ТОГДА ""г.Могилев""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК Город
		|ПОМЕСТИТЬ Города
		|ИЗ
		|	Константа.М_Брест КАК М_Брест,
		|	Константа.М_Витебск КАК М_Витебск,
		|	Константа.М_Гомель КАК М_Гомель,
		|	Константа.М_Гродно КАК М_Гродно,
		|	Константа.М_Минск КАК М_Минск,
		|	Константа.М_Могилев КАК М_Могилев
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Организации.ПолноеНаименование КАК ПолноеНаименование,
		|	Организации.ИНН КАК ИНН,
		|	Организации.КодПоОКПО КАК КодПоОКПО,
		|	Организации.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ НашеНаименование
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка = &ВладелецРеквизитов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОрганизацииКонтактнаяИнформация.Представление КАК Адрес,
		|	ОрганизацииКонтактнаяИнформация.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ЮрАдрес
		|ИЗ
		|	Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
		|ГДЕ
		|	ОрганизацииКонтактнаяИнформация.Ссылка = &ВладелецРеквизитов
		|	И ОрганизацииКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
		|	И ОрганизацииКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОрганизацииКонтактнаяИнформация.Представление КАК Телефон,
		|	ОрганизацииКонтактнаяИнформация.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ НашТелефон
		|ИЗ
		|	Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
		|ГДЕ
		|	ОрганизацииКонтактнаяИнформация.Ссылка = &ВладелецРеквизитов
		|	И ОрганизацииКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
		|	И ОрганизацииКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Организации.ОсновнойБанковскийСчет.НомерСчета КАК ПолучательСчет,
		|	Организации.ОсновнойБанковскийСчет.Банк.Код КАК ПолучательМФО,
		|	Организации.ОсновнойБанковскийСчет.Банк.Адрес КАК ПолучательАдрес,
		|	Организации.ОсновнойБанковскийСчет.Банк.Наименование КАК ПолучательБанк,
		|	Организации.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ НашСчет
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Ссылка = &ВладелецРеквизитов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Города.Город КАК Город,
		|	НашеНаименование.ПолноеНаименование КАК Наименование,
		|	ЮрАдрес.Адрес КАК Адрес,
		|	НашТелефон.Телефон КАК Телефон,
		|	"""" + НашСчет.ПолучательСчет + "" "" + НашСчет.ПолучательБанк + "" "" + НашСчет.ПолучательАдрес + "", МФО "" + НашСчет.ПолучательМФО КАК Счет,
		|	НашеНаименование.ИНН КАК УНП,
		|	НашеНаименование.КодПоОКПО КАК ОКПО
		|ИЗ
		|	Города КАК Города,
		|	Справочник.Организации КАК Организации
		|		ЛЕВОЕ СОЕДИНЕНИЕ НашеНаименование КАК НашеНаименование
		|		ПО (НашеНаименование.Ссылка = Организации.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ НашТелефон КАК НашТелефон
		|		ПО (НашТелефон.Ссылка = Организации.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ НашСчет КАК НашСчет
		|		ПО (НашСчет.Ссылка = Организации.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЮрАдрес КАК ЮрАдрес
		|		ПО (ЮрАдрес.Ссылка = Организации.Ссылка)
		|ГДЕ
		|	Организации.Ссылка = &ВладелецРеквизитов";
		
	Запрос.УстановитьПараметр("ВладелецРеквизитов", ВладелецРеквизитов);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураРеквизитов, Выборка);
	КонецЕсли;
    Возврат СтруктураРеквизитов;
КонецФункции // ПолучитьНашиРеквизитыПоОрганизации()
 
#КонецОбласти 	