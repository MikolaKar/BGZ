// Возвращает массив ссылок на файлы
// или Неопределено
Процедура ПолучитьСписокФайлов(Объект, МассивФайлов) Экспорт
	
	// РаботаСФайлами
	РаботаСФайламиВызовСервера.ПолучитьПрикрепленныеФайлыКОбъекту(Объект, МассивФайлов);
	// Конец РаботаСФайлами
	
КонецПроцедуры

// Возвращает содержание переданного объекта
// Параметры
// Объект - объект, представление которого надо сформировать
// Возвращает содержание в виде HTML или MXL документа
Процедура ПолучитьСодержание(Объект, Строка) Экспорт
	
	Перем КоллекцияПечатныхФорм, ПараметрыВывода;
	
	Если ТипЗнч(Объект) = Тип("СправочникСсылка.ВходящиеДокументы") Тогда
		
		ПараметрыПечати = Новый Структура;
		ПараметрыПечати.Вставить("РеквизитыКарточки", 	Истина);
		ПараметрыПечати.Вставить("ПриложенныеФайлы", 	Истина);
		ПараметрыПечати.Вставить("ВерсииФайлов", 		Ложь);
		ПараметрыПечати.Вставить("ЭП", 				Ложь);
		ПараметрыПечати.Вставить("СвязанныеДокументы", 	Ложь);
		ПараметрыПечати.Вставить("ЖурналПередачи", 		Ложь);
		ПараметрыПечати.Вставить("Рассмотрение", 		Ложь);
		ПараметрыПечати.Вставить("Исполнение", 			Ложь);
		ПараметрыПечати.Вставить("Ознакомление", 		Ложь);
		ПараметрыПечати.Вставить("Поручения", 			Ложь);
		ПараметрыПечати.Вставить("Задачи", 				Ложь);
		ПараметрыПечати.Вставить("ДопРеквизиты",		Истина);
		ПараметрыПечати.Вставить("СоставКомплекта",		Истина);
		ПараметрыПечати.Вставить("Резолюции",		Истина);
		
		УправлениеПечатью.СформироватьПечатныеФормы(
			"Справочник.ВходящиеДокументы", 
			"Карточка", 
			Объект,
			ПараметрыПечати,
			КоллекцияПечатныхФорм, 
			Неопределено, 
			ПараметрыВывода);
		
		Если КоллекцияПечатныхФорм.Количество() > 0 Тогда
			Если КоллекцияПечатныхФорм[0].ТабличныйДокумент <> Неопределено Тогда
				Строка = КоллекцияПечатныхФорм[0].ТабличныйДокумент;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.ИсходящиеДокументы") Тогда
		
		ПараметрыПечати = Новый Структура;
		ПараметрыПечати.Вставить("РеквизитыКарточки", 	Истина);
		ПараметрыПечати.Вставить("ПриложенныеФайлы", 	Истина);
		ПараметрыПечати.Вставить("ВерсииФайлов", 		Ложь);
		ПараметрыПечати.Вставить("ЭП", 				Ложь);
		ПараметрыПечати.Вставить("СвязанныеДокументы", 	Ложь);
		ПараметрыПечати.Вставить("ЖурналПередачи", 		Ложь);
	 	ПараметрыПечати.Вставить("Согласование", 		Истина);
		ПараметрыПечати.Вставить("Утверждение", 		Истина);
		ПараметрыПечати.Вставить("Ознакомление", 		Ложь);
		ПараметрыПечати.Вставить("Поручения", 			Ложь);
		ПараметрыПечати.Вставить("Задачи", 				Ложь);
		ПараметрыПечати.Вставить("ДопРеквизиты",		Истина);
		ПараметрыПечати.Вставить("СоставКомплекта",		Истина);
		ПараметрыПечати.Вставить("Резолюции",		Истина);
		
		УправлениеПечатью.СформироватьПечатныеФормы(
			"Справочник.ИсходящиеДокументы", 
			"Карточка", 
			Объект,
			ПараметрыПечати,
			КоллекцияПечатныхФорм, 
			Неопределено, 
			ПараметрыВывода);
		
		Если КоллекцияПечатныхФорм.Количество() > 0 Тогда
			Если КоллекцияПечатныхФорм[0].ТабличныйДокумент <> Неопределено Тогда
				Строка = КоллекцияПечатныхФорм[0].ТабличныйДокумент;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.ВнутренниеДокументы") Тогда
		
		ПараметрыПечати = Новый Структура;
		ПараметрыПечати.Вставить("РеквизитыКарточки", 	Истина);
		ПараметрыПечати.Вставить("ПриложенныеФайлы", 	Истина);
		ПараметрыПечати.Вставить("ВерсииФайлов", 		Ложь);
		ПараметрыПечати.Вставить("ЭП", 				Ложь);
		ПараметрыПечати.Вставить("СвязанныеДокументы", 	Ложь);
		ПараметрыПечати.Вставить("ЖурналПередачи", 		Ложь);
	 	ПараметрыПечати.Вставить("Согласование", 		Истина);
		ПараметрыПечати.Вставить("Утверждение", 		Истина);
		ПараметрыПечати.Вставить("Рассмотрение", 		Истина);
		ПараметрыПечати.Вставить("Исполнение", 			Ложь);
		ПараметрыПечати.Вставить("Ознакомление", 		Ложь);
		ПараметрыПечати.Вставить("Поручения", 			Ложь);
		ПараметрыПечати.Вставить("Задачи", 				Ложь);
		ПараметрыПечати.Вставить("ДопРеквизиты",		Истина);
		ПараметрыПечати.Вставить("СоставКомплекта",		Истина);
		ПараметрыПечати.Вставить("ИсторияСрокаДействия",Ложь);
		ПараметрыПечати.Вставить("Резолюции",		Истина);
		
		УправлениеПечатью.СформироватьПечатныеФормы(
			"Справочник.ВнутренниеДокументы", 
			"Карточка", 
			Объект,
			ПараметрыПечати,
			КоллекцияПечатныхФорм, 
			Неопределено, 
			ПараметрыВывода);
		
		Если КоллекцияПечатныхФорм.Количество() > 0 Тогда
			Если КоллекцияПечатныхФорм[0].ТабличныйДокумент <> Неопределено Тогда
				Строка = КоллекцияПечатныхФорм[0].ТабличныйДокумент;
			КонецЕсли;
		КонецЕсли;	
		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Файлы") Тогда	
		
		HTMLТекст = "<html><body>";
		
		HTMLТекст = HTMLТекст + "<p><STRONG>" + Строка(Объект) + "</STRONG></p>";
		HTMLТекст = HTMLТекст + "<p>";
		
		// Шапка
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Описание:'"), 	Объект.Описание);
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Создан:'"), 	Объект.ДатаСоздания);
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Автор:'"), 		Объект.Автор);
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Изменен:'"), 	Объект.ТекущаяВерсияДатаМодификацииФайла);
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Изменил:'"), 	Объект.ТекущаяВерсияАвтор);
		
		HTMLТекст = HTMLТекст + "</p>";
		
		HTMLТекст = HTMLТекст + "</body></html>";
		
		Строка = HTMLТекст;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.Корреспонденты") Тогда		
		
		HTMLТекст = "<html><body>";
		
		HTMLТекст = HTMLТекст + "<p><STRONG>" + Строка(Объект) + "</STRONG></p>";
		HTMLТекст = HTMLТекст + "<p>";
		
		// Шапка
		//МиСофт+
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Вид корреспондента:'"),  Объект.ЮрФизЛицо);
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Полное наименование:'"), Объект.ПолноеНаименование);
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'УНП:'"), 				 Объект.ИНН);
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'КПП:'"), 				 Объект.КПП);
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Код по ОКПО:'"), 		 Объект.КодПоОКПО);
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Комментарий:'"), 		 Объект.Комментарий);
		//МиСофт-
		
		HTMLТекст = HTMLТекст + "</p>";
		
		// Список контактов
		HTMLТекст = HTMLТекст + "<TABLE border=1 >";
		HTMLТекст = HTMLТекст + "<TBODY>";
		
		// Формируем заголовок	
		HTMLТекст = HTMLТекст + "<TR>";
		HTMLТекст = HTMLТекст + "<TD colspan=0 rowspan=0><STRONG>";
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Вид'"));
		HTMLТекст = HTMLТекст + "</STRONG></TD>";
		HTMLТекст = HTMLТекст + "<TD><STRONG>";
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Контактная информация'"));
		HTMLТекст = HTMLТекст + "</STRONG></TD>";
		HTMLТекст = HTMLТекст + "<TD><STRONG>";
		HTMLТекст = HTMLТекст + "</TR>";
		
		Для каждого Эл Из Объект.КонтактнаяИнформация Цикл
			HTMLТекст = HTMLТекст + "<TR>";
			HTMLТекст = HTMLТекст + "<TD>";
			HTMLТекст = HTMLТекст + Строка(Эл.Вид);
			HTMLТекст = HTMLТекст + "</TD>";
			HTMLТекст = HTMLТекст + "<TD>";
			HTMLТекст = HTMLТекст + Строка(Эл.Представление);
			HTMLТекст = HTMLТекст + "</TD>";
			HTMLТекст = HTMLТекст + "</TR>";
		КонецЦикла;
		
		HTMLТекст = HTMLТекст + "</TBODY>";
		HTMLТекст = HTMLТекст + "</TABLE>";
		
		HTMLТекст = HTMLТекст + "</body></html>";
		
		Строка = HTMLТекст;
		
	Иначе	
		
		ВызватьИсключение НСтр("ru = 'Ошибка при получении содержания. Неизвестный тип объекта: '") + ТипЗнч(Объект);
		
	КонецЕсли;
	
КонецПроцедуры

// Создает и стартует внешний бизнес-процесс по указанной задаче
Функция СтартоватьВнешнийБизнесПроцесс(Задача) Экспорт
	
	// Следует переопределить эту функцию, если в качестве внешнего 
	// нужно использовать не бизнес-процесс "Задание", а другой.
	
	Возврат Ложь;
	
КонецФункции	

// Помечает задачу-источник указанного бизнес-процесса как выполненную
Функция ВыполнитьЗадачуИсточник(БизнесПроцесс) Экспорт
	
	Возврат Ложь;
	
КонецФункции	

// Проверяет является ли задача внешней
// Если проверка выполнена, то возвращает Истина или Ложь
// Иначе возвращает Неопределено
Функция ЭтоВнешняяЗадача(ЗадачаСсылка) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьВнешниеЗадачи") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Проверяем бизнес-процесс
	БизнесПроцесс = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ЗадачаСсылка, "БизнесПроцесс");
	Если ТипЗнч(БизнесПроцесс) = Тип("БизнесПроцессСсылка.Поручение") Тогда
		
		ВнешнееЗадание = ОбщегоНазначения.ПолучитьЗначениеРеквизита(БизнесПроцесс, "ВнешнееПоручение");
		Если ВнешнееЗадание Тогда
			Возврат Истина;
		КонецЕсли;	
		
	КонецЕсли;	
	
	// Проверяем роль исполнителя
	Роль = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ЗадачаСсылка, "РольИсполнителя");
	
	Если Роль <> Неопределено И Роль.ВнешняяРоль = Истина Тогда
		Возврат Истина;
	КонецЕсли;	
	
	Возврат Ложь;
	
КонецФункции	

Процедура ДобавитьПодпись(HTMLТекст, Подпись)
	
	HTMLТекст = HTMLТекст + "<FONT color=#536ac2>";
	HTMLТекст = HTMLТекст + Подпись;
	HTMLТекст = HTMLТекст + "</FONT>";
	
КонецПроцедуры

Процедура ДобавитьЗначение(HTMLТекст, Значение)
	
	HTMLТекст = HTMLТекст + Значение;
	
КонецПроцедуры

Процедура ДобавитьРеквизит(HTMLТекст, Подпись, Значение)
	
	ДобавитьПодпись(HTMLТекст, Подпись + " ");
	ДобавитьЗначение(HTMLТекст, Значение); 
	HTMLТекст = HTMLТекст + "<br>";
	
КонецПроцедуры
