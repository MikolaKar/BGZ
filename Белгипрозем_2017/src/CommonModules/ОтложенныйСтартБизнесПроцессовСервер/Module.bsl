////////////////////////////////////////////////////////////////////////////////
// ОтложенныйСтартБизнесПроцессовСервер: в модуле содержатся процедуры для работы
// с механизмом отложенного старта бизнес-процессов на сервере.

////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Записывает в настройку отложенного старта признак готовности процесса к отложенному старту
// и перезаписывает сам бизнес-процесс. Процедура предназначена для вызова из процедур
// ОтложенныйСтарт модуля объекта бизнес-процесса. В случае если процесса уже стартован или у
// процесса отсутствует настройка отложенного старта будет вызвано исключение.
//
// Параметры:
//   - БизнесПроцесс - БизнесПроцессОбъект - процесс, который следует запустить отложенно.
//
Процедура СтартоватьПроцессОтложенно(БизнесПроцесс) Экспорт
	
	Если БизнесПроцесс.Стартован Тогда
		ОписаниеОшибки = 
			НСтр("ru = 'Процесс уже стартован.'");
		ВызватьИсключение ОписаниеОшибки;
	КонецЕсли;
	
	Настройка = 
		РегистрыСведений.НастройкаОтложенногоСтартаБизнесПроцессов.ПолучитьНастройкуПроцесса(
			БизнесПроцесс.Ссылка);
	
	Если НЕ ЗначениеЗаполнено(Настройка) Тогда
		ОписаниеОшибки = 
			НСтр("ru = 'Нельзя стартовать процесс отложенно без настройки отложенного старта.'");
		ВызватьИсключение ОписаниеОшибки;
	КонецЕсли;
	
	РегистрыСведений.НастройкаОтложенногоСтартаБизнесПроцессов.ЗаписатьНастройку(
		Настройка.БизнесПроцесс,
		Настройка.ДатаОтложенногоСтарта,
		Перечисления.СостоянияОтложенныхПроцессов.ГотовКСтарту);
		
	БизнесПроцесс.Записать();
	
КонецПроцедуры

// Отключает действие настройки отложенного старта, сбрасывая признак готовности к отложенному
// старту и перезаписывает сам бизнес-процесс. Процедура предназначена для вызова из процедур
// ОтключитьОтложенныйСтарт модуля объекта бизнес-процесса. В случае если процесса уже стартован или у
// процесса отсутствует настройка отложенного старта будет вызвано исключение.
//
// Параметры:
//   - БизнесПроцесс - БизнесПроцессОбъект - процесс, который следует запустить отложенно.
//
Процедура ОтключитьОтложенныйСтарт(БизнесПроцесс) Экспорт
	
	Если БизнесПроцесс.Стартован Тогда
		ОписаниеОшибки = 
			НСтр("ru = 'Нельзя отключить отложенный старт по уже стартованному процессу.'");
		ВызватьИсключение ОписаниеОшибки;
	КонецЕсли;
	
	Настройка = 
		РегистрыСведений.НастройкаОтложенногоСтартаБизнесПроцессов.ПолучитьНастройкуПроцесса(
			БизнесПроцесс.Ссылка);
	
	Если НЕ ЗначениеЗаполнено(Настройка) Тогда
		ОписаниеОшибки = 
			НСтр("ru = 'Нельзя отключить отложенный старт по процессу без настроек.'");
		ВызватьИсключение ОписаниеОшибки;
	КонецЕсли;
	
	РегистрыСведений.НастройкаОтложенногоСтартаБизнесПроцессов.ЗаписатьНастройку(
		Настройка.БизнесПроцесс,
		Настройка.ДатаОтложенногоСтарта,
		Перечисления.СостоянияОтложенныхПроцессов.ПустаяСсылка());
		
	БизнесПроцесс.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обработчик регламентного задания СтартОтложенныхПроцессов
//
Процедура СтартОтложенныхПроцессов() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкаОтложенногоСтартаБизнесПроцессов.БизнесПроцесс,
		|	НастройкаОтложенногоСтартаБизнесПроцессов.ДатаОтложенногоСтарта,
		|	НастройкаОтложенногоСтартаБизнесПроцессов.Состояние,
		|	НастройкаОтложенногоСтартаБизнесПроцессов.БизнесПроцесс.Автор КАК Автор
		|ИЗ
		|	РегистрСведений.НастройкаОтложенногоСтартаБизнесПроцессов КАК НастройкаОтложенногоСтартаБизнесПроцессов
		|ГДЕ
		|	НастройкаОтложенногоСтартаБизнесПроцессов.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОтложенныхПроцессов.ГотовКСтарту)
		|	И НастройкаОтложенногоСтартаБизнесПроцессов.ДатаОтложенногоСтарта <= &ТекущаяДата
		|	И НастройкаОтложенногоСтартаБизнесПроцессов.БизнесПроцесс.ПометкаУдаления = ЛОЖЬ";
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	Выборка  = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			БизнесПроцессОбъект = Выборка.БизнесПроцесс.ПолучитьОбъект();
			БизнесПроцессОбъект.Заблокировать();
			БизнесПроцессОбъект.Старт();
			
			РегистрыСведений.НастройкаОтложенногоСтартаБизнесПроцессов.ЗаписатьНастройку(
				Выборка.БизнесПроцесс,
				Выборка.ДатаОтложенногоСтарта,
				Перечисления.СостоянияОтложенныхПроцессов.Стартован);
			
			РазблокироватьДанныеДляРедактирования(Выборка.БизнесПроцесс);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			
			ОписаниеОшибки = "";
			
			Пока Истина Цикл
				
				ОписаниеОшибки = ИнформацияОбОшибке.Описание;
				
				Если ИнформацияОбОшибке.Причина = Неопределено Тогда
					Прервать;
				КонецЕсли;
				
				ИнформацияОбОшибке = ИнформацияОбОшибке.Причина;
				                  
			КонецЦикла;
			
			Описание = НСтр("ru = 'Во время отложенного старта этого процесса произошла ошибка:
				|%1
				|Возможно у одного из исполнителей недостаточно прав на предмет(ы) процесса.
				|Попробуйте запустить процесс вручную, а не отложенно.'");
				
			Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				Описание,
				ОписаниеОшибки);
			
			РегистрыСведений.НастройкаОтложенногоСтартаБизнесПроцессов.ЗаписатьНастройку(
				Выборка.БизнесПроцесс,
				Выборка.ДатаОтложенногоСтарта,
				Перечисления.СостоянияОтложенныхПроцессов.СтартОтменен,
				Описание);
				
			РаботаСУведомлениямиПрограммыСервер.ДобавитьУведомление(
				ТекущаяДатаСеанса(),
				Описание,
				Перечисления.ВидыУведомленийПрограммы.Ошибка,
				Выборка.Автор,
				Выборка.БизнесПроцесс);
				
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет реквизит НастройкаОтложенногоСтарта в карточке процесса
//
// Параметры:
//   - Форма - УправляемаяФорма - карточка процесса.
//
Процедура ЗаполнитьРеквизитНастройкаОтложенногоСтартаВФормеПроцесса(Форма) Экспорт
	
	Если Форма.Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Форма.НастройкаОтложенногоСтарта = 
		РегистрыСведений.НастройкаОтложенногоСтартаБизнесПроцессов.ПолучитьНастройкуПроцесса(
			Форма.Объект.Ссылка);
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////
// Работа с комплексными процессами

// Выбирает из списка шаблонов процессов шаблоны с настройками отложенного старта.
//
// Параметры:
//   - Шаблоны - СписокЗначений - с шаблонами процессов.
//                  - СправочникСсылка.ШаблоныИсполнения
//                  - СправочникСсылка.ШаблоныКомплексныхБизнесПроцессов
//                  - СправочникСсылка.ШаблоныОзнакомления
//                  - СправочникСсылка.ШаблоныПоручения
//                  - СправочникСсылка.ШаблоныПриглашения
//                  - СправочникСсылка.ШаблоныРассмотрения
//                  - СправочникСсылка.ШаблоныРегистрации
//                  - СправочникСсылка.ШаблоныСогласования
//                  - СправочникСсылка.ШаблоныСоставныхБизнесПроцессов
//                  - СправочникСсылка.ШаблоныУтверждения
//
// Возвращаемое значение:
//   - СписокЗначений
//
Функция СписокШаблоновСНастройкамиОтложенногоСтарта(Шаблоны) Экспорт
	
	Результат = Новый СписокЗначений;
	
	СписокШаблонов = Новый СписокЗначений;
	СписокШаблонов.Добавить("ШаблоныИсполнения");
	СписокШаблонов.Добавить("ШаблоныКомплексныхБизнесПроцессов");
	СписокШаблонов.Добавить("ШаблоныОзнакомления");
	СписокШаблонов.Добавить("ШаблоныПоручения");
	СписокШаблонов.Добавить("ШаблоныПриглашения");
	СписокШаблонов.Добавить("ШаблоныРассмотрения");
	СписокШаблонов.Добавить("ШаблоныРегистрации");
	СписокШаблонов.Добавить("ШаблоныСогласования");
	СписокШаблонов.Добавить("ШаблоныСоставныхБизнесПроцессов");
	СписокШаблонов.Добавить("ШаблоныУтверждения");
		
	ТекстОбъединить = "";
	ТекстЗапроса = "";
	
	УстановитьПривилегированныйРежим(Истина);
		
	Для Каждого ШаблонПодпроцесса Из СписокШаблонов Цикл
		
		ТекстЗапросаПоТекущемуШаблону = 
			"ВЫБРАТЬ
			|	ШаблоныБП.Ссылка
			|ИЗ
			|	Справочник.%1 КАК ШаблоныБП
			|ГДЕ
			|	ШаблоныБП.Ссылка В(&Шаблоны)
			|	И ШаблоныБП.СрокОтложенногоСтарта > 0";
		
		ТекстЗапросаПоТекущемуШаблону = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстЗапросаПоТекущемуШаблону,
				ШаблонПодпроцесса.Значение);
		
		ТекстЗапроса = ТекстЗапроса + ТекстОбъединить + ТекстЗапросаПоТекущемуШаблону;
		
		ТекстОбъединить = "
			|
			|ОБЪЕДИНИТЬ
			|";
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Шаблоны", Шаблоны);
	ТаблицаШаблонов = Запрос.Выполнить().Выгрузить();
	
	Результат.ЗагрузитьЗначения(ТаблицаШаблонов.ВыгрузитьКолонку("Ссылка"));
	
	Возврат Результат;
	
КонецФункции

//////////////////////////////////////////////////////////////////
// Работа с шаблонами процессов

// Процедура предназначена для вызова из процедуры ПриЗаписи
// всех бизнес-процессов, за исключением РешениеВопросовВыполненияЗадач объектов.
// В процедуре производится заполнение настроек отложенного старта для БизнесПроцесса
// на основе шаблона этого бизнес-процесса.
//
// Параметры:
//   - БизнесПроцесс - БизнесПроцессОбъект
//   - Отказ - Булево - ссылка на параметр Отказ в процедуре ПриЗаписи модуля объекта БП.
//
Процедура ПроцессПриЗаписи(БизнесПроцесс, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ЗначениеЗаполнено(БизнесПроцесс.Шаблон) Тогда
		ШаблонДляОтложенногоСтарта = БизнесПроцесс.Шаблон;
	ИначеЕсли БизнесПроцесс.ДополнительныеСвойства.Свойство("ШаблонДляОтложенногоСтарта") Тогда
		ШаблонДляОтложенногоСтарта = БизнесПроцесс.ДополнительныеСвойства.ШаблонДляОтложенногоСтарта;
	Иначе
		ШаблонДляОтложенногоСтарта = Неопределено;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ШаблонДляОтложенногоСтарта) Тогда
		Возврат;
	КонецЕсли;
		
	НастройкаОтложенногоСтарта = 
		РегистрыСведений.НастройкаОтложенногоСтартаБизнесПроцессов.ПолучитьНастройкуПроцесса(
			БизнесПроцесс.Ссылка);
	
	Если ЗначениеЗаполнено(НастройкаОтложенногоСтарта) Тогда
		Возврат;
	КонецЕсли;
		
	РеквизитыШаблона = 
		ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			ШаблонДляОтложенногоСтарта, "СрокОтложенногоСтарта");
	
	Если ЗначениеЗаполнено(РеквизитыШаблона)
		И РеквизитыШаблона.СрокОтложенногоСтарта > 0 Тогда
		
		ДатаОтложенногоСтарта = ТекущаяДатаСеанса() + РеквизитыШаблона.СрокОтложенногоСтарта;
		
		РегистрыСведений.НастройкаОтложенногоСтартаБизнесПроцессов.ЗаписатьНастройку(
		БизнесПроцесс.Ссылка,
		ДатаОтложенногоСтарта,
		Перечисления.СостоянияОтложенныхПроцессов.ПустаяСсылка());
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти



