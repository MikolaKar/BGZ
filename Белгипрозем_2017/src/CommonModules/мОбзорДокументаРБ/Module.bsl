
// Выводит картинки состояний в карточке документа
Процедура ВывестиСтрокуСостояний(Форма) Экспорт 
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	КешИнформации = РегистрыСведений.КешИнформацииОбОбъектах.СоздатьМенеджерЗаписи();
	КешИнформации.Объект = Объект.Ссылка;
	КешИнформации.Прочитать();
	
	// Картинка Взаимодействие
	Элементы.КартинкаВзаимодействие.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьБизнесПроцессыИЗадачи");
	Если КешИнформации.ЕстьЗадачи Тогда 
		Форма.СтатусВзаимодействие = 1;
		Элементы.КартинкаВзаимодействие.Подсказка = НСтр("ru = 'Есть выполняющиеся задачи'");
	Иначе	
		Форма.СтатусВзаимодействие = 0;
		Элементы.КартинкаВзаимодействие.Подсказка = НСтр("ru = 'Нет выполняющихся задач'");
	КонецЕсли;	
	
	// Картинка Категории
	Элементы.КартинкаКатегории.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьКатегорииДанных");
	Если Форма.СписокКатегорийДанных.Количество() > 0 Тогда 
		Форма.СтатусКатегории = 1;
		Элементы.КартинкаКатегории.Подсказка = НСтр("ru = 'Есть категории'");
	Иначе
		Форма.СтатусКатегории = 0;
		Элементы.КартинкаКатегории.Подсказка = НСтр("ru = 'Нет категорий'");
	КонецЕсли;	
	
	// Картинка СВД 
	Если ТипЗнч(Объект.Ссылка) = Тип("СправочникСсылка.ВходящиеДокументы") Тогда 
		Элементы.КартинкаСВД.Видимость = РаботаССВД.ДоступнаРаботаСЭДО();
		Если КешИнформации.ПолученПоСВД = Истина Тогда 
			Форма.СтатусСВД = 1;
			Элементы.КартинкаСВД.Подсказка = НСтр("ru = 'Поступил по СВД'");
		Иначе
			Форма.СтатусСВД = 0;
			Элементы.КартинкаСВД.Подсказка = НСтр("ru = 'Поступил не по СВД'");
		КонецЕсли;	
	ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("СправочникСсылка.ИсходящиеДокументы") Тогда 
		Элементы.СостояниеПроцессаВСВД.Видимость = РаботаССВД.ДоступнаРаботаСЭДО();
		Форма.СостояниеПроцессаВСВД = 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КешИнформации.СостояниеСВД, "НомерКартинкиВКоллекции");
			
		Если Форма.СостояниеПроцессаВСВД = 1 Тогда 
			Элементы.СостояниеПроцессаВСВД.Подсказка = НСтр("ru = 'В очереди на отправку по СВД'");
		ИначеЕсли Форма.СостояниеПроцессаВСВД = 2 Тогда 
			Элементы.СостояниеПроцессаВСВД.Подсказка = НСтр("ru = 'Отправлен по СВД'");
		ИначеЕсли Форма.СостояниеПроцессаВСВД = 3 Тогда 
			Элементы.СостояниеПроцессаВСВД.Подсказка = НСтр("ru = 'Доставлен по СВД'");
		ИначеЕсли Форма.СостояниеПроцессаВСВД = 4 Тогда 
			Элементы.СостояниеПроцессаВСВД.Подсказка = НСтр("ru = 'Зарегистрирован у получателя по СВД'");
		ИначеЕсли Форма.СостояниеПроцессаВСВД = 6 Тогда 
			Элементы.СостояниеПроцессаВСВД.Подсказка = НСтр("ru = 'Ошибка отправки по СВД'");			
		КонецЕсли;	
	
	КонецЕсли;	
	
	// Картинка ЭП
	Элементы.КартинкаЭП.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронныеПодписи");
	ВывестиКартинкуЭП(Форма);
	
	// Картинка контроль
	Элементы.КартинкаКонтроль.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьКонтрольОбъектов");
	ВывестиКартинкуКонтроля(Форма);
	
КонецПроцедуры	

Процедура ВывестиКартинкуКонтроля(Форма) Экспорт 
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьКонтрольОбъектов") Тогда 
		Возврат;
	КонецЕсли;	
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	КешИнформации = РегистрыСведений.КешИнформацииОбОбъектах.СоздатьМенеджерЗаписи();
	КешИнформации.Объект = Объект.Ссылка;
	КешИнформации.Прочитать();
	
	ТекущаяДата = НачалоДня(ТекущаяДатаСеанса());
	
	Если Не ЗначениеЗаполнено(КешИнформации.СостояниеКонтроля) Тогда 
		
		Форма.СтатусКонтроля = 5; 
		Элементы.КартинкаКонтроль.Подсказка = НСтр("ru = 'Не стоит на контроле'");
		
	ИначеЕсли КешИнформации.СостояниеКонтроля = Перечисления.СостоянияКонтроля.НаКонтроле Тогда 
		
		Если Не ЗначениеЗаполнено(КешИнформации.СрокИсполнения) Или КешИнформации.СрокИсполнения >= ТекущаяДата Тогда 
			Форма.СтатусКонтроля = 1;
			Элементы.КартинкаКонтроль.Подсказка = НСтр("ru = 'На контроле'");
		Иначе	
			Форма.СтатусКонтроля = 3;
			Элементы.КартинкаКонтроль.Подсказка = НСтр("ru = 'На контроле'");
		КонецЕсли;	
		
	ИначеЕсли КешИнформации.СостояниеКонтроля = Перечисления.СостоянияКонтроля.СнятСКонтроля Тогда 	
		
		Форма.СтатусКонтроля = 4;
		Элементы.КартинкаКонтроль.Подсказка = НСтр("ru = 'Снят с контроля'");
		
	ИначеЕсли КешИнформации.СостояниеКонтроля = Перечисления.СостоянияКонтроля.НаКонтролеНесколько Тогда 
		
		 Если Не ЗначениеЗаполнено(КешИнформации.СрокИсполнения) Или КешИнформации.СрокИсполнения >= ТекущаяДата Тогда 
			Форма.СтатусКонтроля = 6;
		ИначеЕсли Не ЗначениеЗаполнено(КешИнформации.СрокИсполненияОбщий) Или КешИнформации.СрокИсполненияОбщий >= ТекущаяДата Тогда 
			Форма.СтатусКонтроля = 9;
		Иначе
			Форма.СтатусКонтроля = 7;
		КонецЕсли;	
		Элементы.КартинкаКонтроль.Подсказка = НСтр("ru = 'На контроле (несколько)'");
		
	ИначеЕсли КешИнформации.СостояниеКонтроля = Перечисления.СостоянияКонтроля.СнятСКонтроляНесколько Тогда
		
		Форма.СтатусКонтроля = 8;
		Элементы.КартинкаКонтроль.Подсказка = НСтр("ru = 'Снят с контроля (несколько)'");
		
	ИначеЕсли КешИнформации.СостояниеКонтроля = Перечисления.СостоянияКонтроля.СмешанноНесколько Тогда	
		
		Если Не ЗначениеЗаполнено(КешИнформации.СрокИсполнения) Или КешИнформации.СрокИсполнения >= ТекущаяДата Тогда 
			Форма.СтатусКонтроля = 10;
		Иначе
			Форма.СтатусКонтроля = 11;
		КонецЕсли;
		Элементы.КартинкаКонтроль.Подсказка = НСтр("ru = 'На контроле и снят с контроля'");
		
	КонецЕсли;	
	
КонецПроцедуры	

// Выводит картинку состояния ЭП
Процедура ВывестиКартинкуЭП(Форма) Экспорт 
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьЭлектронныеПодписи") Тогда 
		Возврат;
	КонецЕсли;	
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	КешИнформации = РегистрыСведений.КешИнформацииОбОбъектах.СоздатьМенеджерЗаписи();
	КешИнформации.Объект = Объект.Ссылка;
	КешИнформации.Прочитать();
	
	Если КешИнформации.СтатусЭП = Перечисления.СтатусПроверкиЭП.ПодписиНет Тогда 
		Форма.СтатусЭП = 0;
		Элементы.КартинкаЭП.Подсказка = НСтр("ru = 'Не подписан электронной подписью'");
	ИначеЕсли  КешИнформации.СтатусЭП = Перечисления.СтатусПроверкиЭП.ПодписьНеПроверена Тогда
		Форма.СтатусЭП = 1;
		Элементы.КартинкаЭП.Подсказка = НСтр("ru = 'Подписан электронной подписью. Подпись не проверена.'");
	ИначеЕсли  КешИнформации.СтатусЭП = Перечисления.СтатусПроверкиЭП.ПодписьДействительна Тогда 
		Форма.СтатусЭП = 2;
		Элементы.КартинкаЭП.Подсказка = НСтр("ru = 'Подписан электронной подписью. Подпись действительна.'");
	ИначеЕсли  КешИнформации.СтатусЭП = Перечисления.СтатусПроверкиЭП.ПодписьНедействительна Тогда 
		Форма.СтатусЭП = 3;
		Элементы.КартинкаЭП.Подсказка = НСтр("ru = 'Подписан электронной подписью. Подпись недействительна.'");
	Иначе 
		Если Объект.ПодписанЭП Тогда
			Форма.СтатусЭП = 1;
			Элементы.КартинкаЭП.Подсказка = НСтр("ru = 'Подписан электронной подписью. Подпись не проверена.'");
		Иначе 
			Форма.СтатусЭП = 0;
			Элементы.КартинкаЭП.Подсказка = НСтр("ru = 'Не подписан электронной подписью'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры	

// Возвращает текст HTML для показа обзора внутреннего документа
Функция ПолучитьОбзорВнутреннегоДокумента(Форма) Экспорт 
	
	HTMLТекст = ОбзорДокументаПереопределяемый.ПолучитьОбзорВнутреннегоДокумента(Форма);
	Если ЗначениеЗаполнено(HTMLТекст) Тогда 
		Возврат HTMLТекст;
	КонецЕсли;
	
	Объект = Форма.Объект;
	Если Объект.ВидДокумента.ВестиУчетПоКорреспондентам Тогда
		Возврат ПолучитьОбзорВнутреннегоДокументаСКорреспондентом(Форма)
	Иначе	
		Возврат ПолучитьОбзорВнутреннегоДокументаБезКорреспондента(Форма);
	КонецЕсли;	
	
КонецФункции	

// Возвращает текст HTML для показа обзора исходящего документа
Функция ПолучитьОбзорИсходящегоДокумента(Форма) Экспорт 
	
	HTMLТекст = ОбзорДокументаПереопределяемый.ПолучитьОбзорИсходящегоДокумента(Форма);
	Если ЗначениеЗаполнено(HTMLТекст) Тогда 
		Возврат HTMLТекст;
	КонецЕсли;
	
	Объект = Форма.Объект;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда
		Организация = Объект.Организация;
	Иначе
		Организация = Константы.НаименованиеПредприятия.Получить();
	Конецесли;

	// Формируем основное представление документа	
	HTMLТекст = "<html>
	|<head>
	|<style type=""text/css"">
	|	body {
	|		overflow:    auto;
	|		margin-top:  12px; 		 
	|		margin-left: 20px; 
	|		font-family: MS Shell Dlg, Microsoft Sans Serif, sans-serif; 
	|		font-size:   8pt;}
	|	table {
	|		width:       450px;
	|		font-family: MS Shell Dlg, Microsoft Sans Serif, sans-serif; 
	|		font-size:   8pt;}
	|	td {vertical-align: top;}
	| 	a:link {
	|		color: #006699; text-decoration: none;}
	|	a:visited {
	|		color: #006699; text-decoration: none;}
	|	a:hover {
	|		color: #006699; text-decoration: underline;}
	|	p {
	|		margin-top: 7px;}
	|</style>
	|<body>";
	
	HTMLТекст = HTMLТекст + "<table>";
	HTMLТекст = HTMLТекст + "<tr>";
	
	HTMLТекст = HTMLТекст + "<td width=""40%"" align=center >";
	ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'От кого:'"), "");
	HTMLТекст = HTMLТекст + "<p>";
	ДобавитьРеквизит(HTMLТекст, "", Организация);
	
	HTMLТекст = HTMLТекст + "<p>";
	HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"<A href=v8doc:%1>%2</A>",
		ПолучитьНавигационнуюСсылку(Объект.ВидДокумента),
		ВРег((Строка(Объект.ВидДокумента))));
    HTMLТекст = HTMLТекст + "<p>";
	
	Если ЗначениеЗаполнено(Объект.ДатаРегистрации) И ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда 
		ДобавитьРеквизит(HTMLТекст, "", Формат(Объект.ДатаРегистрации, "ДЛФ=D") 
		+ " № " +  Объект.РегистрационныйНомер);
	Иначе
		ДобавитьРеквизит(HTMLТекст, "__________ №__________", "");
	КонецЕсли;
	HTMLТекст = HTMLТекст + "<p>";
	Если ЗначениеЗаполнено(Форма.ВОтветНаСтрока) И Лев(Форма.ВОтветНаСтрока, 1) = "№" Тогда 
		ДобавитьРеквизит(HTMLТекст, "", НСтр("ru = 'На '") + Форма.ВОтветНаСтрока);
	Иначе
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'На №__________ от __________'"), "");
	КонецЕсли;
	HTMLТекст = HTMLТекст + "</td>";	
	
	HTMLТекст = HTMLТекст + "<td>";
	HTMLТекст = HTMLТекст + "</td>";
	
	HTMLТекст = HTMLТекст + "<td width=""40%"">";
	Если Форма.НесколькоПолучателей Тогда
		ДобавитьРеквизит(HTMLТекст, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Кому (%1):'"), Объект.Получатели.Количество()), "");
		
		Для Каждого Получателя Из Объект.Получатели Цикл
			HTMLТекст = HTMLТекст + "<p>";
			ДобавитьРеквизит(HTMLТекст, "", Получателя.Получатель);
			
			Если ЗначениеЗаполнено(Получателя.Адресат) Тогда
				ДобавитьРеквизит(HTMLТекст, "", Получателя.Адресат);
				КонтактнаяИнформацияАдресат = ПолучитьКонтактнуюИнформацияОбъекта(Получателя.Адресат);
				
				Если ЗначениеЗаполнено(КонтактнаяИнформацияАдресат.Телефон) Тогда
					ДобавитьРеквизит(HTMLТекст, "", КонтактнаяИнформацияАдресат.Телефон, "696969");
				КонецЕсли;
				
				Если ЗначениеЗаполнено(КонтактнаяИнформацияАдресат.Емайл) Тогда
					HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						"<FONT color=#696969>%1</FONT>",
						НСтр("ru = 'E-mail: '"));
					HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						"<A color=#696969 href=v8doc:%1><FONT color=#696969>%2</FONT></A><BR>",
						"message"+КонтактнаяИнформацияАдресат.Емайл,
						КонтактнаяИнформацияАдресат.Емайл);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	
	Иначе
	    Если ЗначениеЗаполнено(Форма.Получатель) Тогда
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Кому:'"), "");
			HTMLТекст = HTMLТекст + "<p>";
			
			ДобавитьРеквизит(HTMLТекст, "", Форма.Получатель);
			
			Если ЗначениеЗаполнено(Форма.Адресат) Тогда
				ДобавитьРеквизит(HTMLТекст, "", Форма.Адресат);
				КонтактнаяИнформацияАдресат = ПолучитьКонтактнуюИнформацияОбъекта(Форма.Адресат);
				
				Если ЗначениеЗаполнено(КонтактнаяИнформацияАдресат.Телефон) Тогда
					ДобавитьРеквизит(HTMLТекст, "", КонтактнаяИнформацияАдресат.Телефон, "696969");
				КонецЕсли;
				
				Если ЗначениеЗаполнено(КонтактнаяИнформацияАдресат.Емайл) Тогда
					HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						"<FONT color=#696969>%1</FONT>",
						НСтр("ru = 'E-mail: '"));
					HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						"<A color=#696969 href=v8doc:%1><FONT color=#696969>%2</FONT></A><BR>",
						"message"+КонтактнаяИнформацияАдресат.Емайл,
						КонтактнаяИнформацияАдресат.Емайл);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;	
	Конецесли;
	
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""3"">";
	
	HTMLТекст = HTMLТекст + "<p>";
	HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"<B>%1</B>",
		Объект.Заголовок);
	HTMLТекст = HTMLТекст + "<p>";	
		
	Если ЗначениеЗаполнено(Объект.Содержание) Тогда
		ДобавитьРеквизит(HTMLТекст, "", СтрЗаменить(Объект.Содержание, Символы.ПС, "<br>"));
		
		Если Объект.ВидДокумента.УчитыватьСуммуДокумента Или
			(Форма.Свойства_ИспользоватьСвойства И Форма.Свойства_ОписаниеДополнительныхРеквизитов.Количество() > 0) Тогда 
			HTMLТекст = HTMLТекст + "<p>";
		КонецЕсли;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Объект.СрокИсполнения) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Срок ответа:'"), Формат(Объект.СрокИсполнения, "ДЛФ=D"));
	КонецЕсли;
	
	Если Объект.ВидДокумента.УчитыватьСуммуДокумента Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Сумма:'"), 	Формат(Объект.Сумма, "ЧДЦ=2; ЧН=0") + " " + Объект.Валюта.Наименование);
	КонецЕсли;
	
	Если Форма.Свойства_ИспользоватьСвойства Тогда 
		Для каждого Строка Из Форма.Свойства_ОписаниеДополнительныхРеквизитов Цикл
			Значение = Форма[Строка.ИмяРеквизитаЗначение];
			Если ЗначениеЗаполнено(Значение) Тогда
				ДобавитьРеквизит(HTMLТекст, Строка(Строка.Свойство)+":", Значение);
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;	
		
	HTMLТекст = HTMLТекст + "</td></tr>";	
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""3"">";
	
	Если ЗначениеЗаполнено(Объект.Подписал)
	 Или ЗначениеЗаполнено(Объект.Подготовил)
	Тогда 
		Если ЗначениеЗаполнено(Объект.Содержание) 
			Или Объект.ВидДокумента.УчитыватьСуммуДокумента 
			Или (Форма.Свойства_ИспользоватьСвойства И Форма.Свойства_ОписаниеДополнительныхРеквизитов.Количество() > 0)  Тогда 
				HTMLТекст = HTMLТекст + "<p>";
		КонецЕсли;	
	КонецЕсли;	
		
	Если ЗначениеЗаполнено(Объект.Подписал) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подписал:'"), Объект.Подписал);
	КонецЕсли;	
		
	Если ЗначениеЗаполнено(Объект.Подготовил) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подготовил:'"), Объект.Подготовил);
		
		КонтактнаяИнформация = ПолучитьКонтактнуюИнформацияОбъекта(Объект.Подготовил);
		
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Телефон) Тогда
			ДобавитьРеквизит(HTMLТекст, "", КонтактнаяИнформация.Телефон, "696969");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Емайл) Тогда
			HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					"<FONT color=#696969>%1</FONT>",
					НСтр("ru = 'E-mail: '"));
			HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"<A color=#696969 href=v8doc:%1><FONT color=#696969>%2</FONT></A><BR>",
				"message"+КонтактнаяИнформация.Емайл,
				КонтактнаяИнформация.Емайл);
		КонецЕсли;
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td></tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""3"">";
	
	ДелоТекст = Форма.ДелоТекст;
	КомуПереданДокумент = Форма.КомуПереданДокумент;
	ВестиУчетПоНоменклатуреДел = Объект.ВидДокумента.ВестиУчетПоНоменклатуреДел;
	
	Если (ВестиУчетПоНоменклатуреДел И ЗначениеЗаполнено(Объект.НоменклатураДел))
	 Или ЗначениеЗаполнено(ДелоТекст)
	 Или ЗначениеЗаполнено(КомуПереданДокумент) 
	Тогда 
		HTMLТекст = HTMLТекст + "<p>";
	КонецЕсли;
	
	Если ВестиУчетПоНоменклатуреДел И ЗначениеЗаполнено(Объект.НоменклатураДел) Тогда			
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Номенклатура дел:'"), Объект.НоменклатураДел);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДелоТекст) Тогда
		ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Помещен в дело:'"));
		HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"<A href=v8doc:%1>%2</A><BR>",
			"dossier",
			ДелоТекст);
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(КомуПереданДокумент) Тогда
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Передан:'"));
		HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"<A href=v8doc:%1>%2</A><BR>",
			"holder",
			КомуПереданДокумент);
	КонецЕсли;	
	
	HTMLТекст = HTMLТекст + "</td></tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""3"">";
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа")
	 Или ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности")
	 Или ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов")
	Тогда 	
		HTMLТекст = HTMLТекст + "<p>";
	КонецЕсли;	
		
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа") Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Гриф:'"),  Объект.ГрифДоступа);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности") Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Вопрос:'"),  Объект.ВопросДеятельности);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") И ЗначениеЗаполнено(Объект.Проект) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Проект:'"),  Объект.Проект);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов") Тогда 
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Состояние:'"));
		HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"<A href=v8doc:%1>%2</A><BR>",
			"status",
			Форма.СостояниеТекст);
    КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ответственный) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Ответственный:'"),  Объект.Ответственный);
	КонецЕсли;

	HTMLТекст = HTMLТекст + "</td></tr>";	
		
	HTMLТекст = HTMLТекст + "</table>";
	HTMLТекст = HTMLТекст + "</body></html>";
	
	УдалитьТег(HTMLТекст, "script");
	
	Возврат HTMLТекст;
	
КонецФункции	

Функция ПолучитьОбзорВнутреннегоДокументаБезКорреспондента(Форма) Экспорт

	Объект = Форма.Объект;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда
		Организация = Объект.Организация;
	Иначе
		Организация = Константы.НаименованиеПредприятия.Получить();
	Конецесли;
	
	// Формируем основное представление документа	
	HTMLТекст = "<html>
	|<head>
	|<style type=""text/css"">
	|	body {
	|		overflow:    auto;
	|		margin-top:  12px; 		 
	|		margin-left: 20px; 
	|		font-family: MS Shell Dlg, Microsoft Sans Serif, sans-serif; 
	|		font-size:   8pt;}
	|	table {
	|		width:       450px; 
	|		font-family: MS Shell Dlg, Microsoft Sans Serif, sans-serif; 
	|		font-size:   8pt;}
	|	td {vertical-align: top;}
	| 	a:link {
	|		color: #006699; text-decoration: none;}
	|	a:visited {
	|		color: #006699; text-decoration: none;}
	|	a:hover {
	|		color: #006699; text-decoration: underline;}
	|	p {
	|		margin-top: 7px;}
	|</style>
	|<body>";
	
	HTMLТекст = HTMLТекст + "<table>";
	
	HTMLТекст = HTMLТекст + "<tr>";
	HTMLТекст = HTMLТекст + "<td colspan=""2"" align=""center"">";
	ДобавитьРеквизит(HTMLТекст, "", Организация);
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"" align=""center"">";
	HTMLТекст = HTMLТекст + "<p>";
	HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"<A href=v8doc:%1>%2</A>",
		ПолучитьНавигационнуюСсылку(Объект.ВидДокумента),
		ВРег((Строка(Объект.ВидДокумента))));
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td width=""80%"">";
	Если ЗначениеЗаполнено(Объект.ДатаРегистрации) Тогда 
		ДобавитьРеквизит(HTMLТекст, "", Формат(Объект.ДатаРегистрации, "ДЛФ=D"));
	Иначе
		ДобавитьРеквизит(HTMLТекст, "____________", "");
	КонецЕсли;
	HTMLТекст = HTMLТекст + "</td>";
	
    HTMLТекст = HTMLТекст + "<td>";
	Если ЗначениеЗаполнено(Объект.РегистрационныйНомер) Тогда 
		ДобавитьРеквизит(HTMLТекст, "№ ", Объект.РегистрационныйНомер);
	Иначе
		ДобавитьРеквизит(HTMLТекст, "№___________", "");
	КонецЕсли;	
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"">";
	
	HTMLТекст = HTMLТекст + "<p>";
	HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"<B>%1</B>",
		Объект.Заголовок);
	HTMLТекст = HTMLТекст + "<p>";
		
	HTMLТекст = HTMLТекст + "<p>";	
	Если ЗначениеЗаполнено(Объект.Содержание) Тогда
		ДобавитьРеквизит(HTMLТекст, "", СтрЗаменить(Объект.Содержание, Символы.ПС, "<br>"));
		HTMLТекст = HTMLТекст + "<p>";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.СрокИсполнения) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Срок исполнения:'"), Формат(Объект.СрокИсполнения, "ДЛФ=D"));
	КонецЕсли;
	
	Если Объект.ВидДокумента.УчитыватьСуммуДокумента Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Сумма:'"), 	Формат(Объект.Сумма, "ЧДЦ=2; ЧН=0") + " " + Объект.Валюта.Наименование);
	КонецЕсли;
	
	Если Объект.ВидДокумента.УчитыватьСрокДействия Тогда			
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Срок действия:'"));
		HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"<A href=v8doc:%1>%2</A><BR>",
			"period",
			Форма.СрокДействияСтрока);
	КонецЕсли;
	
	Если Объект.ВидДокумента.УчитыватьНедействующиеДокументы Тогда			
		Если Объект.НеДействует Тогда
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Не действует:'"), НСтр("ru = 'Да'"));
		КонецЕсли;	
	КонецЕсли;
		
	Если Форма.Свойства_ИспользоватьСвойства Тогда 
		Для каждого Строка Из Форма.Свойства_ОписаниеДополнительныхРеквизитов Цикл
			Значение = Форма[Строка.ИмяРеквизитаЗначение];
			Если ЗначениеЗаполнено(Значение) Тогда
				ДобавитьРеквизит(HTMLТекст, Строка(Строка.Свойство)+":", Значение);
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;	
		
	HTMLТекст = HTMLТекст + "</td></tr>";	
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td>";
	
	HTMLТекст = HTMLТекст + "<p>";
	Если ЗначениеЗаполнено(Объект.Утвердил) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подписал:'"), Объект.Утвердил);
	КонецЕсли;	
		
	Если ЗначениеЗаполнено(Объект.Подготовил) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подготовил:'"), Объект.Подготовил);
		
		КонтактнаяИнформация = ПолучитьКонтактнуюИнформацияОбъекта(Объект.Подготовил);
		
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Телефон) Тогда
			ДобавитьРеквизит(HTMLТекст, "", КонтактнаяИнформация.Телефон, "696969");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Емайл) Тогда
			HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"<FONT color=#696969>%1</FONT>",
				НСтр("ru = 'E-mail: '"));
			HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"<A color=#696969 href=v8doc:%1><FONT color=#696969>%2</FONT></A><BR>",
				"message"+КонтактнаяИнформация.Емайл,
				КонтактнаяИнформация.Емайл);
		КонецЕсли;
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td>";
	HTMLТекст = HTMLТекст + "</tr>";
	
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"">";
	
	HTMLТекст = HTMLТекст + "<p>";
	Если Объект.ВидДокумента.ВестиУчетПоНоменклатуреДел И ЗначениеЗаполнено(Объект.НоменклатураДел) Тогда			
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Номенклатура дел:'"), Объект.НоменклатураДел);
	КонецЕсли;
	
	ДелоТекст = Форма.ДелоТекст;
	Если ЗначениеЗаполнено(ДелоТекст) Тогда
		ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Помещен в дело:'"));
		HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"<A href=v8doc:%1>%2</A><BR>",
			"dossier",
			ДелоТекст);
	КонецЕсли;	
	
	КомуПереданДокумент = Форма.КомуПереданДокумент;
	Если ЗначениеЗаполнено(КомуПереданДокумент) Тогда
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Передан:'"));
		HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"<A href=v8doc:%1>%2</A><BR>",
			"holder",
			КомуПереданДокумент);
	КонецЕсли;	
	
	HTMLТекст = HTMLТекст + "</td></tr>";
	
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"">";
	
	HTMLТекст = HTMLТекст + "<p>";
	ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Папка:'"), 	Объект.Папка);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа") Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Гриф:'"),  Объект.ГрифДоступа);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности") Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Вопрос:'"),  Объект.ВопросДеятельности);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") И ЗначениеЗаполнено(Объект.Проект) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Проект:'"),  Объект.Проект);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов") Тогда
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Состояние:'"));
		HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"<A href=v8doc:%1>%2</A><BR>",
			"status",
			Форма.СостояниеТекст);
	КонецЕсли;		
		
	Если ЗначениеЗаполнено(Объект.Ответственный) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Ответственный:'"),  Объект.Ответственный);
	КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td></tr>";
	
	HTMLТекст = HTMLТекст + "</table>";
	HTMLТекст = HTMLТекст + "</body></html>";
	
	УдалитьТег(HTMLТекст, "script");
	
	Возврат HTMLТекст;
	
КонецФункции	

Функция ПолучитьЦветРегНомера(Ссылка)
	ЦветРегНомера = "000000"; //Черный;

	Если Ссылка.ВидДокумента.Родитель = Справочники.ВидыВнутреннихДокументов.ДоговораЗемлеустроительныхРабот Тогда
		Состояние = мРаботаСДоговорами.ПолучитьСостояниеДоговора(Ссылка);
		Если Состояние = Перечисления.мСостоянияДоговоров.Подписан Тогда
			ЦветРегНомера = "0000CD"; //ТемноСиний;
		ИначеЕсли Состояние = Перечисления.мСостоянияДоговоров.Проект
			ИЛИ Состояние = Перечисления.мСостоянияДоговоров.НаПодписании Тогда
			ЦветРегНомера = "228B22"; //Зеленый;
		Иначе
			ЦветРегНомера = "FF0000"; //Красный;
		КонецЕсли;
		
	КонецЕсли; 
	Возврат ЦветРегНомера;
КонецФункции 

Функция ПолучитьЦветАкта(СостояниеАкта)
	ЦветАкта = "FF0000"; //Красный;
	Если СостояниеАкта = Перечисления.мСостоянияАктовВыполненныхРабот.ПодписанЗаказчиком
		ИЛИ СостояниеАкта = Перечисления.мСостоянияАктовВыполненныхРабот.ПодписанЗаказчикомСЗамечаниями Тогда
			ЦветАкта = "0000CD"; //ТемноСиний
	КонецЕсли; 
	
	Возврат ЦветАкта;
КонецФункции 
 
Функция ПолучитьОбзорВнутреннегоДокументаСКорреспондентом(Форма) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	Объект = Форма.Объект;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПоОрганизациям") Тогда
		Организация = Объект.Организация;
	Иначе
		Организация = Константы.НаименованиеПредприятия.Получить();
	Конецесли;
	
	// Формируем основное представление документа	
	HTMLТекст = "<html>
	|<head>
	|<style type=""text/css"">
	|	body {
	|		overflow:    auto;
	|		margin-top:  12px; 		 
	|		margin-left: 20px; 
	|		font-family: MS Shell Dlg, Microsoft Sans Serif, sans-serif; 
	|		font-size:   8pt;}
	|	table {
	|		width:       100%; 
	//|		width:       1000px; 
	|		font-family: MS Shell Dlg, Microsoft Sans Serif, sans-serif; 
	|		font-size:   8pt;}
	|	td {vertical-align: top;}
	| 	a:link {
	|		color: #006699; text-decoration: none;}
	|	a:visited {
	|		color: #006699; text-decoration: none;}
	|	a:hover {
	|		color: #006699; text-decoration: underline;}
	|	p {
	|		margin-top: 7px;}
	|</style>
	|<body>";
	
	HTMLТекст = HTMLТекст + "<table>";
	
	HTMLТекст = HTMLТекст + "<tr>";
	
	ЦветРегНомера = ПолучитьЦветРегНомера(Объект.Ссылка);
	
	// Вставка штрихкода для дел
	Если Объект.ВидДокумента = Справочники.ВидыВнутреннихДокументов.Дело Тогда
		ДанныеОШтрихкоде = ШтрихкодированиеСервер.ПолучитьДанныеДляВставкиШтрихкодаВОбъект(Объект.Ссылка, Ложь, Истина);
		Если ДанныеОШтрихкоде <> Неопределено И ДанныеОШтрихкоде.Свойство("ДвоичныеДанныеИзображения") Тогда
			
			// Запись картинки штрихкода во временный файл
            Адрес = ПоместитьВоВременноеХранилище(ДанныеОШтрихкоде.ДвоичныеДанныеИзображения, Новый УникальныйИдентификатор);
			HTMLТекст = HTMLТекст + "<td width=""50%"" align=""left"">";
			HTMLТекст = HTMLТекст + "<IMG src="+Адрес+" width='139' >";
			HTMLТекст = HTMLТекст + "</td>";
		КонецЕсли;
		
		HTMLТекст = HTMLТекст + "<td align=""left"">";
	Иначе	
		HTMLТекст = HTMLТекст + "<td colspan=""2"" align=""left"">";
	КонецЕсли; 

	HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	"<B><FONT COLOR=#"+ЦветРегНомера+"> %1 № %2 от %3 %4 </FONT></B>",
	ВРег((Строка(Объект.ВидДокумента))),
	?(ЗначениеЗаполнено(Объект.РегистрационныйНомер), Объект.РегистрационныйНомер, "_____"),
	?(ЗначениеЗаполнено(Объект.ДатаРегистрации), Формат(Объект.ДатаРегистрации, "ДЛФ=D"), "_____"),
	?(Объект.ПометкаУдаления, " (Помечен на удаление)", " "));
	
	HTMLТекст = HTMLТекст + "</td></tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"" align=""left"" >";
	
	HTMLТекст = HTMLТекст + "<p>";
	HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"<B>%1</B>",
		Объект.Заголовок);
	HTMLТекст = HTMLТекст + "</td></tr>";	
		
		
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"" >";	
	
	HTMLТекст = HTMLТекст + "<p>";	
	Если ЗначениеЗаполнено(Объект.Содержание) Тогда
		ДобавитьРеквизит(HTMLТекст, "", СтрЗаменить(Объект.Содержание, Символы.ПС, "<br>"));
		HTMLТекст = HTMLТекст + "<p>";
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Объект.СрокИсполнения) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Срок исполнения:'"), Формат(Объект.СрокИсполнения, "ДЛФ=D"));
	КонецЕсли;
	
    Если Объект.ВидДокумента.УчитыватьСуммуДокумента Тогда
        СтрокаФормата = ?(Объект.Валюта.Код = "933", "ЧДЦ=2; ЧН=0", "ЧДЦ=0; ЧН=0"); 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Сумма:'"), 	Формат(Объект.Сумма, СтрокаФормата) + " " + Объект.Валюта.Наименование);
	КонецЕсли;
	
	Если Объект.ВидДокумента.УчитыватьСрокДействия Тогда			
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Срок действия:'"));
		HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"<A href=v8doc:%1>%2</A><BR>",
			"period",
			Форма.СрокДействияСтрока);
	КонецЕсли;
	
	Если Объект.ВидДокумента.УчитыватьНедействующиеДокументы Тогда			
		Если Объект.НеДействует Тогда
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Расторгнут:'"), НСтр("ru = 'Да'"));
		КонецЕсли;	
	КонецЕсли;
		
	Если Форма.Свойства_ИспользоватьСвойства Тогда 
		Для каждого Строка Из Форма.Свойства_ОписаниеДополнительныхРеквизитов Цикл
			Значение = Форма[Строка.ИмяРеквизитаЗначение];
			Если Не Строка.Удалено И ЗначениеЗаполнено(Значение) Тогда
				ДобавитьДопРеквизит(HTMLТекст, Значение, Строка);
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;	
	
	// Доп соглашения
	Если Объект.ВидДокумента.Родитель = Справочники.ВидыВнутреннихДокументов.ДоговораЗемлеустроительныхРабот Тогда
		ДопСоглашения = мРаботаСДоговорами.ПолучитьДопСоглашенияДоговора(Объект.Ссылка);
		Если ДопСоглашения.Количество() > 0 Тогда
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Доп. соглашения:'"), "");
		    Для каждого ДопСоглашение Из Допсоглашения Цикл
				ДобавитьРеквизит(HTMLТекст, "", ДопСоглашение);
			КонецЦикла; 
		КонецЕсли; 
	КонецЕсли;	
	
	// ЭСЧФ по Акту выполненных работ
	Если Объект.ВидДокумента = Справочники.ВидыВнутреннихДокументов.АктВыполненныхРабот Тогда
		СтатусЭСЧФ = мЭСЧФ.СтатусЭСЧФДляАктаВыполненныхРабот(Объект.Ссылка);
		Если СтатусЭСЧФ <> Неопределено Тогда
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Статус ЭСЧФ: '"), ""+СтатусЭСЧФ);
		КонецЕсли; 
	КонецЕсли;	

	HTMLТекст = HTMLТекст + "</td></tr>";	
	
	HTMLТекст = HTMLТекст + "<tr>";

	HTMLТекст = HTMLТекст + "<td width=""70%"">";
	HTMLТекст = HTMLТекст + "<p>";	
	ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Наша организация:'"), "");
	//HTMLТекст = HTMLТекст + "<p>";
	ДобавитьРеквизит(HTMLТекст, "", Организация);
	
	Если ЗначениеЗаполнено(Объект.Утвердил) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подписал:'"), Объект.Утвердил);
	КонецЕсли;	
		
	Если ЗначениеЗаполнено(Объект.Подготовил) Тогда
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подготовил:'"), Объект.Подготовил);
        
        КонтактнаяИнформация = ПолучитьКонтактнуюИнформацияОбъекта(Объект.Подготовил);
        
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Телефон) Тогда
			ДобавитьРеквизит(HTMLТекст, "", КонтактнаяИнформация.Телефон, "696969");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КонтактнаяИнформация.Емайл) Тогда
			HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"<FONT color=#696969>%1</FONT>",
				НСтр("ru = 'E-mail: '"));
			HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"<A color=#696969 href=v8doc:%1><FONT color=#696969>%2</FONT></A><BR>",
				"message"+КонтактнаяИнформация.Емайл,
				КонтактнаяИнформация.Емайл);
		КонецЕсли;
    КонецЕсли;
	
	HTMLТекст = HTMLТекст + "</td>";
	
	Если Не Форма.НесколькоКонтрагентов Тогда
		HTMLТекст = HTMLТекст + "<td>";
		HTMLТекст = HTMLТекст + "<p>";	
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Корреспондент:'"), "");
		//HTMLТекст = HTMLТекст + "<p>";
		
		Если ЗначениеЗаполнено(Объект.Корреспондент) Тогда
			ДобавитьРеквизит(HTMLТекст, "", Объект.Корреспондент);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.ПодписалОтКорреспондента) Тогда
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подписал:'"), Объект.ПодписалОтКорреспондента);
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(Объект.КонтактноеЛицо) Тогда
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Контакт:'"), Объект.КонтактноеЛицо);
			КонтактнаяИнформация = ПолучитьКонтактнуюИнформацияОбъекта(Объект.КонтактноеЛицо);
		
			Если ЗначениеЗаполнено(КонтактнаяИнформация.Телефон) Тогда
				ДобавитьРеквизит(HTMLТекст, "", КонтактнаяИнформация.Телефон, "696969");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(КонтактнаяИнформация.Емайл) Тогда
				HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					"<FONT color=#696969>%1</FONT>",
					НСтр("ru = 'E-mail: '"));
				HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					"<A color=#696969 href=v8doc:%1><FONT color=#696969>%2</FONT></A><BR>",
					"message"+КонтактнаяИнформация.Емайл,
					КонтактнаяИнформация.Емайл);
			КонецЕсли;
		КонецЕсли;		
	Иначе		
		
		HTMLТекст = HTMLТекст + "<td>";
		HTMLТекст = HTMLТекст + "<p>";	
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Корреспонденты:'"), "");
		//HTMLТекст = HTMLТекст + "<p>";
		
		Для Каждого СтрокаКорреспондент Из Объект.Корреспонденты Цикл
			Если ЗначениеЗаполнено(СтрокаКорреспондент.Корреспондент) Тогда
				ДобавитьРеквизит(HTMLТекст, "", СтрокаКорреспондент.Корреспондент);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаКорреспондент.ПодписалОтКорреспондента) Тогда
				ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подписал:'"), СтрокаКорреспондент.ПодписалОтКорреспондента);
			КонецЕсли;	
			
			Если ЗначениеЗаполнено(СтрокаКорреспондент.КонтактноеЛицо) Тогда
				ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Контакт:'"), СтрокаКорреспондент.КонтактноеЛицо);
				КонтактнаяИнформация = ПолучитьКонтактнуюИнформацияОбъекта(СтрокаКорреспондент.КонтактноеЛицо);
		
				Если ЗначениеЗаполнено(КонтактнаяИнформация.Телефон) Тогда
					ДобавитьРеквизит(HTMLТекст, "", КонтактнаяИнформация.Телефон, "696969");
				КонецЕсли;
				
				Если ЗначениеЗаполнено(КонтактнаяИнформация.Емайл) Тогда
					HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						"<FONT color=#696969>%1</FONT>",
						НСтр("ru = 'E-mail: '"));
					HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						"<A color=#696969 href=v8doc:%1><FONT color=#696969>%2</FONT></A><BR>",
						"message"+КонтактнаяИнформация.Емайл,
						КонтактнаяИнформация.Емайл);
				КонецЕсли;
			КонецЕсли;
			
			//HTMLТекст = HTMLТекст + "<p>";	
		КонецЦикла;	
		
		Если Объект.Инвесторы.Количество() > 0 Тогда
			HTMLТекст = HTMLТекст + "<p>";	
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Инвесторы:'"), "");
			//HTMLТекст = HTMLТекст + "<p>";
			
			Для Каждого СтрокаКорреспондент Из Объект.Инвесторы Цикл
				Если ЗначениеЗаполнено(СтрокаКорреспондент.Корреспондент) Тогда
					ДобавитьРеквизит(HTMLТекст, "", СтрокаКорреспондент.Корреспондент);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтрокаКорреспондент.ПодписалОтКорреспондента) Тогда
					ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подписал:'"), СтрокаКорреспондент.ПодписалОтКорреспондента);
				КонецЕсли;	
				
				Если ЗначениеЗаполнено(СтрокаКорреспондент.КонтактноеЛицо) Тогда
					ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Контакт:'"), СтрокаКорреспондент.КонтактноеЛицо);
					КонтактнаяИнформация = ПолучитьКонтактнуюИнформацияОбъекта(СтрокаКорреспондент.КонтактноеЛицо);
					
					Если ЗначениеЗаполнено(КонтактнаяИнформация.Телефон) Тогда
						ДобавитьРеквизит(HTMLТекст, "", КонтактнаяИнформация.Телефон, "696969");
					КонецЕсли;
					
					Если ЗначениеЗаполнено(КонтактнаяИнформация.Емайл) Тогда
						HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						"<FONT color=#696969>%1</FONT>",
						НСтр("ru = 'E-mail: '"));
						HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						"<A color=#696969 href=v8doc:%1><FONT color=#696969>%2</FONT></A><BR>",
						"message"+КонтактнаяИнформация.Емайл,
						КонтактнаяИнформация.Емайл);
					КонецЕсли;
				КонецЕсли;
				
				//HTMLТекст = HTMLТекст + "<p>";	
			КонецЦикла;	
		КонецЕсли; 

		// Удаление лишнего отступа
		//HTMLТекст = Лев(HTMLТекст, СтрДлина(HTMLТекст)-3);
		
	КонецЕсли;	
	HTMLТекст = HTMLТекст + "</td></tr>";
	
    HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td colspan=""2"">";
	
	HTMLТекст = HTMLТекст + "<p>";	
	Если Объект.ВидДокумента.ВестиУчетПоНоменклатуреДел И ЗначениеЗаполнено(Объект.НоменклатураДел) Тогда			
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Номенклатура дел:'"), Объект.НоменклатураДел);
	КонецЕсли;
	
	ДелоТекст = Форма.ДелоТекст;
	Если ЗначениеЗаполнено(ДелоТекст) Тогда
		ДобавитьПодпись(HTMLТекст,  НСтр("ru = 'Помещен в дело:'"));
		HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"<A href=v8doc:%1>%2</A><BR>",
			"dossier",
			ДелоТекст);
	КонецЕсли;	
	
	КомуПереданДокумент = Форма.КомуПереданДокумент;
	Если ЗначениеЗаполнено(КомуПереданДокумент) Тогда
		ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Передан:'"));
		HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"<A href=v8doc:%1>%2</A><BR>",
			"holder",
			КомуПереданДокумент);
	КонецЕсли;	
	
	HTMLТекст = HTMLТекст + "</td></tr>";
	
	HTMLТекст = HTMLТекст + "<tr>";
    HTMLТекст = HTMLТекст + "<td>";
    
	HTMLТекст = HTMLТекст + "<p>";
	ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Папка:'"), 	Объект.Папка);
    
    Если ПолучитьФункциональнуюОпцию("ИспользоватьГрифыДоступа") Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Гриф:'"),  Объект.ГрифДоступа);
	КонецЕсли;
	
    Если ПолучитьФункциональнуюОпцию("ИспользоватьВопросыДеятельности") Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Вопрос:'"),  Объект.ВопросДеятельности);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ВестиУчетПоПроектам") И ЗначениеЗаполнено(Объект.Проект) Тогда 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Проект:'"),  Объект.Проект);
	КонецЕсли;

	Если Объект.ВидДокумента <> Справочники.ВидыВнутреннихДокументов.Дело
		И Объект.ВидДокумента <> Справочники.ВидыВнутреннихДокументов.АктВыполненныхРабот Тогда
        Если ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов") Тогда
            ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Состояние:'"));
            HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
            "<A href=v8doc:%1>%2</A><BR>",
            "status",
            Форма.СостояниеТекст);
		КонецЕсли; 
    КонецЕсли;
        
    Если ЗначениеЗаполнено(Объект.Ответственный) Тогда 
        ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Ответственный:'"),  Объект.Ответственный);
    КонецЕсли;
    
    // Этапы работ
    Если Объект.ВидДокумента.Родитель = Справочники.ВидыВнутреннихДокументов.ДоговораЗемлеустроительныхРабот Тогда
		
		// Состояние договора
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Состояние договора:'"), Строка(Форма.СостояниеДоговора), ЦветРегНомера);
		
		Этапы = ПолучитьЭтапы(Объект.Ссылка);
		
		ДатаДеноминации16 = Дата(2016, 7, 1);
        
        // Добавление информации о Подразделении и Источнике финансирования в правую колонку
        Если Этапы.Количество() > 0 Тогда
            HTMLТекст = HTMLТекст + "<td>";
            
            HTMLТекст = HTMLТекст + "<p>";
            ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подразделение:'"), 	Этапы[0].Подразделение);
            
            ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Источник финансирования:'"), Этапы[0].ИсточникФинансирования);
        КонецЕсли; 
        
        МассивЭтапов = Этапы.ВыгрузитьКолонку("Ссылка");
        Расчеты = ПолучитьРасчеты(МассивЭтапов, Объект.Ссылка);
        Дела = ПолучитьДелаАкты(МассивЭтапов);
        
        // новое
        ТаблицаПлановыхСроков = Расчеты[0].Выгрузить();
        ТаблицаОплаты = Расчеты[1].Выгрузить();
        ТаблицаВозвраты = Расчеты[2].Выгрузить();
        ТаблицаАкты = Расчеты[3].Выгрузить();
        ТаблицаСписание = Расчеты[4].Выгрузить();
        
         // Добавление информации о Списании сумм в правую колонку
        Если ТаблицаСписание.Количество() > 0 Тогда
			//HTMLТекст = HTMLТекст + "<td>";
			//HTMLТекст = HTMLТекст + "<p>";
			Для каждого Стр Из ТаблицаСписание Цикл
				Если ЗначениеЗаполнено(Стр.СписаноНаУбытки) Тогда
            		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Списано на убытки:'"), 	""+Формат(Стр.Период, "ДЛФ=D")+" Сумма: "+Формат(Стр.СписаноНаУбытки));
				ИначеЕсли ЗначениеЗаполнено(Стр.СписаноНаДоходы) Тогда
            		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Списано на доходы:'"), 	""+Формат(Стр.Период, "ДЛФ=D")+" Сумма: "+Формат(Стр.СписаноНаДоходы));
				КонецЕсли; 	
			КонецЦикла; 
		КонецЕсли; 
		
		// Закрываем правую колонку и таблицу
        HTMLТекст = HTMLТекст + "</td></tr>";	
        HTMLТекст = HTMLТекст + "</table>";
		
		// новое
        Если Этапы.Количество() > 0 Тогда
            HTMLТекст = HTMLТекст + "<table Border>";
            HTMLТекст = HTMLТекст + 
            "<TR>
            |<TH ROWSPAN=2 width=30%>Вид работ (Состояние)</TH>
            |<TH ROWSPAN=2>Стоимость с НДС</TH>
            |<TH ROWSPAN=2 width=15%>Исполнитель</TH>
            |<TH COLSPAN=2>Оплата</TH>
            |<TH COLSPAN=2>Возврат</TH>
            |<TH COLSPAN=2>Заактировано</TH>
            |<TH ROWSPAN=2>Плановый срок</TH>
            |<TH ROWSPAN=2 width=15%>Карточка</TH>
            |<TH ROWSPAN=2>Смета</TH>
            |<TH ROWSPAN=2 width=30%>Дело</TH>
			//|<TH ROWSPAN=2>Возврат акта</TH>
            |</TR> 
            |<TR>
            |<TH>Дата</TH><TH>__Сумма__</TH>
            |<TH>Дата</TH><TH>__Сумма__</TH>
            |<TH>Дата</TH><TH>__Сумма__</TH>
            |</TR>";

			СдвигНаименования = "";
			ОсновнойЭтапДоговора = "";
			
			Для каждого Этап Из Этапы Цикл
				Исключен = Этап.ДатаИсключенИзДоговора > Дата(1,1,1);
				
                HTMLТекст = HTMLТекст + "<tr>";
				НадоДеноминироватьЭтап = НадоДеноминироватьЭтап(Этап.Комментарий, Этап.ДатаПоследнейЗаписи, ДатаДеноминации16);
				
				// НадоДеноминировать было важно в переходный период до и сразу после деноминации
				//НадоДеноминировать = ТекущаяДата() >= ДатаДеноминации16;
				НадоДеноминировать = Истина;
				
				Если Этап.ЭтоОсновнойЭтап Тогда
					// надо подсчитать итоги по совместным этапам и вывести итог, а затем вывести основной и подчиненный со сдвигом в форме
				    Пар = Новый Структура();
					Пар.Вставить("Этапы", Этапы);
					Пар.Вставить("СтрЭтапа", Этап);
					Пар.Вставить("ТаблицаОплаты", ТаблицаОплаты);
					Пар.Вставить("ТаблицаВозвраты", ТаблицаВозвраты);
					Пар.Вставить("ТаблицаАкты", ТаблицаАкты);
					Пар.Вставить("ТаблицаПлановыхСроков", ТаблицаПлановыхСроков);
					Пар.Вставить("ДатаДеноминации16", ДатаДеноминации16);
					
					Результат = ИтогиОсновногоЭтапа(Пар);
					
					// Вывод итоговой строки основного этапа
					ВыводИтоговойСтрокиОсновногоЭтапа(Этап, Результат, HTMLТекст, Исключен, ДатаДеноминации16);
					
					СдвигНаименования = "*     ";
					ОсновнойЭтапДоговора = Этап.Ссылка;
				Иначе
					Если ОсновнойЭтапДоговора <> Этап.ОсновнойЭтапДоговора Тогда
						СдвигНаименования = "";
						ОсновнойЭтапДоговора = "";
					КонецЕсли; 
				КонецЕсли; 
				
                //Вид работ
                HTMLТекст = HTMLТекст + "<td>";
                //ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Этап: '"), Исключен);
				//ДобавитьПодпись(HTMLТекст, НСтр("ru = 'Этап: "+Этап.НомерЭтапа+"'"));
                АдресЭтапа = ПолучитьНавигационнуюСсылку(Этап.Ссылка);
				HTMLТекст = HTMLТекст + ?(Исключен, "<strike>", "");
                HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
                "<A href=v8doc:%1>%2</A><BR>",
                АдресЭтапа,
                СдвигНаименования+Этап.Наименование+?(ЗначениеЗаполнено(Этап.Состояние)," ("+Этап.Состояние+")", ""));
 				HTMLТекст = HTMLТекст + ?(Исключен, "</strike>", "");
               
                // Стоимость с НДС
                HTMLТекст = HTMLТекст + "<td ALIGN=center>";
				СтоимостьСНДС = Этап.СтоимостьСНДС;
				Если НадоДеноминироватьЭтап Тогда
					СтоимостьСНДС = Окр(Этап.СтоимостьСНДС / 10000, 2);
				КонецЕсли;
                ДобавитьРеквизит(HTMLТекст, "", Формат(СтоимостьСНДС, "ЧДЦ=2; ЧРГ=' '"), , Исключен);
                HTMLТекст = HTMLТекст + "</td>";
                
                // Исполнитель
                 Если Этап.Исполнители.Количество() > 0 Тогда
                    Выведен = Новый Соответствие;
                    HTMLТекст = HTMLТекст + "<td ALIGN=center>";
                    Для каждого Исп Из Этап.Исполнители Цикл
                        Если Выведен.Получить(Исп.Исполнитель) = Неопределено Тогда
                            ДобавитьРеквизит(HTMLТекст, "", Исп.Исполнитель, , Исключен);
                            Выведен.Вставить(Исп.Исполнитель, Исп.Исполнитель);
                        КонецЕсли; 
                    КонецЦикла; 
                    HTMLТекст = HTMLТекст + "</td>";
                Иначе
                    ДобавитьПустуюЯчейку(HTMLТекст);
                КонецЕсли; 
                
                // Расчеты
                
                ОтборЭтапа = Новый Структура("ЭтапДоговора", Этап.Ссылка);
                
                СтрокаПлановогоСрока = ТаблицаПлановыхСроков.НайтиСтроки(ОтборЭтапа);
                СтрокиОплат = ТаблицаОплаты.НайтиСтроки(ОтборЭтапа);
                СтрокиВозвратов = ТаблицаВозвраты.НайтиСтроки(ОтборЭтапа);
                СтрокиАктов = ТаблицаАкты.НайтиСтроки(ОтборЭтапа);
                
                ЕстьИтогиПоОплате = ?(СтрокиОплат.Количество() > 1, Истина, Ложь);
                ЕстьИтогиПоВозвратам = ?(СтрокиВозвратов.Количество() > 1, Истина, Ложь);
                ЕстьИтогиПоАктам = ?(СтрокиАктов.Количество() > 1, Истина, Ложь);
                
                КолвоСтрок = Макс(СтрокиОплат.Количество(), СтрокиВозвратов.Количество(), СтрокиАктов.Количество());
                
                Если КолвоСтрок <= 1 Тогда
                    // все выводим в одну строку рядом с этапом
                    
                    // Оплата
					Если СтрокиОплат.Количество() > 0 Тогда
						Сумма = ПолучитьСуммуСУчетомДеноминации(СтрокиОплат[0].СуммаОплаты, СтрокиОплат[0].ДатаОплаты, НадоДеноминировать, ДатаДеноминации16);
                        ДобавитьИнфу(Сумма, СтрокиОплат[0].ДатаОплаты, HTMLТекст, Исключен);
                    Иначе
                        ДобавитьПустуюЯчейку(HTMLТекст);
                        ДобавитьПустуюЯчейку(HTMLТекст);
                    КонецЕсли; 
                    
                    // Возврат
                    Если СтрокиВозвратов.Количество() > 0 Тогда
 						Сумма = ПолучитьСуммуСУчетомДеноминации(СтрокиВозвратов[0].СуммаВозврата, СтрокиВозвратов[0].ДатаВозврата, НадоДеноминировать, ДатаДеноминации16);
                        ДобавитьИнфу(Сумма, СтрокиВозвратов[0].ДатаВозврата, HTMLТекст, Исключен);
                    Иначе
                        ДобавитьПустуюЯчейку(HTMLТекст);
                        ДобавитьПустуюЯчейку(HTMLТекст);
                    КонецЕсли; 
                    
                    // Заактировано
					Если СтрокиАктов.Количество() > 0 Тогда
						//СтрАкта = Акты.НайтиСтроки(ОтборЭтапа);
						Сумма = ПолучитьСуммуСУчетомДеноминации(СтрокиАктов[0].СуммаАкта, СтрокиАктов[0].ДатаАкта, НадоДеноминировать, ДатаДеноминации16);
						//Сумма = ПолучитьСуммуСУчетомДеноминации(СтрокиАктов[Индекс].СуммаАкта, СтрокиАктов[Индекс].ДатаАкта, НадоДеноминировать, ДатаДеноминации16);
						//ДобавитьИнфу(Сумма, СтрокиАктов[0].ДатаАкта, HTMLТекст, Исключен);
						//Если СтрАкта.Количество() > 0 Тогда
							HTMLТекст = HTMLТекст + "<td ALIGN=center>";
							ЦветАкта = ПолучитьЦветАкта(СтрокиАктов[0].СостояниеАкта);
							//HTMLТекст = HTMLТекст + ?(Исключен, "<strike>", "");
							HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							"<A href=v8doc:%1>"+?(Исключен, "<strike>", "")+"<FONT color=#"+ЦветАкта+">%2</FONT>"+?(Исключен, "</strike>", "")+"</A><BR>",
							ПолучитьНавигационнуюСсылку(СтрокиАктов[0].АктВыполненныхРабот),
							Формат(СтрокиАктов[0].ДатаАкта, "ДФ=dd.MM.yy"));
							//HTMLТекст = HTMLТекст + ?(Исключен, "</strike>", "");
						    HTMLТекст = HTMLТекст + "</td>";
							
							HTMLТекст = HTMLТекст + "<td ALIGN=center>";
							//HTMLТекст = HTMLТекст + ?(Исключен, "<strike>", "");
							HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							"<A href=v8doc:%1>"+?(Исключен, "<strike>", "")+"<FONT color=#"+ЦветАкта+">%2</FONT>"+?(Исключен, "</strike>", "")+"</A><BR>",
							ПолучитьНавигационнуюСсылку(СтрокиАктов[0].АктВыполненныхРабот),
							Формат(Сумма, "ЧДЦ=2; ЧРГ=' '"));
							//HTMLТекст = HTMLТекст + ?(Исключен, "</strike>", "");
						    HTMLТекст = HTMLТекст + "</td>";
						//Иначе	
						//    ДобавитьИнфу(Сумма, СтрокиАктов[0].ДатаАкта, HTMLТекст);
						//КонецЕсли; 
                    Иначе
                        ДобавитьПустуюЯчейку(HTMLТекст);
                        ДобавитьПустуюЯчейку(HTMLТекст);
                    КонецЕсли; 
                    
                    // Плановый срок
                    Если СтрокаПлановогоСрока.Количество() > 0 и ЗначениеЗаполнено(СтрокаПлановогоСрока[0].ПлановыйСрок) Тогда
                        HTMLТекст = HTMLТекст + "<td ALIGN=center>";
                        ДобавитьРеквизит(HTMLТекст, "", Формат(СтрокаПлановогоСрока[0].ПлановыйСрок, "ДФ=dd.MM.yy"), , Исключен);
                        HTMLТекст = HTMLТекст + "</td>";
                    Иначе
                        ДобавитьПустуюЯчейку(HTMLТекст);
                    КонецЕсли;
                    
                    // КарточкаОбъектаРабот
                    ДобавитьКарточкуВОбзор(HTMLТекст, Этап.КарточкаОбъектаРабот, Исключен);
                    
                    // Смета 
                    ДобавитьСметуВОбзор(HTMLТекст, Этап.Смета, Исключен);
                    
                     // Дело 
					 ДобавитьДелоВОбзор(HTMLТекст, Этап.Ссылка, Дела, Исключен);
					 
					 HTMLТекст = HTMLТекст + "</td>";
				 Иначе
					 // документов оплат, возвратов или актов > 1 - рядом с этапом выводим итоги
					 //   доки в цикле под этапом
                    ВсегоЦиклов = КолвоСтрок - 1;
                    Если КолвоСтрок > 1 Тогда
                        // есть итоги, надо выводить на одну строку больше
                        ВсегоЦиклов = ВсегоЦиклов + 1;
                    КонецЕсли; 
                    Для й=0 По ВсегоЦиклов Цикл
                        Если й > 0 Тогда
                            // вывод пустых ячеек под этапом
                            HTMLТекст = HTMLТекст + "<tr>";
                            
                            //Вид работ
                            ДобавитьПустуюЯчейку(HTMLТекст);
                            
                            // Стоимость с НДС
                            ДобавитьПустуюЯчейку(HTMLТекст);
                            
                            // Исполнитель
                            ДобавитьПустуюЯчейку(HTMLТекст);
                        
                            // Оплата
                            Индекс = ?(ЕстьИтогиПоОплате, й-1, й);
							Если СтрокиОплат.Количество()-1 >= Индекс Тогда
								Сумма = ПолучитьСуммуСУчетомДеноминации(СтрокиОплат[Индекс].СуммаОплаты, СтрокиОплат[Индекс].ДатаОплаты, НадоДеноминировать, ДатаДеноминации16);
								ДобавитьИнфу(Сумма, СтрокиОплат[Индекс].ДатаОплаты, HTMLТекст, Исключен);
                            Иначе
                                ДобавитьПустуюЯчейку(HTMLТекст);
                                ДобавитьПустуюЯчейку(HTMLТекст);
                            КонецЕсли; 
                            
                            // Возврат
                            Индекс = ?(ЕстьИтогиПоВозвратам, й-1, й);
                            Если СтрокиВозвратов.Количество() -1 >= Индекс Тогда
								Сумма = ПолучитьСуммуСУчетомДеноминации(СтрокиВозвратов[Индекс].СуммаВозврата, СтрокиВозвратов[Индекс].ДатаВозврата, НадоДеноминировать, ДатаДеноминации16);
                                ДобавитьИнфу(Сумма, СтрокиВозвратов[Индекс].ДатаВозврата, HTMLТекст, Исключен);
                            Иначе
                                ДобавитьПустуюЯчейку(HTMLТекст);
                                ДобавитьПустуюЯчейку(HTMLТекст);
                            КонецЕсли; 
                            
                            // Заактировано
                            Индекс = ?(ЕстьИтогиПоАктам, й-1, й);
                            Если СтрокиАктов.Количество() -1 >= Индекс Тогда
								Сумма = ПолучитьСуммуСУчетомДеноминации(СтрокиАктов[Индекс].СуммаАкта, СтрокиАктов[Индекс].ДатаАкта, НадоДеноминировать, ДатаДеноминации16);
								//ДобавитьИнфу(Сумма, СтрокиАктов[Индекс].ДатаАкта, HTMLТекст, Исключен);
								
								HTMLТекст = HTMLТекст + "<td ALIGN=center>";
								ЦветАкта = ПолучитьЦветАкта(СтрокиАктов[Индекс].СостояниеАкта);
								//HTMLТекст = HTMLТекст + ?(Исключен, "<strike>", "");
								HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								"<A href=v8doc:%1>"+?(Исключен, "<strike>", "")+"<FONT color=#"+ЦветАкта+">%2</FONT>"+?(Исключен, "</strike>", "")+"</A><BR>",
								ПолучитьНавигационнуюСсылку(СтрокиАктов[Индекс].АктВыполненныхРабот),
								Формат(СтрокиАктов[Индекс].ДатаАкта, "ДФ=dd.MM.yy"));
								//HTMLТекст = HTMLТекст + ?(Исключен, "</strike>", "");
								HTMLТекст = HTMLТекст + "</td>";
								
								HTMLТекст = HTMLТекст + "<td ALIGN=center>";
								//HTMLТекст = HTMLТекст + ?(Исключен, "<strike>", "");
								HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								"<A href=v8doc:%1>"+?(Исключен, "<strike>", "")+"<FONT color=#"+ЦветАкта+">%2</FONT>"+?(Исключен, "</strike>", "")+"</A><BR>",
								ПолучитьНавигационнуюСсылку(СтрокиАктов[Индекс].АктВыполненныхРабот),
								Формат(Сумма, "ЧДЦ=2; ЧРГ=' '"));
								//HTMLТекст = HTMLТекст + ?(Исключен, "</strike>", "");
								HTMLТекст = HTMLТекст + "</td>";
							Иначе
								ДобавитьПустуюЯчейку(HTMLТекст);
								ДобавитьПустуюЯчейку(HTMLТекст);
							КонецЕсли; 
                            
                            // Плановый срок только в первой строке
                            ДобавитьПустуюЯчейку(HTMLТекст);
                            
                            // КарточкаОбъектаРабот
                            ДобавитьПустуюЯчейку(HTMLТекст);
                            
                            // Смета
                            ДобавитьПустуюЯчейку(HTMLТекст);
                            
                            // Дело
                            ДобавитьПустуюЯчейку(HTMLТекст);
							
							//// Дата возврата акта
							//ДобавитьПустуюЯчейку(HTMLТекст);
                           
                        Иначе
                            // вывод итогов по этапу, если строк несколько, либо единственное значение
                            
                            // Оплата
                            Если ЕстьИтогиПоОплате Тогда 
                                // Итог
                                ДобавитьПустуюЯчейку(HTMLТекст); // Дата
                                Итог = 0;
								//ИтогДоДеном = 0;
								Для каждого Стр Из СтрокиОплат Цикл
									Если Стр.ДатаОплаты < ДатаДеноминации16 Тогда
										Итог = Итог + Окр(Стр.СуммаОплаты / 10000, 2);
										//ИтогДоДеном = ИтогДоДеном + Стр.СуммаОплаты;
									Иначе
										Итог = Итог + Стр.СуммаОплаты;
									КонецЕсли;
								КонецЦикла; 
								//Если ИтогДоДеном <> 0 Тогда
								//	Итог = Итог + Окр(ИтогДоДеном / 10000, 2);
								//КонецЕсли; 
								Если Итог>0 Тогда
									HTMLТекст = HTMLТекст + "<td ALIGN=center><b>";
									ДобавитьРеквизит(HTMLТекст, "", Формат(Итог, "ЧДЦ=2; ЧРГ=' '"), , Исключен);
									HTMLТекст = HTMLТекст + "</b></td>";
								Иначе
									ДобавитьПустуюЯчейку(HTMLТекст);
								КонецЕсли; 
                            Иначе
                                // Значение или пусто
                                Если СтрокиОплат.Количество() = 1 Тогда
 									Сумма = ПолучитьСуммуСУчетомДеноминации(СтрокиОплат[й].СуммаОплаты, СтрокиОплат[й].ДатаОплаты, НадоДеноминировать, ДатаДеноминации16);
                                    ДобавитьИнфу(Сумма, СтрокиОплат[й].ДатаОплаты, HTMLТекст, Исключен);
                                Иначе
                                    ДобавитьПустуюЯчейку(HTMLТекст);
                                    ДобавитьПустуюЯчейку(HTMLТекст);
                                КонецЕсли; 
                            КонецЕсли; 
                            
                            // Возврат
                            Если ЕстьИтогиПоВозвратам Тогда 
                                // Итог
                                ДобавитьПустуюЯчейку(HTMLТекст); // Дата
                                Итог = 0;
								//ИтогДоДеном = 0;
								Для каждого Стр Из СтрокиВозвратов Цикл
									Если Стр.ДатаВозврата < ДатаДеноминации16 Тогда
										Итог = Итог + Окр(Стр.СуммаВозврата / 10000, 2);
										//ИтогДоДеном = ИтогДоДеном + Стр.СуммаВозврата;
									Иначе
										Итог = Итог + Стр.СуммаВозврата;
									КонецЕсли;
								КонецЦикла; 
								//Если ИтогДоДеном <> 0 Тогда
								//	Итог = Итог + Окр(ИтогДоДеном / 10000, 2);
								//КонецЕсли;
                                Если Итог>0 Тогда
                                    HTMLТекст = HTMLТекст + "<td ALIGN=center><b>";
                                    ДобавитьРеквизит(HTMLТекст, "", Формат(Итог, "ЧДЦ=2; ЧРГ=' '"), , Исключен);
                                    HTMLТекст = HTMLТекст + "</b></td>";
                                Иначе
                                    ДобавитьПустуюЯчейку(HTMLТекст);
                                КонецЕсли; 
                            Иначе
                                // Значение или пусто
                                Если СтрокиВозвратов.Количество() = 1 Тогда
 									Сумма = ПолучитьСуммуСУчетомДеноминации(СтрокиВозвратов[й].СуммаВозврата, СтрокиВозвратов[й].ДатаВозврата, НадоДеноминировать, ДатаДеноминации16);
                                    ДобавитьИнфу(Сумма, СтрокиВозвратов[й].ДатаВозврата, HTMLТекст, Исключен);
                                Иначе
                                    ДобавитьПустуюЯчейку(HTMLТекст);
                                    ДобавитьПустуюЯчейку(HTMLТекст);
                                КонецЕсли; 
                            КонецЕсли; 
                            
                            // Заактировано
                            Если ЕстьИтогиПоАктам Тогда 
                                // Итог
                                ДобавитьПустуюЯчейку(HTMLТекст); // Дата
                                Итог = 0;
								//ИтогДоДеном = 0;
                                Для каждого Стр Из СтрокиАктов Цикл
									Если Стр.ДатаАкта < ДатаДеноминации16 Тогда
										Итог = Итог + Окр(Стр.СуммаАкта / 10000, 2);
										//ИтогДоДеном = ИтогДоДеном + Стр.СуммаАкта;
									Иначе
										Итог = Итог + Стр.СуммаАкта;
									КонецЕсли;
								КонецЦикла; 
								//Если ИтогДоДеном <> 0 Тогда
								//	Итог = Итог + Окр(ИтогДоДеном / 10000, 2);
								//КонецЕсли; 
                                Если Итог>0 Тогда
									//СтрАкта = Акты.НайтиСтроки(ОтборЭтапа);
									//Если СтрокиАктов.Количество() > 0 Тогда
									//	ЦветАкта = ПолучитьЦветАкта(СтрокиАктов[й].СостояниеАкта);
									//	HTMLТекст = HTMLТекст + "<td ALIGN=center>";
									//	//HTMLТекст = HTMLТекст + ?(Исключен, "<strike>", "");
									//	HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									//	"<A href=v8doc:%1>"+?(Исключен, "<strike>", "")+"<FONT color=#"+ЦветАкта+">%2</FONT>"+?(Исключен, "</strike>", "")+"</A><BR>",
									//	ПолучитьНавигационнуюСсылку(СтрокиАктов[й].АктВыполненныхРабот),
									//	Формат(Итог, "ЧДЦ=2; ЧРГ=' '"));
									//	//HTMLТекст = HTMLТекст + ?(Исключен, "</strike>", "");
									//	HTMLТекст = HTMLТекст + "</td>";
									//	
									//Иначе	
										HTMLТекст = HTMLТекст + "<td ALIGN=center><b>";
										ДобавитьРеквизит(HTMLТекст, "", Формат(Итог, "ЧДЦ=2; ЧРГ=' '"), Исключен);
										HTMLТекст = HTMLТекст + "</b></td>";
									//КонецЕсли; 
                                Иначе
                                    ДобавитьПустуюЯчейку(HTMLТекст);
                                КонецЕсли; 
                            Иначе
                                // Значение или пусто
                                Если СтрокиАктов.Количество() = 1 Тогда
 									Сумма = ПолучитьСуммуСУчетомДеноминации(СтрокиАктов[й].СуммаАкта, СтрокиАктов[й].ДатаАкта, НадоДеноминировать, ДатаДеноминации16);
                                    //ДобавитьИнфу(Сумма, СтрокиАктов[й].ДатаАкта, HTMLТекст, Исключен);
 									Сумма = ПолучитьСуммуСУчетомДеноминации(СтрокиАктов[й].СуммаАкта, СтрокиАктов[й].ДатаАкта, НадоДеноминировать, ДатаДеноминации16);
									//ДобавитьИнфу(Сумма, СтрокиАктов[й].ДатаАкта, HTMLТекст, Исключен);
									HTMLТекст = HTMLТекст + "<td ALIGN=center>";
									ЦветАкта = ПолучитьЦветАкта(СтрокиАктов[й].СостояниеАкта);
									HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									"<A href=v8doc:%1>"+?(Исключен, "<strike>", "")+"<FONT color=#"+ЦветАкта+">%2</FONT>"+?(Исключен, "</strike>", "")+"</A><BR>",
									ПолучитьНавигационнуюСсылку(СтрокиАктов[й].АктВыполненныхРабот),
									Формат(СтрокиАктов[й].ДатаАкта, "ДФ=dd.MM.yy"));
									HTMLТекст = HTMLТекст + "</td>";
									
									HTMLТекст = HTMLТекст + "<td ALIGN=center>";
									HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									"<A href=v8doc:%1>"+?(Исключен, "<strike>", "")+"<FONT color=#"+ЦветАкта+">%2</FONT>"+?(Исключен, "</strike>", "")+"</A><BR>",
									ПолучитьНавигационнуюСсылку(СтрокиАктов[й].АктВыполненныхРабот),
									Формат(Сумма, "ЧДЦ=2; ЧРГ=' '"));
									HTMLТекст = HTMLТекст + "</td>";
                                Иначе
                                    ДобавитьПустуюЯчейку(HTMLТекст);
                                    ДобавитьПустуюЯчейку(HTMLТекст);
                                КонецЕсли; 
                            КонецЕсли; 
                            
                            // Плановый срок только в первой строке
                            Если СтрокаПлановогоСрока.Количество() > 0 И ЗначениеЗаполнено(СтрокаПлановогоСрока[0].ПлановыйСрок) Тогда
                                HTMLТекст = HTMLТекст + "<td ALIGN=center>";
                                ДобавитьРеквизит(HTMLТекст, "", Формат(СтрокаПлановогоСрока[0].ПлановыйСрок, "ДФ=dd.MM.yy"), , Исключен);
                                HTMLТекст = HTMLТекст + "</td>";
                            Иначе
                                ДобавитьПустуюЯчейку(HTMLТекст);
                            КонецЕсли; 
                            
                            // КарточкаОбъектаРабот
                            ДобавитьКарточкуВОбзор(HTMLТекст, Этап.КарточкаОбъектаРабот, Исключен);
                            
                            // Смета
                            ДобавитьСметуВОбзор(HTMLТекст, Этап.Смета, Исключен);
                            
                            // Дело 
                            ДобавитьДелоВОбзор(HTMLТекст, Этап.Ссылка, Дела, Исключен);
							
							HTMLТекст = HTMLТекст + "</td>";
                        КонецЕсли;
                    КонецЦикла; 
                КонецЕсли; 
                HTMLТекст = HTMLТекст + "</tr>";	
            КонецЦикла; 
            
            // Итого
            HTMLТекст = HTMLТекст + "<tr> ";
            HTMLТекст = HTMLТекст + "<td ALIGN=center><b>";
            ДобавитьРеквизит(HTMLТекст, "", "ИТОГО:");
            HTMLТекст = HTMLТекст + "</b></td>";
            
           // Стоимость с НДС
            HTMLТекст = HTMLТекст + "<td ALIGN=center><b>";
			Итог = 0;
			//ИтогДоДеном = 0;
			Для каждого Этап Из Этапы Цикл
				Если Этап.ДатаИсключенИзДоговора > Дата(1,1,1) Тогда
					Продолжить;
				КонецЕсли; 
				СтоимостьСНДС = Этап.СтоимостьСНДС;
				ЭтапДеноминирован = СтрНайти(Этап.Комментарий, "#Деноминация")>0 ИЛИ Этап.ДатаПоследнейЗаписи >= ДатаДеноминации16;
				НадоДеноминироватьЭтап = Не ЭтапДеноминирован и ТекущаяДата() >= ДатаДеноминации16;
				Если НадоДеноминироватьЭтап Тогда
					Итог = Итог + Окр(СтоимостьСНДС / 10000, 2);
					//ИтогДоДеном = ИтогДоДеном + Окр(СтоимостьСНДС / 10000, 2);
				Иначе
					Итог = Итог + СтоимостьСНДС;
				КонецЕсли;
			КонецЦикла; 
			//Если ИтогДоДеном <> 0 Тогда
			//	Итог = Итог + Окр(ИтогДоДеном / 10000, 2);
			//КонецЕсли; 
			
            ДобавитьРеквизит(HTMLТекст, "", Формат(Итог, "ЧДЦ=2; ЧРГ=' '"));
            HTMLТекст = HTMLТекст + "</b></td>";
            
            // Исполнитель
            ДобавитьПустуюЯчейку(HTMLТекст);
            
            // Оплаты
            ДобавитьПустуюЯчейку(HTMLТекст); // Дата
			Итог = 0;
			//ИтогДоДеном = 0;
			Для каждого Стр Из ТаблицаОплаты Цикл
				Если Стр.ДатаИсключенИзДоговора > Дата(1,1,1) Тогда
					Продолжить;
				КонецЕсли; 
				//Сумма = ПолучитьСуммуСУчетомДеноминации(Стр.СуммаОплаты, Стр.ДатаОплаты, НадоДеноминировать, ДатаДеноминации16);
				//Итог = Итог + Сумма; 
				Если Стр.ДатаОплаты < ДатаДеноминации16 Тогда
					Итог = Итог + Окр(Стр.СуммаОплаты / 10000, 2);
					//ИтогДоДеном = ИтогДоДеном + Стр.СуммаОплаты;
				Иначе
					Итог = Итог + Стр.СуммаОплаты;
				КонецЕсли;
			КонецЦикла; 
			//Если ИтогДоДеном <> 0 Тогда
			//	Итог = Итог + Окр(ИтогДоДеном / 10000, 2);
			//КонецЕсли; 
            Если Итог>0 Тогда
                HTMLТекст = HTMLТекст + "<td ALIGN=center><b>";
                ДобавитьРеквизит(HTMLТекст, "", Формат(Итог, "ЧДЦ=2; ЧРГ=' '"));
                HTMLТекст = HTMLТекст + "</b></td>";
            Иначе
                ДобавитьПустуюЯчейку(HTMLТекст);
            КонецЕсли; 
            
            // Возврат
            ДобавитьПустуюЯчейку(HTMLТекст); // Дата
			Итог = 0;
			//ИтогДоДеном = 0;
			Для каждого Стр Из ТаблицаВозвраты Цикл
				Если Стр.ДатаИсключенИзДоговора > Дата(1,1,1) Тогда
					Продолжить;
				КонецЕсли; 
				Если Стр.ДатаВозврата < ДатаДеноминации16 Тогда
					Итог = Итог + Окр(Стр.СуммаВозврата / 10000, 2);
					//ИтогДоДеном = ИтогДоДеном + Стр.СуммаВозврата;
				Иначе
					Итог = Итог + Стр.СуммаВозврата;
				КонецЕсли;
			КонецЦикла; 
			//Если ИтогДоДеном <> 0 Тогда
			//	Итог = Итог + Окр(ИтогДоДеном / 10000, 2);
			//КонецЕсли; 
            Если Итог>0 Тогда
                HTMLТекст = HTMLТекст + "<td ALIGN=center><b>";
                ДобавитьРеквизит(HTMLТекст, "", Формат(Итог, "ЧДЦ=2; ЧРГ=' '"));
                HTMLТекст = HTMLТекст + "</b></td>";
            Иначе
                ДобавитьПустуюЯчейку(HTMLТекст);
            КонецЕсли; 
            
            // Заактировано
            ДобавитьПустуюЯчейку(HTMLТекст); // Дата
			Итог = 0;
			//ИтогДоДеном = 0;
			Для каждого Стр Из ТаблицаАкты Цикл
				Если Стр.ДатаИсключенИзДоговора > Дата(1,1,1) Тогда
					Продолжить;
				КонецЕсли; 
				Если Стр.ДатаАкта < ДатаДеноминации16 Тогда
					Итог = Итог + Окр(Стр.СуммаАкта / 10000, 2);
					//ИтогДоДеном = ИтогДоДеном + Стр.СуммаАкта;
				Иначе
					Итог = Итог + Стр.СуммаАкта;
				КонецЕсли;
			КонецЦикла; 
			//Если ИтогДоДеном <> 0 Тогда
			//	Итог = Итог + Окр(ИтогДоДеном / 10000, 2);
			//КонецЕсли; 
 			Если Итог>0 Тогда
                HTMLТекст = HTMLТекст + "<td ALIGN=center><b>";
                ДобавитьРеквизит(HTMLТекст, "", Формат(Итог, "ЧДЦ=2; ЧРГ=' '"));
                HTMLТекст = HTMLТекст + "</b></td>";
            Иначе
                ДобавитьПустуюЯчейку(HTMLТекст);
            КонецЕсли; 

            // Плановый срок
            ДобавитьПустуюЯчейку(HTMLТекст);
            
            // КарточкаОбъектаРабот
            ДобавитьПустуюЯчейку(HTMLТекст);
            
            // Смета
            ДобавитьПустуюЯчейку(HTMLТекст);
            
            // Дело
            ДобавитьПустуюЯчейку(HTMLТекст);
            
			//// Дата возврата акта
			//ДобавитьПустуюЯчейку(HTMLТекст);
            
            HTMLТекст = HTMLТекст + "</tr>";	
                
            HTMLТекст = HTMLТекст + "</table>";   
        КонецЕсли; 
        
	ИначеЕсли Объект.ВидДокумента = Справочники.ВидыВнутреннихДокументов.Дело Тогда
		
		// Договор
		Договор = СвязиДокументов.ПолучитьСвязанныйДокумент(Объект.Ссылка, Справочники.ТипыСвязей.ОтноситсяКДоговору);
		Если Не ЗначениеЗаполнено(Договор) Тогда
			// пытаемся получить из этапа
			Если ЗначениеЗаполнено(Объект.ЭтапДоговора) Тогда
				Этап = Объект.ЭтапДоговора; 
				Договор = Этап.Владелец;
			КонецЕсли; 
		КонецЕсли; 
		
		// Добавляем в левую колонку
		HTMLТекст = HTMLТекст + "<p>";
		
		Если ЗначениеЗаполнено(Договор) Тогда
           // Поручение
            Поручение = СвязиДокументов.ПолучитьСвязанныйДокумент(Договор, Справочники.ТипыСвязей.НаОснованииПоручения);
            Если ЗначениеЗаполнено(Поручение) Тогда
                ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Поручение: '"),  Поручение); 
            Иначе
                ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Поручение: '"),  ""); 
            КонецЕсли; 
            ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Договор: '"),  Договор); 
		Иначе
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Поручение: '"),  ""); 
            ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Договор: '"),  ""); 
		КонецЕсли; 
		
		HTMLТекст = HTMLТекст + "<p>";
		
		Рекв = мПроверкаДела.ПолучитьВнесениеЗИС(Объект.Ссылка);
		Если Рекв <> Неопределено Тогда
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'ЗИС: '"),  Рекв.КомментарийЗИС);
		КонецЕсли; 
		
		// Выводим в правую колонку
		HTMLТекст = HTMLТекст + "<td>";
		Если ЗначениеЗаполнено(Договор) Тогда
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Заказчик: '"),  Договор.Корреспондент); 
		Иначе
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Заказчик: '"),  ""); 
		КонецЕсли; 
		Если ЗначениеЗаполнено(Объект.ЭтапДоговора) Тогда
			
			Этап = Объект.ЭтапДоговора; 
			// Адрес земельного участка
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Адрес земельного участка: '"),  Этап.Месторасположение);
			// Объект работ
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Объект: '"),  Этап.ОбъектРабот);
		Иначе	
			// Адрес земельного участка
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Адрес земельного участка: '"),  "");
			// Объект работ
			Если ЗначениеЗаполнено(Объект.мОбъектРабот) Тогда
				ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Объект: '"),  Объект.мОбъектРабот);
			Иначе	
				ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Объект: '"),  "");
			КонецЕсли; 
		КонецЕсли; 
		// Расписка
		СписокИсходящих = СвязиДокументов.ПолучитьСвязанныеДокументы(Объект.Ссылка, Справочники.ТипыСвязей.ПерепискаПоПредмету);
		Расписка = Справочники.ИсходящиеДокументы.ПустаяСсылка();
		Для каждого ИсхРасписка Из СписокИсходящих Цикл
			Если Найти(ИсхРасписка.ВидДокумента.Наименование, "Расписка")>0 Тогда
				Расписка = ИсхРасписка;
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
		Если ЗначениеЗаполнено(Расписка) Тогда
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Расписка: '"),  Расписка); 
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = '   Получатель: '"),  Расписка.УдалитьПолучателиДляСписков); 
		Иначе
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Расписка: '"),  ""); 
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = '   Получатель: '"),  ""); 
		КонецЕсли; 
		
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подписал: '"),  Объект.Утвердил);
		Если ЗначениеЗаполнено(Объект.Подготовил) И ЗначениеЗаполнено(Объект.Подразделение) Тогда
			ПодготовилТекст = СокрЛП(Объект.Подготовил) + ", " + СокрЛП(Объект.Подразделение);
		Иначе
			ПодготовилТекст = СокрЛП(Объект.Подготовил);
		КонецЕсли;	
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Подготовил: '"),  ПодготовилТекст); 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Номер техархива: '"),  Объект.мИнвентарныйНомерТехархива);
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Система координат: '"),  Объект.мСистемаКоординат); 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Номер геопортала: '"),  Объект.мНомерГеопортала); 
		
        HTMLТекст = HTMLТекст + "</td></tr>";	
        HTMLТекст = HTMLТекст + "</table>";
        
        // Акты проверки
        МассивАктов = ПолучитьДанныеАктовПроверки(Объект.Ссылка); 
        
        Если МассивАктов.Количество() > 0 Тогда
            Для каждого СтруктураАкта Из МассивАктов Цикл
                Если СтруктураАкта.Свойство("АктПроверки") Тогда
                    
                    ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Акт проверки:'"), 	СтруктураАкта.АктПроверки);
					ДобавитьЗначение(HTMLТекст, НСтр("ru = 'Уровень: '") + Строка(СтруктураАкта.УровеньПроверки)+НСтр("ru = '. Состояние: '")+	Строка(СтруктураАкта.Состояние), "");
                    
                    Если СтруктураАкта.Свойство("Замечания") и СтруктураАкта.Замечания.Количество() > 0 Тогда
                        // Открываем новую таблицу
                        HTMLТекст = HTMLТекст + "<table Border>";
                        HTMLТекст = HTMLТекст + 
                        "<TR>
                        |<TH width=10%>Проверяющий</TH>
                        //|<TH width=10%>Проверяющий</TH><TH>Замечание</TH>
                        //|<TH width=60%>Содержание</TH><TH>Оценка</TH><TH>Исправлено</TH>
                        |<TH width=60%>Замечание</TH><TH>Оценка</TH><TH>Исправлено</TH>
                        |</TR>";
                        
                        Для каждого Стр Из СтруктураАкта.Замечания Цикл
                            HTMLТекст = HTMLТекст + "<tr>"; 
                            
                            // Проверяющий
                            Если ЗначениеЗаполнено(Стр.Проверяющий) Тогда
                                HTMLТекст = HTMLТекст + "<td ALIGN=center><b>";
                                ДобавитьРеквизит(HTMLТекст, "", Стр.Проверяющий);
                                HTMLТекст = HTMLТекст + "</b></td>";
                            Иначе
                                ДобавитьПустуюЯчейку(HTMLТекст);
                            КонецЕсли; 
                            
                            //// Замечание
                            //Если ЗначениеЗаполнено(Стр.Замечание) Тогда
                            //    HTMLТекст = HTMLТекст + "<td ALIGN=left><b>";
                            //    ДобавитьРеквизит(HTMLТекст, "", Строка(Стр.Замечание));
                            //    HTMLТекст = HTMLТекст + "</b></td>";
                            //Иначе
                            //    ДобавитьПустуюЯчейку(HTMLТекст);
                            //КонецЕсли; 
                            
                            // Содержание
                            Если ЗначениеЗаполнено(Стр.Содержание) Тогда
                                HTMLТекст = HTMLТекст + "<td ALIGN=left><b>";
                                ДобавитьРеквизит(HTMLТекст, "", Стр.Содержание);
                                HTMLТекст = HTMLТекст + "</b></td>";
                            Иначе
                                ДобавитьПустуюЯчейку(HTMLТекст);
                            КонецЕсли; 
                            
                            // Оценка
                            Если ЗначениеЗаполнено(Стр.Оценка) Тогда
                                HTMLТекст = HTMLТекст + "<td ALIGN=center><b>";
                                ДобавитьРеквизит(HTMLТекст, "", Стр.Оценка);
                                HTMLТекст = HTMLТекст + "</b></td>";
                            Иначе
                                ДобавитьПустуюЯчейку(HTMLТекст);
                            КонецЕсли;
                            
                            // Исправлено
                            HTMLТекст = HTMLТекст + "<td ALIGN=center><b>";
                            ДобавитьРеквизит(HTMLТекст, "", Стр.Исправлено);
                            HTMLТекст = HTMLТекст + "</b></td>";
                            
                            HTMLТекст = HTMLТекст + "</tr>";	
                        КонецЦикла; 
                        
                        HTMLТекст = HTMLТекст + "</table>";

                    КонецЕсли; 
                КонецЕсли; 
            КонецЦикла; 
		КонецЕсли; 
		
	ИначеЕсли Объект.ВидДокумента = Справочники.ВидыВнутреннихДокументов.ДелоУслуги Тогда
		
		// Договор
		Договор = СвязиДокументов.ПолучитьСвязанныйДокумент(Объект.Ссылка, Справочники.ТипыСвязей.ОтноситсяКДоговору);
		Если Не ЗначениеЗаполнено(Договор) Тогда
			// пытаемся получить из этапа
			Если ЗначениеЗаполнено(Объект.ЭтапДоговора) Тогда
				Этап = Объект.ЭтапДоговора; 
				Договор = Этап.Владелец;
			КонецЕсли; 
		КонецЕсли; 
		
		// Выводим в правую колонку
		HTMLТекст = HTMLТекст + "<td>";
		
		// Заказчик дела
		_Заказчик = "";
		Если ЗначениеЗаполнено(Объект.мЗаказчик) Тогда
			_Заказчик = Объект.мЗаказчик;
		КонецЕсли; 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Заказчик: '"),  _Заказчик); 
		
		// РЕквизиты дела
		_Дело = "";
		Если ЗначениеЗаполнено(Объект.мНомерДелаЗаказчика) и ЗначениеЗаполнено(Объект.мДатаДелаЗаказчика) Тогда
			_Дело = Объект.мНомерДелаЗаказчика + " от " + Формат(Объект.мДатаДелаЗаказчика, "ДФ=dd.MM.yyyy");
		КонецЕсли; 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Дело заказчика: '"),  _Дело); 
		
		// ОбъектРабот
		_ОбъектРабот = "";
		Если ЗначениеЗаполнено(Объект.мОбъектРабот) Тогда
			_ОбъектРабот = Объект.мОбъектРабот;
		КонецЕсли; 
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Объект: '"),  _ОбъектРабот); 
		
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Проверил: '"),  Объект.мПроверил);
		
        HTMLТекст = HTMLТекст + "</td></tr>";	
        HTMLТекст = HTMLТекст + "</table>";
        
        // Справки проверки
        МассивСправок = ПолучитьДанныеСправкиПроверки(Объект.Ссылка); 
        
        Если МассивСправок.Количество() > 0 Тогда
            Для каждого СтруктураСправки Из МассивСправок Цикл
                Если СтруктураСправки.Свойство("СправкаПроверки") Тогда
                    
                    ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Справка проверки:'"), СтруктураСправки.СправкаПроверки);
                    ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Состояние:'"), СтруктураСправки.Состояние);
                    
                    Если СтруктураСправки.Свойство("Замечания") и СтруктураСправки.Замечания.Количество() > 0 Тогда
                        // Открываем новую таблицу
                        HTMLТекст = HTMLТекст + "<table Border>";
                        HTMLТекст = HTMLТекст + 
                        "<TR>
                        |<TH>Замечания</TH>
                        |</TR>";
                        
                        Для каждого Стр Из СтруктураСправки.Замечания Цикл
                            HTMLТекст = HTMLТекст + "<tr>"; 
                            
                            // Содержание
                            Если ЗначениеЗаполнено(Стр.Содержание) Тогда
                                HTMLТекст = HTMLТекст + "<td ALIGN=left><b>";
                                ДобавитьРеквизит(HTMLТекст, "", Стр.Содержание);
                                HTMLТекст = HTMLТекст + "</b></td>";
                            Иначе
                                ДобавитьПустуюЯчейку(HTMLТекст);
                            КонецЕсли; 
                            
                            HTMLТекст = HTMLТекст + "</tr>";	
                        КонецЦикла; 
                        
                        HTMLТекст = HTMLТекст + "</table>";

                    КонецЕсли; 
                КонецЕсли; 
            КонецЦикла; 
		КонецЕсли; 
		
	ИначеЕсли Объект.ВидДокумента = Справочники.ВидыВнутреннихДокументов.АктВыполненныхРабот Тогда
		
		РеквАкта = мРаботаСДоговорами.ПолучитьРеквизитыАктаВыполненныхРабот(Объект.Ссылка);
		Попытка
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Состояние акта: '"),  РеквАкта.СостояниеАкта);
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Вручен заказчику: '"),  Формат(РеквАкта.ВрученЗаказчику, "ДФ=dd.MM.yyyy"));
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Возвращен: '"),  Формат(РеквАкта.Возвращен, "ДФ=dd.MM.yyyy"));
		Исключение
		
		КонецПопытки;
		
		// Результат проверки
		РезультатПроверки = мРаботаСДоговорами.ЗамечаниеПроверкиАкта(Объект.Ссылка);
		
		Если ЗначениеЗаполнено(РезультатПроверки) Тогда
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Акт: '"), РезультатПроверки);
		Иначе	
			ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Акт: Проверен.'"),  "");
		КонецЕсли; 
		
	ИначеЕсли Объект.ВидДокумента = Справочники.ВидыВнутреннихДокументов.ДополнительноеСоглашениеДоговораЗемлеустроительныхРабот Тогда
		
		// Состояние договора
		ДобавитьРеквизит(HTMLТекст, НСтр("ru = 'Состояние доп. соглашения:'"), Форма.СостояниеДоговора);
		
    КонецЕсли; 
    
	HTMLТекст = HTMLТекст + "</body></html>";
	
	УдалитьТег(HTMLТекст, "script");
	
	УстановитьПривилегированныйРежим(Ложь);
	Возврат HTMLТекст;
	
КонецФункции

Процедура ВыводИтоговойСтрокиОсновногоЭтапа(Этап, Результат, HTMLТекст, Исключен, ДатаДеноминации16)
	
	//Вид работ
	HTMLТекст = HTMLТекст + "<td>";
	ДобавитьПодпись(HTMLТекст, Этап.Наименование, Исключен);
	HTMLТекст = HTMLТекст + ?(Исключен, "<strike>", "");
	
	// Стоимость с НДС
	HTMLТекст = HTMLТекст + "<td ALIGN=center>";
	СтоимостьСНДС = Результат.СтоимостьСНДС;
	НадоДеноминироватьЭтап = НадоДеноминироватьЭтап(Этап.Комментарий, Этап.ДатаПоследнейЗаписи, ДатаДеноминации16);
	Если НадоДеноминироватьЭтап Тогда
		СтоимостьСНДС = Окр(Результат.СтоимостьСНДС / 10000, 2);
	КонецЕсли;
	ДобавитьРеквизит(HTMLТекст, "", Формат(СтоимостьСНДС, "ЧДЦ=2; ЧРГ=' '"), , Исключен);
	HTMLТекст = HTMLТекст + "</td>";
	
    // Исполнитель
    ДобавитьПустуюЯчейку(HTMLТекст);
	
	// Оплата
	Если Результат.Оплата = 0 Тогда
		ДобавитьПустуюЯчейку(HTMLТекст); // Дата
		ДобавитьПустуюЯчейку(HTMLТекст); // Сумма
	Иначе
		ДобавитьИнфу(Результат.Оплата, '00010101000000', HTMLТекст, Исключен); // Дата и Сумма
	КонецЕсли; 
	
	// Возврат
	Если Результат.Возврат = 0 Тогда
		ДобавитьПустуюЯчейку(HTMLТекст); // Дата
		ДобавитьПустуюЯчейку(HTMLТекст); // Сумма
	Иначе
		ДобавитьИнфу(Результат.Возврат, '00010101000000', HTMLТекст, Исключен); // Дата и Сумма
	КонецЕсли; 

	// Заактировано
	Если Результат.Заактировано = 0 Тогда
		ДобавитьПустуюЯчейку(HTMLТекст); // Дата
		ДобавитьПустуюЯчейку(HTMLТекст); // Сумма
	Иначе
		ДобавитьИнфу(Результат.Возврат, '00010101000000', HTMLТекст, Исключен); // Дата и Сумма
	КонецЕсли; 
	
	// Плановый срок
	Если ЗначениеЗаполнено(Результат.ПлановыйСрок) Тогда
		HTMLТекст = HTMLТекст + "<td ALIGN=center>";
		ДобавитьРеквизит(HTMLТекст, "", Формат(Результат.ПлановыйСрок, "ДФ=dd.MM.yy"), , Исключен);
		HTMLТекст = HTMLТекст + "</td>";
	Иначе
		ДобавитьПустуюЯчейку(HTMLТекст);
	КонецЕсли;
	
	ДобавитьПустуюЯчейку(HTMLТекст); // КарточкаОбъектаРабот
	ДобавитьПустуюЯчейку(HTMLТекст); // Смета
	ДобавитьПустуюЯчейку(HTMLТекст); // Дело
	
	// окончание строки таблицы
	HTMLТекст = HTMLТекст + "</tr>";	
КонецПроцедуры

Функция ИтогиОсновногоЭтапа(Пар)
	СтоимостьСНДС = 0;
	СумОплата = 0;
	СумВозврат = 0;
	Заактировано = 0;
	ПлановыйСрок = '00010101000000'; // если Совместно

	Этапы = Пар.Этапы;
	СтрЭтапа = Пар.СтрЭтапа;
	ТаблицаОплаты = Пар.ТаблицаОплаты;
	ТаблицаВозвраты = Пар.ТаблицаВозвраты;
	ТаблицаАкты = Пар.ТаблицаАкты;
	ТаблицаПлановыхСроков = Пар.ТаблицаПлановыхСроков;
	ДатаДеноминации16 = Пар.ДатаДеноминации16;
	
	ЕстьСовместно = Ложь;
	ОсновнойЭтапДоговора = СтрЭтапа.Ссылка;
	
	СтоимостьСНДС = СтрЭтапа.СтоимостьСНДС;
	
	СписокСуммируемыхЭтапов = Новый СписокЗначений;
	СписокСуммируемыхЭтапов.Добавить(ОсновнойЭтапДоговора);
	
	Для каждого Этап Из Этапы Цикл
		Если ОсновнойЭтапДоговора = Этап.ОсновнойЭтапДоговора Тогда
			ЕстьСовместно = Этап.Совместно;
			СписокСуммируемыхЭтапов.Добавить(Этап.Ссылка);
			
			СтоимостьСНДС = СтоимостьСНДС + Этап.СтоимостьСНДС;
		КонецЕсли; 	
	КонецЦикла; 
	
	// Накопление сумм
	Для каждого Стр Из ТаблицаОплаты Цикл
		Если СписокСуммируемыхЭтапов.НайтиПоЗначению(Стр.ЭтапДоговора) <> Неопределено Тогда
			Сумма = ПолучитьСуммуСУчетомДеноминации(Стр.СуммаОплаты, Стр.ДатаОплаты, Истина, ДатаДеноминации16);
			СумОплата = СумОплата + Сумма;
		КонецЕсли; 	
	КонецЦикла; 
	Для каждого Стр Из ТаблицаВозвраты Цикл
		Если СписокСуммируемыхЭтапов.НайтиПоЗначению(Стр.ЭтапДоговора) <> Неопределено Тогда
			Сумма = ПолучитьСуммуСУчетомДеноминации(Стр.СуммаВозврата, Стр.ДатаВозврата, Истина, ДатаДеноминации16);
			СумВозврат = СумВозврат + Сумма;
		КонецЕсли; 	
	КонецЦикла; 
	Для каждого Стр Из ТаблицаАкты Цикл
		Если СписокСуммируемыхЭтапов.НайтиПоЗначению(Стр.ЭтапДоговора) <> Неопределено Тогда
			Сумма = ПолучитьСуммуСУчетомДеноминации(Стр.СуммаАкта, Стр.ДатаАкта, Истина, ДатаДеноминации16);
			Заактировано = Заактировано + Сумма;
		КонецЕсли; 	
	КонецЦикла; 
	Если ЕстьСовместно Тогда
		Для каждого Стр Из ТаблицаПлановыхСроков Цикл
			Если СписокСуммируемыхЭтапов.НайтиПоЗначению(Стр.ЭтапДоговора) <> Неопределено Тогда
				ПлановыйСрок = Стр.ПлановыйСрок;
				Прервать;
			КонецЕсли; 	
		КонецЦикла; 
	КонецЕсли; 
	
	Результат = Новый Структура(); 
	Результат.Вставить("СтоимостьСНДС", СтоимостьСНДС);
	Результат.Вставить("Оплата", СумОплата);
	Результат.Вставить("Возврат", СумВозврат);
	Результат.Вставить("Заактировано", Заактировано);
	Результат.Вставить("ПлановыйСрок", ПлановыйСрок); // если Совместно
	
	Возврат Результат;
КонецФункции 

Функция НадоДеноминироватьЭтап(Комментарий, ДатаПоследнейЗаписи, ДатаДеноминации16)

	ЭтапДеноминирован = СтрНайти(Комментарий, "#Деноминация")>0 ИЛИ ДатаПоследнейЗаписи >= ДатаДеноминации16;
	//НадоДеноминироватьЭтап = Не ЭтапДеноминирован и ТекущаяДата() >= ДатаДеноминации16;
	//НадоДеноминировать = ТекущаяДата() >= ДатаДеноминации16;
	
	НадоДеноминироватьЭтап = Не ЭтапДеноминирован;
	
	Возврат НадоДеноминироватьЭтап;
КонецФункции 

Функция ЗнакОкр(Дата) Экспорт
	Если Дата < Дата(2016, 7, 1) Тогда
		Возврат 0;
	Иначе	
	    Возврат 2;
	КонецЕсли; 
КонецФункции 

Функция ПолучитьСуммуСУчетомДеноминации(_Сумма, _Дата, _НадоДеном, _ДатаДеном)
	
	Если Не _НадоДеном Тогда
		Возврат _Сумма;
	КонецЕсли;
	
	Если _Дата < _ДатаДеном Тогда
		Возврат Окр(_Сумма / 10000, 2);
	КонецЕсли;
	
	Возврат _Сумма;
КонецФункции // 

Процедура ДобавитьИнфу(СуммаДок, ДатаДок, HTMLТекст, Зачеркнуть=Ложь)
    HTMLТекст = HTMLТекст + "<td ALIGN=center>";
    ДобавитьРеквизит(HTMLТекст, "", Формат(ДатаДок, "ДФ=dd.MM.yy"), , Зачеркнуть);
    HTMLТекст = HTMLТекст + "</td>";
    HTMLТекст = HTMLТекст + "<td ALIGN=center><b>";
    ДобавитьРеквизит(HTMLТекст, "", ?(СуммаДок=0, "", Формат(СуммаДок, "ЧДЦ=2; ЧРГ=' '")), , Зачеркнуть);
    HTMLТекст = HTMLТекст + "</b></td>";
КонецПроцедуры

Процедура ДобавитьКарточкуВОбзор(HTMLТекст, Карточка, Зачеркнуть=Ложь)
    Если ЗначениеЗаполнено(Карточка) Тогда
        ПредставлениеКарточки = "Показать";
        Заявка = Карточка.Поручение;
        Если ЗначениеЗаполнено(Заявка) Тогда
            ПредставлениеКарточки = Заявка.РегистрационныйНомер + " от "+Формат(Заявка.ДатаРегистрации,"ДЛФ=D"); 
        КонецЕсли; 
        HTMLТекст = HTMLТекст + "<td ALIGN=center>";
 		HTMLТекст = HTMLТекст + ?(Зачеркнуть, "<strike>", "");
       HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
        "<A href=v8doc:%1>%2</A><BR>",
        "Карточка"+Карточка.Код,
        ПредставлениеКарточки);
		HTMLТекст = HTMLТекст + ?(Зачеркнуть, "</strike>", "");
        HTMLТекст = HTMLТекст + "</td>";
    Иначе
        ДобавитьПустуюЯчейку(HTMLТекст);
    КонецЕсли; 
КонецПроцедуры

Процедура ДобавитьСметуВОбзор(HTMLТекст, Смета, Зачеркнуть=Ложь)
    Если ЗначениеЗаполнено(Смета) Тогда
        HTMLТекст = HTMLТекст + "<td ALIGN=center>";
  		HTMLТекст = HTMLТекст + ?(Зачеркнуть, "<strike>", "");
       HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
        "<A href=v8doc:%1>%2</A><BR>",
        "Смета"+Смета.Код,
        "№" + Смета.НомерСметы + " от " + Формат(Смета.ДатаРасчетаСметы,"ДЛФ=D"));
 		HTMLТекст = HTMLТекст + ?(Зачеркнуть, "</strike>", "");
       HTMLТекст = HTMLТекст + "</td>";
    Иначе
        ДобавитьПустуюЯчейку(HTMLТекст);
    КонецЕсли; 
КонецПроцедуры

Процедура ДобавитьДелоВОбзор(HTMLТекст, Этап, Дела, Зачеркнуть=Ложь)
    
    ОтборЭтапа = Новый Структура("ЭтапДоговора", Этап);
    
    СтрокиДел = Дела.НайтиСтроки(ОтборЭтапа);
    
    Если СтрокиДел.Количество() > 0 Тогда
        HTMLТекст = HTMLТекст + "<td ALIGN=center>";
  		HTMLТекст = HTMLТекст + ?(Зачеркнуть, "<strike>", "");
       Для каждого Стр Из СтрокиДел Цикл
            HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
            "<A href=v8doc:%1>%2</A><BR>",
            ПолучитьНавигационнуюСсылку(Стр.Дело),
            "№ "+Стр.Дело.РегистрационныйНомер+" от "+Формат(Стр.Дело.ДатаРегистрации, "ДЛФ=D"));
        КонецЦикла; 
  		HTMLТекст = HTMLТекст + ?(Зачеркнуть, "</strike>", "");
       HTMLТекст = HTMLТекст + "</td>";
    Иначе
        ДобавитьПустуюЯчейку(HTMLТекст);
    КонецЕсли; 

КонецПроцедуры

Процедура ДобавитьПустуюЯчейку(HTMLТекст)
    // пустая ячейка
    HTMLТекст = HTMLТекст + "<td>";
    ДобавитьРеквизит(HTMLТекст, "", " ");
    HTMLТекст = HTMLТекст + "</td>";
КонецПроцедуры

Процедура ДобавитьПодпись(HTMLТекст, Подпись, Зачеркнуть=Ложь)
	
	Если ЗначениеЗаполнено(Подпись) Тогда 
		HTMLТекст = HTMLТекст + "<FONT color=#413003>";
		HTMLТекст = HTMLТекст + ?(Зачеркнуть, "<strike>", "");
		HTMLТекст = HTMLТекст + Подпись + " ";
		HTMLТекст = HTMLТекст + ?(Зачеркнуть, "</strike>", "");
		HTMLТекст = HTMLТекст + "</FONT>";
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьЗначение(HTMLТекст, Значение, Цвет, Зачеркнуть=Ложь)
	
	Если ТипЗнч(Значение) = Тип("Строка") 
	 Или ТипЗнч(Значение) = Тип("Дата")	
	 Или ТипЗнч(Значение) = Тип("Число")
	 Или ТипЗнч(Значение) = Тип("Булево") Тогда 
		Если ЗначениеЗаполнено(Цвет) Тогда 
			HTMLТекст = HTMLТекст + "<FONT color=#"+Цвет+">";
			HTMLТекст = HTMLТекст + ?(Зачеркнуть, "<strike>", "");
			HTMLТекст = HTMLТекст + Значение;
			HTMLТекст = HTMLТекст + ?(Зачеркнуть, "</strike>", "");
			HTMLТекст = HTMLТекст + "</FONT>";
		Иначе	
			HTMLТекст = HTMLТекст + ?(Зачеркнуть, "<strike>", "");
			HTMLТекст = HTMLТекст + Значение;
			HTMLТекст = HTMLТекст + ?(Зачеркнуть, "</strike>", "");
		КонецЕсли;	
	Иначе
		HTMLТекст = HTMLТекст + ?(Зачеркнуть, "<strike>", "");
		HTMLТекст = HTMLТекст + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"<A href=v8doc:%1>%2</A>",
		ПолучитьНавигационнуюСсылку(Значение),
		Строка(Значение));
		HTMLТекст = HTMLТекст + ?(Зачеркнуть, "</strike>", "");
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьРеквизит(HTMLТекст, Подпись, Значение, Цвет = "", Зачеркнуть=Ложь)
	
	ДобавитьПодпись(HTMLТекст, Подпись, Зачеркнуть);
	ДобавитьЗначение(HTMLТекст, Значение, Цвет, Зачеркнуть); 
	HTMLТекст = HTMLТекст + "<br>";
	
КонецПроцедуры

Процедура ДобавитьДопРеквизит(HTMLТекст, Значение, Строка)
	
	ФорматСвойства = Строка.Свойство.ФорматСвойства;
	
	Если Не ЗначениеЗаполнено(ФорматСвойства) Тогда 
		ТипЗначения = Строка.Свойство.ТипЗначения;
		
		Если ТипЗначения.СодержитТип(Тип("Дата")) Тогда 
			Если ТипЗначения.КвалификаторыДаты.ЧастиДаты = ЧастиДаты.Время Тогда 
				ФорматСвойства = ФорматСвойства + "ДЛФ = 'T';";
			ИначеЕсли ТипЗначения.КвалификаторыДаты.ЧастиДаты = ЧастиДаты.Дата Тогда 
				ФорматСвойства = ФорматСвойства + "ДЛФ = 'D';";
			ИначеЕсли ТипЗначения.КвалификаторыДаты.ЧастиДаты = ЧастиДаты.ДатаВремя Тогда 	
				ФорматСвойства = ФорматСвойства + "ДЛФ = 'DT';";
			КонецЕсли;	
		КонецЕсли;	
		
		Если ТипЗначения.СодержитТип(Тип("Число")) Тогда 	
			Разрядность = ТипЗначения.КвалификаторыЧисла.Разрядность;
			РазрядностьДробнойЧасти = ТипЗначения.КвалификаторыЧисла.РазрядностьДробнойЧасти;
			
			ФорматСвойства = ФорматСвойства + "ЧЦ = '" + Разрядность + "';";
			ФорматСвойства = ФорматСвойства + "ЧДЦ = '" + РазрядностьДробнойЧасти + "';";
		КонецЕсли;	
	КонецЕсли;		
	
	Если ЗначениеЗаполнено(ФорматСвойства) Тогда 
		ДобавитьРеквизит(HTMLТекст, Строка(Строка.Наименование) + ":", Формат(Значение, ФорматСвойства));
	Иначе
		ДобавитьРеквизит(HTMLТекст, Строка(Строка.Наименование) + ":", Значение);
	КонецЕсли;	
	
КонецПроцедуры	

Функция ПолучитьКонтактнуюИнформацияОбъекта(Пользователь)
	
	КонтактнаяИнформация = Новый Структура;
	Емайл = "";Телефон = "";
	
	Если ТипЗнч(Пользователь) = Тип("СправочникСсылка.Пользователи") Тогда
		Емайл = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Пользователь, 
			Справочники.ВидыКонтактнойИнформации.EmailПользователя);
		Телефон = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Пользователь, 
			Справочники.ВидыКонтактнойИнформации.ТелефонПользователя);
	ИначеЕсли ТипЗнч(Пользователь) = Тип("СправочникСсылка.КонтактныеЛица") Тогда
		Емайл = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Пользователь, 
			Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица);
		Телефон = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Пользователь, 
			Справочники.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица);
	КонецЕсли; 
	
	Если 	ЗначениеЗаполнено(Телефон) Тогда 
		КонтактнаяИнформация.Вставить("Телефон", СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Телефон: %1'"), Телефон));	
	Иначе
		КонтактнаяИнформация.Вставить("Телефон", Телефон);
	КонецЕсли;			

	КонтактнаяИнформация.Вставить("Емайл", Емайл);

	Возврат КонтактнаяИнформация;
	
КонецФункции	

Процедура УдалитьТег(ТекстHTML, ИмяТега)
	
	НРегТекстHTML = НРег(ТекстHTML);
	
	Пока Найти(НРегТекстHTML, "<" + ИмяТега) <> 0 Цикл
		
		ПозицияНачалаТегаHTML = Найти(НРегТекстHTML, "<" + ИмяТега);
		ПозицияОкончанияТегаHTML = 0;
		Если ПозицияНачалаТегаHTML > 0 Тогда
			ПозицияОкончанияТегаHTML = РаботаСоСтроками.НайтиПосле(НРегТекстHTML, ">", ПозицияНачалаТегаHTML);
		КонецЕсли;
		
		Если ПозицияНачалаТегаHTML <> 0 И ПозицияОкончанияТегаHTML <> 0 Тогда
			
			ПозицияНачалаЗакрывающегоТегаHTML = РаботаСоСтроками.НайтиПосле(НРегТекстHTML, "</" + ИмяТега, ПозицияОкончанияТегаHTML);
			ПозицияОкончанияЗакрывающегоТегаHTML = 0;
			Если ПозицияНачалаЗакрывающегоТегаHTML > 0 Тогда
				ПозицияОкончанияЗакрывающегоТегаHTML = РаботаСоСтроками.НайтиПосле(НРегТекстHTML, ">", ПозицияНачалаЗакрывающегоТегаHTML);
			КонецЕсли;
			
			Если ПозицияНачалаЗакрывающегоТегаHTML <> 0 И ПозицияОкончанияЗакрывающегоТегаHTML <> 0 Тогда
				
				ТекстHTML = Лев(ТекстHTML, ПозицияНачалаТегаHTML - 1) 
					+ Сред(ТекстHTML, ПозицияОкончанияЗакрывающегоТегаHTML + 1);
				НРегТекстHTML = НРег(ТекстHTML);
				
			Иначе
				Возврат;	
			КонецЕсли;		
				
		Иначе
			Возврат;	
		КонецЕсли;		
		
	КонецЦикла;	
	
КонецПроцедуры	

Функция ПолучитьЭтапы(Владелец)

    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ ПЕРВЫЕ 1
    |	ВнутренниеДокументы.Ссылка КАК Дело
    |ПОМЕСТИТЬ Дела
    |ИЗ
    |	Справочник.ВнутренниеДокументы КАК ВнутренниеДокументы
    |ГДЕ
    |	ВнутренниеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыВнутреннихДокументов.Дело)
    |	И НЕ ВнутренниеДокументы.ПометкаУдаления
    |	И ВнутренниеДокументы.ЭтапДоговора.Владелец = &Владелец
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	ЭтапыДоговоров.Ссылка,
    |	ВЫРАЗИТЬ(ЭтапыДоговоров.НомерЭтапа КАК ЧИСЛО) КАК НомерЭтапа,
    |	ЭтапыДоговоров.Код,
    |	ЭтапыДоговоров.ВидРабот,
    |	ЭтапыДоговоров.Наименование,
    |	ЭтапыДоговоров.Состояние,
    |	ЭтапыДоговоров.СтоимостьСНДС,
    |	ЭтапыДоговоров.Исполнители.(
    |		Исполнитель.ПредставлениеВДокументах КАК Исполнитель
    |	) КАК Исполнители,
    |	ЭтапыДоговоров.Смета,
    |	ЭтапыДоговоров.КарточкаОбъектаРабот,
    |	Дела.Дело,
    |	ЭтапыДоговоров.Подразделение,
    |	ЭтапыДоговоров.Комментарий,
    |	ЭтапыДоговоров.ДатаПоследнейЗаписи,
    |	ЭтапыДоговоров.ДатаИсключенИзДоговора,
    |	ЭтапыДоговоров.Владелец.ДатаРегистрации КАК ДатаДоговора,
    |	ЭтапыДоговоров.ИсточникФинансирования,
    |	ВЫБОР
    |		КОГДА ЕСТЬNULL(мСвязиЭтаповДоговоров.ОсновнойЭтапДоговора, 0) = 0
    |			ТОГДА ЛОЖЬ
    |		ИНАЧЕ ИСТИНА
    |	КОНЕЦ КАК ЭтоОсновнойЭтап,
    |	ЕСТЬNULL(мСвязиЭтаповДоговоров1.ОсновнойЭтапДоговора, ЗНАЧЕНИЕ(Справочник.мЭтапыДоговоров.ПустаяСсылка)) КАК ОсновнойЭтапДоговора,
    |	ЭтапыДоговоров.ПорядокВыполненияСовместно КАК Совместно
    |ИЗ
    |	Справочник.мЭтапыДоговоров КАК ЭтапыДоговоров
    |		ЛЕВОЕ СОЕДИНЕНИЕ Дела КАК Дела
    |		ПО ЭтапыДоговоров.Ссылка = Дела.Дело.ЭтапДоговора
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.мСвязиЭтаповДоговоров КАК мСвязиЭтаповДоговоров
    |		ПО (мСвязиЭтаповДоговоров.ОсновнойЭтапДоговора = ЭтапыДоговоров.Ссылка)
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.мСвязиЭтаповДоговоров КАК мСвязиЭтаповДоговоров1
    |		ПО (мСвязиЭтаповДоговоров1.ЭтапДоговора = ЭтапыДоговоров.Ссылка)
    |ГДЕ
    |	ЭтапыДоговоров.Владелец = &Владелец
    |	И НЕ ЭтапыДоговоров.ПометкаУдаления
    |
    |УПОРЯДОЧИТЬ ПО
    |	НомерЭтапа";
    
    Запрос.УстановитьПараметр("Владелец", Владелец);
    
    Результат = Запрос.Выполнить().Выгрузить();
    
    Возврат Результат;

КонецФункции 

Функция ПолучитьРасчеты(МассивЭтапов, Договор)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	ДатыДоговоровСрезПоследних.ЭтапДоговора,
        |	ДатыДоговоровСрезПоследних.ЭтапДоговора.ДатаИсключенИзДоговора КАК ДатаИсключенИзДоговора,
        |	ДатыДоговоровСрезПоследних.Дата КАК ПлановыйСрок,
        |	МАКСИМУМ(ДатыДоговоровСрезПоследних.Период) КАК Период
        |ИЗ
        |	РегистрСведений.мДатыДоговоров.СрезПоследних(
        |			&ДатаСреза,
        |			ВидДатыДоговора = ЗНАЧЕНИЕ(Справочник.мВидыДатДоговоров.ПлановыйСрок)
        |				И ЭтапДоговора В (&МассивЭтапов)) КАК ДатыДоговоровСрезПоследних
        |
        |СГРУППИРОВАТЬ ПО
        |	ДатыДоговоровСрезПоследних.ЭтапДоговора,
        |	ДатыДоговоровСрезПоследних.ЭтапДоговора.ДатаИсключенИзДоговора,
        |	ДатыДоговоровСрезПоследних.Дата
        |
        |УПОРЯДОЧИТЬ ПО
        |	Период УБЫВ
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	РасчетыСПокупателямиОбороты.ЭтапДоговора,
        |	РасчетыСПокупателямиОбороты.ЭтапДоговора.ДатаИсключенИзДоговора КАК ДатаИсключенИзДоговора,
        |	ВЫБОР
        |		КОГДА РасчетыСПокупателямиОбороты.СуммаПриход > 0
        |			ТОГДА РасчетыСПокупателямиОбороты.СуммаПриход
        |		ИНАЧЕ ВЫБОР
        |				КОГДА РасчетыСПокупателямиОбороты.Регистратор ССЫЛКА Документ.мВзаимозачет
        |					ТОГДА РасчетыСПокупателямиОбороты.СуммаПриход
        |				ИНАЧЕ 0
        |			КОНЕЦ
        |	КОНЕЦ КАК СуммаОплаты,
        |	ВЫБОР
        |		КОГДА РасчетыСПокупателямиОбороты.СуммаПриход > 0
        |			ТОГДА РасчетыСПокупателямиОбороты.Период
        |		ИНАЧЕ ВЫБОР
        |				КОГДА РасчетыСПокупателямиОбороты.Регистратор ССЫЛКА Документ.мВзаимозачет
        |					ТОГДА РасчетыСПокупателямиОбороты.Период
        |				ИНАЧЕ &ПустаяДата
        |			КОНЕЦ
        |	КОНЕЦ КАК ДатаОплаты
        |ИЗ
        |	РегистрНакопления.РасчетыСПокупателями.Обороты(, , Регистратор, Договор = &Договор И ЭтапДоговора В (&МассивЭтапов)) КАК РасчетыСПокупателямиОбороты
        |ГДЕ
        |	РасчетыСПокупателямиОбороты.Период <> &ДатаДеноминации16
        |
        |СГРУППИРОВАТЬ ПО
        |	РасчетыСПокупателямиОбороты.ЭтапДоговора,
        |	РасчетыСПокупателямиОбороты.ЭтапДоговора.ДатаИсключенИзДоговора,
        |	РасчетыСПокупателямиОбороты.Регистратор,
        |	РасчетыСПокупателямиОбороты.СуммаПриход,
        |	РасчетыСПокупателямиОбороты.Период
        |
        |ИМЕЮЩИЕ
        |	ВЫБОР
        |		КОГДА РасчетыСПокупателямиОбороты.СуммаПриход > 0
        |			ТОГДА РасчетыСПокупателямиОбороты.СуммаПриход
        |		ИНАЧЕ ВЫБОР
        |				КОГДА РасчетыСПокупателямиОбороты.Регистратор ССЫЛКА Документ.мВзаимозачет
        |					ТОГДА РасчетыСПокупателямиОбороты.СуммаПриход
        |				ИНАЧЕ 0
        |			КОНЕЦ
        |	КОНЕЦ <> 0
        |
        |УПОРЯДОЧИТЬ ПО
        |	ДатаОплаты
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ВЫБОР
        |		КОГДА НЕ РасчетыСПокупателямиОбороты.Регистратор ССЫЛКА Документ.мВзаимозачет
        |			ТОГДА -РасчетыСПокупателямиОбороты.СуммаПриход
        |		ИНАЧЕ 0
        |	КОНЕЦ КАК СуммаВозврата,
        |	ВЫБОР
        |		КОГДА НЕ РасчетыСПокупателямиОбороты.Регистратор ССЫЛКА Документ.мВзаимозачет
        |			ТОГДА РасчетыСПокупателямиОбороты.Период
        |		ИНАЧЕ &ПустаяДата
        |	КОНЕЦ КАК ДатаВозврата,
		|	РасчетыСПокупателямиОбороты.ЭтапДоговора.ДатаИсключенИзДоговора КАК ДатаИсключенИзДоговора,
		|	РасчетыСПокупателямиОбороты.ЭтапДоговора
        |ИЗ
        |	РегистрНакопления.РасчетыСПокупателями.Обороты(, , Регистратор, Договор = &Договор И ЭтапДоговора В (&МассивЭтапов)) КАК РасчетыСПокупателямиОбороты
        |ГДЕ
        |	РасчетыСПокупателямиОбороты.СуммаПриход < 0
        |	И РасчетыСПокупателямиОбороты.Период <> &ДатаДеноминации16
        |
        |УПОРЯДОЧИТЬ ПО
        |	ДатаВозврата
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
		|	РасчетыСПокупателямиОбороты.ПериодДень КАК ДатаАкта,
        |	РасчетыСПокупателямиОбороты.СуммаРасход КАК СуммаАкта,
        |	РасчетыСПокупателямиОбороты.ЭтапДоговора КАК ЭтапДоговора,
        |	РасчетыСПокупателямиОбороты.ЭтапДоговора.ДатаИсключенИзДоговора КАК ДатаИсключенИзДоговора,
        |	РасчетыСПокупателямиОбороты.Регистратор КАК Регистратор,
        |	РасчетыСПокупателямиОбороты.НомерСтроки КАК НомерСтроки,
        |	мАктированиеАкты.Акт КАК АктВыполненныхРабот,
        |	мРеквизитыАктовВыполненныхРабот.СостояниеАкта КАК СостояниеАкта
        |ИЗ
        |	РегистрНакопления.РасчетыСПокупателями.Обороты(
        |			,
        |			,
        |			Авто,
        |			Договор = &Договор
        |				И ЭтапДоговора В (&МассивЭтапов)) КАК РасчетыСПокупателямиОбороты
        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.мАктирование.Акты КАК мАктированиеАкты
        |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.мРеквизитыАктовВыполненныхРабот КАК мРеквизитыАктовВыполненныхРабот
        |			ПО (мАктированиеАкты.Акт = мРеквизитыАктовВыполненныхРабот.Владелец)
        |				И (НЕ мРеквизитыАктовВыполненныхРабот.ПометкаУдаления)
        |		ПО (РасчетыСПокупателямиОбороты.Регистратор = мАктированиеАкты.Ссылка)
        |			И (РасчетыСПокупателямиОбороты.НомерСтроки = мАктированиеАкты.НомерСтроки)
        |ГДЕ
        |	РасчетыСПокупателямиОбороты.СуммаРасход <> 0
	    |	И РасчетыСПокупателямиОбороты.ПериодДень <> &ДатаДеноминации16
        |	И НЕ РасчетыСПокупателямиОбороты.Регистратор ССЫЛКА Документ.мСписаниеЗадолженности
		//|ВЫБРАТЬ
		//|	РасчетыСПокупателямиОбороты.Период КАК ДатаАкта,
		//|	РасчетыСПокупателямиОбороты.СуммаРасход КАК СуммаАкта,
		//|	РасчетыСПокупателямиОбороты.ЭтапДоговора,
		//|	РасчетыСПокупателямиОбороты.ЭтапДоговора.ДатаИсключенИзДоговора КАК ДатаИсключенИзДоговора
		////|	мРеквизитыАктовВыполненныхРабот.Владелец КАК АктВыполненныхРабот,
		////|	мРеквизитыАктовВыполненныхРабот.Владелец.РегистрационныйНомер КАК НомерАкта,
		////|	мРеквизитыАктовВыполненныхРабот.СостояниеАкта КАК СостояниеАкта
		//|ИЗ
		//|	РегистрНакопления.РасчетыСПокупателями.Обороты(, , Регистратор, Договор = &Договор И ЭтапДоговора В (&МассивЭтапов)) КАК РасчетыСПокупателямиОбороты
		////|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.мРеквизитыАктовВыполненныхРабот КАК мРеквизитыАктовВыполненныхРабот
		////|		ПО (РасчетыСПокупателямиОбороты.ЭтапДоговора = мРеквизитыАктовВыполненныхРабот.ЭтапДоговора
		////|				И НЕ мРеквизитыАктовВыполненныхРабот.ПометкаУдаления
		////|				И РасчетыСПокупателямиОбороты.Период = НАЧАЛОПЕРИОДА(мРеквизитыАктовВыполненныхРабот.Владелец.ДатаРегистрации, ДЕНЬ))
		//|ГДЕ
		//|	РасчетыСПокупателямиОбороты.СуммаРасход <> 0
		//|	И РасчетыСПокупателямиОбороты.Период <> &ДатаДеноминации16
		//|	И НЕ РасчетыСПокупателямиОбороты.Регистратор ССЫЛКА Документ.мСписаниеЗадолженности
        |
        |УПОРЯДОЧИТЬ ПО
        |	ДатаАкта
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	РасчетыСПокупателями.Период,
        |	ВЫБОР
        |		КОГДА РасчетыСПокупателями.ВидСписанияЗадолженности = ЗНАЧЕНИЕ(Перечисление.мВидыСписанияЗадолженности.НаУбытки)
        |			ТОГДА -РасчетыСПокупателями.Сумма
        |		ИНАЧЕ 0
        |	КОНЕЦ КАК СписаноНаУбытки,
        |	РасчетыСПокупателями.ЭтапДоговора КАК ЭтапДоговора,
        |	РасчетыСПокупателями.ЭтапДоговора.ДатаИсключенИзДоговора КАК ДатаИсключенИзДоговора,
        |	ВЫБОР
        |		КОГДА РасчетыСПокупателями.ВидСписанияЗадолженности = ЗНАЧЕНИЕ(Перечисление.мВидыСписанияЗадолженности.НаДоходы)
        |			ТОГДА РасчетыСПокупателями.Сумма
        |		ИНАЧЕ 0
        |	КОНЕЦ КАК СписаноНаДоходы
        |ИЗ
        |	РегистрНакопления.РасчетыСПокупателями КАК РасчетыСПокупателями
        |ГДЕ
        |	РасчетыСПокупателями.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
        |	И РасчетыСПокупателями.Договор = &Договор
        |	И РасчетыСПокупателями.ЭтапДоговора В(&МассивЭтапов)
        |	И НЕ РасчетыСПокупателями.ВидСписанияЗадолженности = ЗНАЧЕНИЕ(Перечисление.мВидыСписанияЗадолженности.ПустаяСсылка)"; 
        
    Запрос.УстановитьПараметр("Договор", Договор);
    Запрос.УстановитьПараметр("МассивЭтапов", МассивЭтапов);
    Запрос.УстановитьПараметр("ДатаСреза", ТекущаяДатаСеанса());
    Запрос.УстановитьПараметр("ПустаяДата", '00010101000000');
    Запрос.УстановитьПараметр("ДатаДеноминации16", '20160701000000');
   
    РезультатЗапроса = Запрос.ВыполнитьПакет();
    
    Возврат РезультатЗапроса;
КонецФункции 

Функция ПолучитьДелаАкты(МассивЭтапов)
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |	ВнутренниеДокументы.Ссылка КАК Дело,
    |	ВнутренниеДокументы.ЭтапДоговора КАК ЭтапДоговора
    |ИЗ
    |	Справочник.ВнутренниеДокументы КАК ВнутренниеДокументы
    |ГДЕ
    |	ВнутренниеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыВнутреннихДокументов.Дело)
    |	И НЕ ВнутренниеДокументы.ПометкаУдаления
    |	И ВнутренниеДокументы.ЭтапДоговора В(&МассивЭтапов)";
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВнутренниеДокументы.Ссылка КАК АктВыполненныхРабот,
	//|	ВнутренниеДокументы.ЭтапДоговора КАК ЭтапДоговора,
	//|	мРеквизитыАктовВыполненныхРабот.СостояниеАкта
	//|ИЗ
	//|	Справочник.ВнутренниеДокументы КАК ВнутренниеДокументы
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.мРеквизитыАктовВыполненныхРабот КАК мРеквизитыАктовВыполненныхРабот
	//|		ПО мРеквизитыАктовВыполненныхРабот.Владелец = ВнутренниеДокументы.Ссылка
	//|ГДЕ
	//|	ВнутренниеДокументы.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыВнутреннихДокументов.АктВыполненныхРабот)
	//|	И НЕ ВнутренниеДокументы.ПометкаУдаления
	//|	И ВнутренниеДокументы.ЭтапДоговора В(&МассивЭтапов)";

    Запрос.УстановитьПараметр("МассивЭтапов", МассивЭтапов);
	//Результат = Запрос.ВыполнитьПакет();
    Результат = Запрос.Выполнить().Выгрузить();
	
	//Дела = Результат[0].Выгрузить();
	//Акты = Результат[1].Выгрузить();
	//
	//ДелаАкты = Новый Структура("Дела, Акты", Дела, Акты); 
	//Возврат ДелаАкты;
    Возврат Результат;
    
КонецФункции // ()

Функция ПолучитьДанныеАктовПроверки(Владелец)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	мАктыПроверки.Ссылка КАК АктПроверки,
        |	мАктыПроверки.Состояние КАК Состояние,
        |	мАктыПроверки.УровеньПроверки КАк УровеньПроверки
        |ПОМЕСТИТЬ АктыПроверки
        |ИЗ
        |	Справочник.мАктыПроверки КАК мАктыПроверки
        |ГДЕ
        |	мАктыПроверки.Владелец = &Владелец
        |	И НЕ мАктыПроверки.ПометкаУдаления
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	мАктыПроверкиЗамечания.Замечание КАК Замечание,
        |	мАктыПроверкиЗамечания.Содержание,
        |	мАктыПроверкиЗамечания.Оценка,
        |	мАктыПроверкиЗамечания.Проверяющий.ПредставлениеВДокументах КАК Проверяющий,
        |	мАктыПроверкиЗамечания.Исправлено,
        |	мАктыПроверкиЗамечания.Ссылка
        |ПОМЕСТИТЬ Замечания
        |ИЗ
        |	Справочник.мАктыПроверки.Замечания КАК мАктыПроверкиЗамечания
        |ГДЕ
        |	НЕ мАктыПроверкиЗамечания.Ссылка.ПометкаУдаления
        |	И мАктыПроверкиЗамечания.Ссылка.Владелец = &Владелец
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	АктыПроверки.АктПроверки КАК АктПроверки,
        |	Замечания.Замечание,
        |	Замечания.Содержание,
        |	Замечания.Оценка,
        |	Замечания.Проверяющий,
        |	Замечания.Исправлено,
        |	АктыПроверки.Состояние КАК Состояние,
        |	АктыПроверки.УровеньПроверки КАК УровеньПроверки
        |ИЗ
        |	АктыПроверки КАК АктыПроверки
        |		ЛЕВОЕ СОЕДИНЕНИЕ Замечания КАК Замечания
        |		ПО АктыПроверки.АктПроверки = Замечания.Ссылка
        |ИТОГИ ПО
        |	АктПроверки";
    
    Запрос.УстановитьПараметр("Владелец", Владелец);
    
    Результат = Запрос.Выполнить();
    
    ВыборкаАкт = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    
    МассивАктов = Новый Массив;
    
    Пока ВыборкаАкт.Следующий() Цикл
        СтруктураАкта = Новый Структура(); 
        СтруктураАкта.Вставить("АктПроверки", ВыборкаАкт.АктПроверки);
        СтруктураАкта.Вставить("УровеньПроверки", ВыборкаАкт.АктПроверки.УровеньПроверки);
        СтруктураАкта.Вставить("Состояние", ВыборкаАкт.АктПроверки.Состояние);
        
        Замечания = ВыборкаАкт.Выбрать(ОбходРезультатаЗапроса.Прямой);
        
        МассивЗамечаний = Новый Массив;
        Пока Замечания.Следующий() Цикл
            Если Не ЗначениеЗаполнено(Замечания.Содержание) Тогда
                Продолжить;
            КонецЕсли; 
            СтруктураЗамечания = Новый Структура();
            СтруктураЗамечания.Вставить("Проверяющий", Замечания.Проверяющий);
            СтруктураЗамечания.Вставить("Содержание", Замечания.Содержание);
            СтруктураЗамечания.Вставить("Оценка", Замечания.Оценка);
            СтруктураЗамечания.Вставить("Исправлено", Замечания.Исправлено);
        	
            МассивЗамечаний.Добавить(СтруктураЗамечания);
        КонецЦикла; 
        
        СтруктураАкта.Вставить("Замечания", МассивЗамечаний);
        
        МассивАктов.Добавить(СтруктураАкта); 
    
    КонецЦикла;

    Возврат МассивАктов;

КонецФункции // ПолучитьДанныеАктовПроверки(Объект.Ссылка)

Функция ПолучитьДанныеСправкиПроверки(Владелец)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	мСправкиПроверки.Ссылка КАК СправкаПроверки
        |ПОМЕСТИТЬ СправкиПроверки
        |ИЗ
        |	Справочник.мСправкиПроверки КАК мСправкиПроверки
        |ГДЕ
        |	мСправкиПроверки.Владелец = &Владелец
        |	И НЕ мСправкиПроверки.ПометкаУдаления
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	мСправкиПроверкиЗамечания.Замечание КАК Замечание,
        |	мСправкиПроверкиЗамечания.Содержание,
        |	мСправкиПроверкиЗамечания.Ссылка
        |ПОМЕСТИТЬ Замечания
        |ИЗ
        |	Справочник.мСправкиПроверки.Замечания КАК мСправкиПроверкиЗамечания
        |ГДЕ
        |	НЕ мСправкиПроверкиЗамечания.Ссылка.ПометкаУдаления
        |	И мСправкиПроверкиЗамечания.Ссылка.Владелец = &Владелец
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	СправкиПроверки.СправкаПроверки КАК СправкаПроверки,
        |	Замечания.Замечание,
        |	Замечания.Содержание,
        |	СправкиПроверки.СправкаПроверки.Состояние КАК Состояние
        |ИЗ
        |	СправкиПроверки КАК СправкиПроверки
        |		ЛЕВОЕ СОЕДИНЕНИЕ Замечания КАК Замечания
        |		ПО СправкиПроверки.СправкаПроверки.Ссылка = Замечания.Ссылка
        |ИТОГИ ПО
        |	СправкаПроверки";
    
    Запрос.УстановитьПараметр("Владелец", Владелец);
    
    Результат = Запрос.Выполнить();
    
    Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    
    МассивСправки = Новый Массив;
    
    Пока Выборка.Следующий() Цикл
        СтруктураСправка = Новый Структура(); 
        СтруктураСправка.Вставить("СправкаПроверки", Выборка.СправкаПроверки);
        СтруктураСправка.Вставить("Состояние", Выборка.Состояние);
        
        Замечания = Выборка.Выбрать(ОбходРезультатаЗапроса.Прямой);
        
        МассивЗамечаний = Новый Массив;
        Пока Замечания.Следующий() Цикл
            Если Не ЗначениеЗаполнено(Замечания.Содержание) Тогда
                Продолжить;
            КонецЕсли; 
            СтруктураЗамечания = Новый Структура();
            СтруктураЗамечания.Вставить("Содержание", Замечания.Содержание);
        	
            МассивЗамечаний.Добавить(СтруктураЗамечания);
        КонецЦикла; 
        
        СтруктураСправка.Вставить("Замечания", МассивЗамечаний);
        
        МассивСправки.Добавить(СтруктураСправка); 
    
    КонецЦикла;

    Возврат МассивСправки;

КонецФункции 
