
////////////////////////////////////////////////////////////////////////////////
// Подсистема "Интернет-поддержка пользователей".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для работы с механизмом обновления конфигурации

// Переопределяет имя обработки для выполнения обновления конфигурации.
//
// Параметры:
// Имя - Строка - имя обработки обновления конфигурации. Значение по умолчанию
//	"ОбновлениеКонфигурации". Если обновление конфигурации не
//		предусмотрено, то требуется вставить строку: Имя = "";
//
Процедура ОпределитьИмяОбработкиОбновленияКонфигурации(Имя) Экспорт
	
	// автоматическое обновление конфигурации не предусмотрено
	Имя = "";
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Сервисные процедуры и функции

// Открывает интернет-старницу в обозревателе конфигурации.
//
// Параметры:
// АдресСтраницы - Строка - URL-адрес открываемой интернет-страницы;
// ЗаголовокОкна - Строка - заголовок окна, в котором отображается
//		интернет-страница;
//
// Пример:
// Если в конфигурации для открытия интернет-страниц используется
// собственная форма, то в теле процедуры необходимо описать вызов
// формы обозревателя, передав ей необходимые параметры.
//
// Если конфигурация, не имеет собственной формы для отображения
// интернет-страниц, необходимо описать вызов обозревателя,
// установленного в системе:
//
//	Попытка
//		ПерейтиПоНавигационнойСсылке(АдресСтраницы);
//	Исключение
//		
//		// Обработка исключения
//		
//	КонецПопытки;
//
Процедура ЗапуститьИнтернетСтраницуВОбозревателе(АдресСтраницы, ЗаголовокОкна) Экспорт
	
	ПерейтиПоНавигационнойСсылке(АдресСтраницы);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для работы с электронным документооборотом

// Переопределяет механизм интерактивного получения пароля доступа к закрытому
// ключу сертификата
//
// Параметры:
//	СертификатЭЦП - ЛюбаяСсылка - ссылка на объект данных, хранящий
//		сведения о сертификате;
//	ПарольСертификатаЭЦП - Строка - выходной параметр - пароль доступа к
//		закрытому ключу. Значение, передаваемое по умолчанию, - Неопределено.
//	ОбработчикОповещения - ОписаниеОповещения - обработчик, в который необходимо
//		передать пароль сертификата (тип Строка).
//
// Примечание: если пароль определить не удалось или пользователь отказался от
// продолжения выполнения последующих действий (например, нажал кнопку Отмена
// в каком-либо диалоге), то в качестве пароля сертификата ЭЦП необходимо
// возвратить значение Неопределено, чтобы сигнализировать механизму
// интернет-поддержки пользователей о завершении бизнес-процесса.
//
// Пример:
// Для конфигураций со встроенной библиотекой "Электронные документы"
//----------------------------------------------------------------
// //При использовании библиотеки электронных документов ред. 1.2:
//
//	ОписаниеОповещения = Новый ОписаниеОповещения("ПолучитьПарольЭЦПЗавершение", ЭтотОбъект, ОбработчикОповещения);
//	
//	ПараметрыСертификата = ЭлектронныеДокументыСлужебныйВызовСервера.РеквизитыСертификата(СертификатЭЦП);
//	
//	Соответствие = Новый Соответствие;
//	Соответствие.Вставить(СертификатЭЦП, ПараметрыСертификата);
//	
//	ПараметрыФормы = Новый Структура("Соответствие, ВидОперации",
//		Соответствие,
//		НСтр("ru = 'Проверка пароля сертификата'"));
//	ОткрытьФорму("Справочник.СертификатыЭП.Форма.ЗапросПароляДляХранения",
//		ПараметрыФормы,
//		,
//		,
//		,
//		,
//		ОписаниеОповещения,
//		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
//
//
//
//----------------------------------------------------------------
// // При использовании библиотеки электронных документов ред. 1.1:
//
// // При использовании библиотеки электронных документов версии 1.1.13 и старше:
//
//	ОписаниеОповещения = Новый ОписаниеОповещения("ПолучитьПарольЭЦПЗавершение", ЭтотОбъект, ОбработчикОповещения);
//	ПараметрыФормы = Новый Структура("СертификатЭП, ВидОперации",
//		СертификатЭЦП,
//		НСтр("ru = 'Проверка пароля сертификата'"));
//	ОткрытьФорму("Справочник.СертификатыЭЦП.Форма.ЗапросПароляДляХранения",
//		ПараметрыФормы,
//		,
//		,
//		,
//		,
//		ОписаниеОповещения,
//		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
//	
//	// ДАЛЕЕ НЕОБХОДИМО ЗАПОЛНИТЬ КОД ПРОЦЕДУРЫ ПолучитьПарольЭЦПЗавершение(),
//	// Т.К. ФОРМА ВОЗВРАЩАЕТ ПАРОЛЬ СЕРТИФИКАТА В СТРУКТУРЕ
//
//--------------------------------------------------------------------------------
//
// // При использовании библиотеки электронных документов версии 1.1.10 - 1.1.12:
//
//	ОписаниеОповещения = Новый ОписаниеОповещения("ПолучитьПарольЭЦПЗавершение", ЭтотОбъект, ОбработчикОповещения);
//	ПараметрыФормы = Новый Структура("СертификатЭП, ВидОперации",
//		СертификатЭЦП,
//		НСтр("ru = 'Проверка пароля сертификата'"));
//	ОткрытьФорму("ОбщаяФорма.ЗапросПароляНаЭЦПШифрование",
//		ПараметрыФормы,
//		,
//		,
//		,
//		,
//		ОписаниеОповещения,
//		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
//	
//	// ДАЛЕЕ НЕОБХОДИМО ЗАПОЛНИТЬ КОД ПРОЦЕДУРЫ ПолучитьПарольЭЦПЗавершение(),
//	// Т.К. ФОРМА ВОЗВРАЩАЕТ ПАРОЛЬ СЕРТИФИКАТА В СТРУКТУРЕ
//
//--------------------------------------------------------------------------------
//
// При использовании библиотеки электронных документов версии младше 1.1.10:
//
//	ПараметрыФормы = Новый Структура("Заголовок, ПредставлениеСертификата",
//		НСтр("ru = 'Введите пароль для закрытого ключа сертификата'"),
//		СертификатЭЦП);
//	ОткрытьФорму("ОбщаяФорма.ЗапросПароляНаЭЦПШифрование",
//		ПараметрыФормы,
//		,
//		,
//		,
//		,
//		ОбработчикОповещения,
//		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
//
Процедура ПолучитьПарольЭЦПНачало(СертификатЭЦП, ПарольСертификатаЭЦП, ОбработчикОповещения) Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПолучитьПарольЭЦПЗавершение", ЭтотОбъект, ОбработчикОповещения);
	
	ПараметрыСертификата = ЭлектронныеДокументыСлужебныйВызовСервера.РеквизитыСертификата(СертификатЭЦП);
	
	Соответствие = Новый Соответствие;
	Соответствие.Вставить(СертификатЭЦП, ПараметрыСертификата);
	
	ПараметрыФормы = Новый Структура("Соответствие, ВидОперации",
		Соответствие,
		НСтр("ru = 'Проверка пароля сертификата'"));
	ОткрытьФорму("Справочник.СертификатыЭП.Форма.ЗапросПароляДляХранения",
		ПараметрыФормы,
		,
		,
		,
		,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);


КонецПроцедуры

// Асинхронный обработчик данных пароля сертификата, возвращенных в результате
// закрытия формы получения пароля, открытой в процедуре
// ПолучитьПарольЭЦПНачало().
//
// Параметры:
//	Результат - Структура - данные пароля сертификата, возвращенные формой.
//	ОбработчикОповещения - ОписаниеОповещения - обработчик, в который необходимо
//		передать пароль сертификата (тип Строка).
//
//
// Пример:
// Для конфигураций со встроенной библиотекой "Электронные документы":
//-----------------------------------------------------------------------
// // Если в процедуре ПолучитьПарольЭЦПНачало() использован пример кода для
// // библиотеки электронных документов версии 1.1.10 и старше:
//
//	ПарольПользователя = Неопределено;
//	Если ТипЗнч(Результат) = Тип("Структура") Тогда
//		Результат.Свойство("ПарольПользователя", ПарольПользователя);
//	КонецЕсли;
//	
//	// Возврат пароля сертификата в обработчик оповещения:
//	ВыполнитьОбработкуОповещения(ОбработчикОповещения, ПарольПользователя);
//
Процедура ПолучитьПарольЭЦПЗавершение(Результат, ОбработчикОповещения) Экспорт
	
	ПарольПользователя = Неопределено;
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Результат.Свойство("ПарольПользователя", ПарольПользователя);
	КонецЕсли;
	
	// Возврат пароля сертификата в обработчик оповещения:
	ВыполнитьОбработкуОповещения(ОбработчикОповещения, ПарольПользователя);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для работы с интернет

// Определяет настройки прокси-сервера на стороне клиента 1С:Предприятия;
//
// Параметры:
// НастройкиПрокси - Соответствие - параметры прокси-сервера - в параметре
//		возвращаются настройки прокси-сервера на стороне клиента 1С:Предприятия:
//	* ИспользоватьПрокси - Булево - Истина, если использовать прокси-сервер;
//	* Пользователь - Строка, Неопределено - имя пользователя прокси-сервера;
//	* Пароль - Строка, Неопределено - пароль пользователя прокси-сервера;
//	* Сервер - Строка - сетевое имя прокси-сервера;
//	* Порт - Число - порт прокси-сервера;
//	* НеИспользоватьПроксиДляЛокальныхАдресов - Булево - Истина, если необходимо
//		отключить использование прокси-сервера для локальных адресов;
//	* ИспользоватьСистемныеНастройки - Булево - Истина, если необходимо
//		использовать системные настройки прокси-сервера;
//	* ДополнительныеНастройки - Соответствие - дополнительные прокси для
//		различных протоколов - ключ - имя протокола ("http", "https", "ftp"),
//		значение - структура со свойствами "Адрес" (Строка) и "Порт" (Число);
//
//
// Пример:
// Получение настроек прокси-сервера для конфигураций
// со встроенной подсистемой БСП "ПолучениеФайловИзИнтернета"
//
// НастройкиПрокси = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиента().НастройкиПроксиСервера;
//
////////////////////////////////////////////////////////////////////////////////
//
// Если в конфигурации не используется подсистема ПолучениеФайловИзИнтернета
// или не используется функционал подсистемы ПолучениеФайловИзИнтернета
// для настройки параметров прокси-сервера, то рекомендуется использовать
// автоматические настройки параметров прокси-сервера.
// В этом случае код должен иметь вид:
//
//	НастройкиПрокси = Новый Соответствие;
//	НастройкиПрокси["ИспользоватьПрокси"]             = Истина;
//	НастройкиПрокси["ИспользоватьСистемныеНастройки"] = Истина;
//
Процедура НастройкиПроксиСервера(НастройкиПрокси) Экспорт
	
	НастройкиПрокси = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиента().НастройкиПроксиСервера;
	
КонецПроцедуры

#КонецОбласти
