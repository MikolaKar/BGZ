#Область ПрограммныйИнтерфейс

// Дописывает текст уведомления и обнуляет число попыток уведомления
Процедура ДобавитьУведомление(Объект, Пользователь, СпособУведомления, ТекстУведомления, ВидСобытия, ОбъектПодписки) Экспорт 
	
	УстановитьПривилегированныйРежим(Истина);
		
	Запись = РегистрыСведений.ОчередьУведомлений.СоздатьМенеджерЗаписи();
	Запись.Объект = Объект;
	Запись.Пользователь = Пользователь;
	Запись.СпособУведомления = СпособУведомления;
	Запись.ВидСобытия = ВидСобытия;
	Запись.ОбъектПодписки = ОбъектПодписки;
	Запись.Прочитать();
	
	Запись.Объект = Объект;
	Запись.Пользователь = Пользователь;
	Запись.СпособУведомления = СпособУведомления;
	Запись.ВидСобытия = ВидСобытия;
	Запись.ОбъектПодписки = ОбъектПодписки;	
	Если ЗначениеЗаполнено(Запись.ТекстУведомления) Тогда
		Запись.ТекстУведомления = Запись.ТекстУведомления + Символы.ПС + Символы.ПС + ТекстУведомления;
	Иначе
		Запись.ТекстУведомления = ТекстУведомления;
	КонецЕсли;
	Запись.КоличествоПопытокОтправки = 0;
	Запись.Записать(Истина);
	
КонецПроцедуры

// Удаляет уведомления из очереди уведомлений 
Процедура УдалитьУведомление(Объект, Пользователь, СпособУведомления, ВидСобытия, ОбъектПодписки) Экспорт 
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запись = РегистрыСведений.ОчередьУведомлений.СоздатьМенеджерЗаписи();
	Запись.Объект = Объект;
	Запись.Пользователь = Пользователь;
	Запись.СпособУведомления = СпособУведомления;
	Запись.ВидСобытия = ВидСобытия;
	Запись.ОбъектПодписки = ОбъектПодписки;
	Запись.Удалить();
	
КонецПроцедуры

// Увеличивает число попыток отправки для уведомления
Функция УвеличитьЧислоПопытокОтправки(Объект, Пользователь, СпособУведомления, ВидСобытия, ОбъектПодписки) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
		
	Запись = РегистрыСведений.ОчередьУведомлений.СоздатьМенеджерЗаписи();
	Запись.Объект = Объект;
	Запись.Пользователь = Пользователь;
	Запись.СпособУведомления = СпособУведомления;
	Запись.ВидСобытия = ВидСобытия;
	Запись.ОбъектПодписки = ОбъектПодписки;	
	Запись.Прочитать();
	
	НовоеКоличествоПопытокОтправки = Запись.КоличествоПопытокОтправки + 1;
	Запись.Объект = Объект;
	Запись.Пользователь = Пользователь;
	Запись.СпособУведомления = СпособУведомления;
	Запись.ВидСобытия = ВидСобытия;
	Запись.ОбъектПодписки = ОбъектПодписки;	
	Запись.ТекстУведомления = Запись.ТекстУведомления;
	Запись.КоличествоПопытокОтправки = НовоеКоличествоПопытокОтправки;
	Запись.Записать(Истина);
	
	Возврат НовоеКоличествоПопытокОтправки;
	
КонецФункции

// Возвращает число попыток отправки для уведомления
Функция ПолучитьЧислоПопытокОтправки(Объект, Пользователь, СпособУведомления, ВидСобытия, ОбъектПодписки) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запись = РегистрыСведений.ОчередьУведомлений.СоздатьМенеджерЗаписи();
	Запись.Объект = Объект;
	Запись.Пользователь = Пользователь;
	Запись.СпособУведомления = СпособУведомления;
	Запись.ВидСобытия = ВидСобытия;
	Запись.ОбъектПодписки = ОбъектПодписки;
	Запись.Прочитать();
	
	Возврат Запись.КоличествоПопытокОтправки;
	
КонецФункции

// Возвращает список неотправленных уведомлений
Функция ПолучитьНеотправленныеУведомления() Экспорт 
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ОчередьУведомлений.Объект,
		|	ОчередьУведомлений.Пользователь,
		|	ОчередьУведомлений.СпособУведомления,
		|	ОчередьУведомлений.ВидСобытия,
		|	ОчередьУведомлений.ОбъектПодписки,
		|	ОчередьУведомлений.ТекстУведомления
		|ИЗ
		|	РегистрСведений.ОчередьУведомлений КАК ОчередьУведомлений
		|ГДЕ
		|	ОчередьУведомлений.КоличествоПопытокОтправки < 3");
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;

КонецФункции

#КонецОбласти