
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.БизнесПроцесс.Пустая() Тогда
		Отказ = Ложь;
	КонецЕсли;
	
	БизнесПроцесс = Параметры.БизнесПроцесс;
	СрокИсполненияПроцесса = Параметры.СрокИсполненияПроцесса;
	
	ТекстКомментария = "";
	
	РеквизитыПроцесса =
		ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Параметры.БизнесПроцесс, "Стартован, Состояние, ПроектнаяЗадача");
	
	НастройкаОтложенногоСтартаТолькоПросмотр = РеквизитыПроцесса.Стартован
			ИЛИ РеквизитыПроцесса.Состояние = Перечисления.СостоянияБизнесПроцессов.Остановлен
			ИЛИ РеквизитыПроцесса.Состояние = Перечисления.СостоянияБизнесПроцессов.Прерван;
			
	ПроцессСтартован = РеквизитыПроцесса.Стартован;
			
	// Заполнение настроек.
	
	Настройка = РегистрыСведений.НастройкаОтложенногоСтартаБизнесПроцессов.ПолучитьНастройкуПроцесса(
		Параметры.БизнесПроцесс);
		
	Если ЗначениеЗаполнено(Настройка) Тогда
		
		ОтложенныйСтартПроцесса = Истина;
		
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Настройка);
		
		Если НЕ Настройка.Состояние = Перечисления.СостоянияОтложенныхПроцессов.ГотовКСтарту
			И НЕ Настройка.Состояние = Перечисления.СостоянияОтложенныхПроцессов.Стартован Тогда
			
			ОтложенныйСтартПроцесса = Ложь;
			
		КонецЕсли;
		
	ИначеЕсли НЕ НастройкаОтложенногоСтартаТолькоПросмотр Тогда
		
		ОтложенныйСтартПроцесса = Истина;
		
		Если ЗначениеЗаполнено(РеквизитыПроцесса.ПроектнаяЗадача) Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СрокиПроектныхЗадач.ТекущийПланНачало
				|ИЗ
				|	РегистрСведений.СрокиПроектныхЗадач КАК СрокиПроектныхЗадач
				|ГДЕ
				|	СрокиПроектныхЗадач.ПроектнаяЗадача = &ПроектнаяЗадача";
			Запрос.УстановитьПараметр("ПроектнаяЗадача", РеквизитыПроцесса.ПроектнаяЗадача);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Следующий() Тогда
				ДатаОтложенногоСтарта = Выборка.ТекущийПланНачало;
			КонецЕсли;
			
			ТекстКомментария = ТекстКомментария
					+ НСтр("ru = 'Настройки заполнены на основании сроков проектной задачи.'");
			
		Иначе
			
			ДатаОтложенногоСтарта = НачалоДня(ТекущаяДатаСеанса() + 86400);
			
		КонецЕсли;
		
		Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОтложенныхПроцессов.ГотовКСтарту");
		
	КонецЕсли;
	
	ИспользоватьДатуИВремяВСрокахЗадач = ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	Элементы.ДатаОтложенногоСтартаВремя.Видимость = ИспользоватьДатуИВремяВСрокахЗадач;
	
	ОтложенныйСтартПроцессаПриОткрытии = ОтложенныйСтартПроцесса;
	
	// Установка доступности настройки
	
	Если ЗначениеЗаполнено(РеквизитыПроцесса) И НастройкаОтложенногоСтартаТолькоПросмотр Тогда
			
		Элементы.ОтложенныйСтартПроцесса.ТолькоПросмотр = Истина;
		Элементы.ДатаОтложенногоСтарта.ТолькоПросмотр = Истина;
		Элементы.ДатаОтложенногоСтартаВремя.ТолькоПросмотр = Истина;
		Элементы.Готово.Видимость = Ложь;
		Элементы.Отмена.Заголовок = НСтр("ru = 'Закрыть'");;
		Элементы.Отмена.КнопкаПоУмолчанию = Истина;
			
	КонецЕсли;
	
	Элементы.ДатаОтложенногоСтарта.ТолькоПросмотр = Элементы.ДатаОтложенногоСтарта.ТолькоПросмотр
		ИЛИ НЕ ОтложенныйСтартПроцесса;
	Элементы.ДатаОтложенногоСтартаВремя.ТолькоПросмотр = Элементы.ДатаОтложенногоСтартаВремя.ТолькоПросмотр
		ИЛИ НЕ ОтложенныйСтартПроцесса;
		
	// Вывод комментария
	Если ЗначениеЗаполнено(ТекстКомментария) Тогда
		Элементы.ДекорацияКомментарий.Заголовок = ТекстКомментария;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьОтображениеИнтервала();
	
	ОбновитьСписокВыбораВремени();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтложенныйСтартПроцессаПриИзменении(Элемент)
	
	УстановтьСостояниеОтложенногоСтартаПроцесса();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОтложенногоСтартаПриИзменении(Элемент)
	
	ОбновитьОтображениеИнтервала();
	
	ОбновитьСписокВыбораВремени();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОтложенногоСтартаВремяПриИзменении(Элемент)
	
	ОбновитьОтображениеИнтервала();
	
	ОбновитьСписокВыбораВремени();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы
//Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ГотовоПродолжить", ЭтотОбъект);
	
	Если ОтложенныйСтартПроцесса Тогда
		
		Если ДатаОтложенногоСтарта < ТекущаяДата() Тогда
		
			ТекстСообщения = НСтр("ru = 'Дата и время отложенного старта должны быть больше текущей даты.'");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,,
				"ДатаОтложенногоСтарта");
				
			Возврат;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СрокИсполненияПроцесса)
			И СрокИсполненияПроцесса < ДатаОтложенногоСтарта Тогда
			
			ТекстВопроса = НСтр("ru = 'Срок исполнения меньше даты отложенного старта процесса.
				|Выполнить отложенный запуск процесса?'");
			
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ГотовоПродолжить(Результат, Параметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьНастройку();
	
	Закрыть();
	
	НастройкиОтложенногоСтарта = 
		Новый Структура("БизнесПроцесс, ДатаОтложенногоСтарта, Состояние, ПричинаОтменыОтложенногоСтарта",
			БизнесПроцесс, ДатаОтложенногоСтарта, Состояние, ПричинаОтменыОтложенногоСтарта);
	
	Оповестить("ИзмененаНастройкаОтложенногоСтарта", НастройкиОтложенногоСтарта);
	
	Если ОтложенныйСтартПроцесса И НЕ ОтложенныйСтартПроцессаПриОткрытии Тогда
		ТекстОповещения = "Отложенный старт:";
	ИначеЕсли НЕ ОтложенныйСтартПроцесса И ОтложенныйСтартПроцессаПриОткрытии Тогда
		ТекстОповещения = "Отложенный старт отменен:";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстОповещения) Тогда
	
		НавигационнаяСсылкаНаПроцесс = ПолучитьНавигационнуюСсылку(БизнесПроцесс);
		ПоказатьОповещениеПользователя(
			ТекстОповещения,
			НавигационнаяСсылкаНаПроцесс,
			БизнесПроцесс,
			БиблиотекаКартинок.Информация32);
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановтьСостояниеОтложенногоСтартаПроцесса()
	
	Если ОтложенныйСтартПроцесса Тогда
		Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОтложенныхПроцессов.ГотовКСтарту");
		Элементы.ДатаОтложенногоСтарта.ТолькоПросмотр = Ложь;
		Элементы.ДатаОтложенногоСтартаВремя.ТолькоПросмотр = Ложь;
	Иначе
		Состояние = ПредопределенноеЗначение("Перечисление.СостоянияОтложенныхПроцессов.ПустаяСсылка");
		Элементы.ДатаОтложенногоСтарта.ТолькоПросмотр = Истина;
		Элементы.ДатаОтложенногоСтартаВремя.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройку()
	
	Если Состояние <> Перечисления.СостоянияОтложенныхПроцессов.СтартОтменен Тогда
		ПричинаОтменыОтложенногоСтарта = "";
	КонецЕсли;
	
	РегистрыСведений.НастройкаОтложенногоСтартаБизнесПроцессов.ЗаписатьНастройку(
		БизнесПроцесс, ДатаОтложенногоСтарта, Состояние, ПричинаОтменыОтложенногоСтарта);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтображениеИнтервала()
	
	Если НЕ ЗначениеЗаполнено(ДатаОтложенногоСтарта)
		ИЛИ ПроцессСтартован Тогда
		
		Элементы.ДекорацияИнтервал.Заголовок = "";
		
		Возврат;
		
	КонецЕсли;
	
	ТекущаяДата = ТекущаяДата();
	
	СимволНаправления = ?(ТекущаяДата < ДатаОтложенногоСтарта, "+", "-");
	
	Если ТекущаяДата > ДатаОтложенногоСтарта Тогда
		РазностьДат = ДелопроизводствоКлиентСервер.РазностьДатВДнях(ТекущаяДата, ДатаОтложенногоСтарта);
	Иначе
		РазностьДат = ДелопроизводствоКлиентСервер.РазностьДатВДнях(ДатаОтложенногоСтарта, ТекущаяДата);
	КонецЕсли;
	
	Элементы.ДекорацияИнтервал.Заголовок = 
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("(%1 %2)",
			СимволНаправления,
			РазностьДат);
			
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокВыбораВремени()
	
	Элементы.ДатаОтложенногоСтартаВремя.СписокВыбора.Очистить();
	
	ПустаяДата = НачалоДня(ДатаОтложенногоСтарта);
	
	Для Инд = 1 По 48 Цикл
		
		Элементы.ДатаОтложенногоСтартаВремя.СписокВыбора.Добавить(ПустаяДата, Формат(ПустаяДата, "ДФ=ЧЧ:мм"));
		
		ПустаяДата = ПустаяДата + 1800;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

