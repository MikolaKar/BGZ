
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПолучитьВидимостьКнопок();
	//ЗаполнитьСубъектыРБ();
	ЭтоLinuxКлиент = ОбщегоНазначенияКлиентСервер.ЭтоLinuxКлиент();
КонецПроцедуры 

Процедура ПолучитьВидимостьКнопок()
	Элементы.КомандаДалее.Заголовок = "Далее >";
	Если Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаВыборАдресныхОбъектов Тогда   
		ВыбраноДляЗагрузки = СтрЗаменить(ВыбраноДляЗагрузки, "0", "");
		Элементы.КомандаНазад.Видимость = Ложь;
		Элементы.КомандаДалее.Видимость = Истина;
		Элементы.КнопкаГотово.Видимость = Ложь;
		Элементы.КнопкаОтмена.Видимость = Истина;
		Элементы.КомандаДалее.Доступность = (ЗначениеЗаполнено(ПутьКФайламДанныхНаДиске) И ЗначениеЗаполнено(ВыбраноДляЗагрузки));
	ИначеЕсли Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаЗагрузки Тогда
		Элементы.КомандаДалее.Заголовок = "Загрузить";
		Элементы.КомандаНазад.Видимость = Не(Элементы.СтраницыЗагрузки.ТекущаяСтраница = Элементы.СтраницаИндикатора);
		Элементы.КомандаДалее.Видимость = Истина;
		Элементы.КнопкаГотово.Видимость = Ложь;
		Элементы.КнопкаОтмена.Видимость = Истина;
	ИначеЕсли Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаУспех Тогда
		Элементы.КомандаНазад.Видимость = Ложь;
		Элементы.КомандаДалее.Видимость = Ложь;
		Элементы.КнопкаГотово.Видимость = Истина;
		Элементы.КнопкаОтмена.Видимость = Ложь;
	ИначеЕсли Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаОшибка Тогда
		Элементы.КомандаНазад.Видимость = Ложь;
		Элементы.КомандаДалее.Видимость = Ложь;
		Элементы.КнопкаГотово.Видимость = Ложь;
		Элементы.КнопкаОтмена.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЗагруженныеОбъекты();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	АдресныйКлассификатор.КодАдресногоОбъектаВКоде КАК Код
	               |ИЗ
	               |	РегистрСведений.АдресныйКлассификатор КАК АдресныйКлассификатор
	               |ГДЕ
				   //МиСофт+
	               |	АдресныйКлассификатор.ТипАдресногоЭлемента = 1
	               |	И АдресныйКлассификатор.Код > 7";
				   //МиСофт-
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

&НаКлиенте
Процедура СубъектыРБПриИзменении(Элемент)
	Отбор = Новый Структура("Загружать", Истина);
	ВыбраноДляЗагрузки = СубъектыРБ.НайтиСтроки(Отбор).Количество();
	ПолучитьВидимостьКнопок();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	Для Каждого СубъектРБ Из СубъектыРБ Цикл
		СубъектРБ.Загружать = Истина;
	КонецЦикла;
	ВыбраноДляЗагрузки = СубъектыРБ.Количество();
	ПолучитьВидимостьКнопок();
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметкуСоВсех(Команда)
	Для Каждого СубъектРБ Из СубъектыРБ Цикл
		СубъектРБ.Загружать = Ложь;
	КонецЦикла;
	ВыбраноДляЗагрузки = "";
	ПолучитьВидимостьКнопок();
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайламДанныхНаДискеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	#Если Не ВебКлиент Тогда
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выбор каталога с файлами адресных сведений'");
	ДиалогОткрытияФайла.Каталог = Элементы.ПутьКФайламДанныхНаДиске.ТекстРедактирования;
	
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		ПутьКФайламДанныхНаДиске = ДиалогОткрытияФайла.Каталог;
		
		ОчиститьСообщения();
		
		Если АдресныйКлассификаторКлиент.ПроверитьНаличиеФайловДанныхВКаталоге(ПутьКФайламДанныхНаДиске) Тогда
			ПолучитьВидимостьКнопок();
		Иначе
			СообщениеПользователю = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Файлы адресных сведений не найдены в каталоге ""%1"".'"),
				ПутьКФайламДанныхНаДиске);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеПользователю, , "ПутьКФайламДанныхНаДиске");
		КонецЕсли;
	КонецЕсли;
#КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура КомандаДалее(Команда)
	Если Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаВыборАдресныхОбъектов Тогда
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаЗагрузки;
		Элементы.СтраницыЗагрузки.ТекущаяСтраница = Элементы.СтраницаЗагрузкиПустая;
	ИначеЕсли Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаЗагрузки Тогда
		Элементы.СтраницыЗагрузки.ТекущаяСтраница = Элементы.СтраницаИндикатора;
		Загрузить();
	КонецЕсли;
	ПолучитьВидимостьКнопок();
КонецПроцедуры

&НаКлиенте
Процедура Загрузить()
	// Передаем файлы на сервер
	Путь = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(СокрЛП(ПутьКФайламДанныхНаДиске));
	
	УстановитьСтатусЗагрузки(НСтр("ru = 'Передача файлов адресных сведений на сервер приложения.'"));
	ПереданныеФайлы = Новый Массив;
	
	ФайлыДляПередачи = Новый Массив;
	Для Каждого Файл Из НайтиФайлы(Путь, ?(ЭтоLinuxКлиент, "*.[Dd][Bb][Ff]", "*.dbf")) Цикл
		ФайлыДляПередачи.Добавить( Новый ОписаниеПередаваемогоФайла(Файл.ПолноеИмя) );
	КонецЦикла;
	Если ФайлыДляПередачи.Количество() = 0 Тогда
		Для Каждого Файл Из НайтиФайлы(Путь, ?(ЭтоLinuxКлиент, "*.[Zz][Ii][Pp]", "*.zip")) Цикл
			ФайлыДляПередачи.Добавить( Новый ОписаниеПередаваемогоФайла(Файл.ПолноеИмя) );
		КонецЦикла;
	КонецЕсли;
	
	Если ФайлыДляПередачи.Количество() = 0 Тогда
		ПереданныеФайлы = НСтр("ru = 'Не найдено файлов для передачи на сервер.'");
	Иначе
		Попытка
			Если Не ПоместитьФайлы(ФайлыДляПередачи , ПереданныеФайлы, , Ложь, ЭтотОбъект.УникальныйИдентификатор) Тогда
				ПереданныеФайлы = "";
			КонецЕсли;
		Исключение
			// Получаем строковое описание ошибки
			ПереданныеФайлы = ЗаписьИнформацииОбОшибке( ИнформацияОбОшибке() );
			ОшибкаЗагрузки = ОшибкаЗагрузки + ?(ЗначениеЗаполнено(ОшибкаЗагрузки), Символы.ПС, "") + ПереданныеФайлы;
		КонецПопытки;
	КонецЕсли;
	
	Если ТипЗнч(ПереданныеФайлы)<>Тип("Массив") Тогда
		Текст = Новый ФорматированнаяСтрока(
			НСтр("ru='Ошибка передачи файлов КЛАДР на сервер.'"), Символы.ПС,
			ПереданныеФайлы, Символы.ПС,
			НСтр("ru='Подробности в'"), " ", Новый ФорматированнаяСтрока(
				НСтр("ru='журнале регистрации'"),,,,"e1cib/app/Обработка.ЖурналРегистрации"
			)
		);
		ПоказатьПредупреждение(, Текст);
		
		УстановитьСтатусЗагрузки("");
		Возврат;
	КонецЕсли;
	
	// И запускаем загрузку на сервере в фоновом задании
	УстановитьСтатусЗагрузки(НСтр("ru = 'Загрузка адресных сведений в программу.'"));
	
	Отбор = Новый Структура("Загружать", Истина);
	ОбъектыЗагрузки = ПолучитьОбъектыЗагрузки();
	
	Результат = ЗагрузитьФайлыКЛАДРСервер(ОбъектыЗагрузки, ПереданныеФайлы, 3);
	Если Результат.ЗаданиеВыполнено Тогда
		// Готово
		ИдентификаторЗадания = Неопределено;
		УстановитьСтатусЗагрузки("");
	Иначе
		// Ожидаем выполнения 
		ИдентификаторЗадания = Результат.ИдентификаторЗадания;
		АдресХранилища       = Результат.АдресХранилища;
		
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПараметрыОбработчикаОжидания.МаксимальныйИнтервал = 5;
		
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
	КонецЕсли;
	
	//ОбновитьСодержание(Результат);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусЗагрузки(Знач Сообщение = "")
	
	СтатусЗагрузки = НСтр("ru = 'Пожалуйста, подождите...'") + Символы.ПС + Сообщение;
	Элементы.СтраницыЗагрузки.ТекущаяСтраница = Элементы.СтраницаИндикатора;
	ОбновитьОтображениеДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Если Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаЗагрузки Тогда
		СостояниеЗагрузки = СостояниеЗадания(ИдентификаторЗадания);
		Если СостояниеЗагрузки = 0 Тогда
			// Выполнено успешно
			ИдентификаторЗадания = Неопределено;
			ОбновитьСодержание(Новый Структура("РезультатЗагрузки", ПолучитьИзВременногоХранилища(АдресХранилища)) );
			
		ИначеЕсли СостояниеЗагрузки < 0 Тогда
			// Завершено аварийно, сообщения показаны
			ИдентификаторЗадания = Неопределено;
			//ПерейтиНаСтраницуВыбораИсточника();
			
		Иначе
			// Процесс продолжается
			ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
			ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 
				ПараметрыОбработчикаОжидания.ТекущийИнтервал, Истина);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция СостояниеЗадания(ИдентификаторЗадания)
	
	// Оставим запись в логах
	Попытка
		ФлагВыполнения = ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания)
	Исключение
		// Запись в журнал регистрации уже сделана
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат -1;
	КонецПопытки;
	
	Если Не ФлагВыполнения Тогда
		Возврат 1
	КонецЕсли;
	
	// Проверим дополнительно
	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
	Если Задание=Неопределено Тогда
		Возврат 0;
	ИначеЕсли Задание.Состояние=СостояниеФоновогоЗадания.Отменено Тогда
		Возврат 0;
	ИначеЕсли Задание.Состояние=СостояниеФоновогоЗадания.Завершено Тогда
		Возврат 0;
	ИначеЕсли Задание.Состояние=СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
		Возврат -1;
	КонецЕсли;
	
	Возврат 1;
КонецФункции

&НаКлиенте
Процедура ОбновитьСодержание(Результат)
	
	Если Не Результат.Свойство("РезультатЗагрузки") Тогда
		Возврат;
	КонецЕсли;
	
	//УстановитьДоступностьКнопокПриЗагрузке();
	
	ОбщегоНазначенияКлиентСервер.УдалитьКаталогСФайлами(Результат.РезультатЗагрузки.ПутьКДанным);
	ПутьКДаннымНаСервере = Результат.РезультатЗагрузки.ПутьКДаннымНаСервере;
	
	Если Не ПустаяСтрока(Результат.РезультатЗагрузки.СообщениеПользователю) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.РезультатЗагрузки.СообщениеПользователю);
	КонецЕсли;
	
	Если Результат.РезультатЗагрузки.СтатусВыполнения Тогда 
		// Успешно загружено
		Оповестить("Запись_АдресныйКлассификатор", Новый Структура("Событие", "Загрузить"));
		
		//СохранитьПараметрыЗагрузки();
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаУспех;
		ПолучитьВидимостьКнопок();
		
		ОчиститьСообщения();
	КонецЕсли;
	
КонецПроцедуры

Функция ЗаписьИнформацииОбОшибке(Знач Информация)
	ЗаписьЖурналаРегистрации(АдресныйКлассификатор.СобытиеЖурналаРегистрации(), 
		УровеньЖурналаРегистрации.Ошибка, , ПодробноеПредставлениеОшибки(Информация));
		
	Возврат КраткоеПредставлениеОшибки(Информация);
КонецФункции

Функция ПолучитьОбъектыЗагрузки()
	Результат = Новый Массив;
	Результат.Добавить("SO");
	Отбор = Новый Структура("Загружать", Истина);
	Для Каждого СубъектРБ Из СубъектыРБ.НайтиСтроки(Отбор) Цикл
		Результат.Добавить("0"+СубъектРБ.КодСубъекта);
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаСервере 
Функция ЗагрузитьФайлыКЛАДРСервер(Знач ОбъектыЗагрузки, Знач ПереданныеФайлы, Знач ИсточникДанных)
	
	Возврат АдресныйКлассификатор.ОбработатьФайлыКЛАДР(ОбъектыЗагрузки, ПереданныеФайлы, ИсточникДанных, ЭтотОбъект.УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Процедура КомандаНазад(Команда)
	Если Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаЗагрузки Тогда
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаВыборАдресныхОбъектов;
	КонецЕсли;
	ПолучитьВидимостьКнопок();
КонецПроцедуры
