
////////////////////////////////////////////////////////////////////////////////
// БЛОК ОБРАБОТЧИКОВ СОБЫТИЙ
//

// Обработчик события "при создании на сервере" формы.
// Заполняет список выбора адресных объектов для загрузки.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьТаблицуАдресныхОбъектов();
	
	ПутьКФайламДанныхНаДиске = "";
	ЗагрузитьСохраненныеПараметрыЗагрузки();
	
КонецПроцедуры

// Обработчик события "при открытии" формы
// Вызывает функциональность обновления интерфейса
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ВебКлиент Тогда
		Предупреждение(НСтр("ru = 'Классификатор не может быть загружен в Веб клиенте'"),, НСтр("ru = 'Загрузка адресного классификатора'"));
		Закрыть();
	#КонецЕсли
	
	УстановитьИзмененияВИнтерфейсе();
	
КонецПроцедуры

// Обработчик нажатия на "кнопку "ВыделитьВсе"
// командной панели элемента управления "АдресныеОбъектыДляЗагрузки"
// Выделяет все адресные объекты в списке адресных объектов для загрузки
//
&НаКлиенте
Процедура ВыделитьВсеВыполнить()
	
	Для Каждого ЭлементАдресныйОбъект Из АдресныеОбъектыДляЗагрузки Цикл
		ЭлементАдресныйОбъект.Пометка = Истина;
	КонецЦикла;
	
	УстановитьИзмененияВИнтерфейсе();
	
КонецПроцедуры

// Обработчик нажатия на "кнопку "ОтменитьВыделитьВсе"
// командной панели элемента управления "АдресныеОбъектыДляЗагрузки"
// Снимает выделение со всех адресных объектов в списке
// адресных объектов для загрузки
//
&НаКлиенте
Процедура ОтменитьВыделитьВсеВыполнить()
	
	Для Каждого ЭлементАдресныйОбъект Из АдресныеОбъектыДляЗагрузки Цикл
		ЭлементАдресныйОбъект.Пометка = Ложь;
	КонецЦикла;
	
	УстановитьИзмененияВИнтерфейсе();
	
КонецПроцедуры

// Обработчик события НачалоВыбора поля ввода формы ПутьКФайламДанныхНаДиске.
// Вызывает диалог выбора  директории, после выбора проверяет, существуют
// ли в выбранной директории файлы данных.
//
&НаКлиенте
Процедура ПутьКФайламДанныхНаДискеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
#Если Не ВебКлиент Тогда
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выбор каталога с файлами данных'");
	ДиалогОткрытияФайла.Каталог = Элементы.ПутьКФайламДанныхНаДиске.ТекстРедактирования;
	
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		ПутьКФайламДанныхНаДиске = ДиалогОткрытияФайла.Каталог;
		
		ОчиститьСообщения();
		
		Если АдресныйКлассификаторКлиент.ПроверитьНаличиеФайловДанныхВКаталоге(ПутьКФайламДанныхНаДиске) Тогда
			УстановитьИзмененияВИнтерфейсе ();
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'Файлы данных не найдены в каталоге ""%1"".'"),
							ПутьКФайламДанныхНаДиске), ,
						"ПутьКФайламДанныхНаДиске");
		КонецЕсли;
	КонецЕсли;
#Иначе
	Предупреждение(НСтр("ru = 'Функциональность не поддерживается на веб клиенте'"));
#КонецЕсли
	
КонецПроцедуры

// Обработчик события выбора поля таблицы "ЭлементАдресныйОбъект"
// Изменяет статус загрузки адресного объекта поля на противоположный
//
&НаКлиенте
Процедура ТаблицаАдресныхОбъектовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Элемент.ТекущиеДанные.Пометка = НЕ Элемент.ТекущиеДанные.Пометка;
	
КонецПроцедуры

// Обработчик нажатия на кнопку "Загрузить" командной панели формы
//
&НаКлиенте
Процедура ЗагрузитьВыполнить()
	
	ОчиститьСообщения();
	
	Если ЗагрузитьКЛАДР() Тогда
		Состояние(НСтр("ru = 'Адресный классификатор успешно загружен'"));
		Оповестить("ИзменениеАдресногоКлассификатора");
		СохранитьПараметрыЗагрузки();
		Закрыть(Истина);
	КонецЕсли;
	
	УстановитьСтатусЗагрузки("");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Управление мастером загрузки

// Обработчик нажатия на кнопку "Далее"
//
&НаКлиенте
Процедура КомандаДалее(Команда)
	
	ОчиститьСообщения();
	
	Если      Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаВыборАдресныхОбъектов Тогда
		Если КоличествоОтмеченныхАдресныхОбъектов() = 0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						НСтр("ru = 'Требуется выбрать хотя бы один адресный объект.'"), ,
						"АдресныеОбъектыДляЗагрузки");
			Возврат;
		КонецЕсли;
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаЗагрузка;
	КонецЕсли;
	
	УстановитьИзмененияВИнтерфейсе();
	
КонецПроцедуры

// Обработчик нажатия на кнопку "Назад"
//
&НаКлиенте
Процедура КомандаНазад(Команда)
	
	Если Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаЗагрузка Тогда
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаВыборАдресныхОбъектов;
	КонецЕсли;
	
	УстановитьИзмененияВИнтерфейсе();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// БЛОК СЕРВИСНЫХ ФУНКЦИЙ
//

&НаСервере
Процедура СохранитьПараметрыЗагрузки()
	
	//ИсточникКЛАДР = Новый Структура("ИсточникДанныхДляЗагрузки");
	//ИсточникКЛАДР.Вставить("ПутьКФайламДанныхНаДиске", ПутьКФайламДанныхНаДиске);
	//
	//ХранилищеОбщихНастроек.Сохранить("ПараметрыЗагрузкиАдресногоКлассификатора", "ИсточникКЛАДР", ИсточникКЛАДР);
	ХранилищеОбщихНастроек.Сохранить("ПараметрыЗагрузкиАдресногоКлассификатора", "ИсточникКЛАДР", ПутьКФайламДанныхНаДиске);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСохраненныеПараметрыЗагрузки()
	
	//ИсточникКЛАДР = ЗагрузитьНастройкуЗагрузкиКЛАДР("ИсточникКЛАДР");
	//
	//Если ИсточникКЛАДР <> Неопределено Тогда
	//	ПутьКФайламДанныхНаДиске = ИсточникКЛАДР.ПутьКФайламДанныхНаДиске;
	//КонецЕсли;
	ПутьКФайламДанныхНаДиске = ХранилищеОбщихНастроек.Загрузить("ПараметрыЗагрузкиАдресногоКлассификатора", "ИсточникКЛАДР");
КонецПроцедуры

//// Получает значение из системного хранилища настроек ИБ
////
//&НаСервереБезКонтекста
//Функция ЗагрузитьНастройкуЗагрузкиКЛАДР(КлючНастроек)
//	
//	Возврат ХранилищеОбщихНастроек.Загрузить("ПараметрыЗагрузкиАдресногоКлассификатора", КлючНастроек);
//	
//КонецФункции

// Устанавливает текст статус загрузки
//
&НаКлиенте
Процедура УстановитьСтатусЗагрузки(знач Сообщение = "")
	
	СтатусЗагрузки = Сообщение;
	
	Если ПустаяСтрока(Сообщение) Тогда
		Элементы.СтраницыЗагрузки.ТекущаяСтраница = Элементы.ГруппаПустаяГруппа;
	Иначе
		Элементы.СтраницыЗагрузки.ТекущаяСтраница = Элементы.СтраницаСтатусЗагрузки;
	КонецЕсли;
	
	ОбновитьОтображениеДанных();
	
КонецПроцедуры

// Релизация загрузки классификатора
//
&НаКлиенте
Функция ЗагрузитьКЛАДР()
	
	//ИндикаторЗагрузки = 0;
	//
	//// Загрузка Соответствий Адресных сокращений
	//АдресныеСокращения = Новый Соответствие;
	//АдресныйКлассификатор.ЗагрузитьАдресныеСокращения(АдресныеСокращения);
	// 
	//ВозвращаемоеЗначение = Истина;
	//
	//Если Прав(ПутьКФайламДанныхНаДиске, 1) <> "\" Тогда
	//	ПутьКФайламДанныхНаДиске = ПутьКФайламДанныхНаДиске + "\";
	//КонецЕсли;
	//
	//АдресныеОбъекты = Новый Массив;
	//Для Каждого ЭлементАО Из АдресныеОбъектыДляЗагрузки Цикл
	//	Если ЭлементАО.Пометка Тогда
	//		// Оставляем только названия областей
	//		ПозПробела = Найти(ЭлементАО.НаименованиеАдресногоОбъекта," ");
	//		
	//		АдресныеОбъекты.Добавить(Лев(ЭлементАО.НаименованиеАдресногоОбъекта, ПозПробела-1));
	//	Иначе
	//		АдресныеОбъекты.Добавить();
	//	КонецЕсли;
	//КонецЦикла;

	//Для Каждого АдресныйОбъект Из АдресныеОбъекты Цикл
	//	
	//	Если АдресныйОбъект = Неопределено Тогда
	//	    Продолжить;
	//	КонецЕсли; 
	//	
	//	НомерАО = АдресныеОбъекты.Найти(АдресныйОбъект)+1;
	//	
	//    // Загрузка классификатора населенных пунктов
	//    Попытка
	//        УстановитьСтатусЗагрузки(НСтр("ru = 'Загрузка классификатора населенных пунктов'"));
	//        АдресныйКлассификатор.ЗагрузитьКлассификаторПоГородам(ПутьКФайламДанныхНаДиске, НомерАО, АдресныйОбъект);
	//        ИндикаторЗагрузки = 25;
	//        ОбновитьОтображениеДанных();
	//        
	//    Исключение
	//        ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
	//        НСтр("ru = 'Ошибка при загрузке населенных пунктов: '")
	//        + КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
	//        ВозвращаемоеЗначение = Ложь;
	//    КонецПопытки;
	//    
	//    Постфикс = НомерАО;
	//	Если НомерАО = 5 Тогда 
	//		Постфикс = 1;
	//	ИначеЕсли НомерАО < 6 Тогда
	//		Постфикс = НомерАО + 1;
	//	КонецЕсли;	
	//	
	//	ПолноеИмяФайла = ПутьКФайламДанныхНаДиске + "NNUL"+Постфикс+".dbf";
	//	Файл = Новый Файл(ПолноеИмяФайла);
	//	УстановитьСтатусЗагрузки(НСтр("ru = 'Загрузка классификатора улиц'")+" ("+АдресныйОбъект+")");
	//	
	//	Если Файл.Существует() Тогда
	//		АдресныйКлассификатор.ЗагрузитьКлассификаторПоУлицам(ПолноеИмяФайла, НомерАО, АдресныеСокращения);
	//	Иначе
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
	//		НСтр("ru = 'Ошибка при загрузке улиц для '")+АдресныйОбъект+" не найден файл: "+ ПутьКФайламДанныхНаДиске + "NNUL"+Постфикс+".dbf");
	//		ВозвращаемоеЗначение = Ложь;
	//	КонецЕсли;
	//
	//	ИндикаторЗагрузки = 25 + НомерАО * 75 / АдресныеОбъекты.Количество();
	//	ОбновитьОтображениеДанных();
	//КонецЦикла;
	
	//Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Заполняет переданную таблицу значений по значениям таблицы адресных объектов.
// Выбирается наименование и сокращение типа объекта.
//
&НаСервере
Процедура ЗаполнитьТаблицуАдресныхОбъектов()
    
	АдресныеОбъектыДляЗагрузки.Очистить();
    ДобавитьНаименованиеАдресногоОбъекта("Брестская обл");
    ДобавитьНаименованиеАдресногоОбъекта("Витебская обл");
    ДобавитьНаименованиеАдресногоОбъекта("Гомельская обл");
    ДобавитьНаименованиеАдресногоОбъекта("Гродненская обл");
    ДобавитьНаименованиеАдресногоОбъекта("Минск г.");
    ДобавитьНаименованиеАдресногоОбъекта("Минская обл");
    ДобавитьНаименованиеАдресногоОбъекта("Могилевская обл");
    
КонецПроцедуры

// <Описание процедуры>
//
// Параметры
//  <ИмяОбъекта>  - <Строка> - наименование адресного объекта
//  <Пометка>  - <Булево> - 
//
&НаСервере
Процедура ДобавитьНаименованиеАдресногоОбъекта(ИмяОбъекта, Пометка = Ложь)
    
    НоваяСтрока = АдресныеОбъектыДляЗагрузки.Добавить();
	НоваяСтрока.НаименованиеАдресногоОбъекта = ИмяОбъекта;
	НоваяСтрока.Пометка = Пометка;
    
КонецПроцедуры // ДобавитьНаименованиеАдресногоОбъекта(ИмяОбъекта, Пометка = Ложь)
 

// Возвращает количество помеченных адресных объектов
//
&НаКлиенте
Функция КоличествоОтмеченныхАдресныхОбъектов()
	
	КоличествоОтмеченныхАдресныхОбъектов = 0;
	
	Для Каждого ЭлементАдресныйОбъект Из АдресныеОбъектыДляЗагрузки Цикл
		Если ЭлементАдресныйОбъект.Пометка Тогда
			КоличествоОтмеченныхАдресныхОбъектов = КоличествоОтмеченныхАдресныхОбъектов + 1;
		КонецЕсли;
	КонецЦикла;
	
	Возврат КоличествоОтмеченныхАдресныхОбъектов;
	
КонецФункции

// В зависимости от текущей страницы устанавливает доступность тех или иных полей для пользователя
//
&НаКлиенте
Процедура УстановитьИзмененияВИнтерфейсе()
	
	КоличествоОтмеченныхАдресныхОбъектов = КоличествоОтмеченныхАдресныхОбъектов();
	
	Если Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаВыборАдресныхОбъектов Тогда
		Элементы.Назад.Доступность = Ложь;
		Элементы.Далее.Доступность = Истина;
	ИначеЕсли Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаЗагрузка Тогда
		Элементы.Назад.Доступность = Истина;
		Элементы.Далее.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

