////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.ОсновнойОбъектАдресации <> Неопределено Тогда
		ОсновнойОбъектАдресации = Параметры.ОсновнойОбъектАдресации;
	Иначе	
		Элементы.ОсновнойОбъектАдресации.Видимость = Ложь;
	КонецЕсли;
	
	ОбновитьДанныеЭлементов();
	ИспользоватьВнешниеЗадачиИБизнесПроцессы = БизнесПроцессыИЗадачиПереопределяемый.ИспользоватьВнешниеЗадачиИБизнесПроцессы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Запись_РолеваяАдресация" Тогда
		ОбновитьДанныеЭлементов();
 	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	НазначитьИсполнителей(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПолеОсновнойОбъектАдресацииПриИзменении(Элемент)
	ОбновитьДанныеЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ВсеНазначенияВыполнить()
	
	ОткрытьФорму("РегистрСведений.ИсполнителиЗадач.ФормаСписка", 
		Новый Структура("Отбор", Новый Структура("ОсновнойОбъектАдресации", ОсновнойОбъектАдресации)),
		ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВыполнить()
	ОбновитьДанныеЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура НазначитьИсполнителей(Команда)
	
	Назначение = Элементы.Список.ТекущиеДанные;
	Если Назначение = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо выбрать роль в списке.'"));
		Возврат;
	КонецЕсли;
	
	Если ИспользоватьВнешниеЗадачиИБизнесПроцессы Тогда
		Если Назначение.ВнешняяРоль = Истина Тогда
			ПоказатьПредупреждение(, 
				НСтр("ru = 'Исполнители внешней роли должны быть определены в другой информационной базе.'"));
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОсновнойОбъектАдресации", ОсновнойОбъектАдресации);
	ПараметрыФормы.Вставить("Роль", Назначение.РольСсылка);
	
	ОткрытьФорму(
		"РегистрСведений.ИсполнителиЗадач.Форма.АдресацияПоОбъектуИРоли",
		ПараметрыФормы,,,,,,
		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ОбновитьДанныеЭлементов()
	
	Если ОсновнойОбъектАдресации <> Неопределено И ОсновнойОбъектАдресации <> "" Тогда
		Элементы.ОсновнойОбъектАдресации.Заголовок = ОсновнойОбъектАдресации.Метаданные().ПредставлениеОбъекта;
	КонецЕсли;	
	ВыборкаЗапроса = БизнесПроцессыИЗадачиСервер.ВыбратьРолиСКоличествомИсполнителей(ОсновнойОбъектАдресации);
	СписокОбъект = РеквизитФормыВЗначение("Список");
	СписокОбъект.Очистить();
	Пока ВыборкаЗапроса.Следующий() Цикл
		ТипЗначения = ВыборкаЗапроса.ТипыОсновногоОбъектаАдресации.ТипЗначения;
		ВключаетТип = Истина;
		Если ОсновнойОбъектАдресации <> Неопределено Тогда
			ВключаетТип = ТипЗначения <> Неопределено И ТипЗначения.СодержитТип(ТипЗнч(ОсновнойОбъектАдресации));
		КонецЕсли;
		Если ВключаетТип Тогда
			НоваяСтрока = СписокОбъект.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаЗапроса, "Исполнители,Роль,РольСсылка,ВнешняяРоль"); 
		КонецЕсли;
	КонецЦикла;
	СписокОбъект.Сортировать("Роль");
	Для каждого СтрокаСписка Из СписокОбъект Цикл
		Если СтрокаСписка.Исполнители = 0 Тогда
			СтрокаСписка.ИсполнителиСтрока = ?(СтрокаСписка.ВнешняяРоль, НСтр("ru = 'заданы в другой базе'"), НСтр("ru = 'не заданы'"));
			СтрокаСписка.Картинка = ?(СтрокаСписка.ВнешняяРоль, -1, 1);
		ИначеЕсли СтрокаСписка.Исполнители = 1 Тогда
			СтрокаСписка.ИсполнителиСтрока = Строка(БизнесПроцессыИЗадачиСервер.ВыбратьИсполнителя(ОсновнойОбъектАдресации, СтрокаСписка.РольСсылка));
			СтрокаСписка.Картинка = -1;
		Иначе
			СтрокаСписка.ИсполнителиСтрока =
			  СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			  НСтр("ru = '%1 чел'"), Строка(СтрокаСписка.Исполнители) );
			
			СтрокаСписка.Картинка = -1;
		КонецЕсли;
	КонецЦикла;
	ЗначениеВРеквизитФормы(СписокОбъект, "Список");
	
КонецПроцедуры
