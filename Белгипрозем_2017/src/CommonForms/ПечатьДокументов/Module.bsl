
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем КоллекцияПечатныхФорм;
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// поддержка обратной совместимости с 2.1.3
	ПараметрыПечати = Параметры.ПараметрыПечати;
	Если Параметры.ПараметрыПечати = Неопределено Тогда
		ПараметрыПечати = Новый Структура;
	КонецЕсли;
	Если Не ПараметрыПечати.Свойство("ДополнительныеПараметры") Тогда
		Параметры.ПараметрыПечати = Новый Структура("ДополнительныеПараметры", ПараметрыПечати);
		Для Каждого ПараметрПечати Из ПараметрыПечати Цикл
			Параметры.ПараметрыПечати.Вставить(ПараметрПечати.Ключ, ПараметрПечати.Значение);
		КонецЦикла;
	КонецЕсли;
	
	СформироватьПечатныеФормы(КоллекцияПечатныхФорм, Параметры.ИменаМакетов, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьРеквизитыИЭлементыФормыДляПечатныхФорм(КоллекцияПечатныхФорм);
	СохранитьНастройкиКомплектаПоУмолчанию();
	ЗагрузитьНастройкиКоличестваКопий();
	ЕстьРазрешенныйВывод = ЕстьРазрешенныйВывод();
	НастроитьВидимостьЭлементовФормы(ЕстьРазрешенныйВывод);
	УстановитьПризнакДоступностиВыводаВПредставленияхПечатныхФорм(ЕстьРазрешенныйВывод);
	УстановитьИмяПринтераВПодсказкеКнопкиПечать();
	УстановитьЗаголовокФормы();
	Если ЭтоПечатьКомплекта() Тогда
		Элементы.Копий.Заголовок = НСтр("ru = 'Копий комплекта'");
	КонецЕсли;
//1С-Минск +
	Если ПараметрыПечати.Свойство("КоличествоЭкземпляров") Тогда
		Копий = ПараметрыПечати.КоличествоЭкземпляров;
	КонецЕсли; 
//1С-Минск - 	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(НастройкиФорматаСохранения) Тогда
		Отказ = Истина; // отказ от открытия формы
		СохранитьПечатнуюФормуВФайл();
	КонецЕсли;
	УстановитьТекущуюСтраницу();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ВРег(ИсточникВыбора.ИмяФормы) = ВРег("ОбщаяФорма.СохранениеПечатнойФормы") Тогда
		
		Если ВыбранноеЗначение <> Неопределено И ВыбранноеЗначение <> КодВозвратаДиалога.Отмена Тогда
			ФайлыВоВременномХранилище = ПоместитьТабличныеДокументыВоВременноеХранилище(ВыбранноеЗначение);
			Если ВыбранноеЗначение.ВариантСохранения = "СохранитьВПапку" Тогда
				СохранитьПечатныеФормыВПапку(ФайлыВоВременномХранилище, ВыбранноеЗначение.ПапкаДляСохранения);
			Иначе
				ПрисоединитьПечатныеФормыКОбъекту(ФайлыВоВременномХранилище, ВыбранноеЗначение.ОбъектДляПрикрепления);
				Состояние(НСтр("ru = 'Сохранение успешно завершено.'"));
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ВРег(ИсточникВыбора.ИмяФормы) = ВРег("ОбщаяФорма.ВыборФорматаВложений")
		Или ВРег(ИсточникВыбора.ИмяФормы) = ВРег("ОбщаяФорма.ПодготовкаНовогоПисьма") Тогда
		
		Если ВыбранноеЗначение <> Неопределено И ВыбранноеЗначение <> КодВозвратаДиалога.Отмена Тогда
			СписокВложений = ПоместитьТабличныеДокументыВоВременноеХранилище(ВыбранноеЗначение);
			ПараметрыОтправки = ПараметрыВывода.ПараметрыОтправки;
			Получатели = ПараметрыОтправки.Получатель;
			Если ВыбранноеЗначение.Свойство("Получатели") Тогда
				Получатели = ВыбранноеЗначение.Получатели;
			КонецЕсли;
			
			РаботаСПочтовымиСообщениямиКлиент.ОткрытьФормуОтправкиПочтовогоСообщения(,
				Получатели, ПараметрыОтправки.Тема, ПараметрыОтправки.Текст, СписокВложений, Истина);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если Не ПустаяСтрока(КлючНастроек) Тогда
		СохраняемыеНастройкиПечатныхФорм = Новый Массив;
		Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
			СохраняемаяНастройка = Новый Структура;
			СохраняемаяНастройка.Вставить("ИмяМакета", НастройкаПечатнойФормы.ИмяМакета);
			СохраняемаяНастройка.Вставить("Количество", ?(НастройкаПечатнойФормы.Печатать,НастройкаПечатнойФормы.Количество, 0));
			СохраняемаяНастройка.Вставить("ПозицияПоУмолчанию", НастройкаПечатнойФормы.ПозицияПоУмолчанию);
			
			СохраняемыеНастройкиПечатныхФорм.Добавить(СохраняемаяНастройка);
		КонецЦикла;
		
		СохранитьНастройкиПечатныхФорм(КлючНастроек, СохраняемыеНастройкиПечатныхФорм);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	НастройкаПечатнойФормы = ТекущаяНастройкаПечатнойФормы();
	
	Если ИмяСобытия = "Запись_ПользовательскиеМакетыПечати" 
		И Источник.ВладелецФормы = ЭтотОбъект
		И Параметр.ИмяОбъектаМетаданныхМакета = НастройкаПечатнойФормы.ПутьКМакету Тогда
			ПодключитьОбработчикОжидания("ОбновитьТекущуюПечатнуюФорму",0.1,Истина);
	ИначеЕсли (ИмяСобытия = "ОтказОтИзмененияМакета"
		Или Имясобытия = "ОтменаРедактированияТабличногоДокумента"
		И Параметр.ИмяОбъектаМетаданныхМакета = НастройкаПечатнойФормы.ПутьКМакету)
		И Источник.ВладелецФормы = ЭтотОбъект Тогда
			ОтобразитьСостояниеТекущейПечатнойФормы();
	ИначеЕсли ИмяСобытия = "Запись_ТабличныйДокумент" 
		И Параметр.ИмяОбъектаМетаданныхМакета = НастройкаПечатнойФормы.ПутьКМакету 
		И Источник.ВладелецФормы = ЭтотОбъект Тогда
			Макет = Параметр.ТабличныйДокумент;
			АдресМакетаВоВременномХранилище = ПоместитьВоВременноеХранилище(Макет);
			ЗаписатьМакет(Параметр.ИмяОбъектаМетаданныхМакета, АдресМакетаВоВременномХранилище);
			ПодключитьОбработчикОжидания("ОбновитьТекущуюПечатнуюФорму",0.1,Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КопийПриИзменении(Элемент)
	Если НастройкиПечатныхФорм.Количество() = 1 Тогда
		НастройкиПечатныхФорм[0].Количество = Копий;
		ЭтотОбъект[НастройкиПечатныхФорм[0].ИмяРеквизита].КоличествоЭкземпляров = НастройкиПечатныхФорм[0].Количество;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройкиПечатныхФорм

&НаКлиенте
Процедура НастройкиПечатныхФормПриИзменении(Элемент)
	
	МожноПечатать = Ложь;
	МожноСохранять = Ложь;
	
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		ПечатнаяФорма = ЭтотОбъект[НастройкаПечатнойФормы.ИмяРеквизита];
		ПолеТабличногоДокумента = Элементы[НастройкаПечатнойФормы.ИмяРеквизита];
		
		МожноПечатать = МожноПечатать Или НастройкаПечатнойФормы.Печатать И ПечатнаяФорма.ВысотаТаблицы > 0
			И ПолеТабличногоДокумента.Вывод = ИспользованиеВывода.Разрешить;
		
		МожноСохранять = МожноСохранять Или НастройкаПечатнойФормы.Печатать И ПечатнаяФорма.ВысотаТаблицы > 0
			И ПолеТабличногоДокумента.Вывод = ИспользованиеВывода.Разрешить И Не ПолеТабличногоДокумента.Защита;
	КонецЦикла;
	
	Элементы.КнопкаПечатьКоманднаяПанель.Доступность = МожноПечатать;
	Элементы.КнопкаПечатьВсеДействия.Доступность = МожноПечатать;
	Элементы.КнопкаСохранить.Доступность = МожноСохранять;
	Элементы.КнопкаОтправить.Доступность = МожноСохранять;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПечатныхФормПриАктивизацииСтроки(Элемент)
	УстановитьТекущуюСтраницу();
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПечатныхФормКоличествоПриИзменении(Элемент)
	НастройкаПечатнойФормы = ТекущаяНастройкаПечатнойФормы();
	ЭтотОбъект[НастройкаПечатнойФормы.ИмяРеквизита].КоличествоЭкземпляров = НастройкаПечатнойФормы.Количество;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПечатныхФормКоличествоРегулирование(Элемент, Направление, СтандартнаяОбработка)
	НастройкаПечатнойФормы = ТекущаяНастройкаПечатнойФормы();
	НастройкаПечатнойФормы.Печатать = НастройкаПечатнойФормы.Количество + Направление > 0;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПечатныхФормПечататьПриИзменении(Элемент)
	НастройкаПечатнойФормы = ТекущаяНастройкаПечатнойФормы();
	Если НастройкаПечатнойФормы.Печатать И НастройкаПечатнойФормы.Количество = 0 Тогда
		НастройкаПечатнойФормы.Количество = 1;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПечатныхФормПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОбъектыПечати", ОбъектыПечати);
	ОткрытьФорму("ОбщаяФорма.СохранениеПечатнойФормы", ПараметрыФормы, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	ОтправитьПечатныеФормыПоПочте();
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКДокументу(Команда)
	
	СписокВыбора = Новый СписокЗначений;
	Для Каждого ОбъектПечати Из ОбъектыПечати Цикл
		СписокВыбора.Добавить(ОбъектПечати.Представление, Строка(ОбъектПечати.Значение));
	КонецЦикла;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПерейтиКДокументуЗавершение", ЭтотОбъект);
	СписокВыбора.ПоказатьВыборЭлемента(ОписаниеОповещения, НСтр("ru = 'Перейти к печатной форме'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКУправлениюМакетами(Команда)
	ОткрытьФорму("РегистрСведений.ПользовательскиеМакетыПечати.Форма.МакетыПечатныхФорм");
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	ТабличныеДокументы = Новый СписокЗначений;
	
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Если Элементы[НастройкаПечатнойФормы.ИмяРеквизита].Вывод = ИспользованиеВывода.Разрешить И НастройкаПечатнойФормы.Печатать Тогда
			ТабличныеДокументы.Добавить(ЭтотОбъект[НастройкаПечатнойФормы.ИмяРеквизита], НастройкаПечатнойФормы.Представление);
		КонецЕсли;
	КонецЦикла;
	
	УправлениеПечатьюКлиент.РаспечататьТабличныеДокументы(ТабличныеДокументы, ОбъектыПечати,
		ПараметрыВывода.ДоступнаПечатьПоКомплектно, ?(НастройкиПечатныхФорм.Количество() > 1, Копий, 1));
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьНастройкуКоличестваКопий(Команда)
	УстановитьВидимостьНастройкиКоличестваКопий();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	УстановитьСнятьФлажки(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	УстановитьСнятьФлажки(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура СброситьНастройки(Команда)
	ВосстановитьНастройкиПечатныхФорм();
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьМакет(Команда)
	ОткрытьМакетДляРедактирования();
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьРедактирование(Команда)
	ПереключитьРедактированиеТекущейПечатнойФормы();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.НастройкиПечатныхФорм.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НастройкиПечатныхФорм.Печатать");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);

КонецПроцедуры

&НаСервере
Процедура СформироватьПечатныеФормы(КоллекцияПечатныхФорм, ИменаМакетов, Отказ)
	
	// формирование табличных документов
	Если ЗначениеЗаполнено(Параметры.ИсточникДанных) Тогда
		Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки") Тогда
			МодульДополнительныеОтчетыИОбработки = ОбщегоНазначения.ОбщийМодуль("ДополнительныеОтчетыИОбработки");
			МодульДополнительныеОтчетыИОбработки.ПечатьПоВнешнемуИсточнику(Параметры.ИсточникДанных,
				Параметры.ПараметрыИсточника, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
		Иначе
			Отказ = Истина;
		КонецЕсли;
	Иначе
		УправлениеПечатью.СформироватьПечатныеФормы(Параметры.ИмяМенеджераПечати, ИменаМакетов,
			Параметры.ПараметрКоманды, Параметры.ПараметрыПечати.ДополнительныеПараметры, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	КонецЕсли;
	
	// установка признака сохранения печатной формы в файл (не открывать форму, сразу сохранять в файл)
	Если ТипЗнч(Параметры.ПараметрыПечати) = Тип("Структура") И Параметры.ПараметрыПечати.Свойство("ФорматСохранения") Тогда
		НайденныйФормат = УправлениеПечатью.НастройкиФорматовСохраненияТабличногоДокумента().Найти(Параметры.ПараметрыПечати.ФорматСохранения, "ТипФайлаТабличногоДокумента");
		Если НайденныйФормат <> Неопределено Тогда
			НастройкиФорматаСохранения = Новый Структура("ТипФайлаТабличногоДокумента,Представление,Расширение,Фильтр");
			ЗаполнитьЗначенияСвойств(НастройкиФорматаСохранения, НайденныйФормат);
			НастройкиФорматаСохранения.Фильтр = НастройкиФорматаСохранения.Представление + "|*." + НастройкиФорматаСохранения.Расширение;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройкиКоличестваКопий()
	
	СохраненныеНастройкиПечатныхФорм = Новый Массив;
	
	ИспользоватьСохраненныеНастройки = Истина;
	Если ТипЗнч(Параметры.ПараметрыПечати) = Тип("Структура") И Параметры.ПараметрыПечати.Свойство("ПереопределитьПользовательскиеНастройкиКоличества") Тогда
		ИспользоватьСохраненныеНастройки = Не Параметры.ПараметрыПечати.ПереопределитьПользовательскиеНастройкиКоличества;
	КонецЕсли;
	
	Если ИспользоватьСохраненныеНастройки И Не ЗначениеЗаполнено(Параметры.ИсточникДанных) Тогда
		ИменаМакетов = Параметры.ИменаМакетов;
		Если ТипЗнч(ИменаМакетов) = Тип("Массив") Тогда
			ИменаМакетов = СтроковыеФункцииКлиентСервер.СтрокаИзМассиваПодстрок(ИменаМакетов);
		КонецЕсли;
			
		КлючНастроек = Параметры.ИмяМенеджераПечати + "-" + ИменаМакетов;
		Если СтрДлина(КлючНастроек) > 128 Тогда // ключ более 128 символов вызовет исключение при обращении к хранилищу настроек
			ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.MD5);
			ХешированиеДанных.Добавить(ИменаМакетов);
			КлючНастроек = Параметры.ИмяМенеджераПечати + "-" + СтрЗаменить(ХешированиеДанных.ХешСумма, " ", "");
		КонецЕсли;
		СохраненныеНастройкиПечатныхФорм = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиПечатныхФорм", КлючНастроек, Новый Массив);
	КонецЕсли;
	
	ВосстановитьНастройкиПечатныхФорм(СохраненныеНастройкиПечатныхФорм);
	
	Если ЭтоПечатьКомплекта() Тогда
		Копий = 1;
	Иначе
		Если НастройкиПечатныхФорм.Количество() > 0 Тогда
			Копий = НастройкиПечатныхФорм[0].Количество;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьРеквизитыИЭлементыФормыДляПечатныхФорм(КоллекцияПечатныхФорм)
	
	// создание реквизитов для табличных документов
	НовыеРеквизитыФормы = Новый Массив;
	Для НомерПечатнойФормы = 1 По КоллекцияПечатныхФорм.Количество() Цикл
		ИмяРеквизита = "ПечатнаяФорма" + Формат(НомерПечатнойФормы,"ЧГ=0");
		РеквизитФормы = Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("ТабличныйДокумент"),,КоллекцияПечатныхФорм[НомерПечатнойФормы - 1].СинонимМакета);
		НовыеРеквизитыФормы.Добавить(РеквизитФормы);
	КонецЦикла;
	ИзменитьРеквизиты(НовыеРеквизитыФормы);
	
	// Создание страниц с табличными документами на форме
	НомерПечатнойФормы = 0;
	ДобавленныеНастройкиПечатныхФорм = Новый Соответствие;
	Для Каждого РеквизитФормы Из НовыеРеквизитыФормы Цикл
		ОписаниеПечатнойФормы = КоллекцияПечатныхФорм[НомерПечатнойФормы];
		
		// таблица настроек печатных форм (начало)
		НоваяНастройкаПечатнойФормы = НастройкиПечатныхФорм.Добавить();
		НоваяНастройкаПечатнойФормы.Представление = ОписаниеПечатнойФормы.СинонимМакета;
		НоваяНастройкаПечатнойФормы.Печатать = Истина;
		НоваяНастройкаПечатнойФормы.Количество = ОписаниеПечатнойФормы.Экземпляров;
		НоваяНастройкаПечатнойФормы.ИмяМакета = ОписаниеПечатнойФормы.ИмяМакета;
		НоваяНастройкаПечатнойФормы.ПозицияПоУмолчанию = НомерПечатнойФормы;
		НоваяНастройкаПечатнойФормы.Название = ОписаниеПечатнойФормы.ТабличныйДокумент.ИспользуемоеИмяФайла;
		//НоваяНастройкаПечатнойФормы.Название = ОписаниеПечатнойФормы.СинонимМакета;
		НоваяНастройкаПечатнойФормы.ПутьКМакету = ОписаниеПечатнойФормы.ПолныйПутьКМакету;
		
		РанееДобавленнаяНастройкаПечатнойФормы = ДобавленныеНастройкиПечатныхФорм[ОписаниеПечатнойФормы.ИмяМакета];
		Если РанееДобавленнаяНастройкаПечатнойФормы = Неопределено Тогда
			// копирование табличного документа в реквизит формы
			ИмяРеквизита = РеквизитФормы.Имя;
			ЭтотОбъект[ИмяРеквизита] = ОписаниеПечатнойФормы.ТабличныйДокумент;
			
			// создание страниц для табличных документов
			ИмяСтраницы = "Страница" + ИмяРеквизита;
			Страница = Элементы.Добавить(ИмяСтраницы, Тип("ГруппаФормы"), Элементы.Страницы);
			Страница.Вид = ВидГруппыФормы.Страница;
			Страница.Картинка = БиблиотекаКартинок.ТабличныйДокументВставитьРазрывСтраницы;
			Страница.Заголовок = ОписаниеПечатнойФормы.СинонимМакета;
			Страница.Подсказка = ОписаниеПечатнойФормы.СинонимМакета;
			Страница.Видимость = ЭтотОбъект[ИмяРеквизита].ВысотаТаблицы > 0;
			
			// создание элементов под табличные документы
			НовыйЭлемент = Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Страница);
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеТабличногоДокумента;
			НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			НовыйЭлемент.ПутьКДанным = ИмяРеквизита;
			НовыйЭлемент.Вывод = ВычислитьИспользованиеВывода(ОписаниеПечатнойФормы.ТабличныйДокумент);
			НовыйЭлемент.Редактирование = НовыйЭлемент.Вывод = ИспользованиеВывода.Разрешить;
			НовыйЭлемент.Защита = ОписаниеПечатнойФормы.ТабличныйДокумент.Защита;
			
			// таблица настроек печатных форм (продолжение)
			НоваяНастройкаПечатнойФормы.ИмяСтраницы = ИмяСтраницы;
			НоваяНастройкаПечатнойФормы.ИмяРеквизита = ИмяРеквизита;
			
			ДобавленныеНастройкиПечатныхФорм.Вставить(НоваяНастройкаПечатнойФормы.ИмяМакета, НоваяНастройкаПечатнойФормы);
		Иначе
			НоваяНастройкаПечатнойФормы.ИмяСтраницы = РанееДобавленнаяНастройкаПечатнойФормы.ИмяСтраницы;
			НоваяНастройкаПечатнойФормы.ИмяРеквизита = РанееДобавленнаяНастройкаПечатнойФормы.ИмяРеквизита;
		КонецЕсли;
		
		НомерПечатнойФормы = НомерПечатнойФормы + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СохранитьНастройкиКомплектаПоУмолчанию()
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		ЗаполнитьЗначенияСвойств(НастройкиКомплектаПоУмолчанию.Добавить(), НастройкаПечатнойФормы);
	КонецЦикла;
КонецФункции

&НаСервере
Процедура НастроитьВидимостьЭлементовФормы(Знач ЕстьРазрешенныйВывод)
	
	ЕстьРазрешенноеРедактирование = ЕстьРазрешенноеРедактирование();
	
	ДоступнаОтправкаПисем = Ложь;
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСПочтовымиСообщениями") Тогда
		МодульРаботаСПочтовымиСообщениями = ОбщегоНазначения.ОбщийМодуль("РаботаСПочтовымиСообщениями");
		ДоступнаОтправкаПисем = МодульРаботаСПочтовымиСообщениями.ДоступнаОтправкаПисем();
	КонецЕсли;
	ВозможнаОтправкаПоПочте = ЕстьРазрешенныйВывод И ДоступнаОтправкаПисем;
	
	ЕстьДанныеДляПечати = ЕстьДанныеДляПечати();
	
	Элементы.КнопкаПерейтиКДокументу.Видимость = ОбъектыПечати.Количество() > 1;
	Элементы.КнопкаСохранить.Видимость = ЕстьДанныеДляПечати и ЕстьРазрешенныйВывод И ЕстьРазрешенноеРедактирование;
	Элементы.КнопкаОтправить.Видимость = ВозможнаОтправкаПоПочте и ЕстьДанныеДляПечати И ЕстьРазрешенноеРедактирование;
	Элементы.КнопкаПечатьКоманднаяПанель.Видимость = ЕстьРазрешенныйВывод И ЕстьДанныеДляПечати;
	Элементы.КнопкаПечатьВсеДействия.Видимость = ЕстьРазрешенныйВывод И ЕстьДанныеДляПечати;
	Элементы.Копий.Видимость = ЕстьРазрешенныйВывод И ЕстьДанныеДляПечати;
	Элементы.КнопкаРедактирование.Видимость = ЕстьРазрешенныйВывод И ЕстьДанныеДляПечати И ЕстьРазрешенноеРедактирование;
	
	Элементы.КнопкаПоказатьСкрытьНастройкуКомплекта.Видимость = ЭтоПечатьКомплекта();
	Элементы.НастройкиПечатныхФорм.Видимость = ЭтоПечатьКомплекта();
	Элементы.ГруппаНастройкаКомплектаПодменю.Видимость = ЭтоПечатьКомплекта();
	
	ДоступнаНастройкаКомплекта = Истина;
	Если ТипЗнч(Параметры.ПараметрыПечати) = Тип("Структура") И Параметры.ПараметрыПечати.Свойство("ФиксированныйКомплект") Тогда
		ДоступнаНастройкаКомплекта = Не Параметры.ПараметрыПечати.ФиксированныйКомплект;
	КонецЕсли;
	
	Элементы.ГруппаНастройкаКомплектаКонтекстноеМеню.Видимость = ДоступнаНастройкаКомплекта;
	Элементы.ГруппаНастройкаКомплектаПодменю.Видимость = ЭтоПечатьКомплекта() И ДоступнаНастройкаКомплекта;
	Элементы.НастройкиПечатныхФормПечатать.Видимость = ДоступнаНастройкаКомплекта;
	Элементы.НастройкиПечатныхФормКоличество.Видимость = ДоступнаНастройкаКомплекта;
	Элементы.НастройкиПечатныхФорм.Шапка = ДоступнаНастройкаКомплекта;
	Элементы.НастройкиПечатныхФорм.ГоризонтальныеЛинии = ДоступнаНастройкаКомплекта;
	
	Если Не ДоступнаНастройкаКомплекта Тогда
		ДобавитьКоличествоЭкземпляровВПредставленияхПечатныхФорм();
	КонецЕсли;
	
	ДоступноИзменениеМакетов = Пользователи.РолиДоступны("ИзменениеМакетовПечатныхФорм") И ЕстьРедактируемыеМакеты();
	Элементы.КнопкаИзменитьМакет.Видимость = ДоступноИзменениеМакетов И ЕстьДанныеДляПечати;
	
	// отключение "технологической" страницы, которая нужна только в конфигураторе для дизайна формы
	Элементы.СтраницаПечатнаяФормаОбразец.Видимость = Ложь;

КонецПроцедуры

&НаСервере
Процедура ДобавитьКоличествоЭкземпляровВПредставленияхПечатныхФорм()
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Если НастройкаПечатнойФормы.Количество <> 1 Тогда
			НастройкаПечатнойФормы.Представление = НастройкаПечатнойФормы.Представление 
				+ " (" + НастройкаПечатнойФормы.Количество + " " + НСтр("ru = 'экз.'") + ")";
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура УстановитьПризнакДоступностиВыводаВПредставленияхПечатныхФорм(ЕстьРазрешенныйВывод)
	Если ЕстьРазрешенныйВывод Тогда
		Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
			ПолеТабличногоДокумента = Элементы[НастройкаПечатнойФормы.ИмяРеквизита];
			Если ПолеТабличногоДокумента.Вывод = ИспользованиеВывода.Запретить Тогда
				НастройкаПечатнойФормы.Представление = НастройкаПечатнойФормы.Представление + " (" + НСтр("ru = 'вывод не доступен'") + ")";
			ИначеЕсли ПолеТабличногоДокумента.Защита Тогда
				НастройкаПечатнойФормы.Представление = НастройкаПечатнойФормы.Представление + " (" + НСтр("ru = 'только печать'") + ")";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьНастройкиКоличестваКопий(Знач Видимость = Неопределено)
	Если Видимость = Неопределено Тогда
		Видимость = Не Элементы.НастройкиПечатныхФорм.Видимость;
	КонецЕсли;
	
	Элементы.НастройкиПечатныхФорм.Видимость = Видимость;
	Элементы.ГруппаНастройкаКомплектаПодменю.Видимость = Видимость И ДоступнаНастройкаКомплекта;
КонецПроцедуры

&НаСервере
Процедура УстановитьИмяПринтераВПодсказкеКнопкиПечать()
	Если НастройкиПечатныхФорм.Количество() > 0 Тогда
		ИмяПринтера = ЭтотОбъект[НастройкиПечатныхФорм[0].ИмяРеквизита].ИмяПринтера;
		Если Не ПустаяСтрока(ИмяПринтера) Тогда
			ЭтотОбъект.Команды["Печать"].Подсказка = НСтр("ru = 'Напечатать на принтере'") + " (" + ИмяПринтера + ")";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы()
	Перем ЗаголовокФормы;
	
	Если ТипЗнч(Параметры.ПараметрыПечати) = Тип("Структура") Тогда
		Параметры.ПараметрыПечати.Свойство("ЗаголовокФормы", ЗаголовокФормы);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗаголовокФормы) Тогда
		Заголовок = ЗаголовокФормы;
	Иначе
		Если ЭтоПечатьКомплекта() Тогда
			Заголовок = НСтр("ru = 'Печать комплекта'");
		ИначеЕсли ТипЗнч(Параметры.ПараметрКоманды) <> Тип("Массив") Или Параметры.ПараметрКоманды.Количество() > 1 Тогда
			Заголовок = НСтр("ru = 'Печать документов'");
		Иначе
			Заголовок = НСтр("ru = 'Печать документа'");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущуюСтраницу()
	
	НастройкаПечатнойФормы = ТекущаяНастройкаПечатнойФормы();
	
	ТекущаяСтраница = Элементы.СтраницаПечатнаяФормаНедоступна;
	Если НастройкаПечатнойФормы <> Неопределено И ЭтотОбъект[НастройкаПечатнойФормы.ИмяРеквизита].ВысотаТаблицы > 0 Тогда
		ТекущаяСтраница = Элементы[НастройкаПечатнойФормы.ИмяСтраницы];
	КонецЕсли;
	
	Элементы.Страницы.ТекущаяСтраница = ТекущаяСтраница;
	
	ПереключитьПометкуКнопкиРедактирование();
	УстановитьДоступностьИзмененияМакета();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьФлажки(Пометка)
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		НастройкаПечатнойФормы.Печатать = Пометка;
		Если Пометка И НастройкаПечатнойФормы.Количество = 0 Тогда
			НастройкаПечатнойФормы.Количество = 1;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ВычислитьИспользованиеВывода(ТабличныйДокумент)
	Если ТабличныйДокумент.Вывод = ИспользованиеВывода.Авто Тогда
		Возврат ?(ПравоДоступа("Вывод", Метаданные), ИспользованиеВывода.Разрешить, ИспользованиеВывода.Запретить);
	Иначе
		Возврат ТабличныйДокумент.Вывод;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Процедура СохранитьНастройкиПечатныхФорм(КлючНастроек, СохраняемыеНастройкиПечатныхФорм)
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("НастройкиПечатныхФорм", КлючНастроек, СохраняемыеНастройкиПечатныхФорм);
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиПечатныхФорм(СохраненныеНастройкиПечатныхФорм = Неопределено)
	Если СохраненныеНастройкиПечатныхФорм = Неопределено Тогда
		СохраненныеНастройкиПечатныхФорм = НастройкиКомплектаПоУмолчанию;
	КонецЕсли;
	
	Если СохраненныеНастройкиПечатныхФорм = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СохраненнаяНастройка Из СохраненныеНастройкиПечатныхФорм Цикл
		НайденныеНастройки = НастройкиПечатныхФорм.НайтиСтроки(Новый Структура("ПозицияПоУмолчанию", СохраненнаяНастройка.ПозицияПоУмолчанию));
		Для Каждого НастройкаПечатнойФормы Из НайденныеНастройки Цикл
			ИндексСтроки = НастройкиПечатныхФорм.Индекс(НастройкаПечатнойФормы);
			НастройкиПечатныхФорм.Сдвинуть(ИндексСтроки, НастройкиПечатныхФорм.Количество()-1 - ИндексСтроки); // сдвиг в конец
			НастройкаПечатнойФормы.Количество = СохраненнаяНастройка.Количество;
			ЭтотОбъект[НастройкаПечатнойФормы.ИмяРеквизита].КоличествоЭкземпляров = НастройкаПечатнойФормы.Количество;
			НастройкаПечатнойФормы.Печатать = НастройкаПечатнойФормы.Количество > 0;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПоместитьТабличныеДокументыВоВременноеХранилище(НастройкиСохранения)
	Перем ЗаписьZipФайла, ИмяАрхива;
	
	Результат = Новый СписокЗначений;
	
	// подготовка архива
	Если НастройкиСохранения.УпаковатьВАрхив Тогда
		ИмяАрхива = ПолучитьИмяВременногоФайла("zip");
		ЗаписьZipФайла = Новый ЗаписьZipФайла(ИмяАрхива);
	КонецЕсли;
	
	// подготовка временной папки
	ИмяВременнойПапки = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(ИмяВременнойПапки);
	ИспользованныеИменаФайлов = Новый Соответствие;
	
	ВыбранныеФорматыСохранения = НастройкиСохранения.ФорматыСохранения;
	ТаблицаФорматов = УправлениеПечатью.НастройкиФорматовСохраненияТабличногоДокумента();
	
	// сохранение печатных форм
	ОбработанныеПечатныеФормы = Новый Массив;
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		
		Если Не НастройкаПечатнойФормы.Печатать Тогда
			Продолжить;
		КонецЕсли;
		
		ПечатнаяФорма = ЭтаФорма[НастройкаПечатнойФормы.ИмяРеквизита];
		Если ОбработанныеПечатныеФормы.Найти(ПечатнаяФорма) = Неопределено Тогда
			ОбработанныеПечатныеФормы.Добавить(ПечатнаяФорма);
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если ВычислитьИспользованиеВывода(ПечатнаяФорма) = ИспользованиеВывода.Запретить Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПечатнаяФорма.Защита Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПечатнаяФорма.ВысотаТаблицы = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого ТипФайла Из ВыбранныеФорматыСохранения Цикл
			НастройкиФормата = ТаблицаФорматов.НайтиСтроки(Новый Структура("ТипФайлаТабличногоДокумента", ТипФайла))[0];
			
			ИмяФайла = ПолучитьИмяВременногоФайлаДляПечатнойФормы(НастройкаПечатнойФормы.Название,НастройкиФормата.Расширение,ИспользованныеИменаФайлов);
			ПолноеИмяФайла = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяВременнойПапки) + ИмяФайла;
			
			ПечатнаяФорма.Записать(ПолноеИмяФайла, ТипФайла);
			
			Если ТипФайла = ТипФайлаТабличногоДокумента.HTML Тогда
				ВставитьКартинкиВHTML(ПолноеИмяФайла);
			КонецЕсли;
			
			Если ЗаписьZipФайла <> Неопределено Тогда 
				ЗаписьZipФайла.Добавить(ПолноеИмяФайла);
			Иначе
				ДвоичныеДанные = Новый ДвоичныеДанные(ПолноеИмяФайла);
				ПутьВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
				Результат.Добавить(ПутьВоВременномХранилище, ИмяФайла);
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	// если архив подготовлен, записываем и помещаем его во временное хранилище
	Если ЗаписьZipФайла <> Неопределено Тогда 
		ЗаписьZipФайла.Записать();
		ФайлАрхива = Новый Файл(ИмяАрхива);
		ДвоичныеДанные = Новый ДвоичныеДанные(ИмяАрхива);
		ПутьВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
		Результат.Добавить(ПутьВоВременномХранилище, ПолучитьИмяФайлаДляАрхива());
	КонецЕсли;
	
	УдалитьФайлы(ИмяВременнойПапки);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ВставитьКартинкиВHTML(ИмяФайлаHTML)
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	ТекстовыйДокумент.Прочитать(ИмяФайлаHTML, КодировкаТекста.UTF8);
	ТекстHTML = ТекстовыйДокумент.ПолучитьТекст();
	
	ФайлHTML = Новый Файл(ИмяФайлаHTML);
	
	ИмяПапкиКартинок = ФайлHTML.ИмяБезРасширения + "_files";
	ПутьКПапкеКартинок = СтрЗаменить(ФайлHTML.ПолноеИмя, ФайлHTML.Имя, ИмяПапкиКартинок);
	
	// ожидается, что в папке будут только картинки
	ФайлыКартинок = НайтиФайлы(ПутьКПапкеКартинок, "*");
	
	Для Каждого ФайлКартинки Из ФайлыКартинок Цикл
		КартинкаТекстом = Base64Строка(Новый ДвоичныеДанные(ФайлКартинки.ПолноеИмя));
		КартинкаТекстом = "data:image/" + Сред(ФайлКартинки.Расширение,2) + ";base64," + Символы.ПС + КартинкаТекстом;
		
		ТекстHTML = СтрЗаменить(ТекстHTML, ИмяПапкиКартинок + "\" + ФайлКартинки.Имя, КартинкаТекстом);
	КонецЦикла;
		
	ТекстовыйДокумент.УстановитьТекст(ТекстHTML);
	ТекстовыйДокумент.Записать(ИмяФайлаHTML, КодировкаТекста.UTF8);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИмяВременногоФайлаДляПечатнойФормы(ИмяМакета, Расширение, ИспользованныеИменаФайлов)
	
	ШаблонИмениФайла = "%1%2.%3";
	
	ИмяВременногоФайла = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонИмениФайла, ИмяМакета, "", Расширение));
		
	НомерИспользования = ?(ИспользованныеИменаФайлов[ИмяВременногоФайла] <> Неопределено,
							ИспользованныеИменаФайлов[ИмяВременногоФайла] + 1,
							1);
	
	ИспользованныеИменаФайлов.Вставить(ИмяВременногоФайла, НомерИспользования);
	
	// если имя уже было ранее использовано, прибавляем счетчик в конце имени
	Если НомерИспользования > 1 Тогда
		ИмяВременногоФайла = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонИмениФайла,
				ИмяМакета,
				" (" + НомерИспользования + ")",
				Расширение));
	КонецЕсли;
	
	Возврат ИмяВременногоФайла;
	
КонецФункции

&НаСервере
Функция ПолучитьИмяФайлаДляАрхива()
	
	Результат = "";
	
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		
		Если Не НастройкаПечатнойФормы.Печатать Тогда
			Продолжить;
		КонецЕсли;
		
		ПечатнаяФорма = ЭтотОбъект[НастройкаПечатнойФормы.ИмяРеквизита];
		
		Если ВычислитьИспользованиеВывода(ПечатнаяФорма) = ИспользованиеВывода.Запретить Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПустаяСтрока(Результат) Тогда
			Результат = НастройкаПечатнойФормы.Название;
		Иначе
			Результат = НСтр("ru = 'Документы'");
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат + ".zip";
	
КонецФункции

&НаКлиенте
Процедура СохранитьПечатнуюФормуВФайл()
	
	ФорматыСохранения = Новый Массив;
	ФорматыСохранения.Добавить(НастройкиФорматаСохранения.ТипФайлаТабличногоДокумента);
	НастройкиСохранения = Новый Структура("ФорматыСохранения,УпаковатьВАрхив", ФорматыСохранения, Ложь);
	ФайлыВоВременномХранилище = ПоместитьТабличныеДокументыВоВременноеХранилище(НастройкиСохранения);
	
	Для Каждого ФайлДляЗаписи Из ФайлыВоВременномХранилище Цикл
		#Если ВебКлиент Тогда
		ПолучитьФайл(ФайлДляЗаписи.АдресВоВременномХранилище, ФайлДляЗаписи.Представление);
		#Иначе
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла(НастройкиФорматаСохранения.Расширение);
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ФайлДляЗаписи.Значение);
		//ДвоичныеДанные = ПолучитьИзВременногоХранилища(ФайлДляЗаписи.АдресВоВременномХранилище);
		ДвоичныеДанные.Записать(ИмяВременногоФайла);
		ЗапуститьПриложение(ИмяВременногоФайла);
		#КонецЕсли
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПечатныеФормыВПапку(СписокФайловВоВременномХранилище, Папка = "")
	
	#Если ВебКлиент Тогда
		Для Каждого ФайлДляЗаписи Из СписокФайловВоВременномХранилище Цикл
			ПолучитьФайл(ФайлДляЗаписи.АдресВоВременномХранилище, ФайлДляЗаписи.Представление);
		КонецЦикла;
		Возврат;
	#КонецЕсли
	
	ДополнительныеПараметры = Новый Структура("СписокФайловВоВременномХранилище, Папка", СписокФайловВоВременномХранилище, Папка);
	Если НайтиФайлы(Папка,"*").Количество() > 0 Тогда
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Папка ""%1"" не пустая.
				|Перезаписывать файлы при совпадении имен?'"),
			Папка);
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Перезаписывать'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("СохранитьПечатныеФормыВПапкуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки, , КодВозвратаДиалога.Отмена, НСтр("ru = 'Сохранение печатной формы'"));
	Иначе
		СохранитьПечатныеФормыВПапкуЗавершение(КодВозвратаДиалога.Да, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПечатныеФормыВПапкуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	СписокФайловВоВременномХранилище = ДополнительныеПараметры.СписокФайловВоВременномХранилище;
	Папка = ДополнительныеПараметры.Папка;
	
	Для Каждого ФайлДляЗаписи Из СписокФайловВоВременномХранилище Цикл
		ПолноеИмяФайла = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(Папка) + ФайлДляЗаписи.Представление;
		
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ФайлДляЗаписи.Значение);
		ДвоичныеДанные.Записать(ПолноеИмяФайла);
	КонецЦикла;

	Состояние(НСтр("ru = 'Сохранение успешно завершено'"), , НСтр("ru = 'в папку:'") + " " + Папка);
	
КонецПроцедуры

&НаСервере
Процедура ПрисоединитьПечатныеФормыКОбъекту(ФайлыВоВременномХранилище, ОбъектДляПрисоединения)
	Для Каждого Файл Из ФайлыВоВременномХранилище Цикл
		УправлениеПечатью.ПриПрисоединенииПечатнойФормыКОбъекту(ОбъектДляПрисоединения, Файл.Представление, Файл.АдресВоВременномХранилище);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ЭтоПечатьКомплекта()
	Возврат НастройкиПечатныхФорм.Количество() > 1;
КонецФункции

&НаСервере
Функция ЕстьРазрешенныйВывод()
	
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Если Элементы[НастройкаПечатнойФормы.ИмяРеквизита].Вывод = ИспользованиеВывода.Разрешить Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Функция ЕстьРазрешенноеРедактирование()
	
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Если Элементы[НастройкаПечатнойФормы.ИмяРеквизита].Защита = Ложь Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Функция ПолучателейБольшеОдного(Получатель)
	Если ТипЗнч(Получатель) = Тип("Массив") Или ТипЗнч(Получатель) = Тип("СписокЗначений") Тогда
		Возврат Получатель.Количество() > 1;
	Иначе
		Возврат ОбщегоНазначенияКлиентСервер.АдресаЭлектроннойПочтыИзСтроки(Получатель).Количество() > 1;
	КонецЕсли;
КонецФункции

&НаСервере
Функция ЕстьДанныеДляПечати()
	Результат = Ложь;
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Результат = Результат Или ЭтотОбъект[НастройкаПечатнойФормы.ИмяРеквизита].ВысотаТаблицы > 0;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаСервере
Функция ЕстьРедактируемыеМакеты()
	Результат = Ложь;
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		Результат = Результат Или Не ПустаяСтрока(НастройкаПечатнойФормы.ПутьКМакету);
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ОткрытьМакетДляРедактирования()
	
	НастройкаПечатнойФормы = ТекущаяНастройкаПечатнойФормы();
	
	ОтобразитьСостояниеТекущейПечатнойФормы(НСтр("ru = 'Макет редактируется'"));
	
	ИмяОбъектаМетаданныхМакета = НастройкаПечатнойФормы.ПутьКМакету;
	
	#Если ВебКлиент Тогда
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ИмяОбъектаМетаданныхМакета", ИмяОбъектаМетаданныхМакета);
		ПараметрыОткрытия.Вставить("ТипМакета", "MXL");
		ПараметрыОткрытия.Вставить("ЭтоВебКлиент", Истина);
		
		ОткрытьФорму("РегистрСведений.ПользовательскиеМакетыПечати.Форма.РедактированиеМакета", ПараметрыОткрытия, ЭтотОбъект);
		
	#Иначе
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ИмяОбъектаМетаданныхМакета", ИмяОбъектаМетаданныхМакета);
		ПараметрыОткрытия.Вставить("РежимОткрытияОкна", РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		ПараметрыОткрытия.Вставить("ИмяДокумента", НастройкаПечатнойФормы.Представление);
		ПараметрыОткрытия.Вставить("Редактирование", Истина);
		
		ОткрытьФорму("ОбщаяФорма.РедактированиеТабличногоДокумента", ПараметрыОткрытия, ЭтотОбъект);
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьСостояниеТекущейПечатнойФормы(ТекстСостояния = "")
	
	ОтображатьСостояние = Не ПустаяСтрока(ТекстСостояния);
	
	НастройкаПечатнойФормы = ТекущаяНастройкаПечатнойФормы();
	Если НастройкаПечатнойФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолеТабличногоДокумента = Элементы[НастройкаПечатнойФормы.ИмяРеквизита];
	
	ОтображениеСостояния = ПолеТабличногоДокумента.ОтображениеСостояния;
	ОтображениеСостояния.Текст = ТекстСостояния;
	ОтображениеСостояния.Видимость = ОтображатьСостояние;
	ОтображениеСостояния.ДополнительныйРежимОтображения = 
		?(ОтображатьСостояние, ДополнительныйРежимОтображения.Неактуальность, ДополнительныйРежимОтображения.НеИспользовать);
		
	ПолеТабличногоДокумента.ТолькоПросмотр = ОтображатьСостояние Или ПолеТабличногоДокумента.Вывод = ИспользованиеВывода.Запретить;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьРедактированиеТекущейПечатнойФормы()
	НастройкаПечатнойФормы = ТекущаяНастройкаПечатнойФормы();
	Если НастройкаПечатнойФормы <> Неопределено Тогда
		ПолеТабличногоДокумента = Элементы[НастройкаПечатнойФормы.ИмяРеквизита];
		ПолеТабличногоДокумента.Редактирование = Не ПолеТабличногоДокумента.Редактирование;
		ПереключитьПометкуКнопкиРедактирование();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьПометкуКнопкиРедактирование()
	
	ПечатнаяФормаДоступна = Элементы.Страницы.ТекущаяСтраница <> Элементы.СтраницаПечатнаяФормаНедоступна;
	
	РедактированиеВозможно = Ложь;
	Пометка = Ложь;
	
	НастройкаПечатнойФормы = ТекущаяНастройкаПечатнойФормы();
	Если НастройкаПечатнойФормы <> Неопределено Тогда
		ПолеТабличногоДокумента = Элементы[НастройкаПечатнойФормы.ИмяРеквизита];
		РедактированиеВозможно = ПечатнаяФормаДоступна И Не ПолеТабличногоДокумента.Защита;
		Пометка = ПолеТабличногоДокумента.Редактирование И РедактированиеВозможно;
	КонецЕсли;
	
	Элементы.КнопкаРедактирование.Пометка = Пометка;
	Элементы.КнопкаРедактирование.Доступность = РедактированиеВозможно;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьИзмененияМакета()
	ПечатнаяФормаДоступна = Элементы.Страницы.ТекущаяСтраница <> Элементы.СтраницаПечатнаяФормаНедоступна;
	НастройкаПечатнойФормы = ТекущаяНастройкаПечатнойФормы();
	Элементы.КнопкаИзменитьМакет.Доступность = ПечатнаяФормаДоступна И Не ПустаяСтрока(НастройкаПечатнойФормы.ПутьКМакету);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТекущуюПечатнуюФорму()
	
	НастройкаПечатнойФормы = ТекущаяНастройкаПечатнойФормы();
	Если НастройкаПечатнойФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПереформироватьПечатнуюФорму(НастройкаПечатнойФормы.ИмяМакета, НастройкаПечатнойФормы.ИмяРеквизита);
	ОтобразитьСостояниеТекущейПечатнойФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПереформироватьПечатнуюФорму(ИмяМакета, ИмяРеквизита)
	Перем КоллекцияПечатныхФорм;
	
	Отказ = Ложь;
	
	СформироватьПечатныеФормы(КоллекцияПечатныхФорм, ИмяМакета, Отказ);
	Если Отказ Тогда
		ВызватьИсключение НСтр("ru = 'Печатная форма не была переформирована.'");
	КонецЕсли;
	
	Для Каждого ПечатнаяФорма Из КоллекцияПечатныхФорм Цикл
		Если ПечатнаяФорма.ИмяМакета = ИмяМакета Тогда
			ЭтотОбъект[ИмяРеквизита] = ПечатнаяФорма.ТабличныйДокумент;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ТекущаяНастройкаПечатнойФормы()
	Результат = Элементы.НастройкиПечатныхФорм.ТекущиеДанные;
	Если Результат = Неопределено И НастройкиПечатныхФорм.Количество() > 0 Тогда
		Результат = НастройкиПечатныхФорм[0];
	КонецЕсли;
	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписатьМакет(ИмяОбъектаМетаданныхМакета, АдресМакетаВоВременномХранилище)
	УправлениеПечатью.ЗаписатьМакет(ИмяОбъектаМетаданныхМакета, АдресМакетаВоВременномХранилище);
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКДокументуЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого НастройкаПечатнойФормы Из НастройкиПечатныхФорм Цикл
		ПолеТабличногоДокумента = Элементы[НастройкаПечатнойФормы.ИмяРеквизита];
		ТабличныйДокумент = ЭтотОбъект[НастройкаПечатнойФормы.ИмяРеквизита];
		ОбластьВыбранногоДокумента = ТабличныйДокумент.Области.Найти(ВыбранныйЭлемент.Значение);
		
		ПолеТабличногоДокумента.ТекущаяОбласть = ТабличныйДокумент.Область("R1C1"); // переход к началу
		
		Если ОбластьВыбранногоДокумента <> Неопределено Тогда
			ПолеТабличногоДокумента.ТекущаяОбласть = ТабличныйДокумент.Область(ОбластьВыбранногоДокумента.Верх,,ОбластьВыбранногоДокумента.Низ,);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПечатныеФормыПоПочте()
	
	ПараметрыФормы = Новый Структура;
	ИмяОткрываемойФормы = "ОбщаяФорма.ВыборФорматаВложений";
	Если ПолучателейБольшеОдного(ПараметрыВывода.ПараметрыОтправки.Получатель) Тогда
		ПараметрыФормы.Вставить("Получатели", ПараметрыВывода.ПараметрыОтправки.Получатель);
		ИмяОткрываемойФормы = "ОбщаяФорма.ПодготовкаНовогоПисьма";
	КонецЕсли;
	
	ОткрытьФорму(ИмяОткрываемойФормы, ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти
