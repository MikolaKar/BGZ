
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	//Проверка на существование шаблонов для указанного типа документа
	НеНайденоШаблонов = Ложь;
	Запрос = Новый Запрос();
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ШаблоныДокументов.Ссылка
		|ИЗ
		|	Справочник." + Параметры.ТипШаблонаДокумента + " КАК ШаблоныДокументов
		|ГДЕ
		|	ШаблоныДокументов.ЭтоГруппа = ЛОЖЬ
		|	И ШаблоныДокументов.ПометкаУдаления = ЛОЖЬ";
					
	Если Параметры.Свойство("СозданиеОбращенияГраждан") И Параметры.СозданиеОбращенияГраждан Тогда
			
		Запрос.Текст = Запрос.Текст + "
		|	И	(ШаблоныДокументов.ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыВходящихДокументов.ПустаяСсылка)
		|			ИЛИ ШаблоныДокументов.ВидДокумента.ЯвляетсяОбращениемОтГраждан = ИСТИНА)";
		
		СписокШаблоныВходящихДокументов.Параметры.УстановитьЗначениеПараметра("СозданиеОбращенияГраждан",
			Параметры.СозданиеОбращенияГраждан);
			
	КонецЕсли;
	
	Если Запрос.Выполнить().Выбрать().Количество() = 0 Тогда	
		НеНайденоШаблонов = Истина;
		ВызватьИсключение("СоздатьПустойДокумент");
	КонецЕсли;

	Элементы.Списки.ТекущаяСтраница = Элементы["Страница" + Параметры.ТипШаблонаДокумента];
	ТипШаблонаДокумента = Параметры.ТипШаблонаДокумента;
	ЭтаФорма.Элементы.СоздатьПустой.Видимость = Параметры.ВозможностьСозданияПустогоДокумента;
	ЭтаФорма.Элементы.СоздатьПоШаблону.Заголовок = Параметры.НаименованиеКнопкиВыбора;
	СоздатьПоШаблону = Истина;
	
	Если НЕ Параметры.ВозможностьСозданияПустогоДокумента Тогда
		АвтоЗаголовок = Ложь;
		Заголовок = НСтр("ru = 'Заполнение документа по шаблону'");
		Элементы.ДекорацияПояснение.Заголовок = Нстр("ru = 'Выберите шаблон:'");
	КонецЕсли;
	//позиционирование на последний использованный шаблон
	ШаблонПриОткрытии = ХранилищеНастроекДанныхФорм.Загрузить("СозданиеДокументаПоШаблону", "ТекущийШаблон");    
	Если НЕ УправлениеДоступомВызовСервераДокументооборот.СсылкаДоступнаТекущемуПользователю(ШаблонПриОткрытии) Тогда
		ШаблонПриОткрытии = Неопределено;
	КонецЕсли;
	Если ШаблонПриОткрытии <> Неопределено И НЕ ШаблонПриОткрытии.Пустая() Тогда    
	   Элементы["Список" + ТипШаблонаДокумента].ТекущаяСтрока = ШаблонПриОткрытии;       
    КонецЕсли;
    Если НеНайденоШаблонов = Ложь Тогда
   		СводкаПоШаблону = ПолучитьСводкуПоШаблону(Элементы["Список" + ТипШаблонаДокумента].ТекущаяСтрока);
	КонецЕсли;
   
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПоШаблону(Команда)
	
	СоздатьПоШаблонуВыполнить();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПоШаблонуВыполнить()
	
	СоздатьПустойДокумент = Ложь;
	СоздатьПоШаблону = Истина;

	Если Элементы["Список" + ТипШаблонаДокумента].ТекущиеДанные = Неопределено
		ИЛИ Элементы["Список" + ТипШаблонаДокумента].ТекущиеДанные.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	ДанныеДляЗаполненияДокумента = ПодготовитьДанныеДляЗаполнения(Элементы["Список" + ТипШаблонаДокумента].ТекущаяСтрока);
	ДанныеДляЗаполненияДокумента.Вставить("ШаблонДокумента",Элементы["Список" + ТипШаблонаДокумента].ТекущаяСтрока);
	Закрыть(ДанныеДляЗаполненияДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	СоздатьПустойДокумент = Ложь;
	СоздатьПоШаблону = Ложь;
	
	Закрыть("ПрерватьОперацию");
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьДанныеДляЗаполнения(Шаблон)

	ДанныеДляЗаполненияДокумента = Новый Структура();
	
	Для Каждого Справочник из Метаданные.Справочники Цикл
		Если Справочник.ПредставлениеОбъекта = Строка(ТипЗнч(Шаблон)) Тогда
			Для Каждого Реквизит из Справочник.Реквизиты Цикл
				Если Реквизит.Имя = "КомментарийКДокументу" И
					 НЕ ПустаяСтрока(Шаблон.КомментарийКДокументу) Тогда
					ДанныеДляЗаполненияДокумента.Вставить("Комментарий",Шаблон.КомментарийКДокументу);
					
				ИначеЕсли Реквизит.Имя = "ДлительностьИсполнения" И
					НЕ Шаблон.ДлительностьИсполнения = 0 Тогда
					
					ДанныеДляЗаполненияДокумента.Вставить("СрокИсполнения",ТекущаяДата() + Шаблон.ДлительностьИсполнения*60*60*24); 
					
				ИначеЕсли Реквизит.Имя <> "КомментарийКШаблону" И 
					Реквизит.Имя <> "ВладелецШаблона" И 
					Реквизит.Имя <> "КомментарийКДокументу" И 
					Реквизит.Имя <> "ДлительностьИсполнения" Тогда
					
					СтрКоманда = "ДанныеДляЗаполненияДокумента.Вставить(""" + Реквизит.Имя + """,Шаблон." + Реквизит.Имя + ");";
					Выполнить(СтрКоманда);
					
				КонецЕсли;
			КонецЦикла;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДанныеДляЗаполненияДокумента;
	
КонецФункции

&НаКлиенте
Процедура СоздатьПустой(Команда)
	
	СоздатьПустойДокумент = Истина;
	СоздатьПоШаблону = Ложь;
	Закрыть("СоздатьПустойДокумент");
	
КонецПроцедуры

&НаКлиенте
Процедура СписокШаблоныВнутреннихДокументов1Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СоздатьПоШаблонуВыполнить();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокШаблоныВходящихДокументов1Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СоздатьПоШаблонуВыполнить();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокШаблоныИсходящихДокументов1Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СоздатьПоШаблонуВыполнить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ЗакрытьВыполнитьСервер();
КонецПроцедуры

&НаСервере
Процедура ЗакрытьВыполнитьСервер()
	
	Если СоздатьПустойДокумент = Ложь И	СоздатьПоШаблону = Истина Тогда
		ХранилищеНастроекДанныхФорм.Сохранить("СозданиеДокументаПоШаблону", "ТекущийШаблон",  Элементы["Список" + ТипШаблонаДокумента].ТекущаяСтрока); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточкуШаблона(Команда)
	
	ТекущаяСтраницаИмя = Элементы.Списки.ТекущаяСтраница.Имя;
	ТекущиеДанные = Элементы[СтрЗаменить(ТекущаяСтраницаИмя, "Страница", "Список")].ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено И НЕ ТекущиеДанные.ЭтоГруппа Тогда
		ПоказатьЗначение(,ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСводкуПоШаблону(ШаблонСсылка)
	
	Если НЕ ЗначениеЗаполнено(ШаблонСсылка) Тогда
		Возврат "";
	КонецЕсли;
	
	ДанныеБпПоШаблону = Справочники[ШаблонСсылка.Метаданные().Имя].ПодготовитьСводкуПоШаблону(ШаблонСсылка);
	Сводка = "";
	Для Каждого КлючЗначение Из ДанныеБпПоШаблону Цикл		
		Если КлючЗначение.Ключ <> "Метаданные" Тогда
			СинонимРеквизита = "";
			РеквизитМетаданные = ДанныеБпПоШаблону.Метаданные.Реквизиты.Найти(КлючЗначение.Ключ);
			Для Каждого СтандартныйРеквизитМетаданные Из ДанныеБпПоШаблону.Метаданные.СтандартныеРеквизиты Цикл			
				Если СтандартныйРеквизитМетаданные.Имя = КлючЗначение.Ключ Тогда
					СинонимРеквизита = СтандартныйРеквизитМетаданные.Синоним;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если РеквизитМетаданные <> Неопределено Тогда
				СинонимРеквизита = РеквизитМетаданные.Синоним;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СинонимРеквизита) Тогда
				Если КлючЗначение.Ключ = "РабочаяГруппа" Тогда
					СинонимРеквизита = НСтр("ru = 'Рабочая группа'");	
				КонецЕсли;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(КлючЗначение.Значение) Тогда
				Сводка = Сводка 
					+ ?(СинонимРеквизита = "", КлючЗначение.Ключ, СинонимРеквизита)
					+ ": "
					+ КлючЗначение.Значение
					+ Символы.ПС;
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(Сводка) Тогда
		Если Не ШаблонСсылка.ЭтоГруппа Тогда
			Сводка = НСтр("ru = 'Незаполненный шаблон'");
		Иначе
			Сводка = НСтр("ru = 'Группа шаблонов'");
		КонецЕсли;
	КонецЕсли;
	
	Возврат Сводка;
	
КонецФункции

&НаКлиенте
Процедура СписокШаблоныВходящихДокументовПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ШаблонПриОткрытии = Элемент.ТекущиеДанные.Ссылка Тогда
		ШаблонПриОткрытии = Неопределено;
		Возврат;
	КонецЕсли;
	СводкаПоШаблону = ПолучитьСводкуПоШаблону(Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокШаблоныИсходящихДокументовПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ШаблонПриОткрытии = Элемент.ТекущиеДанные.Ссылка Тогда
		ШаблонПриОткрытии = Неопределено;
		Возврат;
	КонецЕсли;
	СводкаПоШаблону = ПолучитьСводкуПоШаблону(Элемент.ТекущиеДанные.Ссылка);

КонецПроцедуры

&НаКлиенте
Процедура СписокШаблоныВнутреннихДокументовПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ШаблонПриОткрытии = Элемент.ТекущиеДанные.Ссылка Тогда
		ШаблонПриОткрытии = Неопределено;
		Возврат;
	КонецЕсли;
	СводкаПоШаблону = ПолучитьСводкуПоШаблону(Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры


