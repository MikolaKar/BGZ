
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура ДобавитьПарольВСертификат(ПарольПользователя)
	
	Если Не ТипЗнч(ВыбранныйСертификат) = Тип("Строка")
		И Не ВыбранныйСертификат.ЗапомнитьПарольКСертификату Тогда
		
		НачатьТранзакцию();
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Справочник.СертификатыЭП");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыбранныйСертификат);
		Блокировка.Заблокировать();
		
		Сертификат = ВыбранныйСертификат.ПолучитьОбъект();
		Сертификат.ЗапомнитьПарольКСертификату = Истина;
		Сертификат.ПарольПользователя = ПарольПользователя;
		Сертификат.Записать();
		
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьВидимость()
	
	Если ТаблицаЭД.Количество() > 1 Тогда
		Элементы.ОбъектыДляОбработки.Заголовок = НСтр("ru = 'Список'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВыбранныйСертификат) Тогда
		Элементы.ВыбранныйСертификат.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПараметрыВозвратаПароля()
	
	РезультатВыбора = Новый Структура;
	
	РезультатВыбора.Вставить("ВыбранныйСертификат",         ВыбранныйСертификат);
	РезультатВыбора.Вставить("ЗапомнитьПарольКСертификату", ЗапомнитьПароль);
	РезультатВыбора.Вставить("ПарольПользователя",          ПарольПользователя);
	РезультатВыбора.Вставить("Комментарий",                 "");
	// Определение настроек криптографии
	НастройкиКриптографии = Неопределено;
	Если ТипЗнч(ВыбранныйСертификат) = Тип("СправочникСсылка.СертификатыЭП") Тогда
		ПрофильНастроекКриптографии = РаботаСЭП.ПрофильНастроекКриптографииПоСертификату(ВыбранныйСертификат.Отпечаток);
		НастройкиКриптографии = Новый Структура(
			"ПровайдерЭП,
			|ПутьМодуляКриптографии,
			|ТипПровайдераЭП,
			|АлгоритмПодписи,
			|АлгоритмХеширования,
			|АлгоритмШифрования");
		ЗаполнитьЗначенияСвойств(НастройкиКриптографии, ПрофильНастроекКриптографии);
	КонецЕсли;
	РезультатВыбора.Вставить("НастройкиКриптографии", НастройкиКриптографии);
	// В случае запроса пароля пользователя из помощника создания соглашения ЭД
	// вместо сертификата приходит его представление.
	Если Не ТипЗнч(ВыбранныйСертификат) = Тип("Строка") Тогда
		РезультатВыбора.Вставить("Отпечаток",               ВыбранныйСертификат.Отпечаток);
	КонецЕсли;
	
	Возврат РезультатВыбора;
	
КонецФункции

&НаСервере
Процедура ОбработкаВыбораСертификата()
	
	Элементы.ГруппаЗаполнитьПароль.Доступность = Не ВыбранныйСертификат.ЗапомнитьПарольКСертификату;
	ЗапомнитьПароль = ВыбранныйСертификат.ЗапомнитьПарольКСертификату;
	
	ПарольПользователя = ВыбранныйСертификат.ПарольПользователя;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Выбрать(Команда)
	
	// Блок проверки на заполненность сертификата ЭП.
	Если Не ЗначениеЗаполнено(ВыбранныйСертификат) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ЭлектронныеДокументыКлиентСервер.ПолучитьТекстСообщения("Поле", "Заполнение", "Сертификат подписи"));
		Возврат;
	КонецЕсли;
	
	Если ЗапомнитьПароль Тогда
		ДобавитьПарольВСертификат(ПарольПользователя);
		Оповестить("ЗапросПароляДляСертификата", ВыбранныйСертификат);
	КонецЕсли;
	
	ЭтаФорма.Закрыть(ПараметрыВозвратаПароля());
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ВыбранныйСертификатОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", ВыбранныйСертификат);
	ПараметрыФормы.Вставить("ТолькоПросмотр", Истина);
	ОткрытьФорму("Справочник.СертификатыЭП.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныйСертификатПриИзменении(Элемент)
	
	ОбработкаВыбораСертификата();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыДляОбработкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТаблицаЭД.Количество() > 1 Тогда
		МассивСтруктур = Новый Массив;
		Для Каждого СтрокаДанных Из ТаблицаЭД Цикл
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("ЭлектронныйДокумент", СтрокаДанных.ЭлектронныйДокумент);
			СтруктураПараметров.Вставить("ВладелецЭД",          СтрокаДанных.ВладелецЭД);
			СтруктураПараметров.Вставить("НаправлениеЭД",       СтрокаДанных.НаправлениеЭД);
			МассивСтруктур.Добавить(СтруктураПараметров);
		КонецЦикла;
		ФормаПросмотраЭД = ОткрытьФорму("Обработка.ЭлектронныеДокументы.Форма.ФормаСпискаВыгружаемыхДокументов",
			Новый Структура("СтруктураЭД", МассивСтруктур), ЭтаФорма);
		
	ИначеЕсли ТипЗнч(ТаблицаЭД[0].ВладелецЭД) = Тип("ДокументСсылка.ПакетЭД") Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ",          ТаблицаЭД[0].ВладелецЭД);
		ПараметрыФормы.Вставить("ТолькоПросмотр", Истина);
		ОткрытьФорму("Документ.ПакетЭД.Форма.ФормаДокумента", ПараметрыФормы);
	ИначеЕсли ТипЗнч(ТаблицаЭД[0].ВладелецЭД) = Тип("ДокументСсылка.ПроизвольныйЭД") Тогда
		
		// Откроем вложение по стандартному механизму
		ДанныеФайла = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьДанныеФайла(ТаблицаЭД[0].ЭлектронныйДокумент,
			УникальныйИдентификатор);
		РаботаСФайламиКлиент.Открыть(ДанныеФайла, Ложь);
	Иначе
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЭлектронныйДокумент", ТаблицаЭД[0].ЭлектронныйДокумент);
		ПараметрыФормы.Вставить("ВладелецЭД",          ТаблицаЭД[0].ВладелецЭД);
		ОткрытьФорму("Обработка.ЭлектронныеДокументы.Форма.ФормаЗагрузкиПросмотраЭД", ПараметрыФормы, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПарольПользователяОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	// Обход ошибки платформы 10109820
	ПарольПользователя = Текст;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВидОперации = Параметры.ВидОперации;
	
	СертификатЭП = "";
	Если Параметры.Свойство("СертификатЭП", СертификатЭП) Тогда
		ВыбранныйСертификат = Параметры.СертификатЭП;
	КонецЕсли;
	
	СертификатыЭП = "";
	Если Параметры.Свойство("СертификатыЭП", СертификатыЭП) Тогда
		Если СертификатыЭП.Количество() > 1 Тогда
			Для каждого Сертификат Из СертификатыЭП Цикл
				Если ТипЗнч(Сертификат) = Тип("СправочникСсылка.СертификатыЭП") Тогда
					Элементы.ВыбранныйСертификат.РежимВыбораИзСписка = Истина;
					Элементы.ВыбранныйСертификат.СписокВыбора.Добавить(Сертификат);
				Иначе
					Элементы.ВыбранныйСертификат.РежимВыбораИзСписка = Истина;
					СсылкаНаСертификат = Справочники.СертификатыЭП.НайтиПоРеквизиту("Отпечаток", Сертификат.Отпечаток);
					Элементы.ВыбранныйСертификат.СписокВыбора.Добавить(СсылкаНаСертификат);
				КонецЕсли;
			КонецЦикла;
		Иначе
			Если ТипЗнч(СертификатыЭП[0]) = Тип("СправочникСсылка.СертификатыЭП") Тогда
				ВыбранныйСертификат = СертификатыЭП[0];
			Иначе
				ВыбранныйСертификат = Справочники.СертификатыЭП.НайтиПоРеквизиту("Отпечаток", СертификатыЭП[0].Отпечаток);
			КонецЕсли;
			ОбработкаВыбораСертификата();
		КонецЕсли;
	КонецЕсли;
	
	ОбъектыДляОбработки = Неопределено;
	Если Параметры.Свойство("ОбъектыДляОбработки", ОбъектыДляОбработки) И ОбъектыДляОбработки <> Неопределено Тогда
		
		Блокировка = Новый БлокировкаДанных;
		НачатьТранзакцию();
		
		Если ТипЗнч(ОбъектыДляОбработки) = Тип("Массив") Тогда
			
			ТаблицаДанныхДляБлокировки = Новый ТаблицаЗначений;
			ТаблицаДанныхДляБлокировки.Колонки.Добавить("ЭлектронныйДокумент");
			ТаблицаДанныхДляБлокировки.Колонки.Добавить("НаправлениеЭД");
			ТаблицаДанныхДляБлокировки.Колонки.Добавить("ВладелецЭД");
			
			Для каждого СтрокаЭД Из ОбъектыДляОбработки Цикл
				НоваяСтрока = ТаблицаДанныхДляБлокировки.Добавить();
				НоваяСтрока.ЭлектронныйДокумент = СтрокаЭД;
				НоваяСтрока.НаправлениеЭД       = Перечисления.НаправленияЭД.Исходящий;
				НоваяСтрока.ВладелецЭД          = СтрокаЭД.Документ;
			КонецЦикла;
			
			ЭлементБлокировки = Блокировка.Добавить("Справочник.СообщенияЭДО");
			ЭлементБлокировки.ИсточникДанных = ТаблицаДанныхДляБлокировки;
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка", "ЭлектронныйДокумент");
			
			ТаблицаЭД.Загрузить(ТаблицаДанныхДляБлокировки);
			
			Если ОбъектыДляОбработки.Количество() = 1 Тогда
				ЭлектронныйДокумент = ОбъектыДляОбработки[0];
				
				ШаблонГиперссылки = НСтр("ru = '%1 № %2 от %3'");
				Если ТипЗнч(ЭлектронныйДокумент.Документ) = Тип("СправочникСсылка.СоглашенияОбИспользованииЭД") Тогда
					СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭлектронныйДокумент,
						"ВидЭД, НомерДокументаОтправителя, ДатаДокументаОтправителя, Организация");
					Если СтруктураРеквизитов.ВидЭД = Перечисления.ВидыЭД.КаталогТоваров Тогда
						ШаблонГиперссылки = НСтр("ru = '%1 %2 от %3'");
						ТекстГиперссылки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонГиперссылки,
							СтруктураРеквизитов.ВидЭД, СтруктураРеквизитов.Организация,
							Формат(СтруктураРеквизитов.ДатаДокументаОтправителя, "ДЛФ=Д"));
					ИначеЕсли СтруктураРеквизитов.ВидЭД = Перечисления.ВидыЭД.ЗапросВыписки Тогда
						ТекстГиперссылки = Строка(ОбъектыДляОбработки[0]);
					Иначе
						ТекстГиперссылки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонГиперссылки,
							СтруктураРеквизитов.ВидЭД, СтруктураРеквизитов.НомерДокументаОтправителя,
							Формат(СтруктураРеквизитов.ДатаДокументаОтправителя, "ДЛФ=Д"));
					КонецЕсли;
				Иначе
					Если ЭлектронныеДокументыСлужебныйВызовСервера.ЭтоСлужебныйДокумент(ЭлектронныйДокумент) Тогда
						
						ВидОперации = НСтр("ru = 'Подписание служебных электронных документов'");
						
						ШаблонГиперссылки = НСтр("ru = '%1'");
						ВидЭД = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭлектронныйДокумент,
							"ВидЭД");
						ТекстГиперссылки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонГиперссылки, ВидЭД);
					Иначе
						СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭлектронныйДокумент.Документ, "Номер, Дата");
						ТекстГиперссылки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонГиперссылки,
							Строка(ТипЗнч(ЭлектронныйДокумент.Документ)),
							СтруктураРеквизитов.Номер, Формат(СтруктураРеквизитов.Дата, "ДЛФ=Д"));
					КонецЕсли;
				КонецЕсли;
				
				ТекстГиперссылки = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(ТекстГиперссылки);
			ИначеЕсли ОбъектыДляОбработки.Количество() > 1 Тогда
				
				ШаблонГиперссылки = НСтр("ru = 'Электронные документы (%1)'");
				ТекстГиперссылки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонГиперссылки,
					ОбъектыДляОбработки.Количество());
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ОбъектыДляОбработки) = Тип("СправочникСсылка.СообщенияЭДО") Тогда
			ЭлектронныйДокумент = ОбъектыДляОбработки;

			ЭлементБлокировки = Блокировка.Добавить("Справочник.СообщенияЭДО");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ЭлектронныйДокумент);
			
			НоваяСтрока = ТаблицаЭД.Добавить();
			НоваяСтрока.ЭлектронныйДокумент = ЭлектронныйДокумент;
			НоваяСтрока.НаправлениеЭД       = Перечисления.НаправленияЭД.Исходящий;
			НоваяСтрока.ВладелецЭД          = ЭлектронныйДокумент.Документ;
			
			ШаблонГиперссылки = НСтр("ru = '%1 № %2 от %3'");
			Если ТипЗнч(ЭлектронныйДокумент.Документ) = Тип("СправочникСсылка.СоглашенияОбИспользованииЭД") Тогда
				СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭлектронныйДокумент,
					"ВидЭД, НомерДокументаОтправителя, ДатаДокументаОтправителя, Организация");
				Если СтруктураРеквизитов.ВидЭД = Перечисления.ВидыЭД.КаталогТоваров Тогда
					ШаблонГиперссылки = НСтр("ru = '%1 %2 от %3'");
					ТекстГиперссылки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонГиперссылки,
						СтруктураРеквизитов.ВидЭД, СтруктураРеквизитов.Организация,
						Формат(СтруктураРеквизитов.ДатаДокументаОтправителя, "ДЛФ=Д"));
				Иначе
					ТекстГиперссылки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонГиперссылки,
						СтруктураРеквизитов.ВидЭД, СтруктураРеквизитов.НомерДокументаОтправителя,
						Формат(СтруктураРеквизитов.ДатаДокументаОтправителя, "ДЛФ=Д"));
				КонецЕсли;
			Иначе
				СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭлектронныйДокумент.Документ,
					"Номер, Дата");
				ТекстГиперссылки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонГиперссылки,
					Строка(ТипЗнч(ЭлектронныйДокумент.Документ)),
					СтруктураРеквизитов.Номер, Формат(СтруктураРеквизитов.Дата, "ДЛФ=Д"));
			КонецЕсли;
			
			ТекстГиперссылки = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(ТекстГиперссылки);
			
		ИначеЕсли ТипЗнч(ОбъектыДляОбработки) = Тип("ДокументСсылка.ПакетЭД") Тогда
			ПакетЭД = ОбъектыДляОбработки;
			
			ЭлементБлокировки = Блокировка.Добавить("Документ.ПакетЭД");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ПакетЭД);
			Блокировка.Заблокировать();
			
			НоваяСтрока = ТаблицаЭД.Добавить();
			НоваяСтрока.ЭлектронныйДокумент = ПакетЭД;
			НоваяСтрока.НаправлениеЭД       = Перечисления.НаправленияЭД.Исходящий;
			НоваяСтрока.ВладелецЭД          = ПакетЭД;
			
			ШаблонГиперссылки = НСтр("ru = '%1 № %2 от %3'");
			СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПакетЭД, "Номер, Дата");
			ТекстГиперссылки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонГиперссылки,
				Строка(ТипЗнч(ПакетЭД)),
				СтруктураРеквизитов.Номер, Формат(СтруктураРеквизитов.Дата, "ДЛФ=Д"));
				
			ТекстГиперссылки = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(ТекстГиперссылки);
			
		КонецЕсли;
		
		НадписьОбъектыДляОбработки = ТекстГиперссылки;
		
		Блокировка.Заблокировать();
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
	УстановитьДоступностьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭтаФорма.ОбновитьОтображениеДанных();
	
КонецПроцедуры


