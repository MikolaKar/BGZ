////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ИнформационнаяНадпись = Неопределено;
	Если Параметры.Свойство("ИнформационнаяНадпись") Тогда
		ИнформационнаяНадпись = Параметры.ИнформационнаяНадпись;
		Элементы.ДекорацияИнформационнаяНадпись.Заголовок = ИнформационнаяНадпись;
		Элементы.ГруппаИнформация.Видимость = Истина;
	Иначе
		Элементы.ГруппаИнформация.Видимость = Ложь;
	КонецЕсли;	
	
	МассивСтруктурСертификатов = Параметры.МассивСтруктурСертификатов;
	
	ОбъектСсылка = Неопределено;
	Если Параметры.Свойство("ОбъектСсылка") Тогда
		ОбъектСсылка = Параметры.ОбъектСсылка;
	КонецЕсли;
	
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Подписать ""%1""'"), Строка(ОбъектСсылка));
	
	Для Каждого СтруктураСертификата Из МассивСтруктурСертификатов Цикл
		НоваяСтрока = СертификатыЭП.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураСертификата, "КомуВыдан, КемВыдан, ДействителенДо, Отпечаток");
		ЭлектроннаяПодпись.ЗаполнитьНазначениеСертификата(СтруктураСертификата.Назначение, НоваяСтрока.Назначение);
	КонецЦикла;
	
	// Сохранение вводимых значений
	СохранениеВводимыхЗначений.ЗаполнитьСписокВыбора(ЭтаФорма, ЭлементыДляСохранения(), ЭтаФорма.ИмяФормы);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ СертификатыЭП

&НаКлиенте
Процедура СертификатыЭПВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработкаВыбора();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Выбрать(Команда)
	ОбработкаВыбора();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСертификат(Команда)
	
	СтрокаСертификата = Элементы.СертификатыЭП.ТекущиеДанные;
	Если СтрокаСертификата = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ВыбранныйСертификат = ЭлектроннаяПодписьКлиент.ПолучитьСертификатПоОтпечатку(СтрокаСертификата.Отпечаток);
	
	СтруктураСертификата = ЭлектроннаяПодписьКлиентСервер.ЗаполнитьСтруктуруСертификата(ВыбранныйСертификат);
	Если СтруктураСертификата <> Неопределено Тогда
		ПараметрыФормы = Новый Структура("СтруктураСертификата, Отпечаток", СтруктураСертификата, СтрокаСертификата.Отпечаток);
		ОткрытьФорму("ОбщаяФорма.СертификатЭП", ПараметрыФормы, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ОбработкаВыбора()
	
	СтрокаСертификата = Элементы.СертификатыЭП.ТекущиеДанные;
	Если СтрокаСертификата = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ВыбранныйПароль = ?(ЗначениеЗаполнено(Пароль), Пароль, Элементы.Пароль.ТекстРедактирования);
	
	ВыбранныйСертификат = ЭлектроннаяПодписьКлиент.ПолучитьСертификатПоОтпечатку(СтрокаСертификата.Отпечаток);
	
	Попытка
		МассивРежимовПроверки = Новый Массив;
		// Сертификат перед подсписанием файла должен быть действительным, поэтому исключаем следующую проверку.
		//МассивРежимовПроверки.Добавить(РежимПроверкиСертификатаКриптографии.ИгнорироватьВремяДействия);
		МассивРежимовПроверки.Добавить(РежимПроверкиСертификатаКриптографии.РазрешитьТестовыеСертификаты);
		
		МенеджерКриптографии = ЭлектроннаяПодписьКлиент.ПолучитьМенеджерКриптографии();
		МенеджерКриптографии.ПроверитьСертификат(ВыбранныйСертификат, МассивРежимовПроверки);
	Исключение
		ОшибкаИнфо = ИнформацияОбОшибке();
		
		ЗаписьОшибкиВЖурналРегистрации(НСтр("ru = 'Ошибка при проверке сертификата'"), ПодробноеПредставлениеОшибки(ОшибкаИнфо));	
		
		ТекстСообщения = КраткоеПредставлениеОшибки(ОшибкаИнфо) + Символы.ПС + Символы.ПС 
			+ НСтр("ru = 'Выберите другой сертификат или обратитесь к администратору.'");
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'Ошибка подписания'"));
		ПараметрыФормы.Вставить("ТекстСообщения", ТекстСообщения);
		ОткрытьФорму("ОбщаяФорма.Сообщение", ПараметрыФормы, ЭтаФорма);
		Возврат;
	КонецПопытки;	
	
	РезультатВыбора = Новый Структура;
	РезультатВыбора.Вставить("Сертификат",  ВыбранныйСертификат);
	РезультатВыбора.Вставить("Комментарий", Комментарий);
	РезультатВыбора.Вставить("Пароль",      ВыбранныйПароль);
		
	Если НЕ ПустаяСтрока(Комментарий) Тогда
		ЗаписатьВводимыеЗначения();
	КонецЕсли;
		
	Закрыть(РезультатВыбора);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВводимыеЗначения()
	// Сохранение вводимых значений
	СохранениеВводимыхЗначений.ОбновитьСпискиВыбора(ЭтаФорма, ЭлементыДляСохранения(), ЭтаФорма.ИмяФормы);
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура ЗаписьОшибкиВЖурналРегистрации(ИмяСобытия, ТекстОшибки)
	ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , ТекстОшибки);
КонецПроцедуры

&НаСервере
Функция ЭлементыДляСохранения()
	
	СохраняемыеЭлементы = Новый Структура;
	СохраняемыеЭлементы.Вставить("Комментарий", Комментарий);
										  
	Возврат СохранениеВводимыхЗначений.СформироватьТаблицуСохраняемыхЭлементов(СохраняемыеЭлементы);
	
КонецФункции
