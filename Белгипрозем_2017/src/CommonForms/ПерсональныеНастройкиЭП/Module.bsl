////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ДействияПриСохраненииСЭП = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ЭП", "ДействияПриСохраненииСЭП");
	Если НЕ ЗначениеЗаполнено(ДействияПриСохраненииСЭП) Тогда
		ДействияПриСохраненииСЭП = Перечисления.ДействияПриСохраненииСЭП.Спрашивать;
	КонецЕсли;
	
	ОтправлятьПодписиЭППоПочте = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ЭП", "ОтправлятьПодписиЭППоПочте");
	Если Не ЗначениеЗаполнено(ОтправлятьПодписиЭППоПочте) Тогда
		ОтправлятьПодписиЭППоПочте = Перечисления.ДействияПриОтправкеПоПочтеЭП.Спрашивать;
	КонецЕсли;
	
	РасширениеДляЗашифрованныхФайлов = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ЭП", "РасширениеДляЗашифрованныхФайлов");
	Если НЕ ЗначениеЗаполнено(РасширениеДляЗашифрованныхФайлов) Тогда
		РасширениеДляЗашифрованныхФайлов = "p7m";
	КонецЕсли;
	
	РасширениеДляФайловПодписи = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ЭП", "РасширениеДляФайловПодписи");
	Если НЕ ЗначениеЗаполнено(РасширениеДляФайловПодписи) Тогда
		РасширениеДляФайловПодписи = "p7s";
	КонецЕсли;
	
	ПутьМодуляКриптографии = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ЭП", "ПутьМодуляКриптографии");
	
	Элементы.ПараметрыВебКлиентаПодУправлениемLinux.Видимость = ОбщегоНазначенияКлиентСервер.ЭтоВебКлиент() И ОбщегоНазначенияКлиентСервер.ЭтоLinuxКлиент();
	
	ОтпечатокЛичногоСертификатаДляШифрования = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ЭП", "ОтпечатокЛичногоСертификатаДляШифрования");
	Если Не ЗначениеЗаполнено(ОтпечатокЛичногоСертификатаДляШифрования) Тогда
		ОтпечатокЛичногоСертификатаДляШифрования = "";
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("ПоказыватьНастройкиШифрования") Тогда
		Элементы.ЛичныйСертификатДляШифрования.Видимость = Ложь;
	КонецЕсли;
	
	ЛичныеСертификаты.Параметры.УстановитьЗначениеПараметра("ПоказыватьУдаленные", ПоказыватьУдаленныеСертификаты);
	ЛичныеСертификаты.Параметры.УстановитьЗначениеПараметра("ТекущийПользователь", Пользователи.ТекущийПользователь());
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ОтпечатокЛичногоСертификатаДляШифрования <> Неопределено И НЕ ПустаяСтрока(ОтпечатокЛичногоСертификатаДляШифрования) Тогда
		Сертификат = ЭлектроннаяПодписьКлиент.ПолучитьСертификатПоОтпечатку(ОтпечатокЛичногоСертификатаДляШифрования, Истина); // ТолькоЛичные
		Если Сертификат = Неопределено Тогда		
			ОтпечатокЛичногоСертификатаДляШифрования = "";
		Иначе
			СтруктураСертификата = ЭлектроннаяПодписьКлиент.ЗаполнитьСтруктуруСертификатаПоОтпечатку(ОтпечатокЛичногоСертификатаДляШифрования);
			ЛичныйСертификатДляШифрования = СтруктураСертификата.КомуВыдан;
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)

	Если Настройки["ПоказыватьУдаленныеСертификаты"] <> Неопределено Тогда
		ЛичныеСертификаты.Параметры.УстановитьЗначениеПараметра("ПоказыватьУдаленные", Настройки["ПоказыватьУдаленныеСертификаты"]);
		Элементы.ПоказыватьУдаленныеСертификаты.Пометка = Настройки["ПоказыватьУдаленныеСертификаты"];
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОК(Команда)
	
	ОчиститьСообщения();
	
	Если НЕ СохранитьНастройки() Тогда
		Возврат;
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьУдаленныеСертификаты(Команда)
	
	ПоказыватьУдаленныеСертификаты = Не ПоказыватьУдаленныеСертификаты;
	Элементы.ПоказыватьУдаленныеСертификаты.Пометка = ПоказыватьУдаленныеСертификаты;
	ЛичныеСертификаты.Параметры.УстановитьЗначениеПараметра("ПоказыватьУдаленные", ПоказыватьУдаленныеСертификаты);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Функция СохранитьНастройки()
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	МассивСтруктур = Новый Массив;
	
	ДобавитьСтруктуруНастройки(МассивСтруктур, "ЭП", "ОтпечатокЛичногоСертификатаДляШифрования", ОтпечатокЛичногоСертификатаДляШифрования);
	ДобавитьСтруктуруНастройки(МассивСтруктур, "ЭП", "РасширениеДляЗашифрованныхФайлов", РасширениеДляЗашифрованныхФайлов);
	ДобавитьСтруктуруНастройки(МассивСтруктур, "ЭП", "РасширениеДляФайловПодписи", РасширениеДляФайловПодписи);
	ДобавитьСтруктуруНастройки(МассивСтруктур, "ЭП", "ДействияПриСохраненииСЭП", ДействияПриСохраненииСЭП);
	ДобавитьСтруктуруНастройки(МассивСтруктур, "ЭП", "ОтправлятьПодписиЭППоПочте", ОтправлятьПодписиЭППоПочте);
	ДобавитьСтруктуруНастройки(МассивСтруктур, "ЭП", "ПутьМодуляКриптографии", ПутьМодуляКриптографии);
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранитьМассив(МассивСтруктур);
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ДобавитьСтруктуруНастройки(МассивСтруктур, Объект, Настройка = Неопределено, Значение)
	МассивСтруктур.Добавить(Новый Структура ("Объект, Настройка, Значение", Объект, Настройка, Значение));
КонецПроцедуры

&НаКлиенте
Процедура ЛичныеСертификатыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	РаботаСЭПКлиент.ДобавлениеЛичногоСертификата(ЭтаФорма);
	
КонецПроцедуры
